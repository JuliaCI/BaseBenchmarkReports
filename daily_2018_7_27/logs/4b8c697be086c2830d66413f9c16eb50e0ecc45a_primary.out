cset: moving following pidspec: 21635
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.364905962 seconds)
loading group "string"... done (took 0.502253568 seconds)
loading group "linalg"... done (took 8.347384345 seconds)
loading group "parallel"... done (took 0.172196994 seconds)
loading group "find"... done (took 1.358066324 seconds)
loading group "tuple"... done (took 1.942208146 seconds)
loading group "dates"... done (took 1.330320889 seconds)
loading group "micro"... done (took 0.212447275 seconds)
loading group "io"... done (took 0.552925377 seconds)
loading group "scalar"... done (took 40.639905164 seconds)
loading group "sparse"... done (took 12.630147509 seconds)
loading group "broadcast"... done (took 1.116934922 seconds)
loading group "union"... done (took 13.960853872 seconds)
loading group "simd"... done (took 4.822640971 seconds)
loading group "random"... done (took 9.665585817 seconds)
loading group "problem"... done (took 2.066288473 seconds)
loading group "array"... done (took 23.143374721 seconds)
loading group "misc"... done (took 1.066870366 seconds)
loading group "sort"... done (took 3.489733916 seconds)
loading group "collection"... done (took 20.642413353 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.571644722 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133074473 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14291819 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171776209 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200004417 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136349156 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152433343 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.163208608 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.001216774 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204839564 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137723326 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.494874646 seconds)
done (took 5.260920855 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222000819 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082559494 seconds)
    (2/2) benchmarking "String"...
    done (took 0.124014609 seconds)
  done (took 0.903042222 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072711047 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.169930467 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09108031 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107158816 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107980224 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090868533 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.106484707 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105808442 seconds)
  done (took 1.477831569 seconds)
done (took 3.381329492 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.746349143 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.827698127 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.476468022 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.120564493 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153230211 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126073521 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.299246876 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.140557826 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.119303677 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111231895 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177232078 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.343817656 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.473507713 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.919410903 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091169862 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124504002 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078788174 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681221943 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078093927 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114959468 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.500651699 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.104665294 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112300772 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125403606 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20344934 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112508165 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178568347 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10573595 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.65990462 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098609646 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180621898 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094243479 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158666192 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.210867878 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.091576788 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09017752 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669028639 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185974398 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107287042 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.090700526 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671882786 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075255601 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189332563 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103674041 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106831399 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184137246 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.097715038 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091291201 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080671044 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099684909 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.154791096 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.455875918 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105526463 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.139754875 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09261622 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685814557 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091826429 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15244425 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121778444 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106915933 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079502314 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104687766 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156265507 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096719213 seconds)
  done (took 19.266453557 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115048521 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137523394 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091324516 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136369521 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137402344 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07795264 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098162873 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075058256 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12240592 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179979086 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136800689 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140830291 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072305301 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091872155 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09704683 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247351985 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11593411 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100211712 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094415917 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087030611 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135457924 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.091512161 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106998734 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107355889 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1640714 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201645025 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107203822 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122022788 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090210895 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095608992 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138976555 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156204672 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073182388 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090684588 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176334696 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103478029 seconds)
  done (took 5.028403801 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193417124 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098370394 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197648765 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.169839759 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146515522 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.156539842 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098367782 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258794579 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.164207109 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161728455 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12534594 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113415958 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075353217 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093207924 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075935814 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.696530363 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164086569 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142150717 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118564033 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099871963 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.078933411 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129775432 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078999424 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094586583 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079994302 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.129938038 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.323685589 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165525325 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08039341 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.302086409 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.097718891 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096386977 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102490837 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.124422067 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111047609 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095067957 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10651057 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.130995105 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097456929 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077403856 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191099468 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103650248 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073349496 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11954041 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127342023 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11410464 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095591189 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.103850389 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225111223 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094413597 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.093186036 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.008734696 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197104851 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091246671 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.092097305 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076371519 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330067106 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112939773 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07946144 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095596768 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279773622 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113846991 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.094465989 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074155046 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098407243 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075818218 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383259352 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098929665 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.946933169 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080595268 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.149049725 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094937559 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0988103 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082757544 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080123629 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114205148 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074991528 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094444469 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075467531 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094240372 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080338846 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111567947 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096013584 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076100997 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142118907 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112259195 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094414633 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123670357 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096133788 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075653444 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125184757 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077095799 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095784536 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137717191 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082392921 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111676714 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095122368 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.122491106 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09206574 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.165204256 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092028003 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102556265 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098020011 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123890168 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115007687 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076777343 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096884106 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073245593 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093404911 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143180362 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090267607 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076379541 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094707847 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090056684 seconds)
  done (took 22.803239973 seconds)
done (took 47.795130599 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.376080852 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105876013 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106591692 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105297918 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104890933 seconds)
  done (took 1.57404807 seconds)
done (took 2.326333217 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.308553995 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190141171 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083750247 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167167355 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100622637 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172449786 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156130044 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113638706 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.182572544 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097138014 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161025175 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094280427 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083506424 seconds)
  done (took 2.68766996 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08792197 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111803139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076973134 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085667173 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087636402 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086776968 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101991834 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106578044 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101865619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081622252 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086850288 seconds)
  done (took 1.763599938 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08758512 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094175694 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093857836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086338791 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086806336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086307492 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102480265 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097166725 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103124199 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081744248 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086874192 seconds)
  done (took 1.753310082 seconds)
done (took 6.946183412 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.062093717 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.391672645 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118463439 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.164135696 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.305583483 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.21160859 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.59676846 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130426875 seconds)
  done (took 15.925061409 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.12267488 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092443218 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076320907 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095853225 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078366327 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092910388 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077648172 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090691715 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075798889 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076376132 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092108693 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074777961 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094007613 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074847955 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093814658 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075602337 seconds)
  done (took 2.197111514 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111174129 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110309617 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098240654 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083167198 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097080707 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078561709 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099134588 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081223031 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094505004 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07897176 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099959041 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081863289 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097485849 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078569895 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09809054 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084711281 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09475416 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097543902 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082577838 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.097906834 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083820842 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095421314 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081315222 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098540108 seconds)
  done (took 3.061184287 seconds)
done (took 21.933272933 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159178669 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081092754 seconds)
  done (took 0.994567831 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096884131 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112931175 seconds)
  done (took 0.970382647 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101613746 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092461477 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130123314 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092932463 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093627246 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076599445 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126270586 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094406108 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07603099 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077572845 seconds)
  done (took 1.722419987 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080319031 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079991315 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101452028 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113596404 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088027811 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094455148 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081416116 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096339543 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082713703 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091526163 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083738368 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110833776 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099659911 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097432477 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097283105 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081877933 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102438098 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097339185 seconds)
  done (took 2.444735097 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076187999 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077911245 seconds)
  done (took 0.916347154 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07913303 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074859598 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095162285 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095259692 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07482836 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074961173 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092247915 seconds)
  done (took 1.351869586 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.459617623 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177281913 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.315222554 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108541203 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129554293 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.334774639 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.128819154 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108333332 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089746662 seconds)
  done (took 2.657120903 seconds)
done (took 11.816295977 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087580746 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128212527 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.466944764 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.09659536 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088167247 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140727803 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.246562956 seconds)
done (took 2.022005583 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332485063 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117353538 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082950077 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074901943 seconds)
  done (took 1.369113736 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075545401 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081255214 seconds)
  done (took 0.925614425 seconds)
done (took 3.063690464 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074459577 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.123976355 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073706474 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.070965114 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092621456 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071677554 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.090291786 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07174087 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073716277 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091847988 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073634668 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090649908 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073612272 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073936653 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087767473 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07179138 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090504071 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.190219758 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07152277 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087692335 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070827234 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089515397 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071535564 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070980791 seconds)
  done (took 2.851516086 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099820135 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091791905 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079757401 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096514594 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078666675 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096830709 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079343938 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091500019 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07942106 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092558581 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078136243 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095052695 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076915842 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094680339 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076739073 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094587964 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080642089 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091076983 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076422709 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09545471 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079726599 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09173948 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078886655 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096938476 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078790223 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096236811 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076926639 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091820842 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079721197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095102327 seconds)
  done (took 3.384245625 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081903939 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071326772 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088644772 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083281962 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088283286 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.075731703 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088309887 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07223671 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075445119 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088620945 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076629955 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088298208 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071509765 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075538737 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093039107 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078445102 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106837979 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071985383 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088443538 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076338098 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077523152 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088785542 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074214342 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088803347 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071552966 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071172459 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090090307 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071080031 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090166142 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07207325 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092666826 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.078487922 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070528372 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100761923 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078067756 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08829797 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.0793602 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088583022 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076451075 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07051129 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089247825 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07167756 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08883585 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082861401 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.073891932 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089771311 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071460443 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092950448 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.075178134 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096655625 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070971263 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070600524 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094163499 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076527154 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094132562 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071053564 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07261661 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0879557 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076358019 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088736423 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070646227 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071158757 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095306657 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072512123 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111310534 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.082281734 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089032295 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0773841 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092715328 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079368401 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094178076 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089558002 seconds)
  done (took 6.694874871 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076035871 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099502919 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073884256 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074388531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08749129 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073069839 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096102307 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071867474 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090619037 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090166635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088973635 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074657401 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074553257 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092272478 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072752934 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09078961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082261857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087463575 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071773431 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093293333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073315384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09544785 seconds)
  done (took 2.609816281 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211696146 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100499884 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134375052 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091781324 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109398053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107596584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079293147 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09794525 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079508868 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100419894 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082259459 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096767526 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109087631 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082136002 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100433546 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083804352 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096318847 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083599211 seconds)
  done (took 2.624047873 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088168984 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09254456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098374221 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092497605 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076883168 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095000608 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081809153 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108292611 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077853606 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092175521 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085520752 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094312048 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077485315 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092922874 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077234552 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.091861708 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07709002 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074889323 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102252625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100278795 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081364978 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103667238 seconds)
  done (took 2.743989577 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092717779 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094532269 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096227455 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096893324 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074114357 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09457 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082891426 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092463194 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084605221 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09417312 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075346412 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092543664 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.082223636 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092851903 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082139224 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092577484 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077288433 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074721727 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094459414 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0746566 seconds)
  done (took 2.522758862 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116789998 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107008688 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088812947 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12048682 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090458466 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107149016 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118358121 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08965679 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106631067 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102414688 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106251515 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088581057 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118083636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114327211 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09013854 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118523471 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117258341 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101043562 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107509256 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089970261 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119463382 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088946213 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117180205 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107750882 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089379781 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108068224 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089651968 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114550931 seconds)
  done (took 3.719107067 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07507116 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073786821 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089589139 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072118071 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072328761 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090026515 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072820122 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091481721 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074622571 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072691593 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092054864 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0749655 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091725575 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074989677 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074438585 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091763176 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074776325 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089826912 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07278095 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07220447 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091657211 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074581731 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091981032 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073853472 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072340048 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091904145 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072097353 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090146328 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074649179 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071544948 seconds)
  done (took 3.183951228 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082786635 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098293309 seconds)
  done (took 0.969688687 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072594594 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108622204 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072755484 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077887541 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098892282 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076462967 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102580333 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080693505 seconds)
  done (took 1.475925948 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099338382 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113686869 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081203216 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104553386 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093970394 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111395801 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15506145 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081250621 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101143394 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07619996 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111970091 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075138668 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083690406 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099682547 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083978004 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107375157 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.075860712 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103473077 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083883169 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095049584 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081338034 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107907645 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086877234 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101607532 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078674724 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105071284 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090122681 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104932612 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080929332 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.104991469 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083057348 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08664069 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079598352 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09919743 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076957895 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111315338 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093323432 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098870512 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086029924 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100181963 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084955558 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092067609 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086606501 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10081863 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08804159 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099802614 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082146411 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091575263 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076959046 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079384159 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092451387 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079167343 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088184533 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085634941 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103151278 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094456984 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095715573 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080329599 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09785161 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079713799 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101273305 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081181292 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104186189 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079581561 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103448617 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085073806 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101918092 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074618683 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.069995365 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094232259 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.085667065 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118253152 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104454135 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08198953 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100115455 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07734467 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081212492 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100357346 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084101946 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104710575 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081259225 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101397303 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085565341 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097044035 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.079868784 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100782153 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078441184 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09763856 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076124685 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113362727 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079270834 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094086802 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077077061 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105116738 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.079601288 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079754548 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094307005 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085247299 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087401143 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.080877167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099889034 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082529456 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.105392149 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081402975 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099742452 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085230694 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.104672939 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081099434 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097759847 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072589494 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101029078 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078873596 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084589078 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088229503 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081373168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099027715 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082494727 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104317935 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.077469657 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099491299 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08637801 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105118865 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07859217 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089760879 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.080831325 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099047088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085561239 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105442881 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078576319 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092737982 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.074631543 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084286086 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097887685 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.082176722 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099669535 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082593639 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.088336412 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07731204 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098416599 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.08609073 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098474756 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083091822 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104654138 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083502009 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097168982 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.085374807 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097482102 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.075833079 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10350145 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080057942 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074797753 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104243441 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097741674 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078128001 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081410978 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104984048 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081419878 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10027794 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078403547 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099859088 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08265869 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.093287205 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082236689 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09606139 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.087730847 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.099376103 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075048598 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.072671352 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100149089 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077451239 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097874606 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.076177011 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.099272923 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082808741 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095739283 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08000824 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080318497 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112098142 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108545474 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081881881 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101796001 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087256435 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081119414 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101710287 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080585646 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101894313 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082601882 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.104976789 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085496508 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09926799 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080686954 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091029949 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082973406 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104962223 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.077004134 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077593506 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.094921949 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081790089 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106370447 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081008724 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100753723 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079192265 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101762645 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087984992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099679457 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081740717 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.094849708 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08180914 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103878526 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083131407 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08390422 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10733682 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081961936 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092845951 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086120352 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097502387 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085025033 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09397005 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078169495 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.095399128 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083076467 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097578385 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.081099763 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070820295 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10518007 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086731009 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10070925 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0776252 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099743445 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089556029 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098673336 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085835426 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.099898341 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084224611 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114553581 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076682873 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10005124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089353907 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098983013 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071085057 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104090856 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080055698 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094274991 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089211383 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078405885 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101269772 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083144071 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102484026 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070872352 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099880746 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080239721 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.095916168 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076476468 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104755065 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.081543827 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080871586 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108713672 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102698347 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082584172 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082940673 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099714304 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083447977 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101845527 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082723955 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102134221 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080593451 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096215439 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08171735 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09550351 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078201452 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.09860959 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081894106 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081731414 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101613918 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080323392 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105088425 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082516524 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100963434 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117912841 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07903855 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095921241 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082557289 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102535612 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081733701 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080940414 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094963758 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086781728 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100684135 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087856444 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099116865 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073760522 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100758612 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081490905 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102171872 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082861314 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101728452 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080401476 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080533142 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100456409 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090550962 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096681917 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088193894 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103454106 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083349011 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100784191 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082274685 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099086261 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077987784 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.099619437 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083813098 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.1010874 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081516764 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103060432 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083209487 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100893715 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08044853 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083490614 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100854767 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083479601 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090119042 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078942551 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.096644115 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083144934 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105136965 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08334637 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.098586136 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080430271 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083339919 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098811336 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074141137 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10345979 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083898315 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10153157 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091361503 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.096282528 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083213207 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110665207 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071404521 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098002251 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078344685 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078722554 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106415178 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083158248 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10760962 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082234366 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.096727883 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074099846 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102270665 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080462339 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089872292 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078456627 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103634151 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079914767 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079652087 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10163853 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084971802 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10249518 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086219447 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099198905 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081408639 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101696963 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074822599 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09730664 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077484964 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081668356 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102449067 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079186063 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093454569 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081511675 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100038774 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083091504 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099331082 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081594747 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105848459 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081526598 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082541911 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106958823 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072349506 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101269764 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0817751 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100564166 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078069902 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.102442785 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083375388 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103307913 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087284817 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100706409 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084945123 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100740537 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.078505115 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081114895 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100621951 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082744723 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096573671 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084500335 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106761667 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078780466 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101670197 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084045345 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097317072 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0839589 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101859316 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082930785 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10444661 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082780907 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082516659 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.104908112 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082488616 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1030665 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084385066 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099395075 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087257696 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096398682 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089438348 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101994719 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084907007 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099972643 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0791811 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100258209 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081885246 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081111884 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107079711 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084027427 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097059517 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078838308 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097711824 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082545524 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106527669 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089115205 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101268163 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083652266 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095205207 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075219078 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103478303 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079210144 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081289392 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104117004 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085861626 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10128258 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079408643 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09987209 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.08763134 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105408749 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084940113 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097585385 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084845583 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104211702 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083758694 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098796528 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081974861 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103308166 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084505466 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080921589 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097847452 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091842198 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107678984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083736399 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099798543 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085663642 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101349396 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077331698 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103532692 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085317087 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104961749 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083188885 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102007071 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091710527 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096091554 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082186486 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106458871 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082151048 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106841026 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077097509 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10178938 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084430633 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103215541 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076388785 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078839249 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097908916 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082887861 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096631925 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076823606 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112677988 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088549303 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102557435 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082121342 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100340501 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077532672 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076537272 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.097761475 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085799443 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100426483 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.090756636 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.097065238 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.079145251 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095303034 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082745593 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10339394 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085317859 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074510264 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095642144 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079949341 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102243778 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089991811 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099629229 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083350491 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102540504 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08287152 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098386598 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08932143 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092862969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083649812 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112625243 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08379533 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104680451 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086666686 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106971394 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084359592 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095996227 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083929062 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.082960897 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103106079 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084308831 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102471547 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117793258 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084077568 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.078498036 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101421418 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.081907673 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09882698 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090336176 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104093378 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085336908 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103766474 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081757981 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104198569 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089413107 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103902721 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083370554 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10318358 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081208297 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10119965 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08101926 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08164838 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104324269 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084306646 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101978169 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085834373 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098664555 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092710684 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.108206688 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084062319 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093583319 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079046603 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.097502256 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07794783 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084047473 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.096632122 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080760788 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099631426 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081640922 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104230161 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086002627 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101987258 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085546897 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082341958 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091349089 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086663773 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102213431 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085712404 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094662422 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082939235 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103128232 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088036411 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108054124 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080608603 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.1022058 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081781728 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104222792 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077617274 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.085882227 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101157645 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081661528 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097971115 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08418635 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103514745 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085433114 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10307723 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08579323 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102509945 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.08793663 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105004234 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076182865 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.07552753 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.106480231 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079955873 seconds)
  done (took 55.080427499 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123196277 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103804145 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073868241 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09330164 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119988762 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078272035 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073396677 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0969053 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078241617 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106298393 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073356113 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093213292 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115307467 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100459485 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119066291 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107553259 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073733749 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098106682 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074388753 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097119027 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094601037 seconds)
  done (took 2.83325754 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.098811222 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110907244 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090651872 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116026927 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104533099 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09191892 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109863685 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111610837 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096483314 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105828386 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115197752 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09221693 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105543256 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105500705 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086938974 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108693924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095309898 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104935248 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112126651 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091217329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109757435 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109485934 seconds)
  done (took 3.11228037 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087008396 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081710826 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106016229 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073545321 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101540132 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073140443 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107246224 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075749115 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085784946 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.102339329 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079003925 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.101756524 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086721241 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.092389346 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080664445 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09494677 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086187064 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082149692 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102691352 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.076861447 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122142396 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096135091 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076959753 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.080151786 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111322461 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083718814 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101660525 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082422865 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.100224449 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082017404 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.075332271 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104053544 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084759728 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.098701454 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079112304 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101602254 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083239776 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096022575 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078232787 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084031105 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097077299 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083265117 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109298611 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.07868198 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095426817 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084002143 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101165134 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.073466643 seconds)
  done (took 5.159172813 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112899862 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130115537 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101811538 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140112702 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117137614 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09174083 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102880816 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139579354 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076045738 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080188433 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.119880591 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117326604 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081760368 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108502097 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101792399 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083166322 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103377988 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077830659 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107395438 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078332706 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108035739 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085272349 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117099222 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112500576 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086698289 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100819898 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078542909 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107721595 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113700786 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.08908097 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107724437 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09117577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117206271 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104331824 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.077956591 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104431794 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099543395 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101968132 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085295503 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096380395 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085373294 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107600692 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.086138168 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120244313 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102740254 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.085174133 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101394167 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076117414 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114056933 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08485486 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112519639 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114981106 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087463335 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103102697 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088566285 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117981426 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102281273 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08149367 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105914725 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096521817 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095669737 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087216435 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11609514 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104204508 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091990839 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115280708 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.082979161 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106984234 seconds)
  done (took 7.817671234 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110032876 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107841127 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099003221 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120657047 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107418552 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087603273 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107654779 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088166806 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107891149 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115106439 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08792161 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156084336 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083832142 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115151352 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107893606 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0878429 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107562782 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087145176 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107438771 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087499014 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.108310263 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120196698 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087449371 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118956474 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119914295 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08438857 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107072523 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086932825 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119798182 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107239232 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100481278 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107560765 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087806106 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120522614 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120553414 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107922132 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082109363 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087270207 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107612097 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10765956 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08498627 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11834511 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087614559 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103859525 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088463795 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107911421 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119018002 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.10030155 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114263777 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114741478 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087676694 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119591868 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107615088 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089523506 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118487348 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12773821 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099577291 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119616407 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108103878 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099414126 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120084822 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12778261 seconds)
  done (took 7.386587107 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111970534 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115134676 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119178496 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075233653 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097753853 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087515444 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096434475 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.07667542 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114162565 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094702901 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116380635 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108067701 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090847276 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116510966 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085686119 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110945149 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106522131 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086823866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113392675 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107017943 seconds)
  done (took 2.881970435 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088035782 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120385612 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080251 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107216068 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082668145 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.1067795 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081383838 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10230368 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080467133 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103421305 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092806522 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112098771 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080662471 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107392338 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112505381 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086934934 seconds)
  done (took 2.397043235 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100429101 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119843919 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125145955 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08479198 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076099614 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104582517 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082132235 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096154152 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075495217 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108885873 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085927083 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105536569 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082571278 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.076606748 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101585661 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084411205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09579973 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083539759 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103224034 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10432932 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10504624 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081511288 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104362664 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.082001716 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102837127 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08475614 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106168656 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076420883 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097456794 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082733201 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102706274 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087977998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096014649 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084800472 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098425302 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077975105 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.1025067 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082581627 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105956808 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082498192 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076858989 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101867622 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083053528 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102172621 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075918952 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103228073 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.07543601 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106075812 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081966643 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.1026141 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.083962731 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107719441 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08642073 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111012953 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090321926 seconds)
  done (took 5.989673792 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094015794 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103807126 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08543887 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096547374 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083255926 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.087290988 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105019484 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082256213 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103193722 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077241468 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102539026 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085130342 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102116518 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083672836 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102601816 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083797005 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094720529 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081600811 seconds)
  done (took 2.515812512 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086062893 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079544918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107870437 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078706681 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100392375 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08224501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095598428 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077962474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077131471 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099733054 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078950341 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10209094 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078225232 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101749747 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080981461 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09956894 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082005989 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077000453 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09978898 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075092262 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101901355 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078684381 seconds)
  done (took 2.804346709 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097874492 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131501759 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093967965 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.140964417 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.083285587 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.106421977 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.092912714 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.10620346 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12206128 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083569346 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.082485611 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104709573 seconds)
  done (took 2.110787799 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104595634 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138047199 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081296444 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102542463 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093710342 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106225713 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084464978 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105982555 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118005758 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098061365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106117729 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117374133 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099613621 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11810079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113873016 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094323695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10611009 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084828951 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102149717 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126513577 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085362532 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119283518 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105027161 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085764043 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105446569 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095673156 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120546675 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118424638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084792942 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120335922 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11353894 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084716749 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119465209 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118979124 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082356266 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1191304 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104592469 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10740742 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114811029 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116455403 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082862062 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114167756 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11890066 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092737347 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120010393 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084298696 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113586052 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105701386 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085892765 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134121226 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114402125 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117831083 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094824362 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119479819 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119006152 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133498559 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098715056 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117620028 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113099531 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097616579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117281002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114104244 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117963059 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098009759 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113910442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117481031 seconds)
  done (took 7.948155636 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119495697 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102430095 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085408214 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121255567 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116267606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084970459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106742924 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084516435 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10528641 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081006431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151347622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106632693 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117050189 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096290424 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105627503 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104988933 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085316074 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117332619 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082151413 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134106036 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105784107 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096766673 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118721369 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117212356 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11958274 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094022131 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105605617 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08464873 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105717427 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085113804 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114143355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105719194 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096165132 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102638178 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116919655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0857968 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104262799 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092740291 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105541413 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114661929 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097258219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129125359 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105616821 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085710963 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119271145 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084426055 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106390341 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081026647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106996142 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10240912 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097949055 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118436355 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119369208 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118793693 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085001947 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106206738 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086197112 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105009038 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085174068 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113803495 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117538629 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085685236 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135026619 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106671547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085662477 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118242219 seconds)
  done (took 7.752810013 seconds)
done (took 149.340043182 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098825296 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136474295 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094412361 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163505458 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081458398 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135950139 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114104165 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116244874 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080498053 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080037534 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101301117 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08360407 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166934714 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080420187 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101471128 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083777293 seconds)
  done (took 2.58661861 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.177599989 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283057222 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100007289 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107731833 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087042863 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104760957 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085641866 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107482834 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082709531 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112691105 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083643167 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104162092 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093439499 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103010036 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081965454 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102704367 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092076489 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103618949 seconds)
  done (took 2.888487993 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11208674 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145380877 seconds)
  done (took 1.130271417 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11719331 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181481475 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292986235 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.37464 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.13112668 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123597985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15632783 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099883428 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198481458 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125814775 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12561684 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085493691 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135086802 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.112670923 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089407514 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.108001772 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.114132181 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109944585 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.086647184 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109932748 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.131950579 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087244483 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11321017 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089327353 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181005045 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122617821 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086210109 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109653093 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107320964 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.087653272 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113157093 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101585764 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123653293 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.163842233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.114695722 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160500612 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.115021451 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085926471 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108874829 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085519993 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112426643 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11238926 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101997051 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107179896 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088326068 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114770739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088025624 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108283299 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094450398 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117627722 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115041047 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09278226 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156059601 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116988962 seconds)
  done (took 7.566073301 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784748082 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148989792 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086980374 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888628744 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11105969 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122926819 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.792488042 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107338206 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230339533 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.800788728 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10028928 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121780514 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226416694 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.24933508 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.136093305 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308957946 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.666398172 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123563891 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136027284 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.12450817 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115734582 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132969126 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103340273 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450908598 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108959022 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086243908 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114318801 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116814157 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156152531 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086112848 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111384686 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177263047 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.262161306 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177073742 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109144735 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083739374 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106590901 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16578584 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266015412 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193025283 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172878562 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103651622 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084909704 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118840842 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104915841 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104579559 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160173242 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.1703523 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169532696 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112703628 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095976483 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117813868 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117136036 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158718984 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084261528 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334272714 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337749537 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085017388 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115678211 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101537561 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262043333 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08518759 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223276167 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133396188 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187270939 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107718812 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752378775 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18712276 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086054528 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114564756 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092514329 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111988957 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095224189 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165191778 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387514514 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121078437 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.089242185 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10689968 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204075793 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084384568 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108409561 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161860147 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109573619 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093690548 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121871708 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097945693 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190207053 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.2459141 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09781314 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116626818 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090201886 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12163002 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109420982 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209471512 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194329088 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178987873 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209170946 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098719249 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184463275 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163439389 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095806821 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167982421 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116248691 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123545899 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097703553 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214112937 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138039249 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086420073 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113450721 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092042817 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14160018 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110894349 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092576873 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166445451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500172386 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164520003 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081507939 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111881221 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093699374 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159560883 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115239653 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257256274 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09533083 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165289124 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115538656 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082249717 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118114536 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16211511 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120796828 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094106049 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120432153 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092432226 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.26951426 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196697995 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121887998 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21516935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176297026 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115649573 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172115078 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116741699 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166339376 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094354169 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118596868 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086940652 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775498799 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121258837 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092756604 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112389149 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189686019 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084810526 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086038349 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107382258 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082139314 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788578696 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088252592 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106295637 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086936214 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117621417 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093406882 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114104891 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090888955 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159311447 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229729962 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120820036 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092308179 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10855343 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15959556 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.087618415 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.109113823 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086541218 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108339951 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095621659 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111853171 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088264264 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166861996 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179493541 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.197346224 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574467391 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084991283 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108286996 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206030563 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109128484 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.280687382 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11715922 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224583165 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16455715 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082175771 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334040108 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165426054 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191034787 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111630858 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169590791 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083030632 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113272903 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.159665396 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085735488 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11640647 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.156820254 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122282326 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098839591 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.141016664 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08391683 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24649205 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083085767 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167168105 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111704061 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097034014 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306027118 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085408947 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128044495 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157535489 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113715384 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086646426 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.717221657 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08570425 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117906546 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094169145 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22021029 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162718002 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116838365 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093538845 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118613569 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159736837 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209850513 seconds)
  done (took 42.894303528 seconds)
done (took 57.937934043 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298812024 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.251630221 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.247081226 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186259587 seconds)
  done (took 1.960221174 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173111008 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.122920617 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142208619 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104087602 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125139972 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104825175 seconds)
  done (took 1.67529181 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408648739 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.329942657 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.279435806 seconds)
  done (took 1.922401792 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.242871375 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239977577 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.341214723 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.393500819 seconds)
  done (took 2.222382564 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.201218225 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097979327 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119256382 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111262563 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16431389 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20139336 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137875736 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146181464 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104180498 seconds)
  done (took 2.235269633 seconds)
done (took 10.923741003 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.134638235 seconds)
    (2/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.310104577 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.127803113 seconds)
    (4/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.183976997 seconds)
    (5/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.241060715 seconds)
    (6/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.212768588 seconds)
    (7/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.231035038 seconds)
    (8/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.232468271 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.089207355 seconds)
    (10/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.224304676 seconds)
    (11/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.189203999 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09873719 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.205228001 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092046645 seconds)
    (15/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.195795209 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140934071 seconds)
    (17/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.234700164 seconds)
    (18/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091299143 seconds)
    (19/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.154705531 seconds)
    (20/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.099668111 seconds)
    (21/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.181831559 seconds)
    (22/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110577342 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200009177 seconds)
    (24/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.139164276 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.160057923 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.227373589 seconds)
    (27/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.222771375 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094823123 seconds)
    (29/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.191585412 seconds)
    (30/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.102578496 seconds)
    (31/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.167726061 seconds)
    (32/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.121963204 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.142145353 seconds)
    (34/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.1893476 seconds)
    (35/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192653356 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132689857 seconds)
    (37/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177157156 seconds)
    (38/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09217849 seconds)
    (39/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120431863 seconds)
    (40/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092576664 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.173622683 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136045911 seconds)
    (43/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090499664 seconds)
    (44/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.123275433 seconds)
    (45/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.211722291 seconds)
    (46/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.170589516 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114511899 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.123796262 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.115426765 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108340536 seconds)
    (51/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.116610692 seconds)
    (52/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116214762 seconds)
    (53/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150966118 seconds)
    (54/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089772808 seconds)
    (55/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118239267 seconds)
    (56/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09462964 seconds)
    (57/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.2074725 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.181567348 seconds)
    (59/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091134644 seconds)
    (60/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112889407 seconds)
    (61/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073935381 seconds)
    (62/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17029051 seconds)
    (63/286) benchmarking ("sort", Int8, true)...
    done (took 0.22419169 seconds)
    (64/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.135835037 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.202139513 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.09813147 seconds)
    (67/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098377799 seconds)
    (68/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.178616509 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088803556 seconds)
    (70/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114840823 seconds)
    (71/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.197120919 seconds)
    (72/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082602048 seconds)
    (73/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.08044777 seconds)
    (74/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.195671302 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138843744 seconds)
    (76/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082319373 seconds)
    (77/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.123108838 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.08230342 seconds)
    (79/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112421847 seconds)
    (80/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240679406 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.196965176 seconds)
    (82/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.137892719 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11256924 seconds)
    (84/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.136816753 seconds)
    (85/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.123038652 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.108625368 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122710614 seconds)
    (88/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.147302296 seconds)
    (89/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091489936 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140136086 seconds)
    (91/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178329957 seconds)
    (92/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101330805 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096914623 seconds)
    (94/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091912137 seconds)
    (95/286) benchmarking ("sort", Int8, false)...
    done (took 0.188221097 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.187634655 seconds)
    (97/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.190186392 seconds)
    (98/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.080074954 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114234011 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089326424 seconds)
    (101/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.195111927 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088618328 seconds)
    (103/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111760079 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120486616 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091448334 seconds)
    (106/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074072591 seconds)
    (107/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121804448 seconds)
    (108/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083608134 seconds)
    (109/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135900645 seconds)
    (110/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.072798048 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113520274 seconds)
    (112/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08585322 seconds)
    (113/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16215922 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.178076199 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118450034 seconds)
    (116/286) benchmarking ("sort", Float32, false)...
    done (took 0.146754399 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.103437678 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095511795 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132858089 seconds)
    (120/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074669903 seconds)
    (121/286) benchmarking ("sort", BigInt, false)...
    done (took 0.22401284 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113839365 seconds)
    (123/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090262743 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12390685 seconds)
    (125/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191741491 seconds)
    (126/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.090146801 seconds)
    (127/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133049034 seconds)
    (128/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.088229696 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186309971 seconds)
    (130/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128792416 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094571359 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.133219948 seconds)
    (133/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.240944889 seconds)
    (134/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.072178277 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11420949 seconds)
    (136/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097247687 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.082339073 seconds)
    (138/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122221205 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091370635 seconds)
    (140/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.198046754 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.132501292 seconds)
    (142/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.179769945 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086139331 seconds)
    (144/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113326736 seconds)
    (145/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097234089 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.135870818 seconds)
    (147/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.071673238 seconds)
    (148/286) benchmarking ("sort", Float32, true)...
    done (took 0.236907661 seconds)
    (149/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.082728628 seconds)
    (150/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190250852 seconds)
    (151/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117341899 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.097149916 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120377414 seconds)
    (154/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080992058 seconds)
    (155/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090800407 seconds)
    (156/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106691907 seconds)
    (157/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.15544802 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075426398 seconds)
    (159/286) benchmarking ("sort", Float64, false)...
    done (took 0.169518019 seconds)
    (160/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.133186257 seconds)
    (161/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121057835 seconds)
    (162/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072038735 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.09556356 seconds)
    (164/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072711795 seconds)
    (165/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090488521 seconds)
    (166/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108074402 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087641405 seconds)
    (168/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117861145 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169698641 seconds)
    (170/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071030571 seconds)
    (171/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108269449 seconds)
    (172/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.071462017 seconds)
    (173/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072169042 seconds)
    (174/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110802111 seconds)
    (175/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.205223803 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.09657691 seconds)
    (177/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115617813 seconds)
    (178/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.181615609 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.105429927 seconds)
    (180/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.087851976 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114998669 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097653552 seconds)
    (183/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.111284716 seconds)
    (184/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095038804 seconds)
    (185/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.14685051 seconds)
    (186/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074297188 seconds)
    (187/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.147070115 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089509265 seconds)
    (189/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.095797869 seconds)
    (190/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.172985588 seconds)
    (191/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113099957 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.229283533 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086118505 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.1153556 seconds)
    (195/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074605662 seconds)
    (196/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184748565 seconds)
    (197/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073980362 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134611317 seconds)
    (199/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074605607 seconds)
    (200/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096224103 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096721595 seconds)
    (202/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112680717 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09833236 seconds)
    (204/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.123605326 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083700484 seconds)
    (206/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.096163084 seconds)
    (207/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074841419 seconds)
    (208/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.121796116 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099385599 seconds)
    (210/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.18262503 seconds)
    (211/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.076218724 seconds)
    (212/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112591963 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085869379 seconds)
    (214/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.104628333 seconds)
    (215/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.07102224 seconds)
    (216/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111670311 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091041911 seconds)
    (218/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.182397498 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.084215496 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109420313 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072225201 seconds)
    (222/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072691735 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.101632432 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170126226 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.10903964 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121537596 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092186244 seconds)
    (228/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.097201287 seconds)
    (229/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072754422 seconds)
    (230/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112973875 seconds)
    (231/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08786316 seconds)
    (232/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088552608 seconds)
    (233/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.097226176 seconds)
    (234/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.074854155 seconds)
    (235/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166484577 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.09695956 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107941665 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089797642 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113693651 seconds)
    (240/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075838942 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116318871 seconds)
    (242/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072616385 seconds)
    (243/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.09546689 seconds)
    (244/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.071951269 seconds)
    (245/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089327237 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122780341 seconds)
    (247/286) benchmarking ("sort", Float64, true)...
    done (took 0.236953195 seconds)
    (248/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.07104013 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112524018 seconds)
    (250/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084427004 seconds)
    (251/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.096474101 seconds)
    (252/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.08034081 seconds)
    (253/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.071947657 seconds)
    (254/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112148715 seconds)
    (255/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.079673065 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113750065 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072490736 seconds)
    (258/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.101399817 seconds)
    (259/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.085941777 seconds)
    (260/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.072007654 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.114923412 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097315352 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117455655 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084556336 seconds)
    (265/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.096276324 seconds)
    (266/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08928746 seconds)
    (267/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.095047284 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085209422 seconds)
    (269/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072464025 seconds)
    (270/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.132660675 seconds)
    (271/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07277332 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121368674 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115626404 seconds)
    (274/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075019107 seconds)
    (275/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.085446466 seconds)
    (276/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.09855655 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.087285179 seconds)
    (278/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.10989907 seconds)
    (279/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073195326 seconds)
    (280/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185210439 seconds)
    (281/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073063024 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.109751293 seconds)
    (283/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.087581053 seconds)
    (284/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.113297053 seconds)
    (285/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082832899 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133385907 seconds)
  done (took 36.43197241 seconds)
done (took 37.348067212 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098392985 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150116965 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09368034 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137756276 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.09735791 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12447762 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092676954 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120570343 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097108687 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123286213 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095189826 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.103087113 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094613172 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118548544 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0955516 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139984892 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.09747878 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.115209103 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086452487 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109883301 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086708855 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110614344 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088043723 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.103014152 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095823197 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116925796 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089195905 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11866234 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087374911 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108444878 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08529223 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090287626 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108984992 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097018629 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113217001 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.08698716 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119490122 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093503906 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112837649 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087347216 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115795063 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086546326 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114790775 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092270709 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.110620921 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085393153 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086265243 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122212233 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140037745 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08815518 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091440214 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119824537 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093346659 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115549272 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085765552 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110986411 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.086800155 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139875274 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.087284867 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112824131 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091689029 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115461029 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.084818505 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110389375 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087406482 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118644693 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094955916 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109893613 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093396689 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.090309452 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107298246 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.087491426 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11006649 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.085586092 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117460643 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094190608 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105847971 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087008558 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090522974 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113776105 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086295687 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110998972 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.087787184 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112366476 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085466846 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102708823 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085219384 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.112624897 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086250643 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085761436 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114418439 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089296497 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113144581 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094480354 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111247555 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.088146141 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112359524 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08751403 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112553737 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.084828386 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107327375 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085365884 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090959929 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.108681185 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.086843267 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121416655 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.084932163 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.114710143 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085987744 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110346251 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099807202 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11776627 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088281103 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112597297 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084868152 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.114852699 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084529877 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084473437 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110262569 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086735456 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.112047505 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087262636 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109919122 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.090090754 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122082514 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.101038567 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.109840732 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085529165 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112170759 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.090698643 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.086902025 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109128424 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.085676726 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.107109529 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085115393 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109108509 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0905392 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109538522 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.08677997 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.086897009 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111457575 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088923486 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112479549 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.088282767 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10889723 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080269253 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115503283 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085301805 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113325655 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086868133 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086394951 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107619558 seconds)
done (took 16.344585982 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094529366 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186196307 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146484617 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147076269 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.119988552 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.129883508 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122757596 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118176007 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120659097 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140917043 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113751342 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132804551 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149619319 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.095011357 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.13026995 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118773737 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093579366 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129706562 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127908156 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13893671 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144746757 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09467089 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140517841 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138969221 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092780487 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149565362 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122048604 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093767284 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122856679 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103066084 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135300936 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121659546 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096211556 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131153314 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101331388 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118451427 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.10488999 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115118672 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094319636 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.118882733 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134444538 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106362724 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115947281 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.100862067 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119283935 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122869063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093116528 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117370321 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095461209 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114346381 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098717922 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138688481 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091786008 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121301777 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119368007 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094392882 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120037516 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.097936764 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121246922 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097648945 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119148944 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096867083 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123126016 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13623134 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094349787 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121434112 seconds)
  done (took 8.771307 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109276826 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.147651778 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127747092 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.100789089 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.123634898 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082815009 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082881218 seconds)
  done (took 1.746590107 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085166149 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137891794 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115939606 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14123408 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108980502 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.144584934 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125687191 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084565072 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133746638 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094049153 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.138539939 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16444565 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085612553 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122356518 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118287603 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.11060559 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119066144 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109752606 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092055359 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.144675712 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089906213 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130646141 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122613296 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085441364 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131515539 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086439992 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174947428 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096863125 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109456847 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090122259 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115210981 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179553593 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106889471 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120259336 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082835378 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13808616 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130198178 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089280031 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13491376 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089487227 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131985573 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091072533 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116539739 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.089818848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116501603 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099373248 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120539091 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093686985 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115798449 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113112505 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122013356 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106196319 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113732871 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088564081 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119862264 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090756864 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124776532 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090208679 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138298053 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092524636 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135983049 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135610557 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104597803 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136320085 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101184783 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132740087 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.130922431 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090222151 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091519114 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11719231 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135840415 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088569232 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120533721 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099678953 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11906151 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112403639 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136718388 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089721138 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123409615 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088874293 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113319894 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085063464 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137786005 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089061476 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11315702 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102994689 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122570098 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.088925364 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115676358 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.107731581 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115265424 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.097054571 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12147002 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088461824 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12588123 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138470666 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.096108829 seconds)
  done (took 11.988214164 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.086648887 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087696507 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117046984 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087199015 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113046975 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087163857 seconds)
  done (took 1.566916034 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115811847 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114117822 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101716185 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117975523 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128427662 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135845261 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136292132 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095113877 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.131021712 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099750396 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.136179633 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110616332 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141973407 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11763595 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109599273 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118039927 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11091601 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116012924 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099004388 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116076158 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.103838955 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119112511 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089960479 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133891061 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093501039 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119077146 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093546766 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126876082 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099696508 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122414821 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093879279 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118435819 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093307767 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12057443 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.134790358 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.092551631 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113697286 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095774575 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119053469 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093815145 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137422699 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089895977 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12466551 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095600889 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122292208 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.093326563 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121769816 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093065845 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135133088 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09536134 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12168294 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.092881751 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119415343 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095791611 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119114572 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095769168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121057813 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110040884 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118633355 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119743153 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090312374 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093898848 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122765751 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11946895 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095029329 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121284605 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093069924 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114469996 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090499407 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09311393 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121827842 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090096319 seconds)
  done (took 8.987421616 seconds)
done (took 34.029437113 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671118708 seconds)
  done (took 1.648564646 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817239669 seconds)
  done (took 1.796996447 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.663012205 seconds)
  done (took 18.671304432 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.461392154 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.549435067 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.962973303 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160921533 seconds)
  done (took 3.11580731 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948967704 seconds)
  done (took 1.95389506 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290385824 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23193998 seconds)
  done (took 1.513261721 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.80877809 seconds)
  done (took 1.805754239 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.489888044 seconds)
  done (took 2.481166161 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331939033 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.169917213 seconds)
  done (took 1.509062933 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.564787879 seconds)
  done (took 1.568301077 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.186742022 seconds)
  done (took 16.19028961 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23510898 seconds)
  done (took 1.245793123 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289900045 seconds)
  done (took 1.289220713 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.553891015 seconds)
  done (took 4.552116851 seconds)
done (took 60.333240488 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095643532 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098039743 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124494869 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096038211 seconds)
  done (took 1.407254564 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100734101 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118963121 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096502959 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118502707 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101641644 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119524277 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092265952 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164364609 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092689693 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.120627494 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.09334896 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118580564 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.094909684 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118483044 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091187214 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120452433 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09627965 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119830137 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094394276 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120622995 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.090248589 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120266194 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.096097323 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11846964 seconds)
  done (took 3.622616912 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09570932 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090027478 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118412653 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090485612 seconds)
  done (took 1.396140717 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09950433 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131133372 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104856681 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126536744 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106226689 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132120482 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.089688819 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114687063 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090624078 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125038606 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090223425 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.135880556 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105511176 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.110379596 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101086602 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112037472 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.08559765 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132526316 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098390146 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127137285 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087870646 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124413149 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095321268 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129529303 seconds)
  done (took 3.663993751 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169667157 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127067311 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137164581 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095330304 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162617107 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.113930067 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114016056 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.138225246 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088219887 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125320551 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092315799 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166001856 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096773216 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.116915428 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089029897 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.121168354 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097846569 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124246802 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090921668 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127293834 seconds)
  done (took 3.398576948 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09669768 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.08988101 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111466106 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086947212 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121716723 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09098785 seconds)
  done (took 1.604037579 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085745017 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084174163 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110578135 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083959009 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115067728 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084904058 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082860553 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110539997 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084505914 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.08391577 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.109957316 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082454205 seconds)
  done (took 2.130049905 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.369937208 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.1138363 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090283069 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11217004 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093286349 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113267907 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100710069 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.114442404 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116880154 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.113663856 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086778573 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.116900666 seconds)
  done (took 2.558516353 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201711928 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093365124 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258249582 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345337672 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152687053 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161203013 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275560588 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159385626 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180301166 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133063759 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189772764 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126462226 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149308008 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173860947 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137062546 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.171947022 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17110861 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194632898 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116795182 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225233876 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15849717 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135832293 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173516328 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147015794 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1333493 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154136296 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.08907605 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123741055 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167955844 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164238525 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169100716 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145547463 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10753505 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192552582 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22669868 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174570366 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298824057 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128245493 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.1843254 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180711846 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222718506 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138046099 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192428465 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152277948 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098257884 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177281043 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153775694 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176463529 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.12889059 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110685023 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207215343 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172824909 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17614197 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106598186 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325163675 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118810945 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143477909 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17824376 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182176378 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186523302 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16504853 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117579815 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180510302 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177544394 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175626655 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114573003 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162854579 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122783436 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170814165 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189522502 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174563785 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161692045 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179718459 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131817913 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160492105 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165986555 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148616854 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17324204 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128393588 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119295201 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146619264 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106745009 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124887621 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157437962 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12026725 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197770362 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13304363 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.185251136 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198090969 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154216606 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128028874 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158506139 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160537021 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143761253 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.116303777 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114719832 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158073788 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152958663 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102016743 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15299263 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139134763 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124511116 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120488948 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120404893 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15584343 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103736134 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163769259 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160912873 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124848186 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132629716 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145752651 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155173163 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166287062 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181424274 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102568016 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129195422 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188071448 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155250416 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103374087 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170352036 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180691012 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.161368764 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135516067 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164692478 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18759452 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139271393 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183953437 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109294556 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130652025 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.147958904 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154771752 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12477147 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153564849 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126902873 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148445162 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187231212 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09616082 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134187273 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170249975 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096555938 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125566804 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137626217 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104782453 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140164758 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.116697915 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13307626 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153904932 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156916424 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149455263 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126685816 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139480799 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183804203 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130357368 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157079049 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115539532 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117860811 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.176141778 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180562903 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125892747 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193980932 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164053951 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19140628 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161559499 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127622372 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145996735 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126182376 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088728807 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160659701 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158399425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157390632 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178207121 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188546015 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162395127 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.14745535 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146506389 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162749973 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170164908 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152996931 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113801833 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159211387 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15478853 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11887301 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093022379 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124531006 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111313536 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128521714 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102033186 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202667422 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131345212 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209880038 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15610791 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110348469 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176472346 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122947279 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160694683 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167775873 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107528417 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178771744 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175136146 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164444815 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13942483 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170686754 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088882428 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12039449 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102536717 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161710297 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129283382 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101759011 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140771127 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177073054 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169052792 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147011371 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197216538 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160898424 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1857778 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119399717 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133568571 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165160293 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154162578 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179911228 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104318121 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153408655 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174435071 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137674235 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184009474 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15851126 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163224152 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194148579 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154040841 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099219875 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146854105 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162445202 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137274603 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162029277 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115047486 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132973261 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150732264 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103263789 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123186357 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176215603 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140554211 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175035498 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153576999 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168319861 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09458751 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139278796 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156234188 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113862958 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115106372 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165610834 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182767129 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141871819 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154862028 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171322092 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098859844 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306009916 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182174462 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178862612 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132943188 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138941905 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129405225 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155815713 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158778942 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173966155 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141407859 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174411379 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152391123 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.1118444 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132635754 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115275469 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14694274 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.148500492 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128758483 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121112161 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140071948 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179946247 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138935256 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154647891 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159281971 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117450101 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145848811 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110870436 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223674467 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125947174 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173388005 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151439921 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162665862 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193205874 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121426519 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097226628 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.12484794 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174437988 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10093751 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157629519 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180119571 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191239069 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154177708 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161866489 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134368169 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.089592396 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155449597 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146868983 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193424796 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138516426 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132568958 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18589905 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118679537 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128591235 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160062013 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279184965 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113176758 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166385776 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.114668304 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272053701 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095017998 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126610786 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155983639 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167129373 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.106738617 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178216319 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16045042 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113181505 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156934291 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133947904 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183472305 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198380993 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164407883 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171547574 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.139363368 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153280316 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159282761 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172742494 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112511437 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139919139 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159625704 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178039954 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183617215 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.101959936 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159144203 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159368668 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156475053 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168951345 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131270595 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195624096 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099919241 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159714671 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13760997 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120571807 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125742781 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.206829108 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10250692 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170500316 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153864931 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101276229 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12424993 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149654979 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154203855 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109509571 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125713552 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173923471 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094313009 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15903707 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176591266 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127714276 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12206327 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143394948 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135985719 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110673479 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142705269 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132057078 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139240157 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173938243 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12792584 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172722192 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171272522 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159052641 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15722071 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111859665 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662996844 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125088016 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147701896 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1421836 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180711545 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145066293 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162711405 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1572104 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117318592 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16223204 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144810808 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218620324 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161011621 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154847575 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09919714 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142159321 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139166353 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.10015426 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148526978 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15916589 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108374002 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13436968 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154329932 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111894267 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140519149 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136276629 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178998067 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116000296 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176306969 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175630748 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13568803 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163712967 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170446473 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127801295 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.126939598 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167611928 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138547574 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147075467 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100050319 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131067271 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175721634 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092789668 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156887116 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155872752 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157333626 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159937285 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102391075 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155825188 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140204918 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156991457 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098948762 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151068164 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15414498 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100734392 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126015059 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150548761 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154564887 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1249467 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124066562 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141409334 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173857775 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122817479 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101585336 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2819812 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15149646 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186702535 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.148104435 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131844327 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111338343 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143476321 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14937526 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155911098 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.0977615 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129755085 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099404328 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.177190257 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.150465511 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151369935 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180486063 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128597878 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225546027 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103269888 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2658844 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107138626 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151591253 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.127198185 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.099092342 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139482446 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131590296 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111175317 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212293369 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14705082 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147799694 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.140614536 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095200998 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125142559 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100941726 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159039488 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150849513 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154086337 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110684914 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114312169 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140408526 seconds)
  done (took 73.723624098 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143762142 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128012178 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145150172 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192516451 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161117125 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238881596 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201325924 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22332015 seconds)
  done (took 2.524741692 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.097365699 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154048889 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.135883496 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.120412176 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088437636 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.325785144 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13435982 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119679669 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116479745 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.13303842 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.113754143 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.519909581 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119895145 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.091769253 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.108949147 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.111732402 seconds)
  done (took 3.576160539 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.180390323 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.528984068 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.963660393 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.223206426 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.217634029 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.171080871 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.721185954 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.177024308 seconds)
  done (took 12.272942161 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117748499 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.108681034 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159597069 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158892881 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117144698 seconds)
  done (took 1.76047292 seconds)
done (took 114.632341873 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.0932504 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095153665 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12101036 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.095884893 seconds)
  done (took 1.489447905 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.106584224 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077552102 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108097676 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076549175 seconds)
  done (took 1.468060615 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.412460324 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076567708 seconds)
  done (took 1.619905413 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112391968 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129935717 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.101991284 seconds)
  done (took 1.447572 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0989822 seconds)
  done (took 1.199764632 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094491918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096126057 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.1376691 seconds)
  done (took 1.428685752 seconds)
done (took 9.75395951 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109293052 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.427546411 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.38190797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13427834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691783288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404962969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003553608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15284044 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163864329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08703212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13356043 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669704276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.053050034 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.342959059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.039604764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.341279954 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699412457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089776054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122202604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089480932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009275531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08682823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116478474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089450176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.66873243 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419833784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088546198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377079149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08690837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12225411 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374163367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116375387 seconds)
  done (took 16.783542063 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09239042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174797113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095895372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117618502 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091889305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11682896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.0977739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129982484 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177857439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087503658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133229871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086834387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092069609 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11724849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107485304 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11605911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090401551 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118535479 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094928338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118050281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10732463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114967805 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089068027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088954571 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116195584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10000764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116031541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100233915 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116450722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093806844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119343106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088196027 seconds)
  done (took 4.606005702 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137762089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18464101 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09608206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150448585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166361013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08920206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199180659 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154527978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179292782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087940662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133753908 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087294566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151579611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087537951 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137522491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088056592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11898131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089528066 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122665276 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089159353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135553102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087649185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118211633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090262542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088250338 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129826378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088666601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129266876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087562754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122757948 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090351346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117225963 seconds)
  done (took 4.943755191 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095604061 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.096678766 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133013048 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133633901 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091054922 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.0953509 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.124842285 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090180878 seconds)
  done (took 1.964083151 seconds)
done (took 29.398213496 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105465419 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093338875 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129614719 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100363296 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126347132 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.1009369 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115890224 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098734834 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.128260243 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096349418 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10328178 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115738165 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089422379 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114542201 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100110223 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092368498 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13152779 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096927989 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137096282 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.103073583 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.116965914 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.098568481 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126340276 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.106858254 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136924574 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.107206701 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.132407692 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.093323195 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118105577 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088732256 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.130976313 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109161368 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119159177 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103460886 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12086878 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092378674 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089123097 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.119299727 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.102052983 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.127573594 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.093642796 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.127342459 seconds)
  done (took 5.736518946 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115701971 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.159508795 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088174039 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.11741083 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.0890968 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.15551224 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.12222955 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.116675127 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089347688 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.142350637 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.113726481 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.118704218 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.088269494 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.1177564 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088052623 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089583573 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.141000602 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.1421875 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.117895091 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.147653804 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.132569204 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.148299824 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.152413925 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.111991581 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.159444495 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.152036017 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.110309806 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.153359655 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115858495 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117272412 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.118506671 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149141926 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.087763158 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.117946887 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.15735843 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.123889967 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.143978991 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158608599 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.118997513 seconds)
  done (took 6.002012256 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096451598 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102073452 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138033719 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179686803 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124464758 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126520658 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097938255 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135582708 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103918655 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116825927 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089396362 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148363166 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107140539 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125875601 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.088683696 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102319516 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138205335 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.089911776 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121676366 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107434754 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136000583 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100865594 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.130465992 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098757704 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117825549 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096989523 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120250151 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103613539 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122359045 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095411887 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121404138 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092712584 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09194286 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129328665 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.09162297 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124049062 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110270225 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125263987 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097014454 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.11920309 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099516372 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12243718 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.10937778 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.156773589 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088309409 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125299383 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094395469 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125511389 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087834409 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135195263 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098788738 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089139108 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133269085 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118568278 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087654299 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103300001 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119854901 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092113761 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.124983662 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095570518 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137717465 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.09309371 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131285606 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089060973 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093823748 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117227687 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087819599 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122424628 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109855713 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121001621 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.126979594 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.117799664 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093881876 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125620229 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094560977 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126855921 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088206329 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131556316 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099023426 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.092122264 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.1281399 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.0921237 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122326224 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106160392 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132679529 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096330791 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123492343 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094531696 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121212926 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090318072 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132243834 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092647463 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122266564 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104824158 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.088749228 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129823084 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.095409786 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123211905 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.086846635 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130536415 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093302354 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117798087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098978909 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119081101 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092410353 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126447326 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.091906609 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088145367 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12297828 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094228535 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11718951 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091140877 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12172595 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.090558413 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130863057 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.095454866 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091519299 seconds)
  done (took 14.096611585 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230881159 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214093774 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187749645 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.298325105 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.110427756 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145868356 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210425681 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163535922 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089247943 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157409075 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175573456 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18453862 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176179644 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185728362 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170627538 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089329516 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.138128304 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13999037 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212953141 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293860881 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107595054 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132880134 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158539947 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159730006 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106825155 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134657832 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112000546 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138227335 seconds)
  done (took 5.758259353 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105836715 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153847701 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097066009 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145226616 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145789559 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.088904474 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094165131 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120743082 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101736809 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13461361 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089851663 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125817078 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.094665605 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130335114 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.088623306 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128157783 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.098546533 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128519417 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.091997013 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.122309285 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102316835 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137183417 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.093631301 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12095522 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105449482 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121162225 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091450242 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139985814 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127112046 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114242086 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.115851914 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097608756 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.10326798 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.118536853 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.091826995 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.122169398 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.09182275 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.120946869 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091119054 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.085981452 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119467556 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.079912393 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121137688 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.103277246 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.125271591 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08614395 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123330495 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093094972 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125230313 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085566204 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.090409443 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122416254 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.092983716 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129764678 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091994687 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125404431 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0923966 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091266455 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.127341095 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092798131 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11671537 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091144217 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124779668 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092572848 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.12830673 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093881534 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.119820063 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091832487 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093909876 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126496935 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090978175 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127482597 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086105169 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.120060082 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099520078 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127576295 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093474977 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.090292133 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122536005 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.089035709 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107948441 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088446386 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076161073 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123070266 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.087715874 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120120677 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091603128 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12458768 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105452264 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128687283 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096796362 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119657608 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091963153 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123009623 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087127441 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09398823 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135646132 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139107196 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087887737 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.085949633 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134876555 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090264508 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117471416 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081379741 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128898989 seconds)
  done (took 12.534833892 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128904269 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169109495 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120083827 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.10826381 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154317772 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.130066207 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127727884 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096154127 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.119714385 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107409558 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12337078 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098413135 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092453897 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133156689 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159393706 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098675915 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121020804 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103023411 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125347336 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.142635341 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139689541 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.158177583 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.128303067 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123088389 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09454108 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.156100966 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163612337 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102851889 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131445427 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.129636829 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133589549 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163813774 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.130740891 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12531037 seconds)
  done (took 5.48179125 seconds)
done (took 50.719217514 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.221620731 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425102222 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.202482023 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.196906459 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.225041609 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.226875466 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.20430057 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.198466213 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.940829269 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.203156655 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.198956281 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.198920767 seconds)
done (took 27.576310994 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.270666944 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360003118 seconds)
    (2/2) benchmarking "String"...
    done (took 1.53157821 seconds)
  done (took 4.022858509 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.201137336 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.200377667 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.44431228 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.20034869 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.217300148 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.216556226 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.203655263 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.221618118 seconds)
  done (took 15.834080919 seconds)
done (took 25.461135749 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.278601209 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.393725426 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.465276724 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.216731601 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.199803785 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.202390269 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.203675982 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.245814834 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.212145355 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.203662837 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.202118236 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.45195677 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.219475785 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.568434976 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.201342092 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.212683747 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.217971532 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.452114525 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.209465663 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.190276119 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.200879225 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.186603314 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.212793169 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.22663661 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.205701189 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.212762372 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.221677797 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.199714408 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.390981673 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.200922175 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.244551825 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.204617992 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.226538734 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.205318745 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.308906465 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.226115523 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.388138962 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.209551107 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.1902974 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.212493596 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.387922236 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.59438105 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.206256458 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.200119236 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.202404094 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.277821799 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.197749626 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.90920708 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.205625813 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.201393888 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.264300557 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.579560892 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.203285133 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.216424457 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.208193652 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.43903259 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.231572319 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.222833965 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.234570565 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.21384485 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.201907807 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.226292494 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.26861874 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.202489655 seconds)
  done (took 143.452604147 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.199032158 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.20502934 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.205173405 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.265341643 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.204259951 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.204485077 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.198944147 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.199547781 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.204436828 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.204980468 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.204583295 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.200603321 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.21850781 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161135379 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202250324 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.220350027 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.204647359 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.200507874 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.21801485 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.198915778 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.201215196 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.203703452 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.216934561 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.199260455 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.239743565 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.282458471 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.226466255 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.229271779 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.200766481 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.198798398 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.237534929 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.204146966 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.792831747 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051332672 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.214212296 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.21720443 seconds)
  done (took 80.168590115 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.198504433 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19935686 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198305242 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229479819 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199041032 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.750868114 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.756730279 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.907246114 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.375876217 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.50523822 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433900068 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19931014 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293324081 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214227875 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200541631 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.21476714 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.226531634 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203374897 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198458582 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.750161661 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214269756 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199227362 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.370365221 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215241811 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229541574 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596056734 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.189412622 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202562477 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229691843 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.351355274 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.524308797 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243207688 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197798582 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197495225 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.521745994 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197494409 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309124703 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199099 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227268129 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198231855 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.474533137 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19708311 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.198545489 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199688799 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812150239 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197980127 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.729256985 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202881583 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.08972436 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197431232 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19650368 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.263446189 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.730590841 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.196137856 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195343313 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.195170422 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198631317 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19511411 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196847024 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.224923169 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.283001999 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.291674574 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195978243 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19735217 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223971658 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.19480973 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.368620125 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193806022 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.943380587 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.253793697 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.29561642 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.693040051 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197727197 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286150566 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310359758 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194258323 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193952259 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192694836 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.193841831 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.29888684 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.193414253 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.565015073 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.356580836 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.209072222 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.319899879 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.29129217 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.193776241 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.515288712 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.197843719 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.193517713 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867765568 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285721333 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.192949479 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193960273 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192017736 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.564633195 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.687510216 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.359132128 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.197166079 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.461180149 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19694254 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.571648285 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.675864222 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.808396121 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198769849 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300749025 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.35493155 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.20681393 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191268375 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.293594636 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.199249398 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.253128426 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.193287325 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585785435 seconds)
  done (took 362.967636514 seconds)
done (took 587.719318065 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.832932769 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.824241264 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.930665341 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.821791419 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.784653487 seconds)
  done (took 10.316594108 seconds)
done (took 11.440637822 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.814113807 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.369002957 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251248596 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.368287381 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226179702 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.381986622 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.350612392 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.21782964 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295457909 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272137445 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.293256084 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244368661 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227046788 seconds)
  done (took 18.434586328 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528516343 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.199908364 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265355125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506416707 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239195371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505337959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.406659512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.22206026 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.393855107 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21426032 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2077408 seconds)
  done (took 17.814187772 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516940148 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.199952761 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265555558 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509644129 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24091212 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513609836 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401608449 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.216445502 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.402674424 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21431668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20828892 seconds)
  done (took 17.815351157 seconds)
done (took 55.187856237 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.235480216 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.357104014 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222422447 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.208471418 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204359081 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207575651 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.211124046 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204992335 seconds)
  done (took 10.978904335 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.202801625 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201198526 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.202537794 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204245681 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204294113 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.200812064 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.206179135 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.201235071 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.202205805 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.204408723 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204138572 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.201683614 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.205208201 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20224594 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204962765 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.202844473 seconds)
  done (took 20.378729588 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.203821728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200896726 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201799318 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202100693 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.203322796 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.20256242 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.204514642 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.202505129 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201602548 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.201973285 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.204308158 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.20243789 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.20221491 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20201997 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203523472 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.20326523 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20420468 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203318391 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207352379 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.203199216 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.203101236 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.203781286 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202416528 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204671769 seconds)
  done (took 30.00419639 seconds)
done (took 62.488287387 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.198177137 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.20695276 seconds)
  done (took 5.534265738 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.265231986 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.266540805 seconds)
  done (took 3.662442255 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.207376012 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.206514075 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207556101 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.206325468 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.205439027 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.205583661 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205774268 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.206003941 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.205702098 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.205936028 seconds)
  done (took 13.191734869 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20584566 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206578045 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204517514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.207335246 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207314124 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204299962 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207702069 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.207290851 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.207779038 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204639309 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207986282 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.203624438 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207275444 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.204183778 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206925342 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.20507414 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204783283 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205493963 seconds)
  done (took 22.838166691 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.220081176 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.228050409 seconds)
  done (took 3.577273535 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.334982518 seconds)
    (2/7) benchmarking "second"...
    done (took 1.246922214 seconds)
    (3/7) benchmarking "month"...
    done (took 1.314771218 seconds)
    (4/7) benchmarking "year"...
    done (took 1.303955441 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.247089769 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.227391583 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.2478359 seconds)
  done (took 10.054132801 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208348883 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393308125 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.496494233 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.786121822 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209513171 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212797156 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.069183944 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213584993 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214032294 seconds)
  done (took 13.934016019 seconds)
done (took 73.919826384 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.200521092 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.231291728 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.209769675 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.235073317 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.546054644 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.23172841 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.208754558 seconds)
done (took 15.994064192 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.189952366 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.194014554 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.212652511 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.198257643 seconds)
  done (took 9.92712212 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.154026645 seconds)
    (2/2) benchmarking "read"...
    done (took 1.523719252 seconds)
  done (took 4.809689174 seconds)
done (took 15.869006744 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211094239 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.209378413 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208929979 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.207328073 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209781083 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207572142 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.20745855 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.20822431 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209914525 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.211503352 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.209868874 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.211503162 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.209606071 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210668908 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209139551 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207330099 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210787914 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208890127 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208293465 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209302736 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208262819 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210923503 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208175759 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.208573675 seconds)
  done (took 30.155298328 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210919181 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209388657 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.210634934 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211804877 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.20872972 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212149093 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211657725 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.20877806 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211139418 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211384878 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208519462 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209329824 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210610888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209003673 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21190986 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.210035105 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212650448 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209984713 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211503526 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209116929 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212278801 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209241436 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20951515 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213031999 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209435183 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209656974 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213042207 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.209259371 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214070003 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210058647 seconds)
  done (took 37.452416489 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.216993849 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219747453 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212689811 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212764977 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212297294 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212826102 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213850366 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213881372 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212953176 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213611983 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214633485 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.213593853 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213845885 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.212671696 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214115125 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.21383516 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.212527362 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213189315 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212826668 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213748137 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214858303 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.212829393 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214332499 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213864054 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214837349 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215455543 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214687384 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214565434 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214792079 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214420675 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214386622 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215832055 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.21328904 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215333957 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213503504 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214364399 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218336915 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220530594 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.214049175 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214258007 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.213168407 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.214508485 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214724934 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21563143 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.214774377 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214670443 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215937525 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214687329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.215128831 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215177264 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.214120541 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.215460816 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.21574643 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215615818 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215822569 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.216116197 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.21632994 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216155526 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.215908597 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214926172 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215091925 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216514995 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216266373 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21665415 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.217028164 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216582927 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216893106 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216150147 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215050921 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.216796739 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216708405 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.216685387 seconds)
  done (took 88.61455026 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216373174 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21464212 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213572124 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21530278 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214746967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217950626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.2142711 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216958266 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214489398 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217823785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217272019 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215502324 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213853991 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218859317 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218550816 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214440269 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217454306 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2160682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217938212 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218825125 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218001612 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216874158 seconds)
  done (took 27.898929015 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217548191 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221343626 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216131197 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220034227 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217295815 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219080614 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218392292 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219887941 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220656603 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217343488 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216679895 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217902415 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219166776 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217300169 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216795064 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217350342 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218724346 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218033518 seconds)
  done (took 23.07034274 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21825066 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217774471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220177144 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216875037 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216857216 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219863644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21864083 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220401146 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220125315 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217938081 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220815482 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221365102 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221677826 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218796915 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221132486 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217797435 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219083227 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217749839 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220549144 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218130799 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21909164 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219970899 seconds)
  done (took 27.967534112 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221306291 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22082908 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218853129 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218424975 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219695021 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221451755 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221342691 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219195888 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.221591746 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221517186 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21921264 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220770698 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221099885 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218622602 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219136476 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218855965 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220830082 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219730761 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221454284 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218421134 seconds)
  done (took 25.545627662 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222746282 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223182419 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222899802 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221838115 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222830783 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.22346822 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224239902 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223256146 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224087923 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222913228 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224468254 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.22325627 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223702827 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223094774 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223038937 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224747111 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225484165 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223328955 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224377148 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22442726 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22664191 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223638301 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22489605 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224477878 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224832784 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224304164 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224520833 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2246969 seconds)
  done (took 35.413607918 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224941611 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223566574 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22138848 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222608595 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221853707 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219981748 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222521356 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220813177 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22364411 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221517091 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223158728 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224257013 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217700041 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.216798567 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218526626 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.218163709 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217594871 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.215835594 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215377556 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216609131 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.210960153 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209371679 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.208911371 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207067334 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207440096 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.209712516 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208424584 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209618385 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210735454 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208647728 seconds)
  done (took 37.643490148 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254683748 seconds)
    (2/2) benchmarking "in"...
    done (took 1.254948104 seconds)
  done (took 3.64015598 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.20740942 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210920003 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.210423977 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.20805171 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.207990403 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211466026 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.211108131 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207740587 seconds)
  done (took 10.807215863 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.21166388 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.212350836 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.211741542 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.211287717 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.21222364 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.210715937 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219314333 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.228002827 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.212291951 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.212822522 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.217438921 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.21730319 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.214261082 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.21297935 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.211639622 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.214301749 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.21206719 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.212426673 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.213909636 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.212663204 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211146809 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.213801633 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214850322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.210661412 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.214599184 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.225756278 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.21747267 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.213609923 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213520681 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.216991564 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211888029 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.21085722 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.213110779 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.213785442 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.214983752 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.214369288 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221772778 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232953351 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.218843261 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215551592 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214952217 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.210866238 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.216114732 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.215566769 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.21612476 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.21449366 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.214961037 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.212394179 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.214078148 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.218016177 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.219473306 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214008926 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.212069043 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218319973 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.21619611 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220858481 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.231331266 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.218389528 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.222154297 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.223426669 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.22685696 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.221196779 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217364373 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.216595338 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224880236 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.235277191 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222087952 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.22974821 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.212423622 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215709566 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.22107978 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225693634 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.238167031 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.216293539 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21695053 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.21739236 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21626798 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.217322174 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222635679 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.234864004 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.216435188 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.216812215 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225504669 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234971992 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.217526809 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.217113843 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.217299568 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.217728931 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.218275575 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226946055 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.234303146 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.216213367 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.215187454 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.216274555 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.217590288 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.218317345 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.217749938 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217491081 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.214875189 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.218051379 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218273299 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.220414427 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.224098362 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21779013 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.217663946 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.223778765 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.218526837 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217631432 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.224581891 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.217899238 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218957427 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.220007482 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.221838721 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.215469207 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22085252 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.224772603 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.219072703 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.219876613 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.218882167 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.218286634 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227121015 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.239616603 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.219343363 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.219539332 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.224620609 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.228256938 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21856783 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.222238609 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.218809345 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.216790826 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.215092494 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.221032855 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.221060715 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.221090237 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220277318 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220787367 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.218560228 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.219776159 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.220154473 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.220507133 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.220109864 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.221246594 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.221013306 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.221969813 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.220119026 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.222312493 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.226728501 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.2205216 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.220638415 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.220964297 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.217754494 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220654681 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.221414866 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.221721042 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.221114825 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220704924 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.221024021 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.221559551 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221639441 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.222656864 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222062572 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.221304162 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224432635 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.221080006 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.224650499 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.222862414 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.219607533 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.221415032 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.222158707 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.221075416 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.221802229 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.221736128 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.224255529 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.228279632 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.222656247 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.221744586 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.224252242 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.223442597 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22288046 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222509485 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.225952954 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.228411352 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.222678977 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.227763298 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.22312047 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22380472 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.223380416 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.222521564 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.222272724 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223292629 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.225062587 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.228614427 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234277446 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245303826 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.2239364 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.226594452 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.224551164 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.226577464 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.226255386 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.225016569 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.223430465 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224774108 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223598531 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224385201 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.225898387 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.224652337 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.223854966 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.225103384 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.225601542 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.225384815 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224571651 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.225277024 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22549133 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.221916354 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224535908 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224926541 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.224306906 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.22255213 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223728203 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.225418873 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.225973057 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.225901723 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.231672102 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.222213789 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22763071 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228308451 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.225272855 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.225191817 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.226624043 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226842453 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.225769511 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233646746 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.24227025 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.227523487 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232565507 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.242894517 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.225457104 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.229292359 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.227433054 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.222804145 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.228675474 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.233143578 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.226631464 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.227433772 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.225755789 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227537242 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.22772294 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.232251128 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.224605681 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.227029018 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.228896843 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.227971103 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.224151059 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.227735663 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.228523152 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.227793219 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229780896 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228549334 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.228472394 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227330064 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.226991992 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.227855086 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.228197143 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229494572 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.232964071 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.232468689 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.227464487 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229457421 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.228493138 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.232152116 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227850134 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.230266899 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.228174057 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24023302 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.250168608 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234445236 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.230897049 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.230663129 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234515356 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.231210798 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.230974398 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22995118 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228829033 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.229558011 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229522405 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.226397509 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23056412 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231651653 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230244544 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230826486 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.233045198 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.230633486 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.22912801 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.231009324 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.230369691 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231179898 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.229686768 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.231295048 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231018402 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232001035 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.229973575 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.230131661 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236953733 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247414421 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.232153911 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229371218 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.230323362 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.230549339 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.233572155 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.231055427 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.234216622 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238165606 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.233750936 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.237817788 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233018488 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239733308 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231000005 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.233187076 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237654727 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229151419 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230521726 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.229660721 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.232184374 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237876605 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.247926899 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.234923033 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.235264637 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233047121 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.233972347 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231987298 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.232234886 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23279194 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.231295323 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240208946 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.252412097 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.235142991 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235853505 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.230867093 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231179722 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.233336735 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23097878 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236152349 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.232911178 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233458625 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.233104312 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.232280027 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.233154853 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.233275666 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.234300291 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.232519356 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.234672319 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24056315 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.252199659 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237404893 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235421488 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.240983994 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233437688 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24060821 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.251565179 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.234670175 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.235350966 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.234393752 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.235836728 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.234367875 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.235031076 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.235100017 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.234988244 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.238257871 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.235353268 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.234805835 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.235300419 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.234627089 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.23541705 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245192901 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254033725 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.236124343 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240126208 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.233212578 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236309586 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.239180862 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.234864402 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.235216177 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.237001371 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244819051 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241649251 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.235091771 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.235948107 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237338958 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236221694 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235982547 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.236755229 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.236619021 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236786771 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.236160052 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.236696919 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238155073 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235563846 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.23670722 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237909551 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.236451546 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.244189027 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.237417018 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.237141219 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236579934 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237690584 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.236804142 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.23805783 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.237284239 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236034583 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237070904 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238490223 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242257553 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.240846782 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239298549 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.23738406 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.238251998 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.237121906 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.238868328 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237829223 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.238096819 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237522112 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.237782301 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.237736767 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.237538662 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.236831853 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.238611778 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238490947 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237540165 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239508447 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.244118545 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239086855 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.235930268 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238511036 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239662918 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.238406466 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.240368091 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.245050074 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240468597 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.247331356 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.244359945 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242332954 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.238770894 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241631035 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.245799304 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.237636327 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.238983322 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.238616204 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.240846322 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.238846273 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.241702594 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240444799 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245771768 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.239520622 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.240058363 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248673662 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.259748808 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239718008 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.241647944 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.242674801 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.238998695 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.238012347 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240982501 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.240822362 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247549839 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.25867977 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242252567 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243955381 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.240262313 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.241212412 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244047453 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239424361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.242391747 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.237483211 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.24194198 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241407977 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24120786 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.238346091 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.239606809 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.240672664 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.243798013 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.245840073 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.238736114 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244230974 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.241657152 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242919187 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242142607 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24168099 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.239805483 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.239550737 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241411728 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242040557 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241629661 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244771659 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241303135 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.242346042 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.242577726 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243920242 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245773479 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.251134195 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.248823701 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.237956659 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241193603 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.242894616 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.244677402 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243075033 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242290407 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242714824 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.245396117 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.243151432 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243379439 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.244142219 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.245877707 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257667507 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.261233128 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24399857 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244798889 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24669289 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.244822652 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.240420527 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.244564061 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245352698 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.24684003 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249186673 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.2449466 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250919342 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261664546 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.244643305 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247235834 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.247811146 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.249740847 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.246577422 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244351756 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.244585379 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248410163 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.258799158 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.245819091 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253988322 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269734477 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.262063316 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245251503 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.245868765 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24501619 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.246179171 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246368403 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.246462147 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246595539 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247509113 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246135196 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.246595945 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250308176 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247280745 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.247067882 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.246983345 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245917502 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.247243283 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245028888 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245601201 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.247377481 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.24649341 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.245806628 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246749489 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.247640249 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257603914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.27031157 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246567234 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247320694 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.24423409 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.24941728 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.249275993 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256286304 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.252343503 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.247976099 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.247382581 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248727504 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248590223 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.247735257 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.247630839 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248094922 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247112397 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.245680076 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.258214653 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25519439 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.250365912 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.247902337 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249245746 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.248023275 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248504873 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249008873 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24823087 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.249419879 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.25095581 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251093047 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.247939928 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.249515379 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.251340917 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254310186 seconds)
  done (took 735.612235397 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248318348 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246817632 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246620721 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246899691 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247363972 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247744827 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247452126 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246268008 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246594954 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248337645 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247278005 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247684031 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247665035 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248365507 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246246873 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247795296 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247675958 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249029864 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248471521 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248363727 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249337954 seconds)
  done (took 27.369298852 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.250055165 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.248547409 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247900005 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25057654 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247730823 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250659084 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.246816192 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252801576 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250982027 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248670135 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2516655 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251296311 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.248653771 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.248843858 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249698872 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251873209 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252466078 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249648461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.251920586 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249918252 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251354617 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.249684775 seconds)
  done (took 28.670426885 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.251623333 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.253016798 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.252121185 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.249655464 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.251356855 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.250049845 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.251174707 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.251909748 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.25303799 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.252099888 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.250811487 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.254299725 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.25753299 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.255198587 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.253774072 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.251694725 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.253205521 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.25346384 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.252211359 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.250829606 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.258514699 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.250460404 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.251193477 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.252411231 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.254172739 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.252953088 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.252712754 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253740437 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.254660272 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.256619973 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.254016154 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.253501114 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256190112 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.253473049 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.254548925 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.257989122 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.254480132 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.251166104 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.254524583 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.264806357 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.271192794 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2552298 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.260537883 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.254533844 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.254913787 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.258267096 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.260613452 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.253364929 seconds)
  done (took 61.382127677 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.25424204 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.252515095 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.253644554 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.254579205 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.254126057 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.256472372 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.255673274 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.255560298 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.252210309 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.253731582 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.256454431 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.254220248 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.252340851 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.255051496 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.255547423 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.252403075 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.254070788 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.253151393 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.254399061 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.253617575 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.253412699 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.255047859 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.256324659 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.253291334 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.255657623 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.254064997 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25288565 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.256354867 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.253468829 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.253767868 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.256927307 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.256289603 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.256131732 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.253730465 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254791868 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.256515081 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.256582354 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.255195691 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.25618103 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.253873249 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.256994972 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257592719 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.258207394 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.25852947 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254509752 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.254692593 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.25468811 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.254433909 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.254983216 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.25727984 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.256785178 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.255039924 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.257525032 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.255474522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.257736713 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.258388233 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.254874459 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.256143757 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.258808364 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.256004372 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.25692608 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.258563308 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.254750788 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.257996356 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.260761699 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.256162441 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.255125256 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.258885153 seconds)
  done (took 86.549944809 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259815375 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.259978606 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26000805 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259418756 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259864454 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.259306446 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259700051 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.259346251 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260664815 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259891364 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260584092 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260909346 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.259083183 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260649568 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260157237 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260169202 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259934927 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259966181 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277142662 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25786925 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.257672419 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.257162251 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.258025239 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.257383747 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259819391 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258739131 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25830551 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.258090481 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259612251 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259084298 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259950855 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.260046409 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258128172 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258088175 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.260436329 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.25912894 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.258406559 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258703037 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.258851232 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25873139 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259141968 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259659448 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260259686 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.258271513 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259935568 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259946053 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259081305 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.261225451 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259692473 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258877479 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.259755756 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25995154 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260112477 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260104431 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.259693985 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.260502738 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259985229 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260608813 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258458224 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.259758496 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259752645 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.260583511 seconds)
  done (took 79.283415221 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261336399 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.259814012 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.259182129 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.257894429 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260067819 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258764658 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259854523 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.260387583 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261362881 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.260040405 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262743034 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258979339 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259008531 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263784402 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258782456 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260269102 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259381974 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258509166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266199003 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258617784 seconds)
  done (took 26.383442241 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.257421473 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.260522992 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.257126288 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259806343 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.261651689 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.258418057 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.261256204 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260264442 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257689199 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260688505 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262375702 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262240335 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258400747 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26012754 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.260672474 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.258010528 seconds)
  done (took 21.335530402 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.258869363 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.25963879 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.259292925 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.260427226 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.260653525 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.257235544 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.261289472 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.258948952 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.258549984 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.260826046 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.261591177 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.262223442 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.261864486 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.261211684 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.258073483 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.262001632 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.259514072 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.25861484 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.261227915 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.261148782 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.260326384 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.259544557 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.261704149 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.262536336 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.25924243 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.259180125 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.259144461 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.259169238 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.259907442 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.263312805 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.259384643 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.260551773 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.259046999 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.260707286 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.262667465 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.26001117 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.262643581 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.260989192 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.263818265 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.262332683 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.262990614 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.2604376 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.263441092 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.262934098 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.26045471 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.262711312 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.260201104 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.260910498 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.261763655 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.260211884 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.263291389 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.263911741 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.263233239 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.263594956 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.263409343 seconds)
  done (took 70.53253658 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263360501 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26387946 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.261537754 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263468539 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.264027371 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.260770588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.264565244 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.263223236 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260918588 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26537965 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.262651492 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265893107 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261921973 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26542715 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262217522 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264448103 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.262009727 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263175905 seconds)
  done (took 23.920911995 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.26344613 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263117622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.265472679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.26341845 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.263113354 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265681097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262158789 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.266193598 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265769422 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.263594054 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264507112 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.266292449 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265529316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.267583956 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263768222 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263100783 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.266249683 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264826874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262951916 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.263435473 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266611928 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266292089 seconds)
  done (took 29.005578064 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.263335193 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.265368108 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.265123317 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.280612148 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.281740767 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.26377062 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.264408214 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.266069417 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.286957584 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.312563766 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.307772772 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.281720422 seconds)
  done (took 16.5226526 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263930527 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268292301 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265422407 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266680633 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264714378 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264942998 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264380189 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266456276 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265904465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265976455 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266970065 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267861802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265301179 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266957605 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269361612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264299862 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265035076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264481307 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269019445 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265174647 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267741832 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265975776 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266367037 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265677725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266070321 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268981891 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266601172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267270075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26814556 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268237787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267338836 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269607065 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267294846 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270422578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26991577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266652128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268659292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269777878 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268160377 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270528875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269692944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269268261 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268052151 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269838861 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269061099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267484503 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267614654 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26952676 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271532852 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269930818 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267817101 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270758411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270065238 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271636137 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271192479 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268564398 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267293688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270447873 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268690269 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270735012 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272367628 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268551161 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269018504 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271589457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268923446 seconds)
  done (took 84.873810176 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267925576 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268348054 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266788851 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268336242 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267970257 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267567596 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268457504 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268389697 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269814999 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26904909 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27064091 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26899995 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269181011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268704399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269779062 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268671041 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269651481 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270313594 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271087666 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271343298 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27080379 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270335654 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270096401 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270327499 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270493243 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273460483 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270671438 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270723061 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270027513 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270184219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270080696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271596427 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269969113 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271008017 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271274928 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271754057 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271310112 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270808608 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272070122 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27451061 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270551737 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273491877 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27125495 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270286718 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271072453 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271773052 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272871901 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271135769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271887711 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272581842 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27210335 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271872871 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272451196 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272461758 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272451853 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272430122 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272988305 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271944803 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272233836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274458814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270838943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273564265 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275047948 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272885837 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272459458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273144418 seconds)
  done (took 85.073517736 seconds)
done (took 1725.857611337 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.435348315 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.389834233 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.274145611 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.278341246 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.272900489 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.267887106 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.283235018 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.273602229 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.273169232 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.274925715 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.275189634 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.460224446 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.268863972 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.273379814 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.273086573 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.368489811 seconds)
  done (took 26.136007007 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.299033611 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.283862285 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.384278356 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.298737642 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.303477172 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.452516699 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.334839848 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.282108447 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.439473906 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.323592808 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.275136129 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.305546815 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.282627107 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.275180164 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.30336016 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.452955165 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.515430766 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.281762477 seconds)
  done (took 28.287302253 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.690065864 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.317569357 seconds)
  done (took 5.203528476 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.298714893 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.282032585 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283376977 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.282671388 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.275449516 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.279895971 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.282602109 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.279809381 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.285667675 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.402769882 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.289078996 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.292383627 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.30165582 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.282890732 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.279386626 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.316558609 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.452407246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.281242551 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.279852098 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.289763906 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.283058905 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.375404824 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.322707819 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.28181014 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.398636979 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.291749947 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.291467339 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.290840432 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.418400146 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.282655441 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.283052396 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.284079524 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.284735544 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.151804774 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.798465078 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.28096366 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.308144558 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.290927068 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.281015686 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.423566046 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.286294108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.301618976 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.293528211 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.779093577 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.426924211 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.394673564 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.295364569 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.290327747 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.286158986 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.343704084 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285427984 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.285608687 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.327012592 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.033816014 seconds)
  done (took 82.479197485 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.283768371 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.277217617 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451938682 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.293746565 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.277784223 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283600936 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.284373313 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.545589157 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.289266542 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29070331 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593847752 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803493833 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294341154 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.309868713 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.121661851 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.325399297 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.278797264 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.279276466 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.294823973 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.284018647 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806834143 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286298266 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283850612 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.534175787 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.315906352 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754893834 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.278514166 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.285056564 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.284324753 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.279230279 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764220611 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.311160041 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.34087274 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.281113384 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.531575499 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.634220307 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.598485755 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.280053981 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.307964846 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.285681459 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.298324889 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751796692 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.614736243 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.28014755 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.298264027 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75725811 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.280634368 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.289723086 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.281310266 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524417591 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28251946 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.281522118 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.28069511 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.287972854 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.281037291 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.387935739 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.373857915 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757235823 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28078144 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.281780142 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349365476 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.283884143 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.282496893 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.28157504 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.282957581 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.619075205 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.443846242 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.290036924 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.616467683 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.761529497 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.296233336 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.830361271 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.300578101 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.317379528 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.291640238 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28164124 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.283639756 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75411719 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.311297847 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.282006452 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.603274478 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.283839339 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.593057112 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.296908269 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310930767 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817004651 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.299125107 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.289764784 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.282932655 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.285401906 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.28299705 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.285733384 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.542916478 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.308887956 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.284467746 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.283211848 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.286327495 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285614638 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.283943319 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.286865323 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829830546 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.306279176 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.284522639 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286734058 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283836647 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.290395619 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.285162154 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.287220555 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543851578 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.285641015 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.291954034 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.284919781 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.285426834 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.29425447 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.532813337 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.292196665 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.577988396 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.292592704 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284695286 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.294579113 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284347956 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.343570294 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285049949 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.298122841 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.182800826 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.582640193 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.302146926 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.287296977 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285451619 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.285532958 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286964264 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288047854 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.307616861 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.291785471 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013472582 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.324082957 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.310448315 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.285495127 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.286455546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286730906 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.293913143 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288460127 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.568687408 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.54003781 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.446468977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.287593336 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.286430222 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.992799715 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.319214524 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464109752 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.305310446 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.286483871 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527649745 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.432592576 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.289187025 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.286401624 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.289805215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544776823 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.287741491 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.581046035 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.79564187 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.309465224 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288316332 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.022876292 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.010972816 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.294863139 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.292712986 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.605574781 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.301972866 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288296321 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.287704515 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.287774691 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.287751576 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.29157295 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.288951864 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.288758595 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.287496602 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.422400359 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476422752 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.305729733 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.291143149 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763991624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.300227186 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289710809 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.294237888 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.293200254 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.288885954 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.358341789 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.294638411 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.313721796 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.289791701 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.300338365 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828808832 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.291732415 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.296061773 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478762058 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943625461 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.311743089 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.290192799 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.294296414 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.167108513 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790697451 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.308822767 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.582167126 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.296687913 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.328239576 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290990699 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.378325505 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.78984285 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292106989 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.290261346 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908534595 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.306476703 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.835635356 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.290929407 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.290878944 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.848005336 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.307796416 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.291398537 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.290799446 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295471297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609949014 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.292991484 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.311131949 seconds)
  done (took 486.638873309 seconds)
done (took 629.93549245 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291872447 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.29704388 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.284343581 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.295719782 seconds)
  done (took 10.381219663 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300023732 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.297070026 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.298172157 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.298144213 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.298782542 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.296598156 seconds)
  done (took 9.000482642 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291029041 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.299570779 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.298359903 seconds)
  done (took 8.101719649 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.492649912 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.310026046 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.609974323 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.313456142 seconds)
  done (took 8.938036424 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.299928871 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.29902084 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.299955317 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.300973331 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.30194006 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.303091044 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.301491473 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.30084548 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.303091926 seconds)
  done (took 12.924166775 seconds)
done (took 50.558575084 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.430217089 seconds)
    (2/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.76120467 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.008339575 seconds)
    (4/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.139952933 seconds)
    (5/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.492407253 seconds)
    (6/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.642029637 seconds)
    (7/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.280384648 seconds)
    (8/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.281838022 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.536450002 seconds)
    (10/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.306058368 seconds)
    (11/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.287088219 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.333077433 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.636656258 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.33385373 seconds)
    (15/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.335919886 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.196342232 seconds)
    (17/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.283983786 seconds)
    (18/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.321382308 seconds)
    (19/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.668984628 seconds)
    (20/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.31461834 seconds)
    (21/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.28355398 seconds)
    (22/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.343525619 seconds)
    (23/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.282313824 seconds)
    (24/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.319589477 seconds)
    (25/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.29482891 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 2.311741765 seconds)
    (27/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.296616701 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.417235882 seconds)
    (29/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.876731954 seconds)
    (30/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.643077087 seconds)
    (31/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.282047721 seconds)
    (32/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.021963258 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.311164818 seconds)
    (34/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.306143903 seconds)
    (35/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.282986275 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.311591648 seconds)
    (37/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.288225086 seconds)
    (38/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.425199564 seconds)
    (39/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.391043624 seconds)
    (40/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.345927343 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.338907984 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.570519383 seconds)
    (43/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.321728744 seconds)
    (44/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.320989143 seconds)
    (45/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.283947678 seconds)
    (46/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.404898021 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.296435292 seconds)
    (48/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.710731967 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.926025184 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.353843283 seconds)
    (51/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.301222463 seconds)
    (52/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.383715982 seconds)
    (53/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.282629896 seconds)
    (54/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.497805587 seconds)
    (55/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.313171886 seconds)
    (56/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.398392554 seconds)
    (57/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.285211896 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.285924737 seconds)
    (59/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.14168898 seconds)
    (60/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.296344773 seconds)
    (61/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.282408737 seconds)
    (62/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.106433703 seconds)
    (63/286) benchmarking ("sort", Int8, true)...
    done (took 2.29639535 seconds)
    (64/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.657045301 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.298042907 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.285119746 seconds)
    (67/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.408368201 seconds)
    (68/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.286302306 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.889280793 seconds)
    (70/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.323959445 seconds)
    (71/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.76578059 seconds)
    (72/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.155822222 seconds)
    (73/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.905295965 seconds)
    (74/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.298129568 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.172585939 seconds)
    (76/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.546616787 seconds)
    (77/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.312582412 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 2.317177127 seconds)
    (79/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.769752642 seconds)
    (80/286) benchmarking ("sort", BigInt, true)...
    done (took 2.298253932 seconds)
    (81/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.322446753 seconds)
    (82/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.298546476 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.175561756 seconds)
    (84/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.286147231 seconds)
    (85/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.385793664 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.31475291 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.299759911 seconds)
    (88/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.655621771 seconds)
    (89/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331617442 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.303813227 seconds)
    (91/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.16761446 seconds)
    (92/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.324471201 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.287607388 seconds)
    (94/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.298934852 seconds)
    (95/286) benchmarking ("sort", Int8, false)...
    done (took 2.318021893 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.293831452 seconds)
    (97/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.303890154 seconds)
    (98/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.022794019 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.184726206 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.689870564 seconds)
    (101/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.307538084 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.924373684 seconds)
    (103/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.301621476 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.515519489 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.326639158 seconds)
    (106/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.285833627 seconds)
    (107/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.325706409 seconds)
    (108/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.284985523 seconds)
    (109/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.307043082 seconds)
    (110/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.292029344 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.126065702 seconds)
    (112/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.360819917 seconds)
    (113/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.405573658 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.806501281 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.32243374 seconds)
    (116/286) benchmarking ("sort", Float32, false)...
    done (took 2.297876545 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.292668196 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.563232782 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.314395623 seconds)
    (120/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.292476881 seconds)
    (121/286) benchmarking ("sort", BigInt, false)...
    done (took 2.303863233 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.013208617 seconds)
    (123/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.388022954 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.583342022 seconds)
    (125/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.28733772 seconds)
    (126/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.483380548 seconds)
    (127/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.32939379 seconds)
    (128/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.324887309 seconds)
    (129/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.410957525 seconds)
    (130/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.306030902 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.407513926 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.304454347 seconds)
    (133/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.305266202 seconds)
    (134/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.808795804 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.12296042 seconds)
    (136/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.334798609 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.024203712 seconds)
    (138/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.413319935 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.328915484 seconds)
    (140/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.289090598 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.312196338 seconds)
    (142/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.293563776 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.302517893 seconds)
    (144/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.388517849 seconds)
    (145/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.409793745 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.311147954 seconds)
    (147/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.542004464 seconds)
    (148/286) benchmarking ("sort", Float32, true)...
    done (took 2.302150775 seconds)
    (149/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.295321172 seconds)
    (150/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.295733614 seconds)
    (151/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.38469912 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.014243136 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348497096 seconds)
    (154/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.289176598 seconds)
    (155/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.32943585 seconds)
    (156/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.01806437 seconds)
    (157/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.301109354 seconds)
    (158/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.295236594 seconds)
    (159/286) benchmarking ("sort", Float64, false)...
    done (took 2.304595657 seconds)
    (160/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.291125965 seconds)
    (161/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.310017399 seconds)
    (162/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.105002191 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.296295998 seconds)
    (164/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.305896119 seconds)
    (165/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.336117415 seconds)
    (166/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.11315329 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.388021843 seconds)
    (168/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.385088759 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.291216028 seconds)
    (170/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.309764744 seconds)
    (171/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.02928676 seconds)
    (172/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.51339222 seconds)
    (173/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.291093745 seconds)
    (174/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.311299108 seconds)
    (175/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.293133649 seconds)
    (176/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.305134949 seconds)
    (177/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.346368935 seconds)
    (178/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.292231563 seconds)
    (179/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.291737989 seconds)
    (180/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.388345057 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.331349305 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.347067049 seconds)
    (183/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.428243371 seconds)
    (184/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.409410369 seconds)
    (185/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.489207991 seconds)
    (186/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.291963603 seconds)
    (187/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.254814107 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.322027748 seconds)
    (189/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.292433715 seconds)
    (190/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.31333746 seconds)
    (191/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.372545453 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 2.304338162 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.363009056 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.647678124 seconds)
    (195/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.317253385 seconds)
    (196/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.290893789 seconds)
    (197/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.292813167 seconds)
    (198/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.346375098 seconds)
    (199/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.292028508 seconds)
    (200/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.862201345 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.507737761 seconds)
    (202/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.324436166 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.288283811 seconds)
    (204/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.291944566 seconds)
    (205/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.315236863 seconds)
    (206/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.566206343 seconds)
    (207/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.292954498 seconds)
    (208/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.495461221 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.312278056 seconds)
    (210/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.292677895 seconds)
    (211/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.303485868 seconds)
    (212/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.316411706 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.330431216 seconds)
    (214/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.071012984 seconds)
    (215/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.493243981 seconds)
    (216/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.31036411 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.318535582 seconds)
    (218/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.293991646 seconds)
    (219/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.733878336 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.348679116 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.292858648 seconds)
    (222/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.303080617 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.295187304 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.334079067 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.370250768 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.394700203 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.306526373 seconds)
    (228/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.841536969 seconds)
    (229/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.297279093 seconds)
    (230/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.322560453 seconds)
    (231/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.431083235 seconds)
    (232/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.370720599 seconds)
    (233/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.295411091 seconds)
    (234/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.295707531 seconds)
    (235/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.388637295 seconds)
    (236/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.317338173 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.509185013 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.718317442 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.724841426 seconds)
    (240/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.311864006 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.335360428 seconds)
    (242/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.296112425 seconds)
    (243/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.296623583 seconds)
    (244/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.297427687 seconds)
    (245/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.331019363 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.693221002 seconds)
    (247/286) benchmarking ("sort", Float64, true)...
    done (took 2.309199273 seconds)
    (248/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.892247201 seconds)
    (249/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.362777572 seconds)
    (250/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.413414664 seconds)
    (251/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.296534347 seconds)
    (252/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.305050787 seconds)
    (253/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.294536095 seconds)
    (254/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.393029553 seconds)
    (255/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.654028283 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.310014281 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.3055366 seconds)
    (258/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.313962836 seconds)
    (259/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.435938096 seconds)
    (260/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.29743596 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.150436391 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.321606447 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.391726745 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.392223128 seconds)
    (265/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.297320255 seconds)
    (266/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.395238714 seconds)
    (267/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.911820831 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.425818021 seconds)
    (269/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.246959102 seconds)
    (270/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.176469075 seconds)
    (271/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.140160147 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.308180622 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.32248513 seconds)
    (274/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.296382815 seconds)
    (275/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.336189192 seconds)
    (276/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.299354944 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.353468846 seconds)
    (278/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.410718317 seconds)
    (279/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.29739545 seconds)
    (280/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.421757891 seconds)
    (281/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.247016203 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350293024 seconds)
    (283/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.375669794 seconds)
    (284/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.319859506 seconds)
    (285/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.300629585 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.338823064 seconds)
  done (took 557.137296013 seconds)
done (took 558.351790149 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.343828663 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339754049 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.32122694 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.343961966 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.434416573 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.497609035 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.332672696 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.324846631 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.369531369 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.372534162 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.321203271 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.497959271 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.323961943 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.322200962 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.322328497 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338709746 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.311788683 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.329739053 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.338820131 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.331817956 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.339084487 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.32171911 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.372567309 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.497361766 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.327990234 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.326925322 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.326536022 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.343120643 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.43515913 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.326349002 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.326195797 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.336563864 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.314710628 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.325826571 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.3197238 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.343294585 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.336350493 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.335352917 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.329463532 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.356472959 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.319729279 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.325249465 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.327191207 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.326198462 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.32617819 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.329934302 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.326677851 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.332245533 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339116474 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340250221 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.32519028 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.342792955 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.328945752 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.32632138 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.335479089 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.325247756 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.329390999 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344640297 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.345654119 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342935921 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.32488791 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.334981355 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.32880023 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.343763502 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.333484128 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.315691627 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.328923403 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.329982339 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.32297944 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.330839133 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.320008706 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.333766153 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.329023069 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.341950432 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.359088644 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.318186868 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.324683677 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.325707503 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.3344295 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.3264441 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.337122333 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.340405079 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.33186308 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.328753582 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3424209 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.504612924 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.338525217 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.32998894 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.339160172 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.347670189 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.336700809 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.338193236 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.33169152 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.322745661 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.338321716 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.331688902 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331352593 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.330722946 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.334042763 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.339538227 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.323470428 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347068394 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.325657783 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.325915122 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.328643836 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.343727995 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.327223941 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.329863429 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.350993332 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.375685987 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.330468104 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.32995724 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.338261307 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348043443 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.33929083 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333141595 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.325087591 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.33147986 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.324196508 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.34367231 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.331623576 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.327941144 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347358466 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.331382188 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.328892478 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.324053014 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.338256645 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344067733 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.450373949 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.341474608 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.361182135 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.329331101 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.333585987 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.359170381 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348299453 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.361569795 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.333581029 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348481804 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.346234353 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.327162165 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.341645839 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.342359207 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.332791968 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.336144688 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.327242166 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.360669951 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344840844 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346105757 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.353307046 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.452702627 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.32897447 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.319859787 seconds)
done (took 221.242666157 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.391598627 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.327230124 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.412835135 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.327979661 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.428622247 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.430136341 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.32593997 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.326147152 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.325004719 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.710898121 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.32792154 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.326864071 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.328494425 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.328806808 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.414416414 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330602535 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.326609678 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.672196956 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.329862222 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.400651093 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.327272688 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.326028556 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.329790378 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.710946254 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.328419262 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.326217716 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.400566883 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.331187494 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.674982422 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.324557976 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.326479992 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.67518441 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.420741356 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.347085684 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.339291069 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.336805825 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.430878083 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.348379084 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.412176391 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.411435717 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.416161164 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.368866109 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.324832945 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.328597419 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.331924553 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.331839945 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.330074405 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.358598257 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.329516265 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.329499404 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.674735929 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.342072503 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.337998477 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.32909586 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.328971 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.352034687 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.329865277 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.332281471 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.423449945 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.33275455 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.3950348 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.71203556 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.713393167 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.333303703 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.329861604 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.329810678 seconds)
  done (took 104.21052053 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.39745518 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.406407017 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.442176871 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.336432348 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.383961944 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.447044868 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.334547373 seconds)
  done (took 10.991673673 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.339881058 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333510345 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.384088476 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.383186076 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.331781963 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.546090673 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334346202 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.345055056 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.331694059 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.412691807 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.334412197 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335318094 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.341083541 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.331151808 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.38346536 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.346648054 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.449356551 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.336481962 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.334871631 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.486102067 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333501676 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.341802765 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.407890725 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.346215641 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.3360112 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.340295279 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.24975989 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334687483 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331807822 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.33417737 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332057753 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.436315117 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.336150023 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.334340517 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332949332 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494901606 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.335058926 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332462606 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.335928219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.336383483 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.336012857 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.335325883 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.336675148 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.333694539 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.3371247 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.359924076 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.33529663 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.335441821 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.335991317 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.336950275 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.411084833 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336595189 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.334177877 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.332611626 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.415468627 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343215435 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.338315202 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.333580276 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337072391 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335096411 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.487043439 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.385153339 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.338116372 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.385030815 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337509695 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339141168 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.337525274 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.337061884 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429144319 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.338226042 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.386094206 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.33540412 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.558637672 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.361253111 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340709019 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.340469929 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.340665416 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338073373 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.33463004 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.343642105 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.337055112 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.339380535 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.344623239 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335101786 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336086711 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.52131325 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.49541599 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.336180112 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.350653905 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.346029881 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.337030708 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.413660315 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.338905987 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.336889641 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391788006 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455229548 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416713267 seconds)
  done (took 138.359204316 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.343334912 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.346807522 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.342914752 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.361690401 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.341675314 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.338947919 seconds)
  done (took 9.325530036 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.342751116 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.341383897 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.338390727 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.339620629 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.340408008 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.340498481 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.341565798 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341522788 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.343576811 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.341279652 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.34015968 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.341488988 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.342628764 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.340591255 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.341342199 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.340966091 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.340799344 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337894693 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.341455902 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338764284 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.340318808 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.341423309 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341041878 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.343139049 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.345532583 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.342169239 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350535825 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.342731411 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.341700214 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.350915682 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.343679087 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.343592711 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.343515574 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.347707707 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.346277805 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.343061563 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345630628 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.342964309 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.339905164 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.343396872 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.343554312 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34325067 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.340863657 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.344046502 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.344733948 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.34759184 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.347294346 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351727957 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.343739236 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.34512254 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.344407699 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.342127519 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.344671372 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.344164601 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.346841663 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363809523 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.347798332 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.344693053 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.34565625 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.346102134 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.344956204 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.345753958 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.346565228 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.348633946 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.342363853 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.346038718 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.34562487 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34645449 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344644232 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.344837908 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.345899442 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.341242186 seconds)
  done (took 99.015549283 seconds)
done (took 363.143119296 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.752062697 seconds)
  done (took 4.006915093 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.437462011 seconds)
  done (took 3.695630393 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.499877733 seconds)
  done (took 21.764447169 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.379924025 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.347466495 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.359055259 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.346122531 seconds)
  done (took 10.688959613 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.566115386 seconds)
  done (took 3.82304038 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.342644137 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.338070184 seconds)
  done (took 5.940254025 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.631937599 seconds)
  done (took 3.890551267 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.70510529 seconds)
  done (took 3.969442358 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.370074254 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.356058756 seconds)
  done (took 5.992296074 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.326611249 seconds)
  done (took 3.583000428 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.568158111 seconds)
  done (took 16.825650221 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.337925764 seconds)
  done (took 3.598344035 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.365172384 seconds)
  done (took 3.622467081 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.762805393 seconds)
  done (took 6.020485365 seconds)
done (took 98.67824332 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.33904556 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.348088322 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.346749305 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.345369963 seconds)
  done (took 10.636786493 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.381751309 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.381317217 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.382460785 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.392115214 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.382808283 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.380944005 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.373672196 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.373536633 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.392367031 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.385257534 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.383870562 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.383201667 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.381439729 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.373950722 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.383596871 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.383125612 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.392035789 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.383100991 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.373916818 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.384585403 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.349306867 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.393857145 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.384776907 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.349222364 seconds)
  done (took 34.384908289 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.844489432 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.421834484 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.502138807 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.403257003 seconds)
  done (took 7.430687888 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.401385381 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.403208334 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.41231335 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.453652622 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.481288486 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.412762604 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.37702185 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371340133 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.357837414 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.40387121 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.477765768 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.420221995 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.487919099 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.350174073 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.53628618 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.350098137 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.350095483 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.402856875 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.454494549 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.480627133 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.350461579 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.401244924 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.405511883 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.419898131 seconds)
  done (took 35.22360448 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.349530658 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.367215598 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.349558939 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.349329573 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.358647204 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.349243584 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.350743248 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.351309138 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.35038741 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.355007438 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.348564471 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.363071782 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.349397776 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.349887449 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.357000446 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.351717324 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.356076215 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.349704907 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.350566122 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.355986248 seconds)
  done (took 28.3250242 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.344946963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.344709411 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.696609264 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.601023288 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.346602606 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.34876881 seconds)
  done (took 13.945260678 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.419905337 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.551996635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.35206779 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.695413906 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.774263332 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.352875693 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.352380255 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.59195547 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.8962625 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.874964974 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.410824858 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.418077542 seconds)
  done (took 19.954580902 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.3506751 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.348643544 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.350478346 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.365338474 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.406078856 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.359392008 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.360238901 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.345635614 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.408728685 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.411678233 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.356843193 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.407034042 seconds)
  done (took 21.735112067 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436535947 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34729428 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352518398 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372599397 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350023002 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558964311 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381108448 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05320624 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.368440839 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620592242 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345339145 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440034631 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604739613 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352507367 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350280103 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.323353889 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575725231 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83608932 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352189501 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350866606 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37962738 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34709419 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351794624 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.563432068 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56770689 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34890483 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609863342 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348850351 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625227559 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366776259 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360700489 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348512515 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623592562 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002960123 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462164499 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558499702 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362730847 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354536845 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.349650852 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.35381837 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364889776 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35415368 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360782346 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350380257 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349276069 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359805301 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08027897 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.373720272 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.347774734 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3503425 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605582743 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450481024 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35590652 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349459778 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391171776 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355369393 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.355953614 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445144202 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924713807 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35474862 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369488349 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.355844308 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355076086 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357645071 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971969923 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.361646526 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.354688478 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355550552 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351314747 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351860031 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372163065 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352795022 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.376218601 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352226028 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042364726 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358397167 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360340865 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902091779 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359767276 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.356325894 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581337033 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352925219 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352341326 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.350673796 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353545498 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056725238 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363705198 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.351474005 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378089503 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058430814 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581649816 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37471644 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376778913 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.576414492 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.339163185 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351901341 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.364452375 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360351611 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37556996 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07839859 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37154569 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.359077672 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611188467 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.566659755 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354158191 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.344305803 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832870931 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383427037 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.372746723 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366190225 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568190862 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.93116776 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374557336 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359802905 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377136029 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353924015 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095922527 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366693789 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.361060411 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355675115 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620725525 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.136552448 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359365407 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42245655 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360760302 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356743398 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361233522 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361022486 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355391789 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.557787731 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376660003 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.372268185 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.357503872 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356365861 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.352843337 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363718021 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.361694412 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579570636 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365973942 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636463054 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35742878 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356226189 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357735839 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.580618563 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.367773278 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.367437252 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615204631 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369707329 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373061455 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372127943 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37667897 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457239348 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381198565 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.362425896 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616995749 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.362531484 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.362662915 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364411666 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36478699 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366894964 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.365440172 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375312031 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935933495 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340699589 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36607412 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248556436 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.372740279 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427800536 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364529447 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569740491 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368769405 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374222284 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.368989009 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.3683645 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584905817 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370237911 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.364312891 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442533937 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.832758235 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.950193177 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378104068 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.36007538 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.35701794 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.358071408 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360514787 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359771965 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360237865 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570404318 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376460817 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364732041 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939943461 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366200411 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364762672 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.372644476 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373934619 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.366372566 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362289227 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.368505738 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3765279 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372273271 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.377859999 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505725743 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.376807316 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361416375 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.87945309 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366193869 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362001171 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361892672 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397115138 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369121201 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173424335 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621707041 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375045298 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616057311 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372352075 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.383461204 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.361597902 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361609881 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370688641 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.37940866 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390967739 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.373402072 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3714332 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368576455 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932573741 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08297184 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894748696 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379054028 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.364340342 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36544133 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092364298 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380734375 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363053029 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593939745 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075571369 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382733524 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840481479 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.37815809 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11458233 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616995442 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594942316 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377005722 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.365525821 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628359224 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582126234 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398727751 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368900022 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367696851 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.350778376 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917325431 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382603453 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449473745 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077623232 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38452748 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369647613 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.4289677 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385735309 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776007839 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382155018 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364491648 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373679489 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376469016 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172174025 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372159038 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366121571 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985664424 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370796746 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.845407601 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384541894 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578123522 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.381214424 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.369793696 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.365079238 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.371222692 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.6233502 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618268859 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370783472 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366357854 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902458395 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.226726942 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.373502022 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366823126 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111512574 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371668338 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647189699 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.371947991 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.368636953 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371243122 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367432844 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367629242 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.365218028 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375225235 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346299242 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858026469 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.389345916 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372914817 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385478073 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21591752 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625179436 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.382113428 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944127472 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597565852 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370585578 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411686411 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.372047558 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373915074 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.358881579 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368662301 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604388735 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413775814 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.596480953 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38073799 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.360270644 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384577025 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585556405 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368770866 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380379595 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61329327 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.370220632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.391737363 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088731744 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400032854 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377635277 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375880751 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371228801 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395466903 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439238286 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583711861 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.385442838 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.379599344 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777731455 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396845171 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376477361 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.383879815 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464039555 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370876269 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.390089244 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.145340044 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949885072 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103693963 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.956312204 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636249885 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378368361 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374765739 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371262438 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518620248 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371068719 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645317486 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370478383 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.38250015 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398082509 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377143247 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391860547 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585714154 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645848719 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371346004 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374356507 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37678569 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.372851521 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38231135 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.583141771 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86695806 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9353635 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378509753 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371456575 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.110858656 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664191298 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372448496 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374284438 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37308715 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.373960752 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.399322177 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.383825169 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371660018 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524825686 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624435794 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045601096 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.402410449 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.400165209 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.148225455 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386642185 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632182765 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37067367 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59011114 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963911521 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071663482 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641405046 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442917067 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588849905 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.377834592 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523169245 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.378120191 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377307054 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375656659 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220725816 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.371536706 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.384848622 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96153844 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642867938 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.379587869 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.377735924 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403173066 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.385564351 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600199624 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090340196 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601799662 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38528083 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383100622 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375308027 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961780012 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642298969 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382053386 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.380841261 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615182918 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612007791 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401383182 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.828052476 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.374969547 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935676964 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.35180129 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398968973 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385714219 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.076584466 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96584612 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.380456031 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876798734 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383398485 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390696737 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654773917 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.381367971 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390405725 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655511448 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.381280055 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375993852 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597961993 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.964135098 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134390161 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.382508003 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403664747 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.379583844 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37797556 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408000102 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382486667 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378287 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.801540471 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395995914 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378374481 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390163021 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.384575124 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394612226 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.379218713 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378279014 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.38573077 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.366341897 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.375931149 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392659423 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479690145 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939808017 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401555608 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.056193666 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.708289871 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634914044 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378889956 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.369477807 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.384003665 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378902101 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378552349 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379071787 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391848272 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943800244 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.389221183 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.3927953 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383531484 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.595925554 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591923034 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381006127 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618409894 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383803955 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399239445 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.36524519 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379450116 seconds)
  done (took 967.312698075 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421929266 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.395482785 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.398941369 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.4593788 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435600027 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.394453678 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.416191708 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.493607497 seconds)
  done (took 20.711563877 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.38065719 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.394651059 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.395034912 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.394152683 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.396001866 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.845566603 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.406338394 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.393582996 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.393219196 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.384496483 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.397498885 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.035237471 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.396351857 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.390393171 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.381306149 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.393903773 seconds)
  done (took 32.677915005 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.316641726 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.511038693 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.218383287 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.408253503 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.426734214 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.383738922 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.594858782 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.404405661 seconds)
  done (took 26.559462343 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.393453592 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.393550326 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.393156768 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.393565394 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.39380639 seconds)
  done (took 8.26304831 seconds)
done (took 1228.419363281 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.386820238 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.388704634 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.386871429 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.388048104 seconds)
  done (took 6.849233634 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.370982224 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.368662 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.370385834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.389658476 seconds)
  done (took 9.798395105 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.069454244 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.010305161 seconds)
  done (took 5.376700961 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.383258697 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.147003546 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.121099869 seconds)
  done (took 7.950477746 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.680085138 seconds)
  done (took 2.979012805 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.801166756 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.772294716 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.572904977 seconds)
  done (took 6.445662695 seconds)
done (took 40.696220957 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.383120366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.628789908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.539163463 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393875814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.545043248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.538864718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.120512921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.384889009 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.392614686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390148817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.396010466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.544402845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.175069712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.631978852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.175503569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.630657684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.545705552 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.394529005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.383271371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.383643586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.121346302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.393452487 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391058503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39220902 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.550293947 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.528577949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.385874671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.635632937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.390217353 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.384756872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.533537075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.385904829 seconds)
  done (took 82.969445669 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.392147686 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.383460046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.392313783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.385542334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.386184482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.411478539 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.3873615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.384895238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.386631431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390000362 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.385423358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.390379129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.387530333 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.393608639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.388135305 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.394690621 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.38643832 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418455279 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395412626 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.385715914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.387682074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.386831266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.385656203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402652795 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.392569692 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395126109 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.390480083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.39014394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.38685663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418345065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.399664665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.387161881 seconds)
  done (took 77.84846941 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.390486181 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.389183151 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.389320457 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.38674462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.403177551 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.391583241 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.385935877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.388562968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408464333 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.388154564 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394976363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.386658556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.387881614 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.388147286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.407998598 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.391002555 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.387556903 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423603644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388054093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.388022932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.404931548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.390396245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.396612923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.392479056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.406398494 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.390937307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.391077129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.394379917 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405010594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.3915657 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.392385628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.392822969 seconds)
  done (took 77.916347822 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.584427185 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.395708018 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.396901594 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.329502572 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.396173124 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.39675425 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.389336991 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.586535251 seconds)
  done (took 14.776863081 seconds)
done (took 254.80714891 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.387242506 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.392089998 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.599397051 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.423379168 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.38832736 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.438941236 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416923222 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.586392834 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.342633312 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.594702453 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.39487472 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.417477951 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.389802923 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.417990369 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.668974379 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.521068835 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.308367161 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.408646917 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.733530006 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.412008128 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.662956346 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.400253775 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.589193309 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.349277612 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.416930222 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.401250715 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.389977035 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.292306184 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.418390254 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.738969554 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.415295586 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.385898041 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.478129982 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.46286871 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.522127456 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.512754963 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.408530948 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.460971373 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.602635482 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.392149833 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.40860054 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.151107984 seconds)
  done (took 83.408111236 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.399093969 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.509392067 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.399608801 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.399974829 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.400055852 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.505455637 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.484180029 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.401099558 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.399639783 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.39901615 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.400395615 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.399705741 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.398957787 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.400163108 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.400256495 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.400506255 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.399340433 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.402918928 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.402392721 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.435194764 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.511674119 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.401831028 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.394991671 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.400941853 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.485780674 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.505454103 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.400619553 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.394372084 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.434231088 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.400631029 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.402150785 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.439194668 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.400312968 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.401976483 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.50550754 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.484710564 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.402655774 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.397617007 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.503009359 seconds)
  done (took 56.911922836 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.403552974 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.650693952 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.821946741 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.412987017 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.402808838 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.407834188 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.479959552 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.404773064 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.406298808 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.406905614 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.576771715 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.404291902 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43714148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.84823258 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.409794083 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.403802135 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.403474647 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.403668173 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.6662666 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41664282 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.501371579 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.412179455 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.481026418 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.419941651 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.427020285 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.403878417 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.410413503 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.99051165 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.414530346 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.572485097 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.18423073 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.483205427 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.933087181 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.846794962 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.189013102 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.410319848 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.405803967 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.584186343 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.409494429 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.405365367 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.480380994 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411924977 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.830930004 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.086531232 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.428024627 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.405347407 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.018166819 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.577291082 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.642961351 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41869563 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.861446233 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.412904445 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.404524925 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.408224377 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.64355125 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.41602297 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.405957905 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.018834754 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.435782054 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.48279015 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.414709146 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.406104917 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.673324836 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.413441535 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.648796761 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.411752555 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.414747848 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.426101225 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.830186339 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41492041 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.11364309 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.430522266 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.406806124 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.574449601 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.654651114 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.047956898 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.414647172 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.67244473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.946039907 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.48164563 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.415376242 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.990826155 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.486698132 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.417163778 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.408955911 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.40932595 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.407977158 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.453952726 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.481387214 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.067260859 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.098454018 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.049340074 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.507218249 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.425071173 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.409717131 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.028398548 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.43307927 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.40900896 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.838804772 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.112195236 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.433675797 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.416487952 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.103496423 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.433697686 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.485802384 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.423127597 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.839270798 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.414038587 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.455194976 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.407728268 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.416248811 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.432371629 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.487098473 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.420427098 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.409844305 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.076878986 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.60944624 seconds)
  done (took 185.668404442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.414831911 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.403850548 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.411698043 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.402611 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.403023129 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.411716614 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.403295535 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.40420471 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.40941056 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.408041638 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.406134326 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.407782741 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.405645167 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.404305325 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.417524131 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.41248346 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.40518317 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.406788213 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.404961326 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.404692093 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.406166172 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.430237169 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.405344296 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.405874422 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.407451796 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.404163954 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.411849406 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.409699682 seconds)
  done (took 64.745182013 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.412683183 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.957531127 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.413363377 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.542368498 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.434471996 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.411159832 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.538508888 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.468917226 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.414737968 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.410062846 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.410259382 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.706538606 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.41634861 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.913082125 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.606086979 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.540900197 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.916665282 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.436180104 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.410495176 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.410619991 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.542296711 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.422688254 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.705484569 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.959762765 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.415384574 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.960036113 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.405509668 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.413413943 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.411364382 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.966799735 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.416367847 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.708642712 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.489600108 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.477293047 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.965126028 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.917001509 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.938322411 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.564266603 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.418097126 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.412241631 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.41217923 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.404724144 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.964058311 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.415893947 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.415446393 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.957993556 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.432207865 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.416586099 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.420415442 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.412153978 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.4720207 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.474652515 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.715104025 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.969648232 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.489114962 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.430763025 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.542392775 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.779941232 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.420719036 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.94936329 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.41231695 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.974328692 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.439364041 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.406209434 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.415224354 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.419804377 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.561336933 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.548182736 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.923922755 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.436940748 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.920733081 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.581392388 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.417721022 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.414916881 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.417215885 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.973324979 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.926445766 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.583279357 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.550886944 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.610083235 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.411049844 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.416138821 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.406654807 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.491889539 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.4189225 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.974665353 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.943468375 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.439893711 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.41849859 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.418767915 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.418232804 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.588679878 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.980620707 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.498374604 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.921209515 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.740125728 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.722415771 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.424390553 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.475985479 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.438602272 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.720883963 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.423841874 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.473229638 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.843482955 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.724083766 seconds)
  done (took 167.765443355 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.65601054 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.441805328 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.505201687 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.575077207 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.012848077 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.00588143 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.41565702 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.5586428 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.52881246 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.674492073 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.418728961 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.512094671 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.629440718 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.495081554 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.129568612 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.490850697 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.512419537 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.57798221 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.56150456 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.418375483 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.052991836 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.726782026 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.605578897 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.450322583 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.522327626 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.203427108 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.996125559 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.993092145 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.594159146 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.424110517 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.933047993 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.432993379 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.334624493 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.086798061 seconds)
  done (took 65.801730641 seconds)
done (took 625.604295735 seconds)
SAVING RESULT...
DONE!
