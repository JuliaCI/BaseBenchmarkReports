cset: moving following pidspec: 4047
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.385445718 seconds)
loading group "string"... done (took 0.580556814 seconds)
loading group "linalg"... done (took 7.201289947 seconds)
loading group "parallel"... done (took 0.157447194 seconds)
loading group "find"... done (took 1.145439367 seconds)
loading group "tuple"... done (took 1.793517923 seconds)
loading group "dates"... done (took 1.226246738 seconds)
loading group "micro"... done (took 0.217612648 seconds)
loading group "io"... done (took 1.023191405 seconds)
loading group "scalar"... done (took 37.634084578 seconds)
loading group "sparse"... done (took 11.840177725 seconds)
loading group "broadcast"... done (took 0.943863143 seconds)
loading group "union"... done (took 12.109987057 seconds)
loading group "simd"... done (took 4.486322283 seconds)
loading group "random"... done (took 8.747580745 seconds)
loading group "problem"... done (took 1.875035727 seconds)
loading group "array"... done (took 21.051332955 seconds)
loading group "misc"... done (took 1.690454166 seconds)
loading group "sort"... done (took 3.475393143 seconds)
loading group "collection"... done (took 17.280984191 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522340948 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124987827 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119204409 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120198426 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147335624 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112816976 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125239076 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086369111 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.876347395 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149794711 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118006673 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430173449 seconds)
done (took 5.274155998 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176732581 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083294432 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083408242 seconds)
  done (took 1.330091299 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065521409 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122768486 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067386522 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067153289 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066937453 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06635226 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066912515 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066706577 seconds)
  done (took 1.689259034 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073364369 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069450759 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066619845 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068673544 seconds)
  done (took 1.443076671 seconds)
done (took 5.882825676 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.78661991 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20348531 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187515255 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.416190033 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130778022 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15894808 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649157116 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309917242 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18904717 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080254904 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109048643 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328741119 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111093519 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.629627705 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074809717 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090752718 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137562177 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43227911 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067905646 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082543329 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088517456 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127717083 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0849308 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074547961 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146437625 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067471707 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136558611 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080527911 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066223576 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213935214 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172335187 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650137979 seconds)
  done (took 10.289055516 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096059054 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097215952 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069314732 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122880283 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097431114 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070698954 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070815997 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067869323 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086986514 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12783587 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089223058 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101202229 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065661238 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069178796 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085492267 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203849141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081044483 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08263658 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070708914 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075834902 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105354516 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078685264 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077052406 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077166527 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129510668 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181141851 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09967497 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097672735 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066555 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079649332 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115367957 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125293015 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066746117 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066195239 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12391277 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094692178 seconds)
  done (took 4.617028957 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.000679633 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143544093 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090411451 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135238176 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065079662 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109483715 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065972014 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081120617 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209586229 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.464307842 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.591976797 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111788146 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10405857 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067670537 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068547776 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084179617 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066062402 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.505021381 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09644211 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107994217 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082066815 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070848094 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06936139 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353879932 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068438882 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064487533 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068894666 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057886313 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091988864 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125953037 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068767109 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.947549087 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126330975 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066523724 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100735841 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162670343 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087961878 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.277098201 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068570126 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064930832 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152756443 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070727877 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067178969 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084532031 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103568867 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113978622 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066274826 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066817226 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165931254 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064965379 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080181961 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.637845902 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152420264 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076070096 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06473144 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255939064 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088729466 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070049421 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065133464 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174302995 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065311003 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12894923 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0680634 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067386966 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068798057 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070175112 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359846372 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066105632 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898182318 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069441735 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07746081 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069718549 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069572557 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073107905 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072947358 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088144596 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066973745 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075327473 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066664642 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066468534 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067262886 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083872913 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064699704 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.382260883 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067310741 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068759475 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065212287 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090199322 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097936309 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067124648 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065375127 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100294708 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068820613 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066443488 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107333792 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066591875 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083820443 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06957171 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113523726 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06833892 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.184927434 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067450814 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095802637 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070618042 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099154187 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080290821 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071070411 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.426515888 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065583098 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065501813 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068627738 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066304404 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068766077 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067270466 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079674908 seconds)
  done (took 21.188408122 seconds)
done (took 38.259180815 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235948714 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078039884 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076736124 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074287521 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074310807 seconds)
  done (took 1.792490882 seconds)
done (took 3.030364295 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123161163 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100848228 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064943105 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098549655 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064669789 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102528525 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101189198 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082419819 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100994831 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064794468 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098464946 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064393114 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064940314 seconds)
  done (took 2.386303174 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083893658 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08470229 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070256405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083672666 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06331256 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082910896 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082060312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090181129 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081691991 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073092752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064351278 seconds)
  done (took 2.091441234 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083158043 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084315578 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069944869 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082861193 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064142253 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082659282 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082487719 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086823902 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082183281 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074672905 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064670922 seconds)
  done (took 2.095547222 seconds)
done (took 7.799617193 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078629912 seconds)
  done (took 1.302740847 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593484779 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.113635202 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082591019 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11165859 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189828682 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118868794 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271676869 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086863102 seconds)
  done (took 8.980793946 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103300457 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070086197 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068396802 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069833375 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072095304 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072022929 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067994646 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071371623 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071319622 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068425221 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068894254 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069056854 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071765042 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072153836 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069073735 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070689649 seconds)
  done (took 2.454385256 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092609029 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091990943 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074068346 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075144119 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072122273 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072568662 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074092699 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073648206 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070856959 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072125698 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074610896 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073446675 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072049436 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064824056 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073982196 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07543134 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071091463 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074056421 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074281865 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075389439 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074105045 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064098713 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071506117 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07360923 seconds)
  done (took 3.113823748 seconds)
done (took 17.088825379 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116956228 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072966438 seconds)
  done (took 1.416898341 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082692857 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083925018 seconds)
  done (took 1.403965735 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083823442 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065275399 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091171589 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078149934 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066394691 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065847408 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088493954 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066236252 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065901233 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066283603 seconds)
  done (took 1.975169947 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069481446 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07757543 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070683835 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081306992 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073728069 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063918245 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071895428 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067813467 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077317282 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06302988 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071177294 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082731344 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070973273 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084794904 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071873493 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068590527 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071179693 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068103941 seconds)
  done (took 2.547545627 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066285496 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066940891 seconds)
  done (took 1.374921278 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06805694 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063806682 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067400117 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066529777 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064060582 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062588174 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063816009 seconds)
  done (took 1.695089478 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385901528 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11345268 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311713022 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071103184 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.0826248 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256627955 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066060669 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070915791 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07139423 seconds)
  done (took 2.712934393 seconds)
done (took 14.373418067 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081171362 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086749318 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097016398 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375261183 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091884309 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066161864 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114933346 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187628556 seconds)
done (took 2.35343539 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213631188 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.639340853 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403670783 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205139833 seconds)
  done (took 2.494217156 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347121661 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08802772 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059666227 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066837225 seconds)
  done (took 1.81594055 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068581518 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069886377 seconds)
  done (took 1.390533105 seconds)
done (took 7.170059806 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068044033 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067140816 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063757659 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065999129 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0871244 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063948277 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064667389 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064256452 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066820517 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066491095 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069164305 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06707717 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066110095 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066480157 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063771621 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063937797 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067257051 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063844062 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064336258 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063862041 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064191426 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066255432 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064663763 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063940474 seconds)
  done (took 2.878372812 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086703942 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065818029 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07160753 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071272899 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06949046 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071772678 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071337775 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066071692 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071433754 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068602327 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069369501 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070127129 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069020547 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069335054 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06875444 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070105921 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071953651 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066607896 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068848082 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06991543 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071490391 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066483441 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070032577 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071443374 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069491095 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071226164 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068718419 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066335013 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071337991 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069014571 seconds)
  done (took 3.366059869 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071467767 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063271396 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063959273 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071347919 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064099151 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065112739 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063199542 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063996098 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064600078 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063573079 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064936257 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063560136 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063848396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06476011 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064393861 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067287388 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080154807 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063927333 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063906455 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064721666 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067019725 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0638702 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064379246 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063821933 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064121026 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063913191 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064768095 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063731976 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064562459 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063689034 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066911833 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068101398 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063861327 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070957309 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067315626 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063809753 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067669549 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063322926 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064311053 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063435235 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064029607 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063318338 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064132394 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071190068 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064035685 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065172987 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063670583 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064888667 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064361463 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.179000171 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063145592 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06342644 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065883049 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065289985 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067806853 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063042073 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064435185 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063442394 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064506882 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063343603 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06291059 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062864298 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065726161 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064208583 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078653273 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070690064 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06297871 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064758928 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064018245 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066004337 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06494133 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077408629 seconds)
  done (took 6.095985111 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090472011 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086995661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066261197 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065442508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061504927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064464715 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06980844 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064177573 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065486004 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082267799 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064480205 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065075366 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066102852 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068245691 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064460358 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065220847 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072626231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061604719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063888526 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067590866 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065180648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069905749 seconds)
  done (took 2.786332935 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157054557 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070221089 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10657059 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075647423 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06977206 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075644228 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069591204 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069900179 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069782212 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067625911 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067339847 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07018236 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070249167 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067387003 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067510819 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067842384 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070244276 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067325567 seconds)
  done (took 2.649093514 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078057035 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066488796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087357114 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066110475 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065806068 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069035051 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069831464 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073597699 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068342407 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066092504 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074327055 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068398826 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068543097 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065917159 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068512141 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065387226 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068366212 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065718721 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07365657 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070004326 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069471695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073375592 seconds)
  done (took 2.81245288 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079916108 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068384574 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080790188 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067957861 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061701919 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064194741 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069792487 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065832908 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069772946 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068064022 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06537114 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064251562 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068556184 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065594378 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068294261 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065681783 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067785733 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065763496 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06745104 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061445473 seconds)
  done (took 2.62765303 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086958163 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068134802 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067898207 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07549208 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067683916 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067803854 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075111433 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06777334 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067309925 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088612714 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067688257 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067749444 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075241358 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072437036 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067579049 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075626053 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074362785 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074560992 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067062093 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067935199 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088218089 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06786144 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075085633 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067513327 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068091485 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067587019 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067393526 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072337702 seconds)
  done (took 3.289793114 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067616684 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066751638 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063616183 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064075135 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063838766 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063234116 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063189394 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065873579 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065571935 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063657476 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066012578 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066518947 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06618546 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065944005 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066833351 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065788589 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065932041 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064097849 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063616946 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0635031 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066129858 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066127038 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066235348 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063256037 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063425671 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066032931 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063110572 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063929452 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0658416 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063134686 seconds)
  done (took 3.22497407 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076870241 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072903799 seconds)
  done (took 1.426524006 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063738752 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080245901 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063284206 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070674588 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069906157 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066829385 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072824943 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069442132 seconds)
  done (took 1.827432442 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083205877 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077477441 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067441835 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080173054 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077394313 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083247559 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134843425 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067636729 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073916413 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065058837 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079834872 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065675119 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072243074 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066915458 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072625817 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073399266 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064159659 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071811137 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068326156 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064642292 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06736622 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075154213 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068645709 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061701535 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067334067 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088689913 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077786927 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065275486 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06953707 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073471726 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07184691 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059978728 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065658333 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066769951 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064579732 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075996032 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080820673 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068691381 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074253169 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066624895 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07536988 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061064082 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071032338 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073110395 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076578009 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066462534 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066318888 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060813713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063682443 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067910235 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061405633 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068986044 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060834784 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073674475 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069694586 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077485904 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06497579 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067903755 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069013632 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069630253 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072486583 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067808977 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068662464 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065901279 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075669925 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070722894 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074598663 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060773621 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060544314 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063817841 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075145446 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088767153 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072404573 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066618762 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066878417 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063305957 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069211467 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066889608 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071279323 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072645659 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066325727 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070851057 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073204742 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066821023 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068494309 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073579547 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064868967 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068685406 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064587964 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081999993 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064828719 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063879423 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063773032 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076549637 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0694518 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066445931 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063713918 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073184791 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059766225 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066356639 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066807343 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066892499 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076210424 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070692193 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07112402 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074696713 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072425597 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066625077 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068372091 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062227235 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065682271 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064324318 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072101469 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058883565 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068016721 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066605961 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065547199 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073453384 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063100348 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064233712 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072619687 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07088797 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063218439 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061597422 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067610383 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064616308 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067895784 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072980665 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063541221 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059533939 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059622182 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068256479 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064435136 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068879957 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068593473 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067876849 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059263695 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062640587 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068760436 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073199807 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065040258 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0657062 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070847394 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066182898 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064082273 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071430498 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067604227 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064006202 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070131244 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065943186 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059858245 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067290887 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067561923 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063967077 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068422077 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067593201 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067295607 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065371234 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063442222 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07058809 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065435554 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064417807 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065263977 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063902516 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.074944589 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066946235 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060153552 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061931642 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071889343 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062938397 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064217848 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064169723 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067049471 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065535112 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062783531 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06497367 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067059151 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074097618 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068361725 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065904806 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070182809 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076917008 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064373854 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067481482 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06448964 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066040947 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065741915 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074049048 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070735365 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069037178 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067636923 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061845773 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070167847 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073064086 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064114345 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062767568 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064059099 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068511626 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070750366 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068647305 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065288398 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063537792 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065511754 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067343969 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067068816 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064898084 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063839492 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06841524 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061802931 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06937927 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064942156 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074516875 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066770147 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059731629 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066002442 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062901882 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070472234 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05943694 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062565071 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063406018 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064656771 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06302465 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066480593 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058640638 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070422457 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071361137 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06505193 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064237111 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063186712 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070667834 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065838053 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06797606 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068052119 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.06969318 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074340197 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063247362 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067638279 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074030556 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06435169 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058857524 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068661311 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062743983 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063361244 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063812698 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062799887 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067520229 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070505021 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070361819 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.295570405 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070695052 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066629656 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067575805 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06346637 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073728939 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072181943 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070326852 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075309812 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069359639 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068636359 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072763398 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068450692 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069433076 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069991195 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071455516 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068488172 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070008142 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068383407 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072079682 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067458225 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066107181 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069652982 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067801058 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068439093 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073567398 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067297703 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068192868 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070266507 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067831599 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068147623 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068163952 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067199458 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071819264 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069143756 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068451911 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069683269 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062610776 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074925109 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066820197 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075197362 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067584139 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064277953 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074691762 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070165044 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072281951 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067778622 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068176473 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068974953 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066683755 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070336894 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073831959 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064934595 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077461067 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074572683 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068554376 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069248016 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067639371 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068544388 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06609541 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068208278 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067832139 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067606824 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065981657 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071928981 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070045438 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067826395 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068807696 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068231839 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067544689 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06862371 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061017378 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066720573 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066511684 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067527678 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077186471 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067088628 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066887417 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066400414 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068163852 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066170101 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063625011 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074433775 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075104837 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067229085 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07327035 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066426202 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068258541 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077226896 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060482744 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064802792 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064243203 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064754053 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074440908 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067537196 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076199766 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066925751 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066452828 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063903408 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068243208 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065044104 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061091276 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06456601 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070502012 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065981791 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066219186 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066384696 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069313841 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06775748 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07595016 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06654136 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068343537 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067045851 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063474849 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065938845 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065752382 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069733259 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068052469 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064880879 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063716963 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06654262 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067474069 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067611967 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068585205 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067197864 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073358362 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065785289 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06872364 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06934157 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061015967 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.204755581 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067354233 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066211126 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066138107 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070894016 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069976836 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068227838 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076223062 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066721442 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067974098 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067307507 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065079243 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066918253 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066630239 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066636329 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066421067 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067820335 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074986048 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064614609 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070396833 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066978985 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067627513 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072998526 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067662372 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070774921 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073139835 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067153744 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068156018 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075263003 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070874484 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070130821 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067241495 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067891142 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072750883 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066342987 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073929761 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067422192 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067577137 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068689267 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064736326 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066879502 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067235235 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065533796 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073753049 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067631019 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066159443 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065684835 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064593011 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067787056 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070013774 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073857207 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069350221 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06968146 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061793916 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063854423 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068008097 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064417611 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068032253 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06904678 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072168113 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068598878 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067061787 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065718895 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075688795 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072349869 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070384067 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064657269 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070137813 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067713561 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069038245 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067940127 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066984613 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067677675 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070619918 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067862965 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065895231 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073251163 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070299931 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067573106 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068519866 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067447774 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067419731 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061545088 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067228696 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068752161 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071749499 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068842917 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06678493 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076694127 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064105397 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067006028 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069529554 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064935895 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070786496 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061304168 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067991274 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068020655 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066588941 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061113349 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065181938 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064392765 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068974122 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065662522 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061276831 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076883643 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074833232 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069047041 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066097729 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064572821 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061510475 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061239751 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065783785 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066889054 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06774634 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077179691 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065893365 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065550427 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061257834 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066785499 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068804445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069150898 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062921207 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06079581 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065169026 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068771428 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070949388 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064464509 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065321877 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068375636 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067962319 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.200738012 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070097113 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063800191 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070668261 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079063129 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06659596 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068050911 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073594988 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074270042 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066979011 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062151249 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067368563 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069808365 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067465877 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067853326 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067968155 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082512869 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069275323 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066160187 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065493101 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06929092 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066614183 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075224454 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067574846 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067714049 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071181291 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069008772 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075417574 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069619881 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074575842 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069263351 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069345947 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065857327 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068341795 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064970043 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0659908 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068097661 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.0677582 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0713094 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074443212 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065962182 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077192414 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07599839 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068262664 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063410308 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066130292 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067045978 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06123279 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067614676 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06477451 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064785198 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064888358 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065388948 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067648913 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071669983 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067646849 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066500158 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066429805 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060417468 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068276687 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068723653 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066919467 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06351106 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066571659 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066890608 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070174386 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069396265 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06421227 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068096587 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068041388 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067354601 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061346131 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072909203 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066053851 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068664286 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065699521 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066834686 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066683675 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069996326 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070844679 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067417843 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068689663 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070453637 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068202316 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063867465 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063400808 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072028057 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064135352 seconds)
  done (took 42.459252221 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103518722 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063481942 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061575097 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061692752 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072878528 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062686176 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061997975 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063092344 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062872088 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064959028 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062047115 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062068343 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070234618 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077971741 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073423631 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066511836 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062048955 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063341425 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061796396 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062749961 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071599791 seconds)
  done (took 2.823964332 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076042802 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077621444 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074833354 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082338781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070580273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070426143 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074828476 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070413291 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078464131 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072242461 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078531472 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070663276 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072465419 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.0719784 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071896188 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07078701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078198775 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070840891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070084826 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074818736 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070294378 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075514044 seconds)
  done (took 3.003216815 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069799788 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067665677 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068294873 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061324855 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065918972 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062191902 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069603869 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064831786 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068730117 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065583376 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065787751 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065360578 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068309958 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06132639 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066779181 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063881487 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107093316 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069602922 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065698484 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067530523 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061312565 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067605878 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061612892 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062068559 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065172688 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069394383 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066084198 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064067803 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065326714 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065298493 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06594524 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063479902 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067898675 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066713863 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06490301 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064967333 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065656468 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066041792 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061299257 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063972169 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066573258 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061695881 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066818824 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066994372 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064027236 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063686786 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068052984 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065922147 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060801091 seconds)
  done (took 4.631899184 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080865175 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110114224 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067393432 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091624756 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079580899 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072607248 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069921883 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090437943 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063474276 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.0641641 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082876659 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07937462 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066061608 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07075876 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069265844 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065492194 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066091728 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064602773 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069060155 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065228919 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069539165 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072121453 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079613116 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077922479 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070122576 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064257971 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064567112 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070109768 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077414619 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070013734 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070052691 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070582708 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07974513 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070823034 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064375208 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06763135 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080837139 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065633133 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067320194 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063156023 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067262771 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069562535 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071874786 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081008062 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065868488 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070330703 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065576764 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062876969 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077979145 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067651466 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072917163 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078734819 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069147339 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065692871 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070382772 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079660201 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065263413 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063926987 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068207521 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077191683 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063119903 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069632065 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079102978 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067482593 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072646788 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078596601 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070946827 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068904565 seconds)
  done (took 6.414202773 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078619246 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095612834 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083663326 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083291479 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076279401 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075788153 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075396842 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075418202 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075969564 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080027396 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076388654 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115782814 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071344995 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077736295 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07601146 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075707963 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075616749 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075741585 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07613162 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07587716 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075329147 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082698275 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075946711 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083410139 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07987634 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070934243 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075473542 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075992087 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082871018 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075356069 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088229578 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07527294 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075487915 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083048895 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079621167 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075579123 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065615041 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075387502 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075938394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075876947 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071237962 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082849598 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075282278 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071073593 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075688609 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07531483 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082619744 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079704725 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077678913 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080354452 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075375456 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082429219 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075484055 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07555014 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082946927 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085229695 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082796805 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083139214 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074946235 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082108007 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082297033 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084957575 seconds)
  done (took 6.289725116 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08543069 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075334992 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.0820329 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061638182 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064150265 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071951925 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064179617 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064047691 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074014567 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074125899 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076114738 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071409573 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074571908 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075864622 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071382768 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074377679 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071914105 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071381891 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073484562 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072149 seconds)
  done (took 2.85316002 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076756042 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082394285 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06738467 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071315119 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069287594 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071581245 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068515126 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069529272 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067128115 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069723338 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075750031 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076710909 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067267031 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071901955 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076227011 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071198531 seconds)
  done (took 2.548549113 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086212451 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073390814 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081058823 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066928882 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066872553 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062573068 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06612136 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061264046 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062116289 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078144356 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065727829 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076235955 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066331642 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064854637 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063144606 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071064026 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06219853 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063032836 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06545602 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078328773 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069985309 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063951835 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068863166 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065610626 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067875338 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069866798 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064819862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066008586 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06254619 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066012762 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068314863 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068830633 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062662975 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063249998 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064291245 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062913399 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065400776 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065639487 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070548546 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065355567 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06336873 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067294171 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068874393 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066190103 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061766641 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06558152 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061830728 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067743834 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06367866 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068005263 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065595832 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06811142 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066058951 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07227987 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06871831 seconds)
  done (took 5.095087066 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082044441 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069936485 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061733874 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06407615 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069470308 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066792976 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069146733 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067428897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067008842 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064341445 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067291238 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068805775 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067172077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069787166 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067098859 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069568221 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061401921 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066990429 seconds)
  done (took 2.627231061 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072770819 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066180802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072622798 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065921165 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06597962 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068260276 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062569228 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064649865 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064537002 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065801955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065705472 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068223316 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064976615 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06806425 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065936141 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06591367 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068137762 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065139686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065649426 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061370132 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068102231 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064482323 seconds)
  done (took 2.861850844 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095716018 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082345496 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141323601 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07867518 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084232943 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071833077 seconds)
  done (took 1.956404947 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092320684 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101248629 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066398799 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070539793 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075540613 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069273812 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070466206 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069465365 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077187567 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075432888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069727433 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077596373 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077675399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076961236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075005379 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075013885 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070136892 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07036732 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065401588 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082726004 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069447421 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077744573 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069300294 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069260356 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069837996 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076705993 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077469449 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075124646 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069756857 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078197122 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075422862 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069835417 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077801881 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075495491 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068940049 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078492539 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069787367 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083290922 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07562089 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077098312 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068802635 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076149119 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078379373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074437902 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078031307 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069836799 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074281965 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07008946 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070151914 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085437665 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075761469 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076605229 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077495064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077950343 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077809848 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085081359 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076309931 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076983617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074940902 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075452601 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077076542 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075047428 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076665372 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076144823 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075073083 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077081003 seconds)
  done (took 6.371982146 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10553437 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067504596 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069876664 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075675282 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076652903 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069304807 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070217342 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070035926 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070233033 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066802343 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107739223 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069916456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077293057 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077212504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070138659 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070265004 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070004292 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076949401 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066985666 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085330884 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070013125 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077009503 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078148004 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077201978 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07605823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075184416 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070041968 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06984787 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070269828 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069642059 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074641636 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070127956 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077144974 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066755492 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077255961 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070336808 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070073971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074316863 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069738097 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075252862 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077196989 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083036239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069821813 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069785127 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075538296 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070442138 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070371563 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067377734 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070562055 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066645001 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075625721 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076326899 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077239485 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076873082 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069765814 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070357632 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069900646 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069641 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070160833 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0748761 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076678548 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06976219 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084970491 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069997233 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069801104 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077385306 seconds)
  done (took 6.291198353 seconds)
done (took 130.463488217 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188596284 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165608919 seconds)
  done (took 1.748916444 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070824251 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098218203 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077118687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128530426 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066688456 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100247754 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099630667 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077980431 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066386323 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066248 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065717246 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068966837 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131002249 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066056679 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066256535 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06850559 seconds)
  done (took 2.727384689 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100806517 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162305803 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102671711 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065176921 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100017834 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072797786 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064970717 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075082559 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070555808 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065447958 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072743762 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070443697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065517924 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070485556 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071129436 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072664958 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065126642 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072829673 seconds)
  done (took 2.850245748 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10020477 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091047593 seconds)
  done (took 1.607612868 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163366809 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.113556688 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147368766 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350665015 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163066553 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149250428 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145642357 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145372275 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119290981 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14019815 seconds)
  done (took 3.04818523 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100934127 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152842547 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26694281 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117330153 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072953068 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093044697 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118715836 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078092356 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080318357 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079953825 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079961 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076303244 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099554993 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073252639 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073684532 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076040793 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102610173 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072836268 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074351004 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075558079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100779883 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065530799 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073034325 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072766727 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076988909 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077262978 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065867135 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065403454 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07585461 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074192949 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076341615 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092179196 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076847051 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10523492 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070589227 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105866793 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076443319 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072506916 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074053941 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072776217 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077184607 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077557309 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072236829 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076582765 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065782297 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07610598 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065226075 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065890488 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076686322 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06801507 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077136528 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075749835 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104732734 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067636443 seconds)
  done (took 6.015648964 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104626375 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107078979 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072390857 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112853795 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10441318 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072085477 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102967111 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095373999 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10397634 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070183923 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067864837 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070565119 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082112234 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082566266 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114680766 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107167817 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074186978 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071019957 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106464602 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10510182 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06813271 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096954215 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091177657 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103139623 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067303982 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070465554 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067978352 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069927488 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076687144 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079096517 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070344692 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079856552 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084648225 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078017756 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067483041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067819977 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068350845 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079370778 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079138297 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078566736 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077432716 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067789889 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068085345 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069211474 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070643134 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068001881 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078956745 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080080643 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078519091 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069535616 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070458067 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068218294 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06985983 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079935529 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07783964 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081489022 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080035733 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068653194 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068798857 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072539856 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080725535 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078922528 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079520944 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069834683 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078901359 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068482754 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080127869 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084646282 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068480562 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070132651 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068618482 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069418265 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07009963 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077154384 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077675602 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069393513 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069850318 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068356615 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079417382 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07817839 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067973112 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076324289 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067121642 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067986413 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069477094 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069372718 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077061779 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079907801 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069259458 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068640755 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069226501 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068871548 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066926598 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076626829 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07985826 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078703845 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07850212 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069914587 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079038942 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078917813 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070056266 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078633233 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068167849 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069602714 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069028205 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077843156 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076566743 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078275999 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.199141976 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068629737 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078468146 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08056458 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068787836 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078751191 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080266199 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080154838 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068947377 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082410721 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069161934 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080547958 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070510324 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080359754 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06995115 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080748649 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068560579 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069014205 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069334885 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07948669 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07392435 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06818267 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070505563 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070658034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079900822 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082820514 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070242032 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077756235 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078271183 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069964232 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078512689 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069243483 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079112849 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069941014 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069589335 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068270049 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08223774 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068602632 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068514363 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070164154 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080723232 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069077269 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079259561 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07828377 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068926504 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080640741 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079892223 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077458613 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07988739 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070709347 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068951152 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067833723 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069571002 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077974531 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080276925 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07153054 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068340696 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077298881 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080259109 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067007127 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079271676 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078006064 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078478799 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068713802 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070584402 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081007207 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080634374 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078305016 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07770714 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078468849 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068511468 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077447467 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078035566 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068495217 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084063425 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068052338 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.0823695 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078724302 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075925298 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078541773 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079949137 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080062269 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080189293 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082837198 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06840111 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068266178 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079037234 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068232089 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069330783 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077736757 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069813867 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069967065 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083176303 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068919615 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079807909 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068441831 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078606566 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067328755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070602826 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083156951 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068254247 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069683619 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07919164 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069043951 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076324971 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079650119 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077482358 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067464647 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07000161 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210928841 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079040103 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068909347 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069294915 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071069182 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079353199 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077958463 seconds)
  done (took 18.734855222 seconds)
done (took 38.152447043 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209586905 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152945442 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182297236 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117978115 seconds)
  done (took 2.166961209 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117692436 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101251243 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092210155 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065543227 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099547092 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065208153 seconds)
  done (took 1.987468485 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312841413 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210168501 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190467553 seconds)
  done (took 2.159121501 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201119734 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188438146 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41773725 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261389072 seconds)
  done (took 2.630611353 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143578255 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088271767 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067487464 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084125967 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133923713 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159562985 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099900574 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12480741 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078615057 seconds)
  done (took 2.482925244 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148679615 seconds)
done (took 13.017202389 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.202716125 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.126832705 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1699691 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.115871004 seconds)
    (5/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.186453181 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091809891 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108061499 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.236373085 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.187581251 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173437007 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082774223 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077718705 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073930021 seconds)
    (14/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.156756572 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.174147043 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073571173 seconds)
    (17/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155268222 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228924884 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.191997645 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142183718 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11263164 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.15230758 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092652674 seconds)
    (24/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073724315 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.164074489 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.139177876 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075869519 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193264133 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075792436 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.190973686 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08162157 seconds)
    (32/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.166524496 seconds)
    (33/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070064301 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111448785 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.174524887 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077657547 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071889875 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127658789 seconds)
    (39/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081655922 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105866996 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076988712 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102726253 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064918513 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071583364 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089040731 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065008416 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.216909982 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.189669436 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073271834 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190237524 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10764339 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09716472 seconds)
    (53/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07175398 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085358108 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068887706 seconds)
    (56/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.138395053 seconds)
    (57/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072001383 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073127794 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064402214 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153382091 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072008645 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07613715 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089984274 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066832434 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051845043 seconds)
    (66/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.149229977 seconds)
    (67/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.0757357 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.205724841 seconds)
    (69/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109888946 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182196422 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.158889602 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089088744 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073057998 seconds)
    (74/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.196309296 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050281349 seconds)
    (76/309) benchmarking ("sort", Float64, false)...
    done (took 0.129299558 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087021034 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089144134 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064735839 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.085965647 seconds)
    (81/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051315683 seconds)
    (82/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068942032 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062180247 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074876509 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153187856 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.284707323 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.068137687 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091501867 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078591566 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073695015 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062184893 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077879837 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072248239 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182794623 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07307425 seconds)
    (96/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061702897 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050987198 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066426419 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076549325 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.143713485 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052760754 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076905881 seconds)
    (103/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067311733 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.162096878 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176880987 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100494605 seconds)
    (107/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074308434 seconds)
    (108/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052526007 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156273073 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051093898 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06557127 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051743966 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173119958 seconds)
    (114/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068901402 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066282344 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088652617 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072308723 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076186417 seconds)
    (119/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076567317 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073293519 seconds)
    (121/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052372464 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172649192 seconds)
    (123/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110760097 seconds)
    (124/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162245005 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068617449 seconds)
    (126/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082097886 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098970435 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145008561 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063924344 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066476429 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065318442 seconds)
    (132/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065786397 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.135705313 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073570708 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101327336 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065283937 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065503576 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051971914 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072809401 seconds)
    (140/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108907515 seconds)
    (141/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195249637 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086738409 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067291074 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073616699 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070930871 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067068636 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071748553 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051639272 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112282824 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050223865 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074929685 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113951337 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051425159 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051064364 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071703508 seconds)
    (156/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06625214 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067758637 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065184412 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106130078 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065800965 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064776295 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050432166 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072339942 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206997941 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092387793 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072889876 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067643612 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052238907 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15614158 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.292222078 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050869975 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073741212 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154620963 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184195916 seconds)
    (175/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071101182 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100293643 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088985895 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.0506479 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051090913 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123786523 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073068048 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050493775 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075157229 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068716666 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078162372 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071087643 seconds)
    (187/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054192825 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05196994 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180796318 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161849196 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050731188 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194356225 seconds)
    (193/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061941724 seconds)
    (194/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050962446 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079927893 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067733879 seconds)
    (197/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08048035 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071967847 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050869052 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053312835 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050487855 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087913155 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073961832 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12923673 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.250598955 seconds)
    (206/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099923524 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067811994 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097815541 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093165882 seconds)
    (210/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077413987 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090865452 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064972687 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073130535 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051701321 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093250258 seconds)
    (216/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063291943 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07352656 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068562131 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051154994 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07397907 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061954767 seconds)
    (222/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061764625 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075667829 seconds)
    (224/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052584331 seconds)
    (225/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070653067 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073475631 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062040394 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074064424 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064106542 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 0.132392431 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052282603 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071931824 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073678125 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072526643 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089995859 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06454424 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051439341 seconds)
    (238/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051064194 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071425757 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052477988 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070202352 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092081444 seconds)
    (243/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05295433 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140120883 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066404645 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091071835 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091613458 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08892202 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065891784 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087637797 seconds)
    (251/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188420899 seconds)
    (252/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080906092 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09175096 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065489288 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052352678 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092424489 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184571088 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065916747 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066179444 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051175163 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072355331 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066219232 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053897553 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067417745 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073952073 seconds)
    (266/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050975057 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05134339 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065513664 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064472831 seconds)
    (270/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090537514 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178947661 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078514664 seconds)
    (273/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081648754 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 0.140739336 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066617153 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073530184 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050975711 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051203253 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06370914 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063683838 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05083131 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065263927 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093585272 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072752812 seconds)
    (285/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119979459 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107339952 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064919681 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066271836 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108776784 seconds)
    (290/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051000254 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066145174 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051421721 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071346455 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091639314 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065039641 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13723399 seconds)
    (297/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103672835 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089146136 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05143294 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111217745 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066785586 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051942737 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065856336 seconds)
    (304/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05155183 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07102046 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140522136 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064090407 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063678274 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145878204 seconds)
  done (took 30.94968078 seconds)
done (took 32.408066361 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087117723 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093009192 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074966629 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092895688 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081055922 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076486733 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072333908 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078451536 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079670106 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081441945 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077945078 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053683422 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074319353 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073950702 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074566564 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090853435 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078690695 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073574876 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07252256 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064135258 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072828514 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065837786 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066680117 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054093781 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078146564 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071931495 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072590542 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073793399 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065110609 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066072989 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069213171 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073384105 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065043771 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077871017 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072539871 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073000991 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074664942 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076787682 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06728957 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066071805 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074499991 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065690603 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072955867 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073769982 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071889424 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071662888 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07269076 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077365275 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09132616 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067624137 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074765856 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075690715 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077207258 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072965975 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069236972 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072867276 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070993843 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090925989 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073191361 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067535516 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073823756 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074278435 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071821217 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073096913 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073519485 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074916702 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075387814 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071270623 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074021907 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071285831 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065710303 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072491655 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068439225 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06507187 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075364708 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077344495 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063655197 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071100088 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07278712 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070611591 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064281267 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066952416 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066999956 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071937209 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067150585 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053754306 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069132736 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071637162 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064212602 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073633432 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072103625 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072776468 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066642773 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076358956 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064258097 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070992432 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065837873 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065199448 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066879806 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069121082 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064983334 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066893347 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074397218 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066155105 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072067605 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078398815 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064995004 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072206548 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064354266 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064604569 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079231404 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074341677 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065272634 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067217057 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063865654 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072857209 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06394751 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065082622 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065016202 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064906875 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070975262 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06501966 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06710303 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072559241 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078138583 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064419346 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068568599 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066374157 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064610099 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070528226 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064786146 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065165631 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066509338 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061274182 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066656768 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064759796 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072602558 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066472919 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206551671 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067559812 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073217521 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07033272 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071208353 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071424834 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064475938 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058846659 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067313325 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067637372 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067335529 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065353382 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066792863 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06542475 seconds)
done (took 12.474216874 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066614435 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141083847 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097895122 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095777788 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086082616 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066517847 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076410547 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10150816 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06740684 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101598821 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087664249 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085820968 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113865222 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064769658 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065892695 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069520233 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06750887 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081608507 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101126666 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08639795 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114843452 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065410577 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092419494 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089661043 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088646674 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103998821 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069443681 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069591655 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069414588 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092651089 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088209411 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070276671 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067456389 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098478059 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09338005 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084049643 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065843157 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082999498 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066533165 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06563594 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067391833 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098783017 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081124609 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080668711 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069731377 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069300617 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067425586 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084137827 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089711394 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078976511 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086588312 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101357299 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068627167 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065559764 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064193744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086365673 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065334198 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069297285 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065799035 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068940357 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065672991 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069402506 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081180936 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08039987 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070147468 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079087754 seconds)
  done (took 6.848900654 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085049964 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09050958 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083245593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083551127 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065378168 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066319356 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065982628 seconds)
  done (took 2.085263865 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068537429 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088001849 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088985026 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089415086 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081748839 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08783331 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075542276 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066777681 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088067597 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068658487 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087350965 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100922473 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07122008 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073952359 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090131482 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066115466 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090261869 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066125934 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069671969 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090407103 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068400631 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095359735 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070143397 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066872908 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080332755 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066437491 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113540431 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070744923 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068101727 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069158467 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064173332 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106146009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079900219 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07415971 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067045585 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081526521 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080583313 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064468923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083117889 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07506981 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080136935 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066654562 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067257669 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064343283 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070205119 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076872316 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067194898 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066895226 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068540846 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086600799 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067501681 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080040804 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06954863 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072226027 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068078383 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073422199 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077208422 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067229237 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086579281 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06794971 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084301165 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083081951 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080383751 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082817858 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068982614 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080134291 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080270093 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069024253 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068642592 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070064543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083312035 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065082165 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067685112 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076846997 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069144322 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089617616 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089817099 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068314432 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079851956 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067169133 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066263243 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066773049 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089180035 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072017781 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066421171 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070554361 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069913914 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064981187 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065479631 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070198409 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064406505 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06792462 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069382273 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069539056 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069543626 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08289601 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06873518 seconds)
  done (took 8.851185278 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071543815 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067765541 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069280695 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067533998 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068650418 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068224435 seconds)
  done (took 1.982326702 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096256575 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070375671 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079492662 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071820537 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104338931 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087066985 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086489402 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077762306 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083284401 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078508897 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086719056 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088103849 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091925919 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071941297 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08615494 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071003399 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086935592 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075848417 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078137585 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072681986 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086357373 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072161448 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072085754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082177681 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075712124 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071664813 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067079149 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078512565 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077840553 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07785189 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07252352 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075793538 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070185834 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077733171 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08661082 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070504391 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070993334 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076793862 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072556186 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075892702 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08829592 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072159415 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073974424 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077018939 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077630528 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070188918 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076797846 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07496441 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086612779 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076779596 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076184587 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070795402 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.0752181 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076746593 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070487462 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077464954 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076873032 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086766774 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071834566 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070493065 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068203246 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075505877 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077890324 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075201772 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078439721 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076641515 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070416866 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072231823 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072181126 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071346067 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077015998 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068210488 seconds)
  done (took 7.111860343 seconds)
done (took 28.409761049 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539352606 seconds)
  done (took 2.070238788 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614043405 seconds)
  done (took 2.173212444 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.469272959 seconds)
  done (took 8.02575065 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399299236 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.522976193 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.718070067 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131564174 seconds)
  done (took 3.367055039 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707521364 seconds)
  done (took 2.27944431 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216831653 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202189776 seconds)
  done (took 1.998847657 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387161359 seconds)
  done (took 1.945933825 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132878784 seconds)
  done (took 2.694461279 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261353268 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174846616 seconds)
  done (took 2.005778833 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474998852 seconds)
  done (took 2.037947347 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.849612026 seconds)
  done (took 6.414303557 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21266633 seconds)
  done (took 1.816676035 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235416981 seconds)
  done (took 1.798922377 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.72007738 seconds)
  done (took 3.282656553 seconds)
done (took 43.475578849 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081747249 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080760786 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080377946 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078190909 seconds)
  done (took 1.866739323 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07861885 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072280372 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075699917 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073000292 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076007146 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072762536 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074254495 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075503157 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072188055 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072785645 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072928633 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072596414 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074711314 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074363739 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070938463 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075224808 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076020767 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07243314 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075027279 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072766012 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070198127 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074424155 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07514324 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071580476 seconds)
  done (took 3.333659645 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080083227 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072407139 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074556472 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072219735 seconds)
  done (took 1.872059697 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080635746 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09462554 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089480889 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077518966 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092209055 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086693005 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068885301 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068937394 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070023992 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077249457 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069415785 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095639763 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087936231 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076957339 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079047603 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065549455 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067969289 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087215881 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077523099 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077801529 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069358393 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077305925 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067526177 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087628275 seconds)
  done (took 3.459944972 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088500974 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10381248 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080777876 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089065905 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090962773 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065034893 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087162573 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090516237 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126206894 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065142394 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06977557 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065308735 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073280079 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065614393 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08051901 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10718976 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110757127 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068476812 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095972536 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06498628 seconds)
  done (took 3.264151264 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074751353 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069423593 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065983159 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069305397 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076502063 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072021883 seconds)
  done (took 2.001903677 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070994905 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067663668 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067035067 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067222783 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072439571 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066502617 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065674512 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067833052 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067622718 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066650614 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066930296 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066016692 seconds)
  done (took 2.380589252 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204355437 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068293313 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068844088 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066285158 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069949798 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066440008 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080861145 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067400685 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091249629 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066109845 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066412305 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068420995 seconds)
  done (took 2.55713191 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210683233 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076185918 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237641779 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149123481 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110493204 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114774792 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111180788 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113155917 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140547506 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100406382 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166854927 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165350925 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106579403 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136040288 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088184365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10047552 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152938991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162615925 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104295452 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166418346 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14484788 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125136907 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150750831 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100763049 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10526126 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120961522 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070420641 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079595369 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169137126 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132048553 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143216613 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11023895 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091584945 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175620111 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169822098 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140371728 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146326217 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084456499 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104240569 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13424267 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199390951 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088362426 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160530382 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107556484 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216630845 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13371917 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119859379 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12048918 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106245259 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088990636 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145345835 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182308524 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136035116 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086856042 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123540101 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113993278 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113604062 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112911021 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18257777 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162633775 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127677152 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071237467 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107010761 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152660289 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133565088 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10778419 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123571113 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090507709 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133764034 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154511612 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119737528 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144357202 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116786673 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088495051 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119127778 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14002854 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126402525 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159661649 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123383239 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071909521 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123078337 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100583727 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080186212 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144073691 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074895726 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175758397 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098622497 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108633154 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124145069 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108973579 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108673095 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158325003 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143985843 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102471614 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064937756 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244295678 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121516058 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146465522 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08701577 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108120734 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116938218 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076938277 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136442821 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074973244 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1236237 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076781855 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126066745 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130133117 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077004564 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122727653 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102501188 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100460385 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132766122 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160135447 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087163355 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081357939 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169090854 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120326398 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10323471 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143726912 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156277812 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10127823 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100912263 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148682044 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178157159 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08868064 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162590525 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10569208 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083553596 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087304964 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122527868 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111352388 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123163993 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080927177 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116983329 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167577955 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074684564 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09485157 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133871241 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078143748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08040234 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104987941 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10461398 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095170886 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099336897 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102085767 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134870399 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122263945 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104657893 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122933835 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097422566 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312433067 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088497351 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102105018 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104644408 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069728622 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135854507 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157113995 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079668642 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163082735 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123983005 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11540564 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118655134 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083647672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13923285 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079830808 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069879398 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144004459 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11013564 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110460935 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151999819 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116575205 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125465396 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118435095 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132158999 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131033925 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130110038 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104340178 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088442851 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110920841 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12593484 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072851724 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.0897875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079938528 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103928489 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094994118 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081732638 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140415509 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123131953 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109052651 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111274172 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095351835 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147210084 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075882691 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127339585 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118846727 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094835178 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152325969 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152936046 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129614847 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098463372 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135098465 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069745924 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073025527 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087521676 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121971043 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081847127 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082279318 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256946342 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147019126 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130578201 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136999663 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12339804 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12047535 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155897092 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069966356 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117601534 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14616783 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121217109 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104384669 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089603117 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098530671 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142810955 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107009118 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181296406 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115953783 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122600902 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153018897 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100280485 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079013045 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103037677 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13577436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103683205 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142763676 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099075922 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087270124 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108751654 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074440306 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097916467 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126461699 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118157293 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134256512 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115310903 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13174129 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076701033 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114349172 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120449488 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120797669 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063870422 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119931618 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161277221 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093964447 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118621491 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152411623 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078352267 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132754656 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174394575 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143560246 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084055075 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250428618 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119503604 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128058729 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120687941 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140759829 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10803007 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136811058 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108940368 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085790065 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087469004 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096937692 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10453604 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094262205 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106103017 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112553492 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095097648 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130811764 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103280708 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109696629 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117711395 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09745492 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090349436 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095815087 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177082996 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118224723 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17029926 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098961434 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144342636 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162192306 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074720903 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078884498 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077115427 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139353058 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083846888 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129627004 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106479332 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116495711 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123005681 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142092145 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0949755 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068013714 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108317102 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131791526 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123992471 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097671469 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102904531 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162905015 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10039214 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079167241 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113307688 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116114586 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102491225 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172061296 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061125942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104956128 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075872853 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079929619 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126764476 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292923232 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080694281 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103098606 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118875101 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112068773 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128332374 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101092288 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11139172 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125405348 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148345922 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128306534 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08882122 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111217927 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127996143 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156022958 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10473113 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095801166 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172464421 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152884461 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159309701 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086571754 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114836496 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113159087 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107765273 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137221946 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082915571 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161626799 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0814558 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134558549 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10258285 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088285539 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127871041 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107081312 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087489336 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146596043 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11714632 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081751025 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076654864 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116673611 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119191031 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105683333 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074595431 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138852999 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073539165 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131589144 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159733774 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080495082 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106250895 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095965823 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079009213 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105413075 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101038258 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086763926 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239734788 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175105416 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086922383 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150789923 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133254937 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112824397 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135709071 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101655764 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639204142 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076697529 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151956721 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115744386 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173105427 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100661043 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11805775 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109926681 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122047469 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144700597 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105059549 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181569174 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132077994 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115016287 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07958502 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101825749 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103711509 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087346768 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106279719 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112453844 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115063548 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092293984 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114635718 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122991756 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081414639 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09514368 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155892339 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11610424 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142663288 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139759078 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084978967 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117209779 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136736563 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079336757 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119900161 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152174223 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1058597 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099228305 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08003826 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099938926 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156522472 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072864225 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157476979 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11860579 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252366307 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11472526 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112643107 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13191571 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106486567 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121061376 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092010181 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110054988 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113107575 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081849394 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077111149 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104670283 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110812912 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09854941 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096835336 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097892852 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15210128 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071747035 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098129289 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113419711 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143321495 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173703089 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088503315 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081971658 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117364866 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112697189 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111777384 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119966511 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078540811 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081380741 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080744692 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077866179 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10869721 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112551499 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113731844 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111016498 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162805667 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082840428 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229618901 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095139605 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10410834 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069778016 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077512128 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094993185 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098252374 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106592707 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108895912 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157885018 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094968462 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089916766 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090929712 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073748079 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083605746 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12816348 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109862606 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118408559 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098751284 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062548556 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106651614 seconds)
  done (took 58.687951067 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111139441 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082318001 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093926962 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143676864 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121821133 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201530213 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153820984 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187418068 seconds)
  done (took 2.780003278 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070136998 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094259742 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102553339 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082784363 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066706434 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068019013 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230491569 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080341471 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066515654 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098281949 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077955415 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068382947 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426434253 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06590257 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066953553 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061130376 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067563545 seconds)
  done (took 3.452446881 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.387274243 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609901393 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349113486 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072529268 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.432235631 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085423717 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.11501914 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127184076 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071908897 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536707033 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.402520265 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123650087 seconds)
  done (took 17.984805451 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078191891 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069664818 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084104229 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082655343 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073014814 seconds)
  done (took 2.054388769 seconds)
done (took 107.298106665 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083299167 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.605668489 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052890127 seconds)
  done (took 2.35334544 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084506292 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085019806 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084427786 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08343929 seconds)
  done (took 2.010342009 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077095283 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076195033 seconds)
  done (took 1.819344819 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231861375 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161563347 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095494457 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085262822 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078952934 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079376916 seconds)
  done (took 1.918023001 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073793946 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075130302 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072941836 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075696844 seconds)
  done (took 1.965136806 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079017047 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051672127 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054436514 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057674814 seconds)
  done (took 1.914564613 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088673526 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078906534 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079891862 seconds)
  done (took 1.915730499 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102889695 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08610056 seconds)
  done (took 1.857387203 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083027859 seconds)
  done (took 1.752159263 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101262963 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101136779 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132042938 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110817251 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139433381 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111569403 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084225451 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085374264 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076091371 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086182614 seconds)
  done (took 2.696439274 seconds)
done (took 22.439388045 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080445228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363767827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360487718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089737563 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669942065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356235363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969385011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092831173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11445562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067168118 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084590377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647614696 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955962193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318503961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.9458467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31861515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649676184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067775358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067434663 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067783536 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952808859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067543974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067889389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067530664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649117018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371148957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067658595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319472697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067587456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069456348 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354558363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068047713 seconds)
  done (took 16.064309433 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072600619 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119402961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072940547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084353315 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070636626 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069866228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071105811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069141618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120543166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067672398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085197479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067427482 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071672714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.084347367 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087406893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067941468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068949061 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068224 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06778533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068232789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086670509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067644397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067914022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068213718 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068262552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080693308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068518493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067912293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068120641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069713441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07053444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068705029 seconds)
  done (took 4.092851439 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116912483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123933062 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073979677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10305696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111265911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069551044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143752343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092863547 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12549071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067526924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084804239 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067521639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10191786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069170744 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087604644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068312047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068774175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067940734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068210874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067927416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087330433 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068205275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068186163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068426676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067701118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08116864 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069102424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067872488 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068085785 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069478564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071161359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06802952 seconds)
  done (took 4.31500849 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074674255 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074752927 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082433538 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084049503 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069606494 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072026788 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07247622 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069644733 seconds)
  done (took 2.285618112 seconds)
done (took 28.435212639 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080553017 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068667057 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072550213 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082266599 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073551934 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079034393 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067574931 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075526713 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071987054 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072866695 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074629632 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067396813 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070987162 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06693343 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073589554 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067461583 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079092229 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071236328 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078793969 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078589044 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069493531 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072652618 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07446358 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078217558 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079196808 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07860706 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076969 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072439671 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068284126 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070311459 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076674629 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08353204 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068146486 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079011248 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067244861 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06771098 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070984138 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067550387 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078754269 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075932916 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068762179 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076064071 seconds)
  done (took 4.757762965 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089923077 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093231184 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084417487 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061082289 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066954586 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065544863 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088656986 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059679457 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05900383 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088131019 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055874155 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059440912 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065272978 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053516839 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060312421 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056188618 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062038055 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055273048 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060332631 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05963567 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088494944 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053590343 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077435475 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063044256 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055678118 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061317415 seconds)
  done (took 3.437698269 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075892376 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085617168 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090033245 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13132531 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106615006 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079073575 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078581159 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095455933 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088521542 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066435248 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070695073 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092302357 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08977142 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073295045 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066985803 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085989413 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08466637 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069011562 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072852023 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094004635 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086648999 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085763909 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096017604 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083273101 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067129293 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070188613 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071682162 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081190615 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073082559 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076636696 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071300659 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071459995 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069965657 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079067814 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071849123 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069712024 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092532971 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077433893 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079129991 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068313442 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076243362 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06870626 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093135827 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.137296255 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067193646 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.0742324 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071716291 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077469957 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067473792 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088885193 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078976005 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06775753 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070799877 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066435529 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068030245 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080882628 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069974142 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070113189 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077062469 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073571666 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093166802 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072752247 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08432146 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067276062 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075432545 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067164131 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068982344 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067184305 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095370354 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069272333 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111147625 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068788742 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069065966 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076498436 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075618441 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073705004 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068090947 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083378263 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078561714 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071344286 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076720035 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071165092 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070770239 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091590506 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06984389 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068914138 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068468094 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073631793 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070725593 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069104482 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080581708 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06845843 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070119535 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084944204 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067720051 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06883719 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073675205 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072362358 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066841081 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078583572 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072245891 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068681393 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077158165 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067426366 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070602442 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08059721 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073563304 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066080522 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071656352 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073410256 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067827117 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068656117 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070512208 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069021902 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077187306 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074353728 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072125104 seconds)
  done (took 10.699177036 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16594845 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157225363 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07009201 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147747296 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076457622 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082790128 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150485563 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095088903 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067801608 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068478599 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06866424 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110454507 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105634895 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115748031 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079112078 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067456812 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084348761 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114545657 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152056316 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146382437 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084797089 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076748151 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069692366 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069464905 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070705537 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078273291 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085402102 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076425609 seconds)
  done (took 4.461788022 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082549134 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104739724 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074517608 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090513657 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090973362 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067227352 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069938591 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069593556 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080943178 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077710681 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06713265 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073250494 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074179732 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070366175 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068018028 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074158128 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074876542 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068475063 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071498391 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073058028 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079009453 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091326849 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071294418 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067113683 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072578275 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066882913 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063118559 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083692297 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068033834 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095183987 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065599995 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07294007 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08249416 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068526856 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067957057 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067455831 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067798973 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067158428 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069359355 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066984577 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065992026 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056752121 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066902562 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078831486 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074174983 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056197756 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072871858 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072536902 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073241009 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.0651531 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07028768 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070333944 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070332509 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074961027 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071472367 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072556559 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068713313 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074297827 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076748715 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067986992 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064730285 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066118051 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072441855 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065181165 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076043291 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072253616 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066238926 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067521591 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069442829 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07483444 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067199923 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071796635 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06507948 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06956576 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072254151 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069514663 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069411305 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065932486 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067269478 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06791353 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055279334 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067693369 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053034943 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070686713 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065677734 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066266251 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070490889 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072252038 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079800262 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068974921 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073526317 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068596554 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066601687 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070595771 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060286176 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070296057 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082902748 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082299066 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067441827 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065580818 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080713904 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072430064 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066142673 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055720782 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072548957 seconds)
  done (took 9.197175522 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092388251 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070145643 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084178322 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092081729 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086507018 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075563897 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077809883 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069089096 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.0834968 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074131896 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076511624 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067791948 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078060938 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076990844 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069672326 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077374776 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071902228 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084752181 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082653318 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067957633 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076424994 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080702316 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090315738 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082515294 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080790977 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082136516 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090079733 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07710722 seconds)
  done (took 3.944309245 seconds)
done (took 38.177373658 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.772342446 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.940182062 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.756816107 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.131221206 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.888095495 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.85282137 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.901865349 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.757982699 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.136053852 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.793223447 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.959907214 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.904014144 seconds)
done (took 65.478966175 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.825558709 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.896291903 seconds)
    (2/2) benchmarking "String"...
    done (took 1.982679823 seconds)
  done (took 5.574372997 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.966706518 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.315214453 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.003445938 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.754590957 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.757258125 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.094257626 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.556234423 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.26470296 seconds)
  done (took 30.44215182 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.875646 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.985451051 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.457578226 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.47066501 seconds)
  done (took 15.536187524 seconds)
done (took 63.120681137 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.769136785 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.77845597 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.770023088 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.734276507 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.809252005 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.757111454 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.276857547 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.824276192 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.751412549 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.740595605 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.749636324 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.183537558 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.762685755 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.155515149 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.750518294 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.760164395 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.790425842 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.495817727 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.90642579 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.761443514 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.761868398 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.804726936 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.753418127 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.757412323 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.779482715 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.750119967 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.174205365 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.759830156 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.594331334 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.753826268 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.810382177 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.901179343 seconds)
  done (took 203.817727021 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.753720351 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.617761926 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.726907452 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.760285224 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.108871015 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.934556228 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.87780789 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.218253601 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.758090105 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.780514371 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.909115058 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.753401123 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.93388049 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.702947239 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.784971653 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.759164212 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.924510768 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.941988922 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.786443636 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.932205217 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.78094681 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.7650672 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.720947601 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.882620187 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.792866561 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.767619044 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.754628795 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.756226047 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.94245313 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.894796388 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.77790034 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.771093555 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.949559237 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.627771822 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.767263494 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.77011374 seconds)
  done (took 168.38177503 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.140583015 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.756456086 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.755138984 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.756416576 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.76354657 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.755812209 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.87688762 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875366586 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.349144405 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.877546181 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.805339535 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.576077268 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752483049 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824865268 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.767553156 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.754564547 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.755669084 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.770380656 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782523007 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.756717705 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75625098 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879456097 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.766297632 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.888460723 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764957373 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.759851736 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762132246 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.128491555 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.754271417 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756915536 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.765173956 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.001008691 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.756718943 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757409462 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.650881505 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.455322429 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.848933012 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.754544589 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761765257 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.755464961 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.978944067 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.754783291 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.755835849 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.758556581 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925914979 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.753691404 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.880809794 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.75421294 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.262786855 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.754302223 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755030104 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.798272503 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.448757628 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.7539113 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.759781524 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.759721057 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.757698924 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757102209 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.76411514 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.533928121 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.762243267 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.828986678 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.758940973 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.760154957 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765252316 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.761842492 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.928421973 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754541205 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.814601859 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.811102523 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.001150553 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.876922921 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758395531 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824634644 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.849208671 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.754782918 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.760868724 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75708979 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.757485144 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.840377484 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.755225874 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.883634861 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.7574561 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766016173 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.760783004 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.809767136 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.831963369 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.756442367 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.657404906 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.759322782 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.760314555 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.062593045 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823953078 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.75785156 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.760301274 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758910632 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.878623002 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.877121821 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.550491243 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.761425297 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.774260553 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.756891849 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.892905324 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757192843 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929660255 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.759018223 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841235297 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.76138787 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.761217074 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.756444068 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.789809278 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.760445367 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.819784991 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.758707034 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.130282268 seconds)
  done (took 398.518826284 seconds)
done (took 774.609288498 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.457810468 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.408310892 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.516403711 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.429504104 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.400883185 seconds)
  done (took 13.909811702 seconds)
done (took 15.60568652 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.844320095 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.849850294 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783246988 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.848359803 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.779465659 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.847487034 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.828808747 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.783229395 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.813796338 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.783552641 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814733535 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782735843 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771068823 seconds)
  done (took 25.227429018 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.99579856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.995928478 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.83151135 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986055704 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80849694 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991916113 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.924701684 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.909013156 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906644686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773271848 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.773093053 seconds)
  done (took 22.594088206 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.992983638 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.004104236 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.838408601 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.024501513 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.808960946 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.993758922 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.920869704 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911217359 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.911547408 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774102862 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.773633407 seconds)
  done (took 22.652280245 seconds)
done (took 72.168876043 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.769510712 seconds)
  done (took 3.467282376 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.794060677 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.950094305 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.771668646 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.771727602 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.768092813 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.76926253 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.771509211 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.769162402 seconds)
  done (took 16.065449139 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.769884997 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.765320038 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.765325475 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.765682774 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.768756035 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.770093706 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.765996671 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.768766424 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.768276027 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.763774496 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.765541968 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.766315148 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766928052 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.768691609 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.765869674 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.769454965 seconds)
  done (took 29.973887446 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.76695844 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.765799462 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.764740784 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.765857664 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.766150145 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.76601316 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.767426629 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.767002215 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.765307439 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.765399114 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.767294105 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.767219547 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.767156622 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.767061662 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.768002713 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.767764759 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.766374295 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.766891584 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.773095206 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.766664423 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.768008694 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.767854305 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.766663918 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.767915621 seconds)
  done (took 44.111154355 seconds)
done (took 95.314447455 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.655165177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.430022324 seconds)
  done (took 8.78397582 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.774991245 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.772385397 seconds)
  done (took 5.29495432 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.772441264 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.771511986 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.772856585 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.771206369 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.772394844 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.771111208 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.771796874 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.772644556 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.771616808 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.771556162 seconds)
  done (took 19.421342633 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.774444666 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.772460563 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.76935216 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.771344491 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.772265014 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.770128504 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.771826308 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.772287317 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.772205459 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.770076415 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.772133953 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.770964931 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.771936029 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.770671488 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.772142791 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.77081213 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.774096604 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.769771908 seconds)
  done (took 33.591725961 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.773275198 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.772937977 seconds)
  done (took 5.248069764 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.771629125 seconds)
    (2/7) benchmarking "second"...
    done (took 1.770733994 seconds)
    (3/7) benchmarking "month"...
    done (took 1.769205169 seconds)
    (4/7) benchmarking "year"...
    done (took 1.77163199 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.771160747 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.770394214 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.771372018 seconds)
  done (took 14.100121307 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.772749124 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.941760196 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.012082297 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.428124868 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.776643323 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.774854714 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.774352451 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776665634 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.779135764 seconds)
  done (took 19.738972239 seconds)
done (took 107.877918667 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.612573395 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.768819398 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.126719361 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.835074586 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.806286589 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.113949262 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.812224127 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.082001386 seconds)
done (took 42.860368996 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.774943596 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.304932331 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.343068021 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.55410818 seconds)
  done (took 12.906795794 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.755831056 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.287133795 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.808592926 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.346349396 seconds)
  done (took 19.951758625 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.138689291 seconds)
    (2/2) benchmarking "read"...
    done (took 2.122957546 seconds)
  done (took 5.971696916 seconds)
done (took 47.309747614 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775946933 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.775606775 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.773235657 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.776488257 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.776245468 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.772903652 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.773193472 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.772059955 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.778146165 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.775151837 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.775465991 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.776265029 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775310222 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.776310284 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775349763 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772571968 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776447123 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.773063322 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.77419007 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775888053 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772864117 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775453942 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.772503293 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.773174538 seconds)
  done (took 44.298203748 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.776250046 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.774231347 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.776376286 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.776788743 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.772609786 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.777851263 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.780450345 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.773582968 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.77673309 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.776880365 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773144171 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.77686154 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.776829694 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.77484952 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776987975 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.774251804 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.777896825 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775405492 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77710193 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.773397496 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.77750999 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775014812 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.775068124 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778535177 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.774819758 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775354078 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.777664087 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.775021362 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778127343 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.774804479 seconds)
  done (took 54.987291476 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.783972071 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.786048437 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.778159474 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.782104159 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.778025807 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.778287377 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.779704117 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.778274996 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.77937172 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.780263336 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.777767057 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.778807271 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.778045996 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.779665901 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.782095705 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.777638063 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.777810827 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.779470184 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.779394897 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.778935083 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.77972403 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.779226213 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.779097471 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.779385373 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.779320795 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.781983427 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.778924675 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.777624436 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.779997058 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.778598372 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778994733 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.780351567 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.77951305 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.779546668 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.779868246 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.780100674 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.784609371 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.789678034 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.780209822 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.779257432 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.780118304 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.779899406 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.780999655 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.77995902 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.779771612 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.780471403 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.780248824 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.779569055 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.78108098 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.78059608 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.780170848 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.780409892 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.779682029 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.780735013 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.78081854 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.781323843 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.781002607 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.781529549 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.780787427 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.781950678 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.780865642 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.780400033 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.781183059 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.781523779 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.781329927 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.785048981 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.781393359 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.782419088 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.781167212 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.780218022 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.783127613 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.782519197 seconds)
  done (took 129.9015424 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.78183135 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779096943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.780902514 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77871035 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778445702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.781953932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.779152423 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78166198 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778746098 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.782924353 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780757257 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779052316 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778794501 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78243117 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783829986 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.779955675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782950938 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779765279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.78091606 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.781776566 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783720099 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.779135998 seconds)
  done (took 40.888919963 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782316829 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782416608 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.780990809 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781881628 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779136837 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781846239 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.783129373 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783160775 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784960863 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78040976 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78175897 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78296253 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781486761 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779282323 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781590896 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780280444 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78319811 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781183235 seconds)
  done (took 33.784371774 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.78125758 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.781454928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.783445726 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780141373 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.782151151 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784277887 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783512967 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784103903 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.784260012 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.781804527 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.783719478 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784402514 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.78544549 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780379812 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785677217 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781508052 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.784315469 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782029109 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783885193 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780859566 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780838585 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784534586 seconds)
  done (took 40.937349253 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784900279 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.784742347 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.782983747 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.78187514 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.781916481 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.785927501 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.784345295 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.781236201 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.784738674 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.785105704 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782768646 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.786960297 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.782823679 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782554892 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.782281262 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782671618 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785750005 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.784610993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785164515 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.783226906 seconds)
  done (took 37.390864819 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785891947 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786554915 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.785705683 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785661061 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786197375 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.784042584 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785778377 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.788131392 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786592758 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784387449 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.785291514 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.786713813 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785640713 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787315984 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785445536 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787438939 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787456283 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78766202 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.78689051 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786219134 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.787220028 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786171259 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787633509 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786382737 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7882405 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787109511 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786390958 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.788718574 seconds)
  done (took 51.738260203 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786486508 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786433653 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.78377949 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.784541058 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.782798385 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.78336722 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.786418359 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.782646655 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786220998 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783855667 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.786314613 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.786588285 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.788294275 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.785871004 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786923169 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.787538595 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786614714 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.785769465 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785620178 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785074265 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.786539519 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787067245 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.785730638 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786672648 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783757616 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.787403873 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783675171 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784427974 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789627069 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.785290836 seconds)
  done (took 55.289136925 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.806157429 seconds)
    (2/2) benchmarking "in"...
    done (took 1.804843694 seconds)
  done (took 5.328274298 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.787929281 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786841574 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.787920107 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.785571077 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78640107 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.788446449 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.789067131 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784893133 seconds)
  done (took 16.014274016 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.787012847 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.788627696 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.792407248 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.789388294 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.790034063 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.789978272 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793884721 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.788276737 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.790712581 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.790346391 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.795462018 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.797519466 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.790225607 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.790649781 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.788777025 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789454381 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.789046642 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.789231706 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.788629834 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.79136441 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789989813 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791294773 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790157374 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.787171608 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.791222657 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.798110022 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.792206441 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.791786618 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789411396 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.792072385 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.790412815 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.78838754 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791506659 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.790600654 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.791799357 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.791337291 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798277467 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790107312 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.794903667 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790150394 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79051109 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.787930518 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.790018394 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.791282691 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792758005 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.790985517 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.789767638 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.789498304 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.790047747 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.793224727 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.795370296 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78913859 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.791323208 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793405333 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.791308178 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.798310658 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.792319747 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.793437633 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.803646611 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.800692558 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.802086638 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.799107276 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792843483 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.791111354 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799340422 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.814652143 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796546858 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.789078971 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.789348964 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.792628273 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.798310192 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802765281 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.802358387 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.792540347 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793416945 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.791336193 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792774642 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792186949 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798632087 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.793536007 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.793336534 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792985539 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801806409 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817552714 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.791942393 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.792367006 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.793280842 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.793352478 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.792999942 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803472324 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.792896466 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.79428177 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.792345116 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.792997866 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.797948287 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.795373199 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.795882155 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796542338 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.789659227 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.791096443 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794135456 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796564784 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.803127517 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795449648 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.794158741 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.799016219 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.792389917 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793660933 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.8036727 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.792615285 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795407069 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.796610411 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.799316099 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.792679169 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799401539 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.803365681 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.793348352 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.795607083 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.794068897 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.795862667 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803707678 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.82052106 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.794873934 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.79346811 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.798731358 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.808579473 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794803505 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.797364162 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.794274948 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.792269714 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.792818173 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794665001 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.794789877 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.793164393 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795122851 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794541575 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.791865502 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.794251271 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.793934014 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.794837024 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.796303791 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.7951971 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.79694227 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.796515198 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.794664711 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.797353937 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.800398381 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.794999831 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.797130784 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.797871732 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.79385463 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795451482 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.796366973 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.7984066 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.796235259 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796404912 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.794470319 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.79667644 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.797967355 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.795631004 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796808144 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.797289567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799411502 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.795966396 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.800324921 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.796026041 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.793967433 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.796818143 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.79662246 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.796856076 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.797827842 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.795142706 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.799395696 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.805108074 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.797296256 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.797385734 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.798265788 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.79751394 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797136606 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797851773 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.799789798 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.805485576 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.797913211 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.803131903 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.796691089 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796762949 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.800005407 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.796331034 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.795777815 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.798792935 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.799591955 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.805494524 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810074706 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.804001043 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.799763923 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.802745072 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.799172628 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.803991713 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.801257519 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.797944952 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.797951797 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797752458 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796852299 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799816857 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.798353878 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.799077852 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.796980281 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.797024299 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.799360793 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.796760697 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796773487 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.799528944 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798760544 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.795619217 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798883328 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798197053 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.797730761 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.795696317 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.797775723 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.798957662 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.798991414 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.799689661 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.8048837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.796461294 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799566027 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799548397 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.798348877 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.79745163 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.800867989 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80176104 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.798609717 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.8058039 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.799077143 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.800535915 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805918179 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.798730043 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.800256006 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.80271955 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.798516747 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.798236878 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.801699002 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.808615875 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.800216322 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.800580722 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.800947471 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800160078 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800702096 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.807107241 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.797345742 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798914627 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.800819649 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.800793708 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.798591234 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.802244283 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.800942023 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.800518464 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802190038 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800789492 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.800963463 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799886312 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.80103687 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.800288941 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.801297631 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804236999 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.8091466 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.806448113 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.801087435 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.800362881 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.801008665 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.80566003 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.801487316 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.802540564 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.802274151 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.811860031 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.810237459 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80495333 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.802382619 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.802233895 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80827776 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.801844913 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.806410885 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802484692 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80203199 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.800590215 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.801081135 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.799686437 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803665678 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.800831021 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801986027 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.801490367 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.805427284 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.800737198 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799982581 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.800076085 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.802734216 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.801233302 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.799988409 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.804280953 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.803584565 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803177733 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.80007103 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.801037325 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80810972 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802404263 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.803121994 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.802332348 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.803943138 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.803039376 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.805648252 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.803783941 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.806343115 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.813626219 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.806084177 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.812276221 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.804866009 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.813017405 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.804718464 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.805629664 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.812686347 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.801705016 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.803426561 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.803711663 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.802759451 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809454549 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.802796371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.804899949 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.807872686 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803409266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.804038415 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.804843687 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.80595305 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805135501 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.804698306 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810836737 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.806054461 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.808822009 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808204974 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.802911637 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.80619728 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.805124399 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.803598497 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807769789 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.80506277 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.806082 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.804738728 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.805996898 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.805491541 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.8061152 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805396541 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.802677836 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.806657303 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810070691 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.805979271 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81074824 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.805180364 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.81237015 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806002935 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812928463 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.806457979 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.807280422 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.805894262 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.806144535 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.80921256 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.80613253 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.806329234 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.805963493 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.806664367 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.810951117 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.807107352 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.808627849 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.806766779 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.807781697 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.805340288 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815976695 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832039331 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.806773147 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811773021 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.803574549 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.80842737 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.813771951 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.807129004 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.80461083 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.810698558 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81778263 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816674816 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.807108726 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.806734818 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806293287 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807760216 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.806548315 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.80770278 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.807829802 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.808351611 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.807514131 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.808524979 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811290354 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.807383401 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.80810198 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80929837 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.808884291 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.817258975 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.80764449 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.808759106 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808395383 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.807835793 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.806531623 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.80810966 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.807454047 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808873154 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80783373 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.809334266 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814850027 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.816197372 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.811007012 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.808344138 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.808191686 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.809384326 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.809522757 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809182203 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.808896961 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809028141 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.809772175 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.810601207 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.809546645 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.808020403 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.809152084 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808732343 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809830736 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811495747 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.818281998 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807875771 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.806063567 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.810341032 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809635104 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.808136036 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.809415764 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.8170386 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811972793 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.821457561 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.818795467 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.815174445 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.810978558 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812621899 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.818129666 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.809085905 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.812108199 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.810323756 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.811143784 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.810026133 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.814185179 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810420369 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.816186224 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.80843891 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.808613465 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819271298 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.810074363 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81074206 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.811170704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.814127917 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.810260042 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.808282799 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.812111851 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.81011184 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815594147 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.810959825 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811343835 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812172709 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.810121169 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.81190865 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815481073 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81197178 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.812615093 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.808865304 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.812097184 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.812451478 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813386951 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.808776317 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.811029977 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.81105665 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.814978397 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.819568621 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.81063707 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.813881562 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.81167296 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.812521556 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812594757 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812048466 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.810033572 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.809186273 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.812723488 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81233687 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.81276773 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.815775328 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.812446214 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.81414335 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.814988238 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814627266 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814737764 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.824580873 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.822684684 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.811062312 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.812648883 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.814799352 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.816391395 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.81437899 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.814348704 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815061103 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.814404226 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.813568615 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813999246 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.813324035 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.817207805 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830928678 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.815027288 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813897938 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.813788719 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.81823064 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.813345703 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.810805819 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.812259643 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.816804825 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.815241409 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.822808733 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.814314725 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820061402 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813647809 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.814920456 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.818034845 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.817601584 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.822001973 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.816030243 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81324776 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.81295483 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.818069761 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.831143038 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814894383 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824060834 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.844850588 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.814525265 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.814607668 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.814394826 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813031052 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.815894893 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.815746454 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.814075755 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.817124515 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815746707 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.814950019 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.816630857 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819553062 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.816365998 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.814730597 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.81457238 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.814572699 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.815712991 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.812717445 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.816720012 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.816710671 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.816532864 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.81744714 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.817255751 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.817646987 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829182086 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.826558283 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.817314205 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.817362292 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.814322787 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.817706368 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.818724128 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826135291 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.824329352 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.817733125 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.817306009 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.818798793 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81758601 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.814954305 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.817477924 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.816299998 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817922967 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.813708625 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.830408345 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826331671 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.821502625 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.816482641 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818863599 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.817771242 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817150868 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.818367864 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818144029 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.819315475 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.817622251 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821648563 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.816903681 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.81605363 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.82056862 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.828896822 seconds)
  done (took 1077.348110006 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815632381 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816299204 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816483538 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.816556175 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815239551 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814677848 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816192419 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815546797 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814363111 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814736724 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.815834801 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814906193 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814757018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815162181 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818728612 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.81789687 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815071356 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816758918 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816603278 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816624041 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814975276 seconds)
  done (took 39.880666349 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.816705817 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.815240859 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.815313525 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81713648 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815376076 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.817148686 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.816961487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81812516 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.817724426 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817179036 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.817492517 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81784202 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.816433406 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.814713399 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815128941 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818261193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.817619142 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815671296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.818152991 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.816647928 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818556845 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.815937333 seconds)
  done (took 41.716728733 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.819716452 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.819924891 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.819847409 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.816161246 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.819451855 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.815555894 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.818388191 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.818868775 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.819776504 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.819105373 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.817473787 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.820080135 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.824815361 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.824687363 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.820223894 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.819014686 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.964289978 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.818526873 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.819194853 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.821669063 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.815987511 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.822725074 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.816041911 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.816696586 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.818472383 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.821074168 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.820063784 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.821391471 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.820296881 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.822544831 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.825816162 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.820320564 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.820519563 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.824305758 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.820560614 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.822548312 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.826105982 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.821374424 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.818582805 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.820417057 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830179243 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.842863024 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.821308188 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.825879406 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.819434629 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.822532509 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.823748151 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.829999119 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.820039164 seconds)
  done (took 91.137720795 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.821256069 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.822104373 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.819936675 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.820428308 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.821594272 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.821783806 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.820296988 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822157879 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.819124118 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.818869556 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.822003365 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.819921615 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819787251 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.822487897 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.823108742 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.821067054 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819869602 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819378132 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.819645797 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820671864 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.82033074 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.822618558 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.822744336 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.820679486 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82263263 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821059853 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819723323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.822644958 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.819745589 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.820697178 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.822556517 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822664538 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.821898636 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.820647154 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819932549 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.823317689 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.824423497 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.820177207 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.824160087 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.820769885 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.823641207 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.823643508 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.8236848 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.82443518 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820924075 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.821764559 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.822489351 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.82175493 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.821296361 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.823938895 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.824331142 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.822208774 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824590165 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.822015295 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823871282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.823982093 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.820967335 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.821594237 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.824412618 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821866413 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.82238002 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.825275538 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.822785915 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.824134976 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.825417872 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.822793994 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.822254662 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826019683 seconds)
  done (took 125.649935729 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825001048 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.825841375 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824651262 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824816132 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825971738 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.82566546 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.825183088 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.825531816 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.825052564 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82562421 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825981522 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824954183 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.825938702 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825083041 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826381012 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825904205 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826165886 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826255119 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.825742152 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826853675 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.826236362 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.828252109 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.827634058 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.826684713 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.8271894 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.826887009 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826435199 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.82742453 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827926769 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827321812 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827652519 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.828054108 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.828395591 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.827909033 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.82895193 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.826586293 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826898596 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826984026 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.826873364 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.827938914 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.828531125 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.827428016 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.826579445 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.827664773 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827077814 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827857421 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829039585 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.827555133 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.827815267 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.828380019 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.827223889 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82768366 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828050443 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.829086034 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.827871559 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.827891355 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828460274 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828147412 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.82807586 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.828677779 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828396861 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.828965802 seconds)
  done (took 115.03298526 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827776708 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.82815553 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.827780278 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.827310748 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.82768819 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.825801644 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.827612688 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.828346211 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.828427244 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.828583156 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828690243 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.826773142 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82766868 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829062415 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82599476 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827631212 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825869473 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.82737147 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829712336 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.826498278 seconds)
  done (took 38.308914269 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.825916135 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.828794553 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.827729553 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827238568 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.829472137 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.827557248 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.829838362 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830289347 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827042381 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828532836 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829680244 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831701819 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826903978 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.828979308 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831259161 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.827745096 seconds)
  done (took 31.016329801 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.828012576 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.8299528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.830434263 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.830868491 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.828641149 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.828693395 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.829993857 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.828098069 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.828481816 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.82998479 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.829242345 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.830525657 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.831293315 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830756916 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827982293 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.831149512 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.827241872 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.827957152 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.831458292 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.83104931 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.828702284 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.828490576 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.830607242 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.831552498 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.8289038 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.828483846 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.828737473 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.828626819 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.82840372 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.83181072 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.829201711 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.829996365 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.829759932 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.827838164 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.832332953 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829542916 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.832609722 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.832226659 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.831777006 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.831935481 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.832608575 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.83080392 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.832096267 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.832697317 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.830152274 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.832055895 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.830742595 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.831073675 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.829289344 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.830294518 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.832493896 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.833981903 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.833408153 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.833208175 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.833034429 seconds)
  done (took 102.431733669 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832418605 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833100592 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830753687 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.832805088 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.833752118 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.829854202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.833272655 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.831922288 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830546087 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.83451606 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831826046 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.833209645 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831958405 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.833336511 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831746693 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834381964 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.830800412 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.83080704 seconds)
  done (took 34.743552189 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831562704 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831084988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.83383666 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831680552 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.831662072 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.835509387 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831633629 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.833815166 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834194617 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.833523747 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83213075 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.835792212 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835160058 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.83522728 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833381087 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831246946 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.834698728 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834327556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.831120974 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831511674 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835077558 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83479271 seconds)
  done (took 42.095265714 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.834042353 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.833798626 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.849928881 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.856300077 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.855111837 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.869654315 seconds)
  done (took 12.861460399 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832353231 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83570088 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833732103 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836054653 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836194358 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833882435 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832348276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832460064 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836675492 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83552442 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833022676 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836121367 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836000952 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834156995 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835297807 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836627279 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833421019 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834315076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833485079 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835194177 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834415858 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83666989 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833405521 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833744979 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835017643 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834456417 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837981997 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834017573 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833808209 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838493056 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836300747 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834637934 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836766422 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836580556 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837494527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83803191 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834345921 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837628027 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838388556 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835570332 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838167785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83886064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837994776 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835572967 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838342504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837195256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834888538 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834668832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836403217 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837959002 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838376871 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835489491 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83650305 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837937508 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838325721 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837679156 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837076253 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836169477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837755224 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83573778 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834834267 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837887038 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835999255 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83643718 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837891244 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835723875 seconds)
  done (took 122.935477372 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834870028 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835133508 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836102842 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835775486 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837493814 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83684918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836186513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837070648 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8363173 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837819182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840606336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837148859 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839193011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837355732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836799036 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838799032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840639285 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836266425 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835979645 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838924851 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837669733 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837012816 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836972378 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836850648 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838741813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840711593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838942878 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839976543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838214756 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837574289 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836992585 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839029454 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839323138 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.840015568 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838377144 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83921683 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838328617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838301096 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840148817 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842934599 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839178307 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840301709 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839543791 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838962841 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839562617 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838690455 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839332609 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838886363 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839742543 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839725847 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839340324 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840077869 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839580506 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840330755 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838921992 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840177306 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839807335 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839492661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840246952 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841708372 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838006817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839380948 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842287129 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840409603 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838104133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839774837 seconds)
  done (took 123.121203287 seconds)
done (took 2510.541760145 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.820525266 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.896937209 seconds)
  done (took 15.487440329 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.004333023 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.95551758 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.840820829 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.861395992 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.839468569 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.864428467 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.859080218 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.839018908 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.840645648 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.841041909 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.841380352 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.027866404 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.842490512 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.837736595 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.840930359 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.934497094 seconds)
  done (took 51.85290561 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.845114939 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.845712926 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.855065967 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.847732897 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.843081659 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.855277387 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.874481073 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.84630106 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.878548212 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.856716441 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.914532447 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.852541465 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.843265946 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.893472229 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.856198544 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.85883603 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.937949261 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.9174208 seconds)
  done (took 35.391955929 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.922189345 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.857691636 seconds)
  done (took 10.558873746 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.861248276 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.845809516 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.839986535 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.86960667 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.853093267 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.851739191 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.884195637 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.881593171 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.847359209 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.880489932 seconds)
  done (took 70.390152778 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.852666955 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.846638978 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.846314608 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.845028362 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.83922691 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.840595461 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.844835646 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.840307128 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.526030489 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.880245821 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.853263771 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.854118371 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.844064641 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.848329843 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.843243372 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.869383889 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.966735136 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.842687119 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.844458894 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.851322413 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.843953573 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.898528653 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.857102746 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.847074275 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.875356845 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.527777307 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.851716777 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.85141986 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.967549717 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.843109424 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.84650086 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.846279824 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.8480055 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.227503068 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.125405136 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.844121924 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.852747439 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.857150693 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.843220986 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.975241646 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.846617315 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.852280902 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.770877679 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.098821836 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.955225222 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.89183257 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.229158153 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.851197716 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.847731084 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.882329104 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.850166089 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.848596934 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.863150829 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.350889989 seconds)
  done (took 131.326343579 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.842068069 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.10719282 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00052906 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840530698 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134142729 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051137507 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.844046319 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892699367 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.843622165 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.076726363 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062466449 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952584568 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843530804 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.840492861 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.842973417 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.840177967 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005987591 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.916742444 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.843653405 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.840773679 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878378483 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089854047 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.973404146 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.844662255 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.865065588 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.058811829 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.971419811 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955652789 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.295906814 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.842651305 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910089385 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844389104 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.841636735 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840670374 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001293231 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.940433085 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931728354 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.84768289 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843317879 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.84221108 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.521155476 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040809353 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942707835 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.989868138 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.09776964 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049079658 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.632581422 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.843375398 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.581560747 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00606941 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.081232583 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.079787139 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.970282814 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.84419579 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.115102488 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843145093 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.842616447 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079748777 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086648655 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946716353 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846147041 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.842531907 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841351411 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.091544592 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.842676086 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.938837517 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846871371 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.841770628 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941166288 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.947176448 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.094166801 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057621686 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.882336848 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.142677237 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.314577669 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093783745 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911693781 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076468628 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845435856 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841545326 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93325437 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.692297121 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.046411487 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.094467298 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.099136756 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881753578 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.566630355 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.842377271 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.073680113 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.066905059 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.096390894 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.087543603 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.998294126 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.16006803 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.842540573 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.845150112 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.123651078 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982729032 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.846327425 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.206397859 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079470425 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.418149434 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.876908782 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.156179748 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980316307 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.85163295 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.487831172 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847048318 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.073612492 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.889171957 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.849030502 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844174118 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.067011022 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.825885121 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844634211 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.54864675 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.91102574 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.848535505 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083086605 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.846406977 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11287664 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.847482056 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090627594 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.215033912 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881518526 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.021188113 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.090946794 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.848651193 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107229026 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.101115089 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965712238 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121553192 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.780587591 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.847293539 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138631394 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848696406 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.850333201 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.023026216 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.849691255 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.083106695 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.849612826 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135276709 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872744222 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00829256 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851613144 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.108029818 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.883722498 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900962398 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.849125843 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.981216783 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85064754 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.723297063 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002109368 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851819492 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.850781596 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.382807165 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.849016485 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007671403 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.083245101 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872033562 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923570847 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.520126123 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848854155 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936772992 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874320758 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.193211877 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.847107019 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.065438711 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.851373659 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.379122708 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.848242436 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.092034351 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.081734519 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.85125644 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.845483162 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.759496294 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.849519938 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851496913 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.010031954 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.672630133 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848159606 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055238506 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85145745 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984694127 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.853434555 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.926119997 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.202001963 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848440746 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.849670923 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.853112079 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.849494334 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.848180039 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06134156 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.879923693 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.37497279 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.990281331 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125979243 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.170898127 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.106612246 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.896681001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.85296316 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.099414913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.852379525 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.91551172 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.851557077 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875928799 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089257396 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854717938 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065097204 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.134708408 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.779492413 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902519647 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.852128463 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851348122 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.766073764 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.006563936 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944817795 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.850339741 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.851750159 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.971724858 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98088285 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.068295074 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.852098579 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.080726137 seconds)
  done (took 898.650684652 seconds)
done (took 1215.426765467 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.851565433 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.850887761 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.836478768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85157419 seconds)
  done (took 29.176981604 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.860335137 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.856054885 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.860904188 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.856964075 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.860138067 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.858911941 seconds)
  done (took 12.937615455 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.907782354 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.84929581 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85155009 seconds)
  done (took 21.392997739 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.92735884 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.263268082 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.969553215 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.300053902 seconds)
  done (took 10.246255342 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.861111277 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.862778363 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.861120156 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.862357523 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.862809288 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.862615425 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.860820354 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.863679048 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.862639439 seconds)
  done (took 18.547099538 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.256899333 seconds)
done (took 98.342687512 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.139475617 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.225393164 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.956616661 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.683376219 seconds)
    (5/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.937375482 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.076358149 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.903390966 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.841944811 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.670129429 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.851538789 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.981251007 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.898261229 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.879375906 seconds)
    (14/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.987736994 seconds)
    (15/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.345620428 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.882883294 seconds)
    (17/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.957893659 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.839669482 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.338568779 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.957693065 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.637122531 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.85656681 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.872977257 seconds)
    (24/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.935495738 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.195280219 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.839714601 seconds)
    (27/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.41166842 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.367022428 seconds)
    (29/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.939436656 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.158752805 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.372378754 seconds)
    (32/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.145321539 seconds)
    (33/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.919776783 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.997154875 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.304657684 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.853939835 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.040747652 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.974535205 seconds)
    (39/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.419762594 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.078637057 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.939552164 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.853891979 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 4.037837014 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.987010354 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.13046349 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.178537879 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.938363452 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.247832513 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.969277595 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.226176112 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.870293154 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.843499907 seconds)
    (53/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.963275969 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.115087919 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.91890883 seconds)
    (56/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.011567619 seconds)
    (57/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.257599435 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.317419044 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.89831345 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.924945432 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.110951576 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.156625805 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.186057814 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.917095504 seconds)
    (65/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.202008104 seconds)
    (66/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.938612245 seconds)
    (67/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.875113754 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.184877922 seconds)
    (69/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.071835221 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.860386968 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.163195074 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.153182811 seconds)
    (73/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.888820008 seconds)
    (74/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.62261306 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.119023068 seconds)
    (76/309) benchmarking ("sort", Float64, false)...
    done (took 5.639852392 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.803305473 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.968957973 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.077395603 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.97449614 seconds)
    (81/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.989316451 seconds)
    (82/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.943247074 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.99589393 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.858324703 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.02263568 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.859129751 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.561520147 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.548614801 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.979624909 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.885619355 seconds)
    (91/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.373714156 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.855461986 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.100533851 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.042983732 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.888533533 seconds)
    (96/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.053819322 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.228888293 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.928645625 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.920075468 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.242922546 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.844894063 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.23913092 seconds)
    (103/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.960702643 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.32106982 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.864858991 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.933359967 seconds)
    (107/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.396289353 seconds)
    (108/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.426391688 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.964953084 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.952467456 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.242989386 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.170422163 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.967995239 seconds)
    (114/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.925788749 seconds)
    (115/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.860617649 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.857621214 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.895834086 seconds)
    (118/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.856766443 seconds)
    (119/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.015156486 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.076351088 seconds)
    (121/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.34148716 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.862141274 seconds)
    (123/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.14831773 seconds)
    (124/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.426626564 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.922937173 seconds)
    (126/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.322815364 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.995727391 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.864963136 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.986369615 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.832640122 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.279743036 seconds)
    (132/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.860525136 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.358818722 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.881247007 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.191689859 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.156670683 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.247857732 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.413739747 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.135559797 seconds)
    (140/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.031299499 seconds)
    (141/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.473609586 seconds)
    (142/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.876104498 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.861690016 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.310762207 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.07348161 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.967405525 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.113414018 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.846077827 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.528018123 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.568000172 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.280612928 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.05785839 seconds)
    (153/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.845353124 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.864491068 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.962214272 seconds)
    (156/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.94698075 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.645771312 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.315795543 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.848879933 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.902928867 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.131771103 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.148035163 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.885120081 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.212131379 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.511950048 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.896172831 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.200380196 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.893941582 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.971682185 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.891075771 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.01726053 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.887631306 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.171252418 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.054816779 seconds)
    (175/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.883016588 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.034220787 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.846656133 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.046469204 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.107989471 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.893361876 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.882979886 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.29543465 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.986081096 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.848293327 seconds)
    (185/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.559302575 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.003041916 seconds)
    (187/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.850263799 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.081004802 seconds)
    (189/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.947582541 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.045087193 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.249352824 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.849125773 seconds)
    (193/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.138380636 seconds)
    (194/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.013786573 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.004446431 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.055575398 seconds)
    (197/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.376167223 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.896980669 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.169406034 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.854422933 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.453853088 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.848832373 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.911291445 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.972235372 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.892058968 seconds)
    (206/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.994847875 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.943424985 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.925160037 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.671814734 seconds)
    (210/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.884768164 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.113062362 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.017883697 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.20358693 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.237527249 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.501657203 seconds)
    (216/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.180282061 seconds)
    (217/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.882443907 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.950097166 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.963884825 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.877230318 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.366233922 seconds)
    (222/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.034372058 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.667056094 seconds)
    (224/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.193244204 seconds)
    (225/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.432169795 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.082031998 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.03429243 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.971170555 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.406258116 seconds)
    (230/309) benchmarking ("sort", Float32, false)...
    done (took 5.591624329 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.852610839 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.98094421 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.892922253 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.88711395 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.792692128 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.920994085 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.059278203 seconds)
    (238/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.069016096 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.896877373 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.333977978 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.958695148 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.979935308 seconds)
    (243/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.225679084 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.820391079 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.872543007 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.874825943 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.51864798 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.092914748 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.560473296 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.882749129 seconds)
    (251/309) benchmarking ("sort", BigInt, false)...
    done (took 6.866892485 seconds)
    (252/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.715293047 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.958518627 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.008890909 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.434923228 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.967701964 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.866911463 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.957436603 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.170644849 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.101917647 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.900834663 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.111346216 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.944956683 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.869862548 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.626468508 seconds)
    (266/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.123621483 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.055087464 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.961843875 seconds)
    (269/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.953947816 seconds)
    (270/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.868468221 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.919605926 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.554032532 seconds)
    (273/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.798491577 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 4.822185018 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.871915175 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.034578048 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.092286666 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.90896756 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953853002 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.011168251 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.17011556 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.115404713 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.894272159 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.625300816 seconds)
    (285/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.867140173 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.853425353 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.309751579 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.95389059 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.856129664 seconds)
    (290/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.045745823 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.281660253 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.13268689 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.908775903 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.277623202 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.141940728 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.871199468 seconds)
    (297/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.854370726 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.512512536 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.487497701 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.943560026 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.997367137 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.354849068 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.677304873 seconds)
    (304/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.999352816 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.89428629 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.890171162 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.856658412 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.305587261 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.978805757 seconds)
  done (took 1017.597215355 seconds)
done (took 1019.449783425 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.907713542 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900667129 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.881962219 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.903674109 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.996961172 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.916220191 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.892143074 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.887272663 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.931024781 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.933318928 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.883183205 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.916537475 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.887088955 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.884359508 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.884780896 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898330967 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.193671031 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.912723225 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.901724446 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.891809432 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.901446983 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.884104804 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.936505297 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.916809863 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.885706082 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.885756811 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.887332319 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.906151848 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.994118234 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.887651362 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.887888615 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.895395872 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.193410355 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.90980633 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.878045958 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.905210501 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.896847694 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.893777482 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.888650167 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.916499329 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.333440463 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.889745712 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.888207137 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.886062676 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.884804488 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.888380315 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.888534809 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.891222603 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903797704 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899079744 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.332862726 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.906709195 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.887488452 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.890078474 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.895781908 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.886867747 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.887531634 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902058902 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.907748841 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902797839 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.183585456 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91581628 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.888425646 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.90206267 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.896259184 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.37025572 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.8858199 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.890447189 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.33863255 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.894736182 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.370229208 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.899183162 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.887295703 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.903838106 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.918326259 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.196724257 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.906105214 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.886133943 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.894129241 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.886653345 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.897887353 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900191784 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.892025179 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.887329823 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903057399 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.919462891 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.89713806 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.889782105 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.896229499 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.909033063 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.895018255 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.899207554 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.891349043 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.882180731 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.896981315 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.89033175 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.890622526 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.892548059 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.892310904 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.897006703 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.337755389 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910081524 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.886574627 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.884214597 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.88820717 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.908465736 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.332944536 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.894758472 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.910737124 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.93653392 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.894283349 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.187282439 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.917363312 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905216268 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.897676011 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.892493103 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.881988647 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.18750889 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.360944909 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.906557192 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.893160061 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.884946037 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909221748 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.89385194 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.887069672 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.199599871 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.914672446 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904189553 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.011680373 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.899423296 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.922728221 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.888163436 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.891589569 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.922792203 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.905674108 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.921721622 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.891579017 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.905746152 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.907446036 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.886913629 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.90183803 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.899594915 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.89001316 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.895663635 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.883248918 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.924822374 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903308119 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903043051 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.912294792 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.012047531 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.887245909 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.188104159 seconds)
done (took 296.721877285 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.960401153 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.884730008 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.986328515 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.885041845 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.969288131 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.99166817 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.882810981 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.884105284 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.883290351 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.280820985 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.883488405 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.883614345 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.885236957 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.884377611 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.969766646 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.885704494 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.882249812 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.257213572 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.886832153 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.957888855 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.887222536 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.884203447 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.885207748 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.302555874 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.880954361 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.879548991 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.96660531 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.887184315 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.258017508 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.88030383 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.884876751 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.260670294 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.993492363 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.905357918 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.89778244 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.89605799 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.984950941 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.888677146 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.98061923 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.97022062 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.992905459 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.928380804 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.880737237 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.882265922 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.889252011 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.889907341 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.885191872 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.915101582 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.878459119 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.891938142 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.246765604 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.889484714 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.893179747 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.886053581 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.885336913 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.908956608 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887810612 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.890052086 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.983606162 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.890550525 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.960632982 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.297819561 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.298994526 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.888614645 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.888259928 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.886758449 seconds)
  done (took 185.787930959 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.955166412 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.96284122 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.955815962 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.892131304 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.94048288 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.95823865 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.889176738 seconds)
  done (took 15.366348604 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.895309185 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.891568483 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.939979302 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939201448 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.891107649 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.039721635 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890236707 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.902421124 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.888450431 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.942046039 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.891002975 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891178302 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.896792613 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.891461371 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.938413546 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.901922573 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.006371739 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.890389982 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.891473123 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.040552764 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.887107158 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.898045662 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.954151101 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.901763028 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.891904436 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.896972516 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.474564407 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891647561 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88850232 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.889747464 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.887907062 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.929632501 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.890263487 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.883341502 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.888022279 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.004180538 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.891305675 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889317418 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.892097146 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.888358825 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.888827384 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.887776885 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.888113582 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.888268231 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.891896272 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.911967475 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.888811204 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.890678906 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.890328744 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.88903061 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.938813721 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.890777465 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.888036539 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.890063249 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.94730938 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.898835664 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.891725324 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.888780604 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.890003728 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.884780894 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.043879653 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.940454625 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.892359083 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.93992138 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.891734918 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.891675189 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.891572752 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.892051488 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.985670249 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.892375839 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.938360967 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.889480831 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.050517594 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.916285441 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.893245261 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.893034772 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.894799887 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891659458 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.886785737 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.895022163 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.88981199 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.89327108 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.899093623 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889589373 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886408988 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.00465161 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.999375887 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.889572066 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.906041412 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.898430276 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.890108202 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.945671724 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.893898142 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.892080841 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.948668416 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.009622848 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.957408733 seconds)
  done (took 207.926245028 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.898790409 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.899069402 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.895081504 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.911972944 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.891263226 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.895585773 seconds)
  done (took 13.21044227 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.89673092 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.895790066 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.891614439 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.894079483 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.895494853 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.894263581 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.894981232 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.896489828 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.897063053 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.896050677 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.894617447 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.896014474 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.897659805 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.893692897 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.894804923 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.894018365 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.894759411 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.892948418 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.895780713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894820129 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.041475927 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.893757987 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.891773918 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.894658404 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.898430046 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.89573532 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.903945664 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.891817463 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.895900855 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.904092261 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.897627569 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.898463824 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.894855764 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.900343418 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.90059806 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.897664887 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898526533 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.896447469 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.893470308 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.897691472 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.898256778 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.895177471 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.896232099 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.89859949 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.899862287 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.902468514 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.900138642 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.903474874 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.898003074 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.897987788 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.894800142 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.897144085 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.898464166 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.898661231 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.899247712 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902019812 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.901168143 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.89815813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.897087883 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.897671044 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.897741528 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.898289904 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.896227671 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.902963362 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.905332188 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.898772443 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.898377698 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.900713765 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898571828 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.899617468 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.898516074 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.896231439 seconds)
  done (took 139.575721941 seconds)
done (took 563.694144566 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.005470923 seconds)
  done (took 8.825830342 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.01706547 seconds)
  done (took 8.940511864 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.367617877 seconds)
  done (took 10.192827968 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.901612141 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.906568276 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.888866271 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.890416075 seconds)
  done (took 29.422763366 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.111175699 seconds)
  done (took 8.935086281 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.909110207 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.889890765 seconds)
  done (took 15.661045587 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.9849723 seconds)
  done (took 8.809904436 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.983156261 seconds)
  done (took 8.824303419 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.921832938 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.932450974 seconds)
  done (took 15.691985467 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.879888708 seconds)
  done (took 8.70020343 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.620999267 seconds)
  done (took 11.453864255 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.896578615 seconds)
  done (took 8.736446173 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.969063704 seconds)
  done (took 8.795578326 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.907849779 seconds)
  done (took 8.732061393 seconds)
done (took 163.544031468 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.895531001 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.891504715 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.892649575 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.891423506 seconds)
  done (took 29.393780345 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.934114954 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.931494278 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.931958922 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.944081619 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.936570383 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.933260665 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.921114807 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.925298555 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.944367514 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.93896344 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.935098282 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.935475859 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.935488785 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.927188655 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.936412852 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.934618142 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.944637232 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.933548439 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.926294018 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.935022385 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.899439944 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.943760595 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.935796501 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.900590609 seconds)
  done (took 48.188694756 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.098380546 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.972739286 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.052287919 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.953823303 seconds)
  done (took 9.901845177 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.95337902 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.954065368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.966936009 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.006004353 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.028620846 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.964827426 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.929129995 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.920903728 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.908011996 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.95384725 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.02729311 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.949007766 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.062128517 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.900345419 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.086069435 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.903577274 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.902260126 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.953967811 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.004733286 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.019954836 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.904257758 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.952926584 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.958309832 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.950475531 seconds)
  done (took 48.987358771 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.899490284 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.908770654 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.907905753 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.902721752 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.900849513 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.902398744 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.908398626 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.901166313 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.924498582 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.90234612 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.901037816 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.899635811 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.902152983 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.902220985 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.900950774 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.913129163 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.913190411 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.902108347 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.905157407 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.906671657 seconds)
  done (took 39.932405496 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.895962519 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.747343045 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.247742743 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.153562725 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.897345157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.895049626 seconds)
  done (took 31.662949705 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.916613798 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.909321514 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.901058094 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.958350155 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.038058166 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.909506877 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.905925189 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.913025212 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.946086607 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.964694439 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.923089882 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.928761018 seconds)
  done (took 25.041991467 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.90003491 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.895868943 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.898166965 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.909669223 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.913570075 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.907282632 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.910890565 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.897256808 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.913338883 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.921107873 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.909791664 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.918484203 seconds)
  done (took 44.727455355 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990740028 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.791566179 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.986765515 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.624725154 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36982832 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108427232 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427412105 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238147226 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.903618508 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174290001 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.110449443 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005729336 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154149161 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902132035 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.918242111 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.399669486 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202664191 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149503669 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922916863 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802138127 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951228307 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422891756 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.859998183 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959632954 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11175534 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.030163746 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.161673599 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.859956511 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037077989 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939253779 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91263396 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89934356 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173391073 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289800391 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000186094 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912051622 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.555622507 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.619254197 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.893068354 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.732073041 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.804014264 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.02834906 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910941309 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901670209 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.835474363 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421133788 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279795916 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.905849276 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.609580439 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903174805 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909895682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988224196 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.905537795 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.715095682 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892314067 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.179590886 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.898173999 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908803004 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474905879 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.066536051 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457523383 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.875459582 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.096665332 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.740225641 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308103264 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.054766606 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.90648421 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904998216 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835999948 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.732763115 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402152805 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05099901 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.920016975 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550083552 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206658335 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.164023758 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844664397 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215992138 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.705451713 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.88011479 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132175647 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86004476 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837692526 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.762977747 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841982788 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178213827 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939045303 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.554920861 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943645153 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.240622914 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911595759 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917567625 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905226054 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126002916 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.470103556 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903488006 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.836126947 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04826204 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92520807 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241945645 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838196109 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.903981812 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157661796 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.116154208 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.142296298 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.437414354 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067688411 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903964073 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.983186481 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.82532118 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950853994 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.192027325 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967631131 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.07224077 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964359805 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.869379404 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220701028 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932498179 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.069904622 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.139988402 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03156126 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.247030625 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.204019091 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970762589 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906712476 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.903580345 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.802516971 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458432106 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.172631122 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.908693304 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407565075 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953005643 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.909306305 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843523286 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.530652369 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151033152 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.874970292 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132290854 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864956513 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218511937 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839665517 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053072751 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.019292216 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.127901258 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.56485219 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.987906732 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165919612 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398931738 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.167389796 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953400536 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927055491 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996262142 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929252252 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.321698053 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.199011407 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.912057011 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.909547655 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.800194492 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914775065 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908841885 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.913834728 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706466891 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193859587 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938732218 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.916153729 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.795878976 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.92188497 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974224853 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915425403 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.92165218 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.454990516 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.658321466 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.918003037 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.535923178 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130571818 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920695879 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.716644878 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023695643 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.993005827 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188914407 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9730193 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.84541459 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.620382229 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.603322376 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911609189 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846840387 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909553356 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919087097 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920503544 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.290513018 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198842022 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956432039 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.737009138 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.954705254 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919738947 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.916389286 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910232263 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.453012913 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.074543212 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469193226 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956255219 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047503171 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.924708869 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.844620584 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.913657705 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915708368 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912067473 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.867522619 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965056198 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.785829238 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293785376 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163938933 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.558976519 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923709206 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.762413349 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.973164908 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.985588886 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.878002888 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863468215 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.070896624 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921440153 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.922050436 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.738472718 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.60983369 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.478676391 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230287244 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232040631 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367294248 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.424210481 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.217279204 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25004572 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146349149 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441511047 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972162479 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258145368 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856864967 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997702923 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.564350148 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267431719 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922669678 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139447895 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308990499 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.787158132 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092946331 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12055116 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948705465 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.843297611 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873599519 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.115643675 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055817963 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.77967124 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11631651 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250659527 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.75157556 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.034779272 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.910660369 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.625815695 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99882747 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.620672927 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.273878575 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432588819 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.035321534 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400759897 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.914325571 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.357286379 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278932481 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.24092559 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.035426383 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848429376 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925167791 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925350467 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.91456997 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.908898273 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.786607454 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.164889742 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922848908 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149941386 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.178386277 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22497002 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.83496834 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.919776817 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914930157 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2187057 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.714984716 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086566766 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.361198438 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.44709452 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917834697 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850129568 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849614184 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.606481057 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922861473 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.891429269 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143540482 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.101374366 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.901887061 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412911729 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157798712 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169405455 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.924096547 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.197736835 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192370465 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.649011947 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941104723 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.015709484 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.714333643 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.02917894 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.182877782 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150314552 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717854763 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146710498 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.99973106 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.740864981 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.915334885 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131071903 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186143719 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.995657423 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15392917 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.639652199 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.920886812 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342186032 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978552845 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.00483805 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07696045 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.109695132 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924691238 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000526413 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92735306 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.926890766 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925177456 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961340031 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.003700176 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.046338051 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.931559301 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004277048 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.092470193 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.452861476 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.92009544 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204396144 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285518331 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258696677 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981869775 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919542728 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918633758 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851847757 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053515006 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363697296 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19106617 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.050171912 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.21670656 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942375102 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.746505664 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296777788 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161776058 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191060043 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.812440175 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918834492 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941569679 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.185857697 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930398843 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.129730801 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152055349 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243974422 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389857144 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.167565611 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288807932 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191366295 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.285961989 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920183251 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51080664 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.930695361 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.744272461 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.96173404 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005321669 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189519166 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93172183 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307406496 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942742374 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.11952448 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.438177722 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.779577839 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210119607 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.913672355 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982082842 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204818141 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321066647 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235074411 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992632585 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932345994 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.629142381 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058157372 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.798724177 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189748908 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920877265 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133648029 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.632195484 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.931684487 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209745883 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236227521 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.919993048 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.803511912 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929619361 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.933595044 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147411658 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205517863 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173876333 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931847212 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930914998 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.740223738 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211275247 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981459502 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856088129 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.925624657 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022012698 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172641749 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943662636 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.61142957 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.631333387 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227134051 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.842084738 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943101828 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447817214 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308361207 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260965835 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.471405194 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156743484 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.482959731 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.895083281 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225157202 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.92897582 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441475019 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233393384 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.925682789 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.553432999 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962334467 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.202754804 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243376306 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.933248783 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858923258 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.895069087 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145680279 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516717188 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862661378 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923099452 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.984387707 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922755699 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.056212605 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93363689 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.828639911 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868624625 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.6748127 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419721664 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.928839819 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.918087975 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.737671944 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.59262391 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959370142 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069157579 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932886135 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.648017567 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.220556046 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178995785 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.550556218 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.934103386 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.930023401 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927896295 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854623229 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.132077311 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.306639947 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231739306 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.37981434 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.963231257 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929710785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.144407133 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138184306 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.934996263 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065750903 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417909727 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962417021 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.65511817 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.602202222 seconds)
  done (took 1711.641535086 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.925078272 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.965357437 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.994924832 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.926155271 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.974392007 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.047475026 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.027565401 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950719189 seconds)
  done (took 57.668133794 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.926671299 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.121363662 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.935611008 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.925417452 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.934304803 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.925560294 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.095672301 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.935214714 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.948997561 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.936588399 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.939547366 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.923711461 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.23868343 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.950184262 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.926513413 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.934435102 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.933782783 seconds)
  done (took 75.424463056 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.929498284 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.139754281 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.965730885 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.951191279 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.873953094 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.927273828 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.897200505 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.932043091 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.931609617 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.151799028 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.262591195 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.947689613 seconds)
  done (took 90.768782626 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.937815365 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.933041368 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.932401101 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.932465035 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.934298046 seconds)
  done (took 11.532257913 seconds)
done (took 2226.759959707 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.17668613 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.154551195 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.154082019 seconds)
  done (took 6.16691826 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.072851552 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.126228212 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.242324995 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.245756844 seconds)
  done (took 10.546244997 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.220365851 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.299363943 seconds)
  done (took 6.374578563 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.341006196 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.929274896 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.324684079 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.923109099 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.924970987 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.922616156 seconds)
  done (took 22.632710292 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.9309963 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.931818124 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.928693333 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.931755118 seconds)
  done (took 9.578937893 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.910358869 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.665879194 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.909344071 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.923676904 seconds)
  done (took 21.264447427 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.678969808 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.328419977 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.673205134 seconds)
  done (took 9.535925866 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.444758729 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.822193904 seconds)
  done (took 9.123304829 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.181730006 seconds)
  done (took 4.041859108 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.961775772 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.203528274 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.451970408 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.462435202 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.540056824 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.790039476 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.247723584 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.174557639 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.360372681 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.372234902 seconds)
  done (took 25.425303876 seconds)
done (took 140.317737706 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.312531943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.173367617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.12806303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.27772895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.153536894 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.126739558 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.147199201 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.265508247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.773719037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.772741501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.275979399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.176139447 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.087512379 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.163824481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.095651133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.163837729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.150207018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.322796816 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.97213186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.170057456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.147921514 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.906004365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.120213837 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.916852107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.150002997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.080717217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.496978219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.165111778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.128090865 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.504489158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.077881278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.324290158 seconds)
  done (took 174.587556464 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.927928739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.931470466 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.928489393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.929007359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.323004827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.929269507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932820338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928691851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.023743918 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.016502612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.938794208 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.348868442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.946564129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929937542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.935605524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.931711155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.206576751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.937443023 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.941933988 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.944898565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.951756403 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.17973289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952324851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.227209101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.248294834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.951375907 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.933925155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.952424774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.939419803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.940289556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943217973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932416083 seconds)
  done (took 209.951491028 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.933895174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932074218 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.931711674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.93208581 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.930895085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.933718216 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.934905185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.93178237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.538793787 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.535997823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.937573883 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.938563375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.938828817 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931302157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.935766807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.935067102 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.939145332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.939495663 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.936383667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.938802249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.945024183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.723395962 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.943207364 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.722851932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.936876846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.939490466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.932841311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.944438143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.949610095 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.950118647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.953541374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.935867073 seconds)
  done (took 222.660197068 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.131329884 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.94144645 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.942302519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.889567822 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.942046343 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.943277769 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.900650145 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.139857024 seconds)
  done (took 19.722685192 seconds)
done (took 628.793506043 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.429253094 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.26811684 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.118582468 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.964451425 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.205457324 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.002867697 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.962500286 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.02577144 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.686901458 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.03042032 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.649433573 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.979084201 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.740857786 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.985866199 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.084978767 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.018370509 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.501351435 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.591512394 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.139359025 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.027137114 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.138525195 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.900335057 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.039539278 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.717351604 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.759009058 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.951391076 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.133903732 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.50906428 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.970015714 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.124887235 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.75542386 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.359974303 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.976024538 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.959046598 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.016002169 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.994719239 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.313495407 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.972225593 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.081049025 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.702387716 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.057193675 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.581193949 seconds)
  done (took 106.29001455 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.934686897 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.931297587 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.930964805 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.931967658 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.934129489 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.932675025 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.933297614 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.932288425 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.93272321 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.931958965 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.93286788 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.931974508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.931092334 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.932973342 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.930747113 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.931049149 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.933489685 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.936023241 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.932535228 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.931396875 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.931778133 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.934353366 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.945613602 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.933779425 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.933752701 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.933930368 seconds)
  done (took 52.143986482 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.94560489 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.110811258 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.199378292 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.961976602 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.946414572 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.948643542 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.963848638 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.949229598 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.94827648 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.947596759 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.04062013 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.95191468 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.96508835 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.205515455 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.957934372 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.949946239 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.947013358 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.946724807 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.122147834 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960768423 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.964760531 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.94870301 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.963688584 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.957989544 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.949164106 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945312702 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.951054707 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.412974771 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.953887333 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.040212554 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.988023712 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.966327223 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.369054858 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.217169898 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.001757205 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.954060106 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.947083536 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046297463 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.952154828 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.94800054 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.966926283 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.949129747 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.204912751 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.453614124 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.960084885 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.948979468 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.42958946 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.052078586 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.987431651 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.957113034 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.210733495 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.9620705 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.949164105 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.94883026 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.985122237 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.958488063 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.948209027 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.271293572 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.957365708 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.965410509 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.952113958 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.950842311 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.123966011 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.955555358 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.113914738 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.956258943 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.956137445 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.948250322 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.209260798 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.962482802 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.452922155 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.961253058 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.95160498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.04421339 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.119962637 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.454659174 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.963200944 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127997954 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.386105917 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.970228317 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.956460844 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.410534672 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.977505876 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.95443847 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.955823546 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.953465964 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.95255139 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.997079806 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.968219217 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.376925083 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.451820914 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.288560026 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.975013346 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.965558917 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.952831848 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.274955447 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.957221392 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.956555385 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.203633875 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.460617523 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.96159305 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.958219128 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.437874955 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.962631597 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.969796097 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.956574907 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.215503375 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.964586323 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.999270832 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.952640325 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.957223708 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.953453065 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.968802079 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.955118263 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.952951016 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.428959617 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.06040544 seconds)
  done (took 241.592477717 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.944715108 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.961024508 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.946237518 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.947218454 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.943572467 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.950817873 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.946501301 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.944924965 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.951590686 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.945481944 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.945420296 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.94999387 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.949875781 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.949329395 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.451924098 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.956733301 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.563113028 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.950944284 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.950504015 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.948257724 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.62978772 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.958855793 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.953339926 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.953793815 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.95302797 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.950321579 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.955066082 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.98785972 seconds)
  done (took 170.320969695 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.957204085 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.141864404 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.977734845 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.998526843 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.965759237 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.957257186 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.983556036 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.978272456 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.96272601 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.956224292 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.959332503 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.022512279 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.969365462 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.098134947 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.9860416 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.988417068 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.064307046 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.963871045 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.958764838 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.956257639 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.988120735 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.952090235 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.020781354 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.088432567 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.974848725 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.075584366 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.958729471 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.958850606 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.955679882 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.079231032 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.96902479 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.01963749 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.983727335 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.976870169 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.081750651 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.076827543 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.064841177 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.986827689 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.965327059 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.958584999 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.958282019 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.948626057 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.077180159 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.978097622 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.959892713 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.069519222 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.97743771 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.961779057 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.968409012 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.959106907 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.972378945 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.978123166 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.026114967 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.094400558 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.992300406 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.985543085 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.982146847 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.267933145 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.96868936 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.061830478 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.951003579 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.081087765 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.979147621 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.950338733 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.961171597 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.965510485 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.988669954 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.992319432 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.06813469 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.967140277 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.06062462 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.99482523 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.968297531 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.96093862 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.961127153 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.079741101 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.080887615 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.995357724 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.998802437 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.994461564 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.957581028 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.961220964 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.950306087 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.979537677 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.96850581 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.081319549 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.07888589 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.968683341 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.964499886 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.964721008 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.965596585 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.988312133 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.089843769 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.993537941 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.060690953 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.028470231 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.03621954 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.976881347 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.975809754 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.96598299 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.026079466 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.978619056 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.973566667 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.318665552 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.033721645 seconds)
  done (took 212.339826394 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.424505792 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.01363228 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.019758747 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.289213202 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382874286 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.834779402 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.010696595 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.010836831 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.031407173 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.199077123 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.082325038 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.033241118 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.995503094 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.984392171 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.010721983 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.02918302 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.020329277 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.335896471 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.128027058 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.134576184 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.993294503 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.291372917 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.329403516 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.436847494 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.046150091 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.346193033 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.687560856 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.160119936 seconds)
  done (took 64.157075889 seconds)
done (took 848.708837329 seconds)
SAVING RESULT...
DONE!
