cset: moving following pidspec: 18482
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.463135383 seconds)
loading group "string"... done (took 0.514634575 seconds)
loading group "linalg"... done (took 9.373433508 seconds)
loading group "parallel"... done (took 0.171617704 seconds)
loading group "find"... done (took 3.086563523 seconds)
loading group "tuple"... done (took 2.186112054 seconds)
loading group "dates"... done (took 1.409835272 seconds)
loading group "micro"... done (took 0.198531265 seconds)
loading group "io"... done (took 0.520655437 seconds)
loading group "scalar"... done (took 58.253839242 seconds)
loading group "sparse"... done (took 13.948908964 seconds)
loading group "broadcast"... done (took 1.297406985 seconds)
loading group "union"... done (took 10.453924848 seconds)
loading group "simd"... done (took 3.710256023 seconds)
loading group "random"... done (took 13.762447069 seconds)
loading group "problem"... done (took 2.178589271 seconds)
loading group "array"... done (took 24.43615494 seconds)
loading group "misc"... done (took 1.151844795 seconds)
loading group "sort"... done (took 3.783012137 seconds)
loading group "collection"... done (took 21.959300811 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.702206413 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126141846 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199241762 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.201984776 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.275783428 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165738068 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157370443 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.148266243 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.692449452 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202833508 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136622985 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.355641687 seconds)
done (took 6.12561326 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255793249 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060160905 seconds)
    (2/2) benchmarking "String"...
    done (took 0.191519634 seconds)
  done (took 0.939387078 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076500867 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158111279 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106802696 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093501513 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093484396 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107518775 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093022752 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106715157 seconds)
  done (took 1.45065517 seconds)
done (took 3.416753371 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.490753047 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.946211287 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.516858423 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.187181539 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.305974089 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306922719 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265897334 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.226445205 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09044076 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085006439 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.19418112 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.419052354 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.3975898 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.963701227 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.06917762 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093741509 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.157959783 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.772732721 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07865925 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109777389 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.518878418 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.218582667 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116467425 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107153533 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184602722 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125806741 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.14342016 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101690951 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676235188 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129595429 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.210944448 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082982942 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.141076568 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.162360034 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214587635 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108815669 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684278119 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.197094803 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094855986 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098925616 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674596443 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116349969 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208256807 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105225994 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068139541 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163230179 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11263217 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077101276 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092811686 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100813065 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159781622 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460566474 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105293637 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.196030934 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092357813 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.70746112 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09548991 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274893917 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123817327 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092114019 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.08950271 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088095352 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.15370696 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094288066 seconds)
  done (took 20.176352107 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.190159173 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.208157806 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098614093 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143276523 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143149989 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079648137 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087984429 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094016953 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.112742578 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196367297 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.126200735 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.214059813 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075491254 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.106565171 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.164556542 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250981035 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107896178 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120158743 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087889928 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093431262 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143122787 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095586712 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092657706 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11101866 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169021338 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20266297 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109354794 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12190972 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088621967 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096041635 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141951066 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145927221 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093806606 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.0873288 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173417699 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123080596 seconds)
  done (took 5.408180434 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.232358163 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102741124 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.247683415 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.18686509 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125220345 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179184829 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.192067617 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.302549835 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.248574044 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163147885 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125558516 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095998214 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078591092 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078259689 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095506476 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.804028226 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.168853471 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139418291 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185016164 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113097472 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079922105 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.215856774 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083115161 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084454468 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.1121698 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.119422156 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333189304 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.219641827 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093328246 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.46960131 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082133482 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09413767 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130282544 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191669185 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134632005 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119837572 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109150275 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082050394 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083783688 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206660536 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096654303 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093596953 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.077811686 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130064808 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114705428 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104593089 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104705213 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.131583945 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084321013 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106058421 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.052370464 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19165763 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.163081499 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10131345 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083060309 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.277036674 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10515981 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11545855 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.089602858 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.809102222 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118870947 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096724713 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078244617 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092374232 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094949357 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.453549699 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100678683 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.286772995 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079997581 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155031121 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093863341 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112840056 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085564042 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083125169 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121538103 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083811719 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077542098 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10096318 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079815863 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086421962 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1285816 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084327017 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094756951 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145596599 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093752797 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118340494 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108580851 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102581062 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084554907 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126169257 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08022563 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086728026 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.202871609 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112322875 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082929876 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111383464 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112210032 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142911061 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084996469 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.284056332 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095374915 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120831756 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09683869 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113993008 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109793227 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080159865 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083298868 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095028606 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080233017 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146419315 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097886831 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079885582 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085436668 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107236026 seconds)
  done (took 27.04922183 seconds)
done (took 53.323943939 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.425426959 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08098861 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100492244 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079931855 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079526843 seconds)
  done (took 1.529223124 seconds)
done (took 2.265598523 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.296985683 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196193434 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086398749 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185817535 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086291332 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191276062 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16148613 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118638013 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202780914 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083960368 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1879216 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084406657 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087109954 seconds)
  done (took 2.736684186 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1019026 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105224988 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101172477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117947759 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086121476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101131392 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118336504 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106809716 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099727535 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112049496 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084990565 seconds)
  done (took 1.87968538 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099114994 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103271026 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09160525 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116372977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084572717 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097101988 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114288371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106799341 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097755163 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111463894 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085330888 seconds)
  done (took 1.848360066 seconds)
done (took 7.206593429 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.193222339 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.79738638 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.17959054 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243334354 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.33059381 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.294861566 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.606677274 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.200179675 seconds)
  done (took 15.714023431 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.217158346 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091772726 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094258071 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093997833 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109459126 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095477439 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091922604 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108889502 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090878931 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095850411 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10853594 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091025098 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090680722 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094850831 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.112683919 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095124404 seconds)
  done (took 2.487590447 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.133714631 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113600951 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115902381 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09813389 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093123991 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.115787684 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10033513 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096097194 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113930419 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093945141 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101063686 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113220443 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096215788 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092238626 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114715328 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117181673 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091944828 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113793629 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114427452 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096941664 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116696914 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096255422 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095262696 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115186895 seconds)
  done (took 3.376244136 seconds)
done (took 22.319277282 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.139082766 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083216078 seconds)
  done (took 0.969890538 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165810357 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.185251219 seconds)
  done (took 1.106938489 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111199344 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088857823 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13568128 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101944405 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089613486 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107354696 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114718764 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.089946166 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.107657967 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090377827 seconds)
  done (took 1.796897675 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094018439 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094415866 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119987734 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.158001162 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115777648 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093649616 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093466534 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.111371405 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095487829 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089970633 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112406841 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108029886 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094092874 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124142375 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096039324 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093991664 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114401835 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09437868 seconds)
  done (took 2.663299179 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089681716 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091172991 seconds)
  done (took 0.941154304 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093400285 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088931972 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090851392 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107910086 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089651772 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089600889 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105509535 seconds)
  done (took 1.424998285 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.517533916 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236913876 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370846518 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073067487 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121277979 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.317607898 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.103284406 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071715002 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090976186 seconds)
  done (took 2.696619418 seconds)
done (took 12.353016582 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091059781 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.205840111 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.601665506 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129237088 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090297544 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.14496063 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.339850296 seconds)
done (took 2.370057707 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346272088 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1813074 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083592182 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090874415 seconds)
  done (took 1.464336218 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081457491 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097811597 seconds)
  done (took 0.949877559 seconds)
done (took 3.184713624 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088555548 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08736176 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086458382 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10617003 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.090429462 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087825767 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087540111 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.105790328 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.109220195 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087404843 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.107996018 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088112854 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087405814 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105860291 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088452461 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087894535 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087424265 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106259277 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089055774 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087481337 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105604659 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088602418 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087509216 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.204634626 seconds)
  done (took 3.159704696 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109473539 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090484235 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109733211 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093219434 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093003485 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109433405 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092246959 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090184714 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090972768 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.109107228 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093053802 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091542671 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107685871 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093226814 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090475103 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109884501 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093497922 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090309347 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10725202 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093657 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091969171 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109977845 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092790144 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092425707 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110747859 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094380524 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090974266 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107983139 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095123836 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092886647 seconds)
  done (took 3.708379198 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096101163 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086028454 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087386227 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114374617 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086606796 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088717984 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102459978 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089428236 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090193841 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087340866 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107717556 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088741383 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08766864 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106057338 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090511071 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090845389 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095510631 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.105837531 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088582567 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090274103 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110406325 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088491627 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088601727 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087733965 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10556631 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086552763 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089557988 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10484342 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08960215 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087730365 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090104147 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109654781 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088941492 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097688166 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108013173 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089238022 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093703825 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104023659 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090560896 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085079702 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08535982 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106420409 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089773707 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094940165 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105848078 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090948556 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089134489 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08895331 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106540347 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091601516 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084793256 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105597815 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091737017 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089724438 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090438705 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104063494 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089365744 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08626563 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106156191 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088854021 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087349426 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086225714 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111612814 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090149758 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102153956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111951405 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090704804 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09047015 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10727639 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094354553 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090820547 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116189077 seconds)
  done (took 7.617975028 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.112212331 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097617902 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107828354 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090365693 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088469649 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088084735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112035117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089045028 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089624268 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112937822 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089677348 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089112985 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10660358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091091925 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089641578 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090129109 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111585576 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090304632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089490765 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107373486 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089578214 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093462719 seconds)
  done (took 2.903820842 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216564057 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113793151 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137893375 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120054579 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105915831 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120607585 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094814199 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095042733 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111212107 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098521937 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097491635 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112229532 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106083482 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097600567 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115567392 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099234785 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093114004 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117978554 seconds)
  done (took 2.833110478 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102024069 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091708012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152220544 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090798309 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091333776 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109272487 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098071719 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10994649 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109801369 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091274246 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098820195 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107947217 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0926052 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091314763 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090218142 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109755748 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09252149 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092168647 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114361286 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097461094 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095373568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116156841 seconds)
  done (took 3.026899732 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104755183 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091697983 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126215236 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095023911 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090283963 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090385801 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114201581 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091522806 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097647826 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108890684 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091284457 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090240077 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122942803 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092058134 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095813187 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110061781 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092533274 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091206873 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109135294 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0920356 seconds)
  done (took 2.780398527 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183954703 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124705696 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109119908 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113488161 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126303045 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107958683 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133257786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10702676 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10733994 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134466847 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10733913 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106469115 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131372929 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111901772 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124213072 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1147408 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11460477 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135513899 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10751929 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106509905 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135647136 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108040356 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134101753 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108092656 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106159235 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124624854 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107596702 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111591891 seconds)
  done (took 4.129257725 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090377123 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090210944 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090217223 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107501502 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090030221 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089711936 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090126329 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107939903 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09085584 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089111167 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108566405 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092690801 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089689021 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091052837 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107213958 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090985766 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090404832 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108281384 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090693744 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090395557 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08995527 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10729831 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09051601 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089581701 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089343402 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107884628 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090311215 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090408661 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107451951 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090865873 seconds)
  done (took 3.638272283 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101778333 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09929761 seconds)
  done (took 0.990548838 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098162926 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105920199 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090341491 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108459968 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096323325 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09038269 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115744133 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097455709 seconds)
  done (took 1.593301445 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.183401079 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.206396728 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.113690475 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102573626 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.206397049 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.186776333 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129899057 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095564636 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110499143 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085168075 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.200082914 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083394948 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089885948 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.1082722 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090651159 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096201084 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.113114332 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099852265 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097524162 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.112624826 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097184199 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095381695 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11211752 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102205899 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085945989 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112078107 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094784336 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102062572 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1066111 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092627966 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089493917 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.112129045 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095780935 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095313933 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091240941 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.20519835 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118750128 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087629359 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090691732 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116165431 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123869029 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091021373 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112095918 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090550135 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095320414 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114129724 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096413173 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091259344 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101534485 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087143218 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092508938 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086437759 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.109347545 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092294265 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090643924 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116572795 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093114363 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088417562 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105782906 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088166147 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090424169 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106509598 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09418285 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094541484 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111106684 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092753626 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091798406 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109502702 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094328946 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092491803 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090323698 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125096316 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091775123 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095756823 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114953251 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09245305 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088253385 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116142011 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091050205 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091461241 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.114986413 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120748465 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092306638 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107104455 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089494629 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098343069 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112542389 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09563703 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084887183 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119659613 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094705591 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093421534 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084580529 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109691323 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088485691 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095236594 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103373254 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092596667 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090965219 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.11609979 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098793258 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090908843 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111921428 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098165292 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098384199 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109005892 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.143478292 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088699363 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109234675 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095010393 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096985758 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106262735 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092921583 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09088254 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088799147 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108777285 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097519823 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091760674 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114271335 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096749093 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093209369 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112662545 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095951249 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091540572 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106905243 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097340342 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100517247 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111677804 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094931666 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093280483 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09292272 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112479436 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096610841 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088338178 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116276857 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089642591 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092766513 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113410831 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09766447 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091875392 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106905098 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091874047 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092479068 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.109780855 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097009635 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09341065 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106862681 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085156254 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093222266 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087749399 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.114148016 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101015824 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087581881 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.114049768 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089350239 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100643641 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108217585 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097958703 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094436253 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.116428379 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098346011 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085473299 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088747842 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114372985 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093760547 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088659388 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.113870739 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093051804 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098613939 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.104811004 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097693064 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084665122 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108794785 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099235852 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094018928 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095663045 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107524809 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131230562 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105935765 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118189 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091322211 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091891591 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115745643 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092518912 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096983268 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117389991 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09898288 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090256147 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110782083 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099089313 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088977445 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095587075 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110227323 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096211015 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085414475 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113977011 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086551814 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096944699 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113041656 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098567621 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097222209 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114740126 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091904363 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1005605 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087626175 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116774952 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085748506 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097107092 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122527368 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09846949 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098604478 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113494431 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090588848 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093090973 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119861863 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09594922 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091662549 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091671386 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10574141 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086643342 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097613318 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114805257 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089043675 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092470303 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112270045 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094980636 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090206651 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105679944 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098024693 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095087183 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107392342 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093961259 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091489017 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090739125 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119710254 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085198324 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089098045 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115263347 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097539722 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093493336 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110810805 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096299058 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099523764 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114685263 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095448462 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089889346 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099979909 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111362231 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093317886 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088092276 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116106145 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086751335 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094970207 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113034947 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090147992 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089063805 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115373133 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099446785 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098889274 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090217193 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118765114 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.09873179 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.097490641 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110969114 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099118769 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087814635 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107172624 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089893907 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086102108 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115365802 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089785195 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098197843 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090354875 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112026021 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097735982 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103428489 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110899169 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098306593 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103244614 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107892498 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086788354 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089854314 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113048868 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090161925 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088557426 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.114877594 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094392896 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097968882 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114939024 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089521959 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092582211 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098337325 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110264463 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099660475 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099227445 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.1183873 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089759857 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096831664 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.111215248 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097023443 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086108708 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112247415 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092279861 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091685448 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109921043 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091386721 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088748251 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08599851 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110501389 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098241069 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0905441 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.116915808 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092666745 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090272716 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110700685 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089139706 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108979913 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111994265 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099728126 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09379634 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085916123 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106972309 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097424206 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092641189 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.119611061 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08879459 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096221838 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120189769 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096641814 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093078675 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121846473 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101650613 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098810555 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118105933 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087156244 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090737901 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096670935 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.114162388 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095918627 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094779152 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108140907 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095460871 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10032257 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11441888 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091833159 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086116602 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093896747 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120252907 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097458621 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095822501 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.114732482 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094504052 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088181052 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116568367 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099987751 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092937711 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118973026 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094226516 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097139002 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089440916 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119662226 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095401149 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0875337 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107961837 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092425747 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099613759 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107629562 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09870319 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098407551 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089953563 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112245346 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098712669 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089485071 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116139046 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097316213 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090860263 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123580022 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094948594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.0904977 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118599045 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099929429 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086461281 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090848305 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112673663 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100396018 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092567734 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.11897314 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093186037 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098472356 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117090663 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098494374 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097634938 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.119879162 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08727639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099782961 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095652792 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116900718 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090147627 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09184411 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10957309 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093691148 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099543108 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111007872 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103261148 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099264666 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111650131 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091367335 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099011988 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112311885 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102030837 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090155664 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093706629 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107830056 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095672148 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091635342 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.121544427 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090585526 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087248245 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11954544 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098415126 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097186431 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116619364 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100837917 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086622543 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087256164 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117943208 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091421395 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102772927 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118417868 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092002858 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091034394 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.116487394 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096458234 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10069379 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10834077 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091017703 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09430011 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094730439 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112878287 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089582679 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097504458 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113762044 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095929077 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093169819 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109226055 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093663482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100055377 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111062224 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090639349 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091741995 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120787289 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094425797 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09035067 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088140338 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120170109 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095558908 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099992218 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111253167 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094105314 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090408292 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117070962 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101507991 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091808228 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114609988 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092258791 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098804448 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119397277 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088933174 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090804179 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123883148 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09931754 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096302656 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096298073 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113880777 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100768351 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100284203 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117701897 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088940831 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087665393 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11321081 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090079092 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096522023 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097637491 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113878564 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091529415 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09820581 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119516521 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098791419 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095936988 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109582463 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10247652 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092462141 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116031813 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089250967 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087785338 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096815278 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12082604 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093639155 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094036044 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.118202526 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096524311 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088644194 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112720192 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098338257 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097461636 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099845218 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11545276 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092158748 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09657643 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126699111 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096494601 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093554039 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121330126 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101404009 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094695621 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115092205 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101502644 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100450315 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117257509 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102435963 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091244967 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113650896 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102431182 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101298127 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102832012 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115400474 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089312181 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098295724 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113115233 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089042603 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097178357 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124450789 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10192437 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094065837 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111818615 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103969487 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098180899 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114658655 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09339717 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091728827 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098048795 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113147995 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098523641 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091178832 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123510815 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101949114 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099496857 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123478542 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089620619 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099658196 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117696088 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102497183 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096153453 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088092674 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.11128751 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097451972 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101748265 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120978871 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099398076 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098258415 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.11955078 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096102816 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093918595 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091624082 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123762769 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100095357 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095878625 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11665616 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094250549 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094850947 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117813893 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10127073 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101312717 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11532814 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105360932 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.1006443 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113623948 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093280515 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094426563 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097574714 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116581905 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099282623 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091779818 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110682284 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101033531 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102006652 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113989012 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102847344 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103376727 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09326373 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119940997 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102555726 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099053793 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118389283 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09548558 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097396401 seconds)
  done (took 61.459526079 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143653946 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10295702 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119645073 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097382409 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112575076 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121104317 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097353443 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098417739 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119814019 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107195668 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098059563 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117217165 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111614065 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116510978 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135238551 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106934928 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11704456 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100182615 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097167591 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097985268 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132138552 seconds)
  done (took 3.193366659 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114037407 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110374008 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129098121 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110574403 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103845943 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128492482 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108466814 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130438456 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111101803 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105594388 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132386067 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107647017 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105876234 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126856223 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104758959 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125837609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110378353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103195359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129441107 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108666369 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104440758 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129092091 seconds)
  done (took 3.380303698 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127151385 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101456169 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095392837 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119439637 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100356244 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096992924 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11990926 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09880044 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105938428 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092098448 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109935366 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092851168 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095363256 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118213799 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093638041 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098031163 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125790234 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101167617 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102055569 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097109914 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110374533 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099161783 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09832517 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108556346 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103369568 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10220868 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.099052794 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122158568 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089582841 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10089546 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118851088 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091658443 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089825349 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087999388 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110151393 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100082018 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100554146 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117028104 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098473831 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088759239 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098946988 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121914256 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088852593 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098694115 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119352449 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093340365 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100775601 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096831985 seconds)
  done (took 5.790732702 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125692147 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155726628 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10142622 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126280182 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134867631 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106897635 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101406005 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128482699 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099611849 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.1226567 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113654087 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112875412 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124965472 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105316796 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102887752 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124957892 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10465706 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101614181 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127399992 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102702675 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105752597 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12426403 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11211901 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.109858721 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126350761 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102357848 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100331214 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126343655 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110455356 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12821161 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107070108 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10633065 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133587555 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104286173 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100990485 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122675853 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113098109 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102959942 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124796811 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100005169 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102600696 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126740267 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103864833 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112072794 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124813671 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102938215 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101260368 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.362116076 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110986773 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103262792 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.128752925 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112533663 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102847675 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124770198 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105285576 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13220648 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101956763 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10079122 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123719903 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110573819 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099696892 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126281478 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112211817 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101644561 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.128206303 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113284868 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102484286 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126193479 seconds)
  done (took 8.975488127 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131283153 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104443109 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135284985 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111790019 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103960967 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127537067 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106749134 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103822171 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127468793 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11081184 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126855342 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.213543524 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125485232 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11039454 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104522789 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129311405 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105120573 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103104058 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127847775 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106750562 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104181187 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135211144 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105116612 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133851578 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116214099 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101969269 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126486506 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106033568 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111670894 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126745116 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116798676 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125902238 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105720707 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112380675 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138179892 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106089567 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099351476 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126218621 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104466565 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104201091 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.124365272 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114521732 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128243763 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103175327 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105576713 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104951177 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134149433 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114705422 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131014395 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111048104 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.104156416 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135336438 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10611277 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125460359 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114112112 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.119880631 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135401603 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11445252 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127440413 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112765624 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112101902 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140957652 seconds)
  done (took 8.198871052 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098925861 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098596388 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098266183 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.1201789 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098606544 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098985534 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097691342 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120434725 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099831182 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098973266 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118948841 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099767645 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09872564 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098179238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118953857 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09922581 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098551639 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118454977 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09879505 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098529255 seconds)
  done (took 2.938163718 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108711192 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115270981 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122297136 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106946363 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100862418 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127396357 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101585467 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100832358 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100503308 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123407395 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108975445 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108864069 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122407634 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106807215 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129158273 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107601504 seconds)
  done (took 2.655903166 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118479037 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115763201 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.200407634 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102752226 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12386839 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108247868 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101752056 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126063673 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101613904 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106742137 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103705646 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127211951 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101638692 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103092804 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124169906 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105229311 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099987273 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126175186 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102897864 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.204444841 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10556955 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102595265 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125421524 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105329866 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102797045 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128054286 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10697398 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101571463 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124602952 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10254545 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103683959 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130281471 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101010408 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106660506 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102628038 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125317906 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101602532 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101482726 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127551757 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102668968 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104035999 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123778799 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101600451 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103731077 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100836485 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.123227661 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100023784 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105832649 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125131999 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103662074 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101868943 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128349575 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106136688 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108537693 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129571767 seconds)
  done (took 7.145277307 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112942807 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103214888 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135081813 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101137518 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103358918 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102749906 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126458085 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104318154 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103027544 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122655865 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103727976 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10430679 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123802384 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102929065 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103295384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102191559 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122310673 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104082224 seconds)
  done (took 2.849341641 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107201502 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1015828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105506158 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12384728 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102461278 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100931641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122001753 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10022069 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100448413 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10113945 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124133536 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102406959 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100465986 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124217352 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101558492 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102130906 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124103102 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102341364 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102142377 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100358959 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124149452 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101137126 seconds)
  done (took 3.246400783 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113918478 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.229859654 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107254171 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.235324083 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098044962 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122519261 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.107630308 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.122412445 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115842678 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097639206 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.119943704 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09772506 seconds)
  done (took 2.44095845 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12933863 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138738693 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125033258 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103407635 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109403202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130004203 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105731406 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105586762 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13817755 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116890546 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128462334 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115553227 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113919138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136011141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110119725 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10917702 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129685509 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106529956 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102810315 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143482617 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106460708 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136181256 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106586051 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106813234 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128347693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114056675 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114412212 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14121845 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106602835 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137077248 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111844228 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105994024 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136504033 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116928788 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125065995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113773803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107108524 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142303634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110925501 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135546304 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10466773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110712889 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136337284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111989126 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114460953 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130040693 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111747922 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106823165 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128202046 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126121754 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133857083 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114784092 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111191311 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136095871 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115036092 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148097996 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117874634 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137051876 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110066045 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116893542 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136069111 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111428892 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135926374 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119075312 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110505423 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137927429 seconds)
  done (took 8.85276432 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14099765 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103848965 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129325625 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117853302 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11494883 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130254496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10698034 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129840943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108345819 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103685459 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170503659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108318018 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114197881 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13803551 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107682236 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128649195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108286425 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115100184 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126797938 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128424537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107896936 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136159824 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115022542 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137161664 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118657886 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111194796 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129172351 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107871926 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106327644 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130580043 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112539045 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128494362 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114991016 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103056433 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136501674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107684608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107218836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134951562 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108570462 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110435695 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135877209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122324392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129555619 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108464549 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117174647 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129185932 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107545745 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10411813 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129222384 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106844525 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117288595 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141115809 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117229782 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137542908 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107369646 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109114718 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129665827 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108058625 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106799868 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133819453 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114533088 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130426619 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129350328 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106734165 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130801744 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115071735 seconds)
  done (took 8.801042494 seconds)
done (took 167.07861881 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174458839 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.21478265 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198603913 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155019312 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093150233 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153073743 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.125357254 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199389277 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093226352 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092190084 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117210354 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095714015 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.160915755 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.116382533 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094264128 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096312095 seconds)
  done (took 3.054447588 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194420225 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.339953814 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.132638539 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.097384197 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100265405 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098117424 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119974562 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099681681 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098076926 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128823223 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099165737 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094036608 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12770013 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096900364 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098439878 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120459794 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105096561 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09773289 seconds)
  done (took 3.135476618 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116501266 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14143924 seconds)
  done (took 1.14338673 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128381713 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.210953269 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291706619 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169382395 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11817185 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139629959 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149015938 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132627582 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188400383 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132338728 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110960565 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095979487 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147214585 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104638368 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113540824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119434279 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126385553 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113065043 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135910793 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09964577 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144369529 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103213967 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103048543 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136328371 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17841704 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.1326415 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103609102 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100823276 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123106466 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113541116 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104244745 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138535148 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109735159 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177091559 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101708764 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173394804 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105168568 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122189458 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113974568 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099504427 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124852744 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103209449 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111157291 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120319741 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102198502 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104160505 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125350944 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102184343 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106043131 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128843519 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107293445 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127037192 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149663915 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128007977 seconds)
  done (took 7.837087228 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.89884267 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14761221 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098978269 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.050938913 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142638444 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111707137 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.897025358 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147235123 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245980839 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.91688329 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115597791 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105464752 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260385447 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255843865 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.26275682 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359913438 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.75405436 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111804123 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131017746 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163555321 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105114261 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138947993 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115247084 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442896647 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100576237 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099224333 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125822922 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107856788 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173942649 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098891182 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103054213 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19591034 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292699909 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211030542 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099724474 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120414012 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099535756 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183775167 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271271679 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217075813 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168029885 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118746891 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099186283 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102739615 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136308133 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096561979 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179374417 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190538196 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166993842 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126634596 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107200783 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.105773026 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124561168 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177239583 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097917969 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355564621 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358271532 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120842987 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105529205 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11046776 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264993281 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123897439 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237721009 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120361868 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211413877 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121426737 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798802783 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163450026 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120665455 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103405473 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1040953 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126946259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102563774 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179918596 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398436335 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127833185 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103356058 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099509095 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22362867 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099911432 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121399269 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177961533 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101540117 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10406106 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129502713 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106480123 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18924651 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246415033 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12800608 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104463682 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125927486 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11064109 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099721622 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228884918 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229279864 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177227279 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226819453 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103464525 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181341983 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185785252 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104816138 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187826382 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104453724 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110433733 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126342148 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225084171 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156672224 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102085233 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104346193 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127265422 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137781306 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103335152 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129375142 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165886197 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478990244 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186982617 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09709052 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126183067 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104977554 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179417144 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106989767 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264233179 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127790929 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162926512 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127374101 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097971119 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105040162 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179320399 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106821802 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128786084 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103277713 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129733019 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256866536 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218974713 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131607329 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247962577 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.170804083 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127319827 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170545831 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129159987 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185809983 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109932549 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102848067 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122777192 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782890025 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110557147 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104129477 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126628998 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178803717 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120890238 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103111916 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099697164 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097584889 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830766016 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126199512 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098815994 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101940429 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127665651 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106974047 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103875115 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127295752 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178554419 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245793207 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108204534 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125762291 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100890481 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176940967 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101966089 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100787805 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0992534 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123445213 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10656305 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105170238 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125442345 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163124023 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177084213 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229153145 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577737604 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123363287 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10120492 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241726352 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121406139 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325171615 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105805993 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234835153 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181604634 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097075393 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360500567 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182921752 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202994086 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103095769 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192064353 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098405167 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12768457 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157520113 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123321916 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107823396 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177236869 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109818527 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106000694 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.283522551 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100438827 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245596998 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097625812 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188386648 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101506766 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104019012 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347270856 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101624995 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11091467 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178096261 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103542125 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123972144 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.881163485 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101272577 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109597159 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126887501 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233376138 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182098236 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10636143 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106214049 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131713969 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156749337 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.225526792 seconds)
  done (took 46.238505307 seconds)
done (took 62.293673769 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.222456417 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165331799 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.345437738 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146530138 seconds)
  done (took 1.879896382 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.258896706 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162932747 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.242276829 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097728078 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.247768285 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096394244 seconds)
  done (took 2.020550592 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.168286493 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161981145 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141665318 seconds)
  done (took 1.387238127 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208816759 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.20534381 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.343239717 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.231596675 seconds)
  done (took 1.987777679 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.271530499 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.1174049 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124322189 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.225810489 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.24001338 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204822778 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12193871 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174355847 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128591289 seconds)
  done (took 2.568224106 seconds)
done (took 10.754515265 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.34417077 seconds)
    (2/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.331536108 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.26149128 seconds)
    (4/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.287141654 seconds)
    (5/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.306952352 seconds)
    (6/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.349886864 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.439535765 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.163834173 seconds)
    (9/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.324905552 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102817768 seconds)
    (11/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.303119689 seconds)
    (12/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106565678 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109063063 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.282589816 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117198891 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13675799 seconds)
    (17/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.138098713 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.396580867 seconds)
    (19/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.235807014 seconds)
    (20/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.269481242 seconds)
    (21/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.188914415 seconds)
    (22/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087456799 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.145961895 seconds)
    (24/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.335024369 seconds)
    (25/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109152959 seconds)
    (26/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.182111494 seconds)
    (27/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.224712501 seconds)
    (28/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.13837501 seconds)
    (29/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.280484624 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127709848 seconds)
    (31/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.260910452 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.343124611 seconds)
    (33/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.236987047 seconds)
    (34/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08413186 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.125017911 seconds)
    (36/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078489965 seconds)
    (37/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110949061 seconds)
    (38/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083790534 seconds)
    (39/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.22435348 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130765608 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112184019 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132742993 seconds)
    (43/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078514798 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.195059786 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135772721 seconds)
    (46/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084206626 seconds)
    (47/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.154826925 seconds)
    (48/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.141533521 seconds)
    (49/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136923611 seconds)
    (50/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188019449 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120449886 seconds)
    (52/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.188218298 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102810451 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.214856794 seconds)
    (55/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.207165985 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.14687152 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080796303 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.207919412 seconds)
    (59/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.163299742 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102034954 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.119320747 seconds)
    (62/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.135845103 seconds)
    (63/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081996851 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103124866 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201418809 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11627972 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099863435 seconds)
    (68/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.154470316 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131402319 seconds)
    (70/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079690475 seconds)
    (71/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126919327 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.110090165 seconds)
    (73/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.179490177 seconds)
    (74/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108908189 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.127251757 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123223027 seconds)
    (77/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.175640032 seconds)
    (78/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.135758184 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105997783 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08421089 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.146425317 seconds)
    (82/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.160943105 seconds)
    (83/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108699419 seconds)
    (84/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.159294803 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104412232 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.132371191 seconds)
    (87/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.145762487 seconds)
    (88/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.217287812 seconds)
    (89/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092824123 seconds)
    (90/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.160427621 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100358519 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109355375 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.109314981 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103415 seconds)
    (95/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085250283 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.09958241 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128271197 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104886779 seconds)
    (99/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085495986 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150135087 seconds)
    (101/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086682531 seconds)
    (102/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086366698 seconds)
    (103/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080708922 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084601851 seconds)
    (105/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.163842191 seconds)
    (106/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110985722 seconds)
    (107/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081009032 seconds)
    (108/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.17775692 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.105342963 seconds)
    (110/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080935777 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081873452 seconds)
    (112/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084499149 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085145812 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134724726 seconds)
    (115/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1170353 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101093312 seconds)
    (117/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.171573175 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106982518 seconds)
    (119/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.145840217 seconds)
    (120/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.106056658 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104881688 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082661268 seconds)
    (123/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.088293363 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.191149312 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085564011 seconds)
    (126/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.166205686 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078503884 seconds)
    (128/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.106163509 seconds)
    (129/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082899921 seconds)
    (130/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085799166 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093629314 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102383307 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149376509 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123234342 seconds)
    (135/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078553632 seconds)
    (136/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.07839845 seconds)
    (137/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156063938 seconds)
    (138/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103427863 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110766846 seconds)
    (140/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.133244803 seconds)
    (141/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.087478128 seconds)
    (142/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105628816 seconds)
    (143/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084593291 seconds)
    (144/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.109387174 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111656759 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102298697 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.125339362 seconds)
    (148/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081982553 seconds)
    (149/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.191299684 seconds)
    (150/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.134005884 seconds)
    (151/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.141975629 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086128826 seconds)
    (153/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084153609 seconds)
    (154/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154631433 seconds)
    (155/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079677988 seconds)
    (156/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.084723883 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099938987 seconds)
    (158/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134766242 seconds)
    (159/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080159117 seconds)
    (160/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110900063 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080461103 seconds)
    (162/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.132182293 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111827867 seconds)
    (164/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.140963115 seconds)
    (165/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109756945 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.148708708 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102015494 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082022816 seconds)
    (169/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081934117 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.10597043 seconds)
    (171/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079743475 seconds)
    (172/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.087236672 seconds)
    (173/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127887772 seconds)
    (174/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079200702 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.126389321 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102579017 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085253483 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.144888367 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101770295 seconds)
    (180/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082427883 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099895861 seconds)
    (182/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.103062302 seconds)
    (183/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079426359 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079190783 seconds)
    (185/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111986706 seconds)
    (186/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079157771 seconds)
    (187/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110015109 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104055829 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108758175 seconds)
    (190/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085286895 seconds)
    (191/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.103336704 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082934313 seconds)
  done (took 27.366631778 seconds)
done (took 28.287576078 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.223401702 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130550625 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109329704 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10842779 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.230903986 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116398724 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152685936 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111734767 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119950596 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135325369 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099827182 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122326093 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135461757 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.243983711 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115360388 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102513613 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100237175 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146806073 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125512864 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125989655 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.233102322 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128072727 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122915768 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100636032 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234699867 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102026498 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135003043 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113108858 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12300564 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135290447 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112440449 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101763807 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126032903 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152396871 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100996114 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110598568 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125559474 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086682086 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110891486 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.135367815 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124880996 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111901722 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.133957015 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104252978 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112380213 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11039357 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125481894 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114559757 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099552247 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.136263738 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104537208 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12611359 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136472325 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102121048 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100562563 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.125900842 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12145811 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102517854 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123143448 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125735306 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10338055 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100585399 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.136700428 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102955037 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110596384 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.124684233 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112027153 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112712853 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.131849859 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103961297 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102215429 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109486132 seconds)
done (took 9.999587811 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107667678 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145172681 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.246215851 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.250251709 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153930198 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118462509 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115575463 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152185818 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116176924 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119165187 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164235528 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133730682 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.252442351 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11720186 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144530648 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113717435 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111571454 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136923901 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.249957961 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126689592 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12338003 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.145673112 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128473916 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142630174 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107072207 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13725846 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136118875 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115094411 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104792426 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138564889 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127087041 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105781042 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133372175 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124934222 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123028439 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139505301 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119337888 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115073191 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130969108 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108042145 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111990147 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.147062608 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108227933 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116859536 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138762541 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122107534 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11323357 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141769997 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108462438 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114167729 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130958626 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131497023 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118607722 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148225023 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119232288 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11858547 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143731457 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12012596 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109456857 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.143789861 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107745832 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105698537 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13062766 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.12623678 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.108576531 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.142681987 seconds)
  done (took 9.764960292 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126268543 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134768569 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141375445 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117429333 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110085693 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125095864 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101287842 seconds)
  done (took 1.818758062 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102406064 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.266308092 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.256814361 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.25805283 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.247204657 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.266508516 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126215912 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101221193 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164894583 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112514384 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.266628463 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.321487696 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.140320637 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117849247 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.260825596 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.100800195 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.25957415 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128722351 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117835339 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.260248297 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118427218 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160560067 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116451504 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10289369 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.2596651 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104215153 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.331386214 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122188229 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111665021 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.142265645 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117723312 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205811337 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.233177379 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.144782167 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110602732 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.256679991 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.250732761 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116048204 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.333946034 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107150384 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.247262111 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117433415 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.142731262 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117889398 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11829979 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.244725133 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120461855 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145719798 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117428257 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.27044157 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113121515 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.262477078 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142411748 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117634665 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113607759 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145811869 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125744603 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117788492 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.26815779 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146218335 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.257129748 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.229879388 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.253497905 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.258413589 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155781276 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.264507108 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.210952832 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.145049822 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111906596 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116993778 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.258833527 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.145181214 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115521093 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.249959545 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120750601 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.261283062 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.261205215 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141851886 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116507581 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106010259 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114095092 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.130320492 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.251591761 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116439466 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114023 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148987074 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116897325 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116523997 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135412484 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125980751 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115573842 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141469365 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121983903 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142303545 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120787458 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.264798843 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113015291 seconds)
  done (took 17.663449773 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106468315 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105134904 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107543867 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129534919 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105422579 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104449406 seconds)
  done (took 1.659194997 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141600989 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118088608 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151963001 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119477235 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164567061 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.248318304 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.258308849 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137631644 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137854866 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128618819 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252430691 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.253565857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.252826698 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121459843 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257493709 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118500936 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260064151 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143268699 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127378755 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116129152 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143144093 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121537217 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11434637 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.243172221 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118139968 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147896035 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111808196 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126177529 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153304539 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112237194 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120932901 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.147092658 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111361469 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136790114 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.23173536 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137879223 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113467554 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120432356 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1481703 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119126463 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.25743915 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115636129 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.151744179 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12282511 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111411479 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137864241 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122321703 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109979715 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.257115461 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.147557648 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121353315 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.11870889 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.145067197 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122075076 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.109337933 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138970419 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122416049 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.259572691 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12168305 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.137116401 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120643158 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118149746 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138760504 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124272324 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118409026 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.146581018 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112295511 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119665695 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141876503 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120879487 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121495708 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.14407629 seconds)
  done (took 11.747453647 seconds)
done (took 43.617541844 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.787792219 seconds)
  done (took 2.784385929 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.076926373 seconds)
  done (took 2.076279721 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.415344301 seconds)
  done (took 19.443458197 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.418469666 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.347728783 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.053812978 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148857791 seconds)
  done (took 2.96766587 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.077290798 seconds)
  done (took 2.093005359 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.335311697 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.250053182 seconds)
  done (took 1.590536849 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.71270407 seconds)
  done (took 1.728859655 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.760322934 seconds)
  done (took 2.764026674 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.268713332 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.243341415 seconds)
  done (took 1.530070573 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.675967405 seconds)
  done (took 1.694232273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.749830539 seconds)
  done (took 19.771808436 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252453061 seconds)
  done (took 1.275835796 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288836801 seconds)
  done (took 1.31083181 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.6362307 seconds)
  done (took 4.660649709 seconds)
done (took 66.69723936 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119936628 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.141269508 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120093107 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144672543 seconds)
  done (took 1.534751598 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124564957 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119160039 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120686524 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143888062 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125075403 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117708424 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143766554 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120915958 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116800816 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147521951 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119597769 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116723596 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147312646 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118292045 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115663734 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146187902 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122688422 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118336946 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144660969 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.12136312 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118911482 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144923454 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122296868 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120944972 seconds)
  done (took 4.079582223 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115250826 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108553955 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11038995 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132517595 seconds)
  done (took 1.494939168 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12701043 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12868944 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152741404 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124543585 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129127284 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154161754 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117269468 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115034725 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141845988 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126550968 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135195625 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155346477 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129955586 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118812156 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153164485 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112457437 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117294918 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15419744 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124149206 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126111833 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146475933 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124666111 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121900781 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152538805 seconds)
  done (took 4.213663864 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192875247 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129010634 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176001987 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164137202 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178916648 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117581987 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147170154 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150331211 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12502902 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119550885 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148172895 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164116354 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150486539 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11991141 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117471365 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148787584 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130299935 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123244538 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190741662 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122990202 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151746214 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129812284 seconds)
  done (took 4.225175557 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120852419 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108649831 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106350037 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.130826964 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120008241 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109818259 seconds)
  done (took 1.731271254 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108117886 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102479491 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103209726 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128204311 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106140229 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102028136 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101134411 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128053281 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103536412 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102092336 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128138545 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103504604 seconds)
  done (took 2.352776712 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202190833 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14574937 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245425811 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38657053 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187146707 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159524828 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.309178956 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184120527 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175930437 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163494564 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180642441 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188060705 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151957576 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211876252 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138470265 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.184824251 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171731623 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235043897 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16691039 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2134 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181064685 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175814018 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215258041 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172579793 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139486288 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159972661 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.144413784 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127409186 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193447037 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161779808 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200495742 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175266667 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141634372 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211441818 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233900197 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201701609 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271040123 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158162844 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17132509 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.216034648 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253769943 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140412727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216898845 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151409638 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155284597 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189277574 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175644213 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20535092 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133581417 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142517928 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208772527 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205627088 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168236383 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162313581 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322153468 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135310423 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140788507 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204794766 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211096569 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198577548 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204530831 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122658541 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200224933 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216429755 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211093503 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167633146 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161056984 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151625749 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160856232 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231164602 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209749499 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157978438 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237694712 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158099281 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170886636 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191721855 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152866099 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233474551 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196878249 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120313264 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149386918 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159877781 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12589827 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214914112 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121736236 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241569961 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1316394 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.2081079 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177844715 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182907501 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158912963 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189759818 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15903903 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177193894 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101617614 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142760176 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187338437 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155203219 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155392739 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149862009 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166279401 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124346338 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176893273 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124457488 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167968138 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160294655 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156922585 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198388015 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12970971 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207348525 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144536815 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.188254006 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165077304 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218844624 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156453732 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132956194 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244668648 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168459987 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.163193828 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170467885 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221413879 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14814206 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163380929 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163090384 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219180199 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141211711 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223585101 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165125531 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134820923 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137194047 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199574373 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185681983 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158336495 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125602681 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191381745 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213161186 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126573387 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13747929 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210448485 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131637632 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151956248 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135943756 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162423279 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141403662 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148410911 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16499161 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150864512 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193498242 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163071735 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183473295 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132769292 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199903474 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130318401 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196523787 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145665502 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.14593031 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171522817 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224385175 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127847089 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20685218 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156215701 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20889387 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200043501 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128151152 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209710964 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126323582 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119337326 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188842504 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194323469 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161722588 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214394836 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203642895 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163558284 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190238826 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147160986 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197478549 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.206834061 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156914505 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137708009 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19726101 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195901648 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123671802 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121536975 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154821385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13706895 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128049033 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164510781 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178003029 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191091747 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204281293 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165519659 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164633772 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188747858 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152289886 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157192109 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203502688 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137038474 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217066064 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21588926 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178454149 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165216067 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162443168 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.147383063 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125256404 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131625275 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186787461 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137039722 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160591098 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141023163 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217507548 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165887089 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174965267 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214265343 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163511894 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227027978 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119494598 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.187588383 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164032536 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195850431 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183160489 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133247699 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186162344 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217449729 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141974896 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217935168 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166671049 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207298853 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216137396 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163260414 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129211838 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170968502 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159267893 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16713111 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157835314 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169285243 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130052466 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146057173 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167040774 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137688868 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213271275 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169940875 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172851563 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181413352 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169043083 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152379042 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140752304 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199605642 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145981586 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104873604 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192414598 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219101493 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149887806 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178218501 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167582982 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15605966 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317129083 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207539244 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170044324 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164484415 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137453663 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197274944 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155477605 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185576617 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182987072 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168826008 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205729333 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196998083 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136741528 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159711932 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145509856 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17804469 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138777369 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181313449 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161523562 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170250228 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186065201 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165823482 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167714824 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203221132 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143516263 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177255113 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138123542 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250806264 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166547323 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198908907 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189955681 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160751558 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21016148 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124337087 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124400619 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160194174 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182879854 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156867658 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174610238 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191839739 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207422596 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173499405 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188423185 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13857994 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154140939 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164729756 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17473252 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18199426 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162160415 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136045455 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213544488 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126740626 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158870547 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158262064 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312469583 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145367014 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194692271 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106561703 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305429617 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12865274 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130937716 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185698914 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193800239 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133550373 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181244866 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200627627 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139667427 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186942185 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134366071 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203868222 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181329649 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193896456 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201338409 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142408608 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189564828 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156224904 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198421082 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144016267 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174478089 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157060795 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220947654 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.172602967 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.160171525 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165969561 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198748862 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167289945 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201823974 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13710037 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209463241 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126611949 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194426027 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13585455 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152624232 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158477255 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19249531 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130304675 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199833971 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168488429 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160165045 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12677521 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172962688 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163979863 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166633991 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130067214 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213040508 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128900286 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208928433 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207469157 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157706276 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168328209 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167786822 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130059105 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136682484 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171948324 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130149212 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17246568 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200239957 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128544785 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201070486 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191280448 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161735078 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179500288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141297751 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.260087257 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.156266075 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188121645 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177703855 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223769504 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149074192 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201668009 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167461582 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176910769 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164257882 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174323255 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218076246 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193801137 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165141162 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158113644 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143147874 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135681332 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161537422 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148782286 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197044085 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140675683 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162481374 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166211372 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171984385 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14670858 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140150483 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228521073 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147621164 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213942073 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21442617 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136613391 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203363405 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173320263 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157186132 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161212206 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199881053 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142725029 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182410262 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133090179 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165827841 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213688353 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152894938 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159283986 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202422254 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168108171 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199487391 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134128334 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20621666 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140919322 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203504762 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126830203 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177328086 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168598377 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132822161 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.156608316 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171216401 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187473426 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16264644 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16962391 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175382476 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222578622 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12276537 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132091473 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31567725 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190364328 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194099622 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162273962 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137032451 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143805728 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188708915 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163881699 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201005884 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129040177 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158046226 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144970108 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183897926 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139056923 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194803058 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182251326 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185508583 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18333428 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160966196 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255080899 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140150616 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201498889 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116843443 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.157596329 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140219758 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133573291 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170904682 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208103725 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213862235 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191630585 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145162217 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163786683 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126076358 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129438647 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188053635 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14836671 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197990601 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147260019 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.132330593 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140308318 seconds)
  done (took 84.434107311 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161856592 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152281398 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168220774 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221042567 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195667962 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291531982 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228746741 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246700321 seconds)
  done (took 2.776965151 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119054294 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159647444 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140902623 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143947892 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109303925 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.493088437 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160524745 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12076277 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161047153 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151135135 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136842471 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.568652436 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120822073 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144641061 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121124343 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134670128 seconds)
  done (took 4.090291462 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.951401743 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535826948 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.854280719 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.302652064 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235859097 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.211767315 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.785164922 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.70080425 seconds)
  done (took 12.688047819 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.17296683 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.16860622 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.465195824 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.32429789 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.213134927 seconds)
  done (took 2.463499273 seconds)
done (took 127.096552334 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124264312 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123923215 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122853893 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153627363 seconds)
  done (took 1.632327673 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195068668 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091363188 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.12274828 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.091319428 seconds)
  done (took 1.616990605 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.372373696 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092422877 seconds)
  done (took 1.616373004 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.350771221 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137381229 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.143655631 seconds)
  done (took 1.76342613 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135303961 seconds)
  done (took 1.260840899 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12214589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115966465 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.289746808 seconds)
  done (took 1.650079829 seconds)
done (took 10.661466593 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120478104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.929636656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433493015 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134445946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712570549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42677283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.420642551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174569595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170831547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108822112 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161018657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690798282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.433210509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874535475 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.39195293 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.897071855 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693577479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111723677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143315116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112547923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.40116363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136801958 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112817635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111512425 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.689536253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.448229858 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109985542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.913213542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110555936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112953849 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.397633105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139063445 seconds)
  done (took 20.937650844 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112444124 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166846604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145826516 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112275682 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114365256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139727177 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12223652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121535068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20080886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110694125 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159870214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110551129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114760542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109487631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163436373 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109293813 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111846825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14103117 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118663273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112014828 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161787266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10908349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112172837 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1415697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110935209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132063347 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139780932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121637855 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110104127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143559926 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115406617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111631819 seconds)
  done (took 5.233696915 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159400039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176130807 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148726095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148119115 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187761055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113619259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196272858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178374535 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203148048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11178977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131810264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137172399 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152859892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11114818 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164158398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111337996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112841164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140216462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119135229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112191248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160114799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111287178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112399486 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140610115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112417688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133386449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138417325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124189233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109876223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1435753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11777169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112685026 seconds)
  done (took 5.563162302 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126342945 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126666683 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133744428 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16364318 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119921877 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123138261 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1554722 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121796252 seconds)
  done (took 2.20283808 seconds)
done (took 35.064553569 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.1359934 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128844582 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130441258 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155692444 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.272374244 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117921136 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129155871 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.147335315 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126283165 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132370954 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108944914 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.150255796 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132038598 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121473405 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.271820217 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126052328 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.276636054 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.274278641 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.151331141 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126424974 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118934004 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.278963561 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122009869 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.1541619 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.274956566 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115235944 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.264407896 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121005814 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121125666 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14138177 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.276588276 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124300762 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118999116 seconds)
  done (took 6.567009302 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.224155452 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152167047 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.120212222 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119275204 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121121082 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149563122 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.229535555 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151074488 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118792888 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117748925 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149565324 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.212011059 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.156003201 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116441659 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121570897 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110423712 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.261563114 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121298032 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.143627167 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094821489 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116924838 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119060156 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.272182232 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.11530993 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.151625771 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119027518 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121635053 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.154993115 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123832847 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120942394 seconds)
  done (took 5.549067069 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126154256 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132023758 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137203351 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21551964 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148560561 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162320355 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138494788 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131965851 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172827416 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111648456 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128314357 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179818002 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129676361 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123811612 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.141635761 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130654809 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.128568516 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14223616 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122793385 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131203564 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133538913 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.160969513 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135766642 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121837758 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.141926903 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11998367 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.119540699 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.153354145 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121310064 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127629921 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144743535 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117784693 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115832973 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176877565 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113757793 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124996403 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.165521356 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126579528 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.125061672 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.175913737 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118022486 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114094506 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170045828 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167512377 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.113318387 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.156375539 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124921764 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126091888 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.139308566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131427992 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155349075 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141138233 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134893326 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111646819 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.139863375 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122392188 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112641622 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115731293 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.15821055 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114971716 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133952212 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.151060675 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124932934 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114293113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.15348719 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113076352 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111764109 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.144983756 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140700716 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12067595 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148938897 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.143566086 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125145663 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124770221 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.154149656 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125274514 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112347572 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153777829 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125227344 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118467431 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.15396723 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117774565 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116007271 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128338376 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.16390499 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128084309 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.152701435 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127679036 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116473657 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114607367 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162033328 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115219526 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116594226 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.15647395 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114319779 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116556931 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155041353 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124982338 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112147847 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138479141 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.147481538 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113903873 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13766859 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147460369 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11901859 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122195673 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186350478 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113299378 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124484789 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158132227 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113961646 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120043783 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145701034 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113148138 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128747528 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159354002 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122873494 seconds)
  done (took 16.921065354 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.373444678 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.359783212 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209369869 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.40834782 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157979655 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.25222169 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.391425005 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.365383671 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113157497 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178929291 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172032511 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.327991872 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145153835 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147904489 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.367277251 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.441129389 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.170968324 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.183544385 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.149957111 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.15857014 seconds)
  done (took 6.226782171 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133295005 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148966376 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166402289 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141491244 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124061587 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161184092 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115132631 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134204031 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15575205 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124285773 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116068916 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157887603 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127686192 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130352233 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157774056 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14864094 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122354376 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147759417 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136269166 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117563045 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13175336 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139893916 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122118004 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165648427 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133129979 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124399055 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141547401 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120628215 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120521468 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122013776 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.148815805 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133325199 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120477462 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.134586737 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12594745 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129468374 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149067595 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118758647 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119757879 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.115859746 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.158859751 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126753215 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12281782 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128833419 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134356389 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111231691 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127268214 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157219532 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107320102 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133825529 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154853748 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129776759 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121436426 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.162301891 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122533114 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130688687 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124062235 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.157901587 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119803121 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111826236 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.142511252 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118420659 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122560086 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158073801 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128194428 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133812046 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159220389 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115047833 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118264489 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145694816 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118402142 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127909956 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163927855 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124383739 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121216297 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124435005 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.153355691 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095870853 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123678338 seconds)
  done (took 11.680426444 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139905943 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124829317 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131752719 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177903752 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127365825 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119731828 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154501041 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134584056 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129145802 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163209154 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128707643 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127151314 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165644929 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125485318 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124213598 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159511774 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129316125 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150773012 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162067429 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140607556 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127838261 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149445401 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12616449 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124717085 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173620813 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125417754 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139142618 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158516743 seconds)
  done (took 5.110603883 seconds)
done (took 53.188095162 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.289571657 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.477468081 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.25926955 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.258066885 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.252774907 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.277705587 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.257819583 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.258078516 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.705110154 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.228076415 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.25868427 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.257068253 seconds)
done (took 28.936942115 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.320624704 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.400269546 seconds)
    (2/2) benchmarking "String"...
    done (took 1.571478774 seconds)
  done (took 4.125060867 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.247285477 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.247924275 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.494399948 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.24905448 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.247298475 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.249191715 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.256690291 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.251695629 seconds)
  done (took 16.147760498 seconds)
done (took 25.99220988 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.284921878 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.440938143 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.509149973 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.238473172 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.264406933 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.248728056 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.253251439 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.271073745 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.26173627 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.229006681 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.673931955 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.53329397 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.251158589 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.645622682 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.239074195 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.25215471 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.265406805 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.490270669 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.249869081 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.281430188 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.227998392 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.230087605 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.263663123 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.252073657 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.258833199 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.252222439 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.265881023 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.254069905 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.435960374 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.278317972 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.282853628 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.252794603 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.266811873 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.252392378 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.260814348 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.260674206 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.457676256 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.255954813 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.237678726 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.252917285 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.465028053 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.25351789 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.250931814 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.266791276 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.2303371 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.294044857 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.231211035 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.36444659 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.268603635 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.251078354 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.321033596 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.654023752 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.259798944 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.25602662 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.268996348 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.487973108 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.267797294 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.314664536 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.280157603 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.257423035 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.251394249 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.271374962 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.273650895 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.257603255 seconds)
  done (took 146.834038376 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.252324187 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.256646213 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.252288706 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.31529528 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.25719934 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.256371714 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.25256346 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.252231348 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.25433606 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.288287672 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.257011713 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.25461134 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.258471982 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196814664 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.263086928 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.266439256 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.257525588 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.254636743 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.262207513 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.252278244 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.278559749 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.25679949 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.268272523 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.252792532 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.290316573 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.322433358 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.275452188 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.283083531 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.267960806 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.252709758 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.295248018 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.258378422 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.876890825 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.122351657 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.265914103 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.279100012 seconds)
  done (took 82.163429911 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.252932991 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.253045434 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254701391 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.28759342 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.252661445 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.816871757 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816325165 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.219182323 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.458733744 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.642407183 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.474101459 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.252297082 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.344137818 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.267616718 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.253477011 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348181166 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.281639643 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.254371085 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.254638812 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829263912 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.272867655 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.254366013 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.430364871 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.270171286 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287382102 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.646210516 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.328366231 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.258145883 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286645773 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.586035206 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.303298561 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254579708 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.602037322 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.325529788 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370363046 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.257228508 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287586014 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.256066459 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.255194715 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.537124894 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.256154659 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.256090676 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.259615297 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901848658 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.260095304 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.828774987 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.260637202 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.209946938 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.254398333 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.255830284 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.325464931 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.922200528 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.258240807 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.255789561 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.257584544 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.259458503 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.256024125 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.257618022 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.28917622 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.387369881 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.119468936 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.256429531 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.260679357 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28882915 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.25819998 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.415626265 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.258432884 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.236744185 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.320729974 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.359699387 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834021657 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.261985521 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353449713 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.374321052 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.262860842 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.256259777 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.258416566 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.257562389 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.369062904 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.258495954 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.955270696 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.431759644 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.273332122 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.618892659 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.358115917 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.257491004 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626980314 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.26230737 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.256546943 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938726455 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351778073 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.263148066 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.257502187 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.256184457 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.257704498 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.950420983 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.81188119 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.508642971 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.261623185 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.969561987 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.261286619 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.114435089 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.806857936 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907292948 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.26121202 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364972901 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.430098558 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.275707587 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.255704719 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.584045938 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.262802366 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.31508268 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.256097976 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.655522975 seconds)
  done (took 383.13821797 seconds)
done (took 613.286802844 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.116003858 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.065481766 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.212009024 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.096203099 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.060303077 seconds)
  done (took 11.70659544 seconds)
done (took 12.861279338 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.442324675 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.442005919 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.315333252 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.446056443 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.290198764 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.459162563 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426841509 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.278125761 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.363881008 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.336386389 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.364535264 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307300387 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289283746 seconds)
  done (took 18.918952731 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.543805338 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268865896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322432 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538931005 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.305382014 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536183901 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.58672422 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.271871532 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421109098 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.278356564 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.277672803 seconds)
  done (took 18.508942193 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540637576 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.272294564 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343923073 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.530812463 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304078508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547604678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.581219062 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.268666019 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427819845 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282621087 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.278853443 seconds)
  done (took 18.536601904 seconds)
done (took 57.121355348 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.298237119 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.354130435 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.290105175 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.277539435 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.275492537 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.275524379 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.278764755 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.276052925 seconds)
  done (took 11.483767475 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.273802775 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.274115328 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.275109726 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.273301247 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.273558113 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.275252224 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.273410409 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.273877664 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.274931404 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.274660747 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.274723132 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.272668376 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.273654117 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.276588903 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.275836356 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.275133576 seconds)
  done (took 21.550860531 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.278492964 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.2747456 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.274211577 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.274673819 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.277201471 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.275384022 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.277237642 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.275771184 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.275752108 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.27599875 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.277266505 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.275575787 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.276352086 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.274832442 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.276748839 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.277098545 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.274920851 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.277544303 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.281883736 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.274959799 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.276903676 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.275379012 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.27507416 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.277294452 seconds)
  done (took 31.791614545 seconds)
done (took 65.983142504 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.279622529 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.266602152 seconds)
  done (took 5.706968572 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.33325949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.333097949 seconds)
  done (took 3.828176058 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.277027052 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.276297958 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.277414421 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.277378025 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.278027529 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.277183575 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.278631738 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.277430659 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.276495502 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.2769045 seconds)
  done (took 13.932477853 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.278608681 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.276533229 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.277026922 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.27763968 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.277890758 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.27688224 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.277738696 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.277924618 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.277512 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.276372976 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.277710596 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.276516239 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.278581122 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.277930639 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.276667005 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.278647885 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.278060502 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.277829909 seconds)
  done (took 24.158046027 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.293474301 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.299183198 seconds)
  done (took 3.754531705 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.405810983 seconds)
    (2/7) benchmarking "second"...
    done (took 1.320557627 seconds)
    (3/7) benchmarking "month"...
    done (took 1.383300057 seconds)
    (4/7) benchmarking "year"...
    done (took 1.373599143 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.322309551 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.299223526 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.320556508 seconds)
  done (took 10.588163292 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.266579608 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.556716087 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.743656651 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.423651441 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.261047305 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.283803951 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.243707176 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.290032474 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.286997183 seconds)
  done (took 14.518132337 seconds)
done (took 77.647428879 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.263668253 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.288803302 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.291947707 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.281064654 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.574469267 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.277550583 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.270667029 seconds)
done (took 16.412671576 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.258294689 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.248183264 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.258366181 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.278663209 seconds)
  done (took 10.207641563 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.275266643 seconds)
    (2/2) benchmarking "read"...
    done (took 1.594289006 seconds)
  done (took 5.033101915 seconds)
done (took 16.404945331 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280266994 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.280212539 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.280756326 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.280812788 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.280637767 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.280582919 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.280793406 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.281728048 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.281159711 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.28097029 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.280760105 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.282483659 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.281690479 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281562528 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280583764 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281673105 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281649173 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.281231025 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.280240717 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280269791 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281894599 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282438409 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.28168847 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.281076703 seconds)
  done (took 31.912505322 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.282291815 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.282531021 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.28218279 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.282994422 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.282261085 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.28272384 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.281784263 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.281166022 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.283199806 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.283573734 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282412927 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.282229091 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.282817497 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.283156522 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282630626 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.28124218 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.282724866 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283585121 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281427273 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.283886068 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.283290224 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282594032 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.284042524 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283898409 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.283162225 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282161658 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.284203936 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.282456648 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286104592 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.284313412 seconds)
  done (took 39.653758489 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.288712904 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.290431129 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.284596832 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.284615483 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.284743806 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.284360118 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.286720921 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.283998166 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.282554489 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.285409713 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.283129762 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.282783729 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.283598542 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.28444626 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.285453134 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.284789592 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.284117783 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.28387151 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.286490855 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.284454691 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.284725598 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.284694474 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.284190364 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.285465318 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.285076665 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.283577097 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.283939798 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.28591417 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.285982774 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.286619589 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.285817857 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.28493936 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.286453552 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.285918063 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.284438045 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.286363093 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.289750848 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.29120116 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.285479945 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.285257305 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.286377709 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.2855258 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.28621542 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.286480114 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.286767294 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.285865372 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.286131789 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.286452802 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.286173564 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.287400964 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.287523826 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.287654906 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.287273356 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.286213113 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.288490184 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.286715934 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.288495072 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.286027065 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.287627223 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.287257836 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.287066849 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.285541232 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.287693761 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.288264759 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.287442397 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.288353806 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.287028929 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.288751055 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.288751274 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.289510907 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.287932879 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.288127533 seconds)
  done (took 93.777329877 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.28914082 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28900309 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288305324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.288532505 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288876513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.289211638 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.287960109 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289444416 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289726967 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.290203769 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289020459 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290986913 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28941249 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29039197 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289444225 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.289887678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289594961 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28919675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.291217415 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290404651 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28929713 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.288776817 seconds)
  done (took 29.540037291 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290833168 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293269202 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.290172788 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29071195 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292819901 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2921866 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.290591838 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290160742 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289118969 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29012088 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29142527 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291246858 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291004081 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290521625 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291092226 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292454675 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290624438 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293067071 seconds)
  done (took 24.414644698 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.29097528 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.291040677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.291382108 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291929572 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.292042293 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.29047758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292248831 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.292134878 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.292586327 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.291212137 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.292445383 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291721811 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.293766885 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291668132 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291758005 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.290630996 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.292758408 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290985114 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292380217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29270244 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.293644546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290095854 seconds)
  done (took 29.594284635 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293682154 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292525594 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291370318 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.292549735 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293617268 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293135305 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.292052539 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.291473648 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.293848841 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.294337462 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292598271 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293001385 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.295616303 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293646848 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.293686731 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292953639 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29471535 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294261187 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293865954 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294135484 seconds)
  done (took 27.040941781 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294120323 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295634263 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295645572 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295950619 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294720391 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294376956 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29693574 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295739182 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296178958 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295781923 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29543546 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295806618 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296819535 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29558035 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295273958 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295884416 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297078788 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296203198 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295032901 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296356445 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29727511 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29550174 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295453968 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297264691 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296043838 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296434681 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296701782 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296355189 seconds)
  done (took 37.462577116 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295979088 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295647805 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.295317661 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.296305754 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.296650423 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.296153263 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.29760562 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.296404073 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296353226 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297642781 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.297842513 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.296194602 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296539005 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.296312752 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295915081 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.296756485 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296939907 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.296164514 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296353577 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296292694 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.296977175 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296693383 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.297753992 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297544123 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297732885 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.298647696 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295700816 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297860562 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299432892 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298576397 seconds)
  done (took 40.085837636 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.317224519 seconds)
    (2/2) benchmarking "in"...
    done (took 1.317003742 seconds)
  done (took 3.813884604 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.298174643 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29743425 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.298068368 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2978646 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.298283029 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.298193857 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.299544047 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297536764 seconds)
  done (took 11.56505491 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.288501904 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.300391324 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.299216754 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.298605184 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.300575491 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.290951809 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.302185354 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.304292517 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.292950435 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.295633102 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.298281896 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.298082388 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.29572139 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294898805 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.293343443 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296542387 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.30446121 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.301572973 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.30042552 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.300584395 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.300540065 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296398936 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.299568071 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.304434135 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.294119819 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.304358582 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.301076887 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.304597328 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294750156 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.299555064 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.298223347 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.304239216 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.301633185 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.301116245 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.30182492 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.301752363 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305398856 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301196912 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.30361015 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308236553 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30213323 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.301031626 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.29838435 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.29933918 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299127998 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.305540717 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.302911488 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.30250577 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.295323903 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.299307034 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.310183775 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.295865009 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.304262264 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299416476 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.302455062 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.307430576 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.311365926 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.299095265 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.304515258 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.306841082 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.313460555 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.311441481 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303031561 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.308630219 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.305454513 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.319469784 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310363622 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.312897095 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.304908987 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.305073309 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.307273486 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316136333 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.315332326 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.3093629 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.304418052 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.306441442 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298181807 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308474324 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.30818499 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.309441576 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.310585184 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.305708721 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306218396 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.317084603 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.301490892 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.308774941 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.304703671 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.307017449 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.299914455 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.309798614 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.314332969 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.305455376 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.298330164 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.300940453 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.302765273 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.307428087 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.298420242 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.301744852 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.307618348 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.306673302 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307175988 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300998393 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.30909621 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312305584 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.306757948 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.308392997 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.314483655 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300752885 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.312463694 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.31221095 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.306604146 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.300531269 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.306038995 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.311128885 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301427915 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.308560145 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.309876177 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.303127145 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.311216745 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.308869175 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.308248727 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.325275211 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.314752755 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.306528381 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.303800439 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.317458592 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.30697042 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.305076173 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.315683339 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.308771177 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.307718971 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.304552826 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.313835199 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.302768794 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312089375 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.30104941 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.312007086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.308918621 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.310152679 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.305828046 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.309633457 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.305591122 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.308974749 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.311411027 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.315311659 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.307045884 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.318182855 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.309040625 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.308289404 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.310557689 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.314028818 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310181881 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.302631534 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.31246355 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.302190581 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.31176005 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.30315455 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.312564961 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311210042 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.311228032 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.310153477 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.302224275 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.308757743 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.313350314 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.309578777 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.311201302 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.316019354 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.311484084 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.31093043 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.302430026 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.312320256 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.303098846 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.308022113 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.31884572 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.31243934 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.311142806 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.307026556 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317767909 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311680564 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311443848 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.305175563 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.313105066 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.317266005 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.315620744 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.319888323 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.311163712 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.312228971 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.304176533 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.308279404 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.314045023 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.306180535 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.319137822 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319183145 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323161938 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.307963825 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.31545919 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.304501254 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.318615056 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.311846298 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.318541925 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.313009493 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31383106 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.30625381 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.316243278 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.308409948 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.314932294 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.305830291 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.315694068 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.315633063 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.313339479 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312791511 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.309516609 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.311111112 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.316371295 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313631409 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.312807039 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.307545003 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.317665487 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.305326979 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.309981413 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.317456752 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.315000667 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.31626476 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.321254671 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312146765 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318103544 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.315074878 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.310990558 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.317392942 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.314034157 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.315497166 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321743095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.317040334 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.313234302 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321166752 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.317558045 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.309548891 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.31555703 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.323563992 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.315709429 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.309474713 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.323081138 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.317848797 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.316787021 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.315233908 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.309120278 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318428416 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.319419444 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.324197206 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.310719625 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.319826219 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.311869211 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.320571346 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.312607547 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.318559953 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.316578505 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320086138 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32482502 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.317025799 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311821438 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.320848858 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.3159114 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.31817835 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309474777 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.322395199 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.319180085 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.318221534 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.31477465 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.314009094 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.320202461 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.310494136 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.319473285 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.309794809 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.3284858 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.336032329 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320341898 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.322812533 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.319903772 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319907602 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.320125136 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.31330332 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311595678 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.316014657 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.313405355 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.3129036 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.321545201 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312977372 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.322562785 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31684543 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.320589592 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.322231985 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.317660627 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.311288208 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.322322685 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.319108784 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.319590772 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.311785592 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.321168437 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.315602947 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322105044 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.319513809 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.315237561 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.32890776 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324393395 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.316965781 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.317266011 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.314592895 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.314121237 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.316349097 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.325245598 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.31472877 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.326220036 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.315740095 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.31961423 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.316867094 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326639994 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.328925554 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.314148975 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.326366081 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.321250688 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.31282995 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.315710644 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.323074153 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326636607 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.333251642 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.314014282 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.324453402 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320674353 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.320842972 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.320257823 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.322178458 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.321032199 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.320880385 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.328141705 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.326655606 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.31767456 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.323540648 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.331598643 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.321899802 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.322168457 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.313580467 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323543191 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.331410985 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.317312927 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.321233542 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.318067988 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.324150618 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.322036948 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.322428582 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.323375311 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.323947944 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32834336 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.32764879 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325984156 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.323375257 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.328672616 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334430116 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32894784 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.334536428 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.319545211 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.329284265 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.324593644 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.318991676 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.319693306 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.320515018 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.327871827 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.316121364 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.328489773 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.323491291 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.320223886 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.32614109 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.331662656 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.315173803 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.326006473 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343746764 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.316517794 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.329852537 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.325921464 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.317967836 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.328429188 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.325064628 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.31545688 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.321023718 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.324745647 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.332855685 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.320064315 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.329284362 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318355606 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329717897 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.326142943 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.326118426 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.325131546 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.326128556 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.318215419 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.327237389 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324461999 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.335907827 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.321280272 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.325503647 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.321593098 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.333558119 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.33751403 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.320920329 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331678747 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.32839868 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.320332664 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.325350508 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.333097642 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.320478254 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.329192386 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.319514684 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323821083 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.325133039 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.329119593 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.328539751 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.330627943 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.3194961 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.321724057 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.328452011 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.328104612 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.328914158 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.323235201 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.333473112 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.319210946 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.320606572 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.329146793 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.321910615 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33352859 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.321647537 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.327281518 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.325581061 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.331751181 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.329160808 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.329002717 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.319428489 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.321727016 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.334203596 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33438267 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.328307603 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.327102476 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.332848583 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.322774304 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.326641807 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.328766843 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.324000807 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.324582069 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.332276523 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.323365416 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.325824339 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.325677531 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331927495 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.334516496 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.334185196 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.322996501 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.339936798 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.338548604 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.337371967 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.323230379 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.326397998 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.325832184 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.33186894 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.330207654 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.32354819 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340676839 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.337318339 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.336537275 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328422618 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.331580903 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.32500266 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334907628 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331344419 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.327950476 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.339198408 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.327041729 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.337330183 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.332502187 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.331182063 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.323486938 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.32472714 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.327942168 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.328927535 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.332467676 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.331816859 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.336218715 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.328847673 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.336529219 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.332506985 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.332779735 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.331255415 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.323523262 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333254369 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.324896134 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.33397101 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.335526644 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.326365054 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.336243933 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.332758439 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327771876 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.334268683 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.339510393 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.33427879 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.325684982 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.332088284 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.33873208 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344570454 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.334726113 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326670659 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.331212354 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.337660494 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.332831499 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.333701158 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.327847421 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34860715 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.347487168 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.326067225 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.330269463 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337790082 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.344748533 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.334037311 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.335891364 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.331516057 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.33491697 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.342264544 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.335577861 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339048786 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341474728 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.331101523 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.340830143 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.329770653 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.333009577 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.336092919 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.350686446 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.334534515 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.3308254 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.347648109 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.347412405 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.337523242 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361607866 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.343115369 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.335727797 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.341677223 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.327868034 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.337775251 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.332098644 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.342165764 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.335647174 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.337665636 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.335745657 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.328814095 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338585844 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.343106283 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.346111519 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.336723995 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.328285708 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.331669029 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.337875929 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.337895228 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.338094123 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.337459845 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.337501667 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.338360025 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.332160483 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.348958631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.354100266 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.342297038 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.338405222 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.339179737 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.337476987 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.34114692 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338819866 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.344417227 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.33835005 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.337662436 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.334088897 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34664553 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.341253007 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.33010564 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.332991549 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.33304677 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.344175163 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.34736618 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.361428882 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.342127685 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.342169812 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.342378476 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.338704915 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3324226 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.344079343 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340485197 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.333254489 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.335612047 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343722915 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.341096135 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.339923914 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.333210328 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.345981209 seconds)
  done (took 787.907168013 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.338907192 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340080822 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.341078937 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.340391771 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340280133 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340685541 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339290158 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340373 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.340693975 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.339863014 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.341110521 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339813101 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.340978407 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341143265 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341502909 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.341464719 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341807296 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.341664356 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340667804 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342130243 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.342997438 seconds)
  done (took 29.371263173 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.34046566 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.340844948 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.342072052 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.341827318 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342289451 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.341100348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.341419219 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341833259 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.34148543 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34168638 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.34220313 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342686887 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.342258283 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.341881721 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341785791 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341728471 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.342264896 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342762705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.343675534 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.342228302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341993773 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.344717853 seconds)
  done (took 30.741172779 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.342955093 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.342590742 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.335786607 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.345148047 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.343717934 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.343925818 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.343849614 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.342991606 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.343581517 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.336023086 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.336050467 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.336886404 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.340911763 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.349313052 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.33900756 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.349093842 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.34403908 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.344992405 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.344260757 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.344425394 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.350475857 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.355807218 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.344352887 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.336487088 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.346371042 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.344756028 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.344391173 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.3455096 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.336835456 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.348160909 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.345417203 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.337757933 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.349011685 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.34638032 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.339248187 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.349358297 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.345189697 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.344900026 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.34592726 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.34583567 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.365162089 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.346853129 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.350491538 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.358804824 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.347754536 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339612508 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.352739898 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.346490392 seconds)
  done (took 65.779261728 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.346065543 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.347689524 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.34574147 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.345269306 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.34603126 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.346442498 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.346632522 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.34687212 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.347219696 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.34620172 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.348160143 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.346806912 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.347921127 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.347682495 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.346549433 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.346976069 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.347162237 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347221546 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.34534231 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.347800136 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.347792098 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.347464468 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.347904537 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.347646751 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.347164482 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.346280087 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.34761079 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.347340085 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.348203421 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.348550914 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.347377276 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.348237957 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.348276617 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.347398347 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.348311568 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.348451052 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.347608823 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.347359562 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.348251325 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.347637579 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.347890884 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.348925544 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.349424684 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.349091406 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.348609818 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.349569013 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.348927688 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.348528351 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.34939092 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.349237608 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.348685046 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.348922513 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.348723551 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.348453401 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.350170783 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.349359603 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.348511467 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.348872616 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.349868489 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.34983418 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.349644248 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.349204475 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.349406985 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.349315705 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.350281158 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.350685161 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.350675896 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.350723136 seconds)
  done (took 92.894299669 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351245229 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.350845027 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351198114 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350587443 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351221522 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.350613882 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349582252 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.350962585 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.351123651 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.3510644 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.35213263 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.352277008 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.352650308 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.350993583 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.351839959 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.351544609 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.35209244 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.352286363 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.352466041 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353695179 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.353247185 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.351884379 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.353216771 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.352863634 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35179297 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.352808747 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.352342036 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.352640376 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353727221 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.353771361 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.35167656 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.354163485 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.353422167 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.352830984 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.354653655 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.35334608 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.352977476 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35266966 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.351710259 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.353370262 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.354237907 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354071578 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.352084608 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.354386439 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354505001 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.353274822 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.353160279 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.353977477 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.353601362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.353960748 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.354278894 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354769138 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354172353 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.354902945 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.355991098 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.355276214 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355843889 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.355786607 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354654488 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.355759896 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.354885303 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.355058232 seconds)
  done (took 85.114029145 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354534914 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.354787244 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.355277054 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.355459143 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.354590658 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.356083088 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.355457399 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.354282276 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.357635452 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.355969121 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355291082 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.357216315 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360203513 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357845559 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355229072 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356956457 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356607377 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.354989922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355530874 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.35617715 seconds)
  done (took 28.347812304 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.355457103 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.35535524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.355589799 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.35639404 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.355783059 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.356772154 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.356872262 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355967514 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356045732 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356921455 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.356831725 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356715613 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357758706 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.356593767 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.356938069 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.356884341 seconds)
  done (took 22.931464437 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.356790799 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.359372627 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.358749256 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.357892958 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.356804935 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.358088541 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.357113493 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.357001988 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.357680085 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.358199893 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.356865675 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.35708202 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.357716327 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.358177572 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.356345387 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.358156831 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.357496494 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.357767243 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.358573107 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.357926067 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.359238904 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.357184323 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.357892821 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.358569639 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.358650838 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.358382968 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.358420873 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.358576985 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.35862307 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.359371143 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.358870388 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.360021418 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.359787653 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.36053306 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.359202378 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.359841033 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.359365771 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.360564018 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.360236009 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.3598194 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.361093412 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.359756916 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.359674484 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.360333323 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.361160643 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.360061582 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.361079964 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.360668008 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.360132194 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.361663873 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.361450355 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.361383955 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.360492129 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.361550814 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.361579348 seconds)
  done (took 75.980118054 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361546789 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.360329602 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.362289278 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.361382636 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.361171869 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.35989903 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.36176604 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.362316238 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360808491 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.363020595 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.360460968 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.360903288 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.360974417 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.361949188 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.361969105 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.362055463 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.360024816 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.363224512 seconds)
  done (took 25.740099044 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.361831382 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.362628155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.362082129 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.362385775 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.361913034 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.363573932 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363203738 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.362675575 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3623762 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.362728544 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362781653 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.362348176 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364243168 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.363705771 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.362035522 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361676507 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.363096261 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363202124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.362834007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.363480666 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.362557675 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.363109152 seconds)
  done (took 31.216999339 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.352819395 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.35400423 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.353621092 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.370413715 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.369562964 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.35449365 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.355025862 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.353378861 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.37919921 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.401537352 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.395454797 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.370788988 seconds)
  done (took 17.649480621 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364663123 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362937961 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.364861738 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364070952 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363829379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364722317 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364149821 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365413645 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366238163 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364457943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364084857 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364320528 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363984088 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365003489 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365049477 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365600058 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365267498 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365709095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364640014 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36442688 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365939653 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364001784 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36541996 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365415031 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366024111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365987543 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366187425 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366895819 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366166829 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366729168 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366013878 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367002122 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365663523 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367964433 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365583175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369016022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367730905 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366933933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367956683 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367765704 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.366502092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367703078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368151386 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367167349 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368430645 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367213286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367133558 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36708217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367219848 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368388204 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367838549 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368443351 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369046199 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367433079 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368866436 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368412508 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368057225 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367628414 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367840409 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369767085 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367590201 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367700757 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36801156 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368479966 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369012123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369705628 seconds)
  done (took 91.432942406 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369974762 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.36895675 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369100983 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371348668 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369408199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369537249 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369089825 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367892664 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368733008 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369808413 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369645753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369150408 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370548555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370751233 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369512017 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371482687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371376235 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370303097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371320797 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372237423 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369666749 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369636442 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371146303 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369598825 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370500942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370656653 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370831306 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371273311 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371955402 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370012628 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371605357 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371813829 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371194889 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.370534957 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370337875 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370403556 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371360322 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371438117 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372649525 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37227689 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371987352 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372624616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372308882 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372084873 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371942609 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371870072 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370660405 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372033011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372408092 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372333305 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371723856 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373075804 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371615431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371467553 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37188577 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372151749 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372309813 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373494985 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372353552 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372432991 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374007541 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373808464 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37195266 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372940512 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373753824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373804126 seconds)
  done (took 91.746829037 seconds)
done (took 1846.878341806 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.528124372 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.483652893 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.363426074 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.374068523 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.364666846 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.364246488 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.374916137 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.36378701 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.362968001 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.363863155 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.363158421 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.555894138 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.40025832 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.363267991 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.363894317 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.46336336 seconds)
  done (took 27.700762739 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.393587805 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.373038386 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.488028232 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.367116669 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.393718574 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.566128799 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.42636771 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.369996462 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.547088231 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.388129445 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.361048795 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.390927086 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.36846815 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.362662685 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.405251212 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.566965496 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.643594835 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.364509728 seconds)
  done (took 30.020726623 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.839042669 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.403482532 seconds)
  done (took 5.487152282 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.390289746 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.370017603 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.37083987 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.367548187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.361563503 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.362809957 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.369389122 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.365089562 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.377108575 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.504595954 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.372345669 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.383244013 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.369614869 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.369943088 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.377692454 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.416232556 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.515966078 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.379623048 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.377670932 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.375571675 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.370798079 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.456812908 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.412017261 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.379529737 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.499216448 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.363819147 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.395134088 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.377540457 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.495503906 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.380390486 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.370971767 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.370134261 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.372922542 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.355374595 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.918303796 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.365641097 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.411729208 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.378408781 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.379095305 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.512457682 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.372545474 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.378083372 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.366892783 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.914158169 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.496869397 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.493852262 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.370815288 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.376786548 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.37350809 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.436658985 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.375531065 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.375677798 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.43161687 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.182385082 seconds)
  done (took 87.546642983 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.387501706 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.366356218 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550469712 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.382208292 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.36909326 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.365818618 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.366086651 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.673946503 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.397656934 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.36694326 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.69476734 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.011518522 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.383575261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.427763969 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.379930347 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.42634081 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.367710399 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.366929659 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.367230958 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.368314779 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945321145 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.372740129 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.366952926 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.521755803 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.408529298 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.933304371 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.382404658 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.369175288 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.374241054 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.367589185 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.981591734 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.380796588 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.398959504 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.370666815 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.668846326 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.78630082 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.740559921 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.369858889 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.387379461 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.369463543 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.366967991 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933069043 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.764720427 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.369030277 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.386608732 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.942002487 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.369048637 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.377912957 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.376254093 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.635303021 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.368808273 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.370839713 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.382895792 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.368401917 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.367877727 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.40340986 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.419787589 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.936655035 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.370023976 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.369679417 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.411554429 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.369143891 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.370815205 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.368633302 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.371721575 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.766398176 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.543577908 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.372732839 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.763980198 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.964872274 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.385592815 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042730764 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.374618457 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.374815986 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.446998507 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.36948822 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.370355216 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.929751243 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.373997334 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.371189622 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.745379601 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.374688607 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.680630876 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.38786615 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.372521005 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.961208103 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.375871141 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.419030327 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.377085276 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.371631493 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.376912259 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.373622822 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.673673962 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.40908639 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.371825776 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.37255132 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.39328957 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.372032341 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.393926997 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.377391624 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044161955 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.378529478 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.371805702 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.375072584 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.374288974 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.376456856 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.374700987 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.375096188 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.654123038 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.372093955 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.373240464 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.372161727 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.377144455 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.377796867 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.526312815 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.381412504 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.700603065 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.375822472 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.373968526 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.380133777 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.378524002 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.380280152 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.374031988 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.380156876 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.312039429 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.693413706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.393460081 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.374768228 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.376228877 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.375873484 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.373482384 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.394704518 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.411018815 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.37262732 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.197322889 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.38765745 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.389098349 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.373882332 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.381058758 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.373506006 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.395070878 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.374246162 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.67790634 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.673138128 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.533110235 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.378975456 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.374759643 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.2070697 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.380518087 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560399333 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.392200748 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.374714843 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.677631139 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.55516257 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.374594049 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.375265694 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.379588746 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.653988043 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.376569239 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717490065 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.006732329 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.377791622 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.386659233 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.196408689 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.128282852 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.377166698 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.381926441 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.681678004 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.395190316 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.374661648 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.376556032 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.377074924 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.376537497 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.382686188 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.385770787 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.377986127 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.377138092 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.491131289 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.573503254 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.394292575 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.378954936 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938301225 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.401437518 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.379874214 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.381457505 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.378443716 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.37645815 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.440715785 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.380824881 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.419847195 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.377911572 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.386813235 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.972729997 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.377782721 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.379311434 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.573233174 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137739579 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.378274145 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.377667851 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.376944778 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.415267603 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967952808 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.43134832 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.707506941 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.379126148 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.418350021 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.378272517 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.477183026 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.968711914 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.385267431 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.378185972 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.129748527 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.379617957 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.056960767 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.378795883 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.380891375 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052092818 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.379980167 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.383617074 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.379439132 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.399269496 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.70274083 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.378969077 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.42645447 seconds)
  done (took 507.814312572 seconds)
done (took 659.811980231 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.378860297 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.385343612 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.38656521 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.385117309 seconds)
  done (took 10.79771592 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.396594512 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.385594246 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.396540494 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.385004497 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.396455875 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.387039352 seconds)
  done (took 9.611226649 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.379584232 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.386292553 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.387377288 seconds)
  done (took 8.414494976 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.60539274 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.405055021 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.761265516 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.38886827 seconds)
  done (took 9.423068973 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.398098682 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.395901938 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.396097429 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.39700574 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.398047122 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.399905698 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.397625288 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.39795122 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.398283031 seconds)
  done (took 13.8387662 seconds)
done (took 53.345468393 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.408551546 seconds)
    (2/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.495745516 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.506183001 seconds)
    (4/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.476212185 seconds)
    (5/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.682876831 seconds)
    (6/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.407407196 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.393167271 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.542962176 seconds)
    (9/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.375489972 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.542992014 seconds)
    (11/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.36177322 seconds)
    (12/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.460546619 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.41415901 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.501061435 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.481114595 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.419176523 seconds)
    (17/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.54324278 seconds)
    (18/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.768977709 seconds)
    (19/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.587520574 seconds)
    (20/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.487552342 seconds)
    (21/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.541396526 seconds)
    (22/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.366128052 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.538727014 seconds)
    (24/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.527030826 seconds)
    (25/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.421593272 seconds)
    (26/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.480077613 seconds)
    (27/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.362235963 seconds)
    (28/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.421592236 seconds)
    (29/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.569434409 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.468860566 seconds)
    (31/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.592612423 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.695750449 seconds)
    (33/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.505327491 seconds)
    (34/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.544497664 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.547780333 seconds)
    (36/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.36364517 seconds)
    (37/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.477194936 seconds)
    (38/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.770228187 seconds)
    (39/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.845572334 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.465000147 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.486754293 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.643586652 seconds)
    (43/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.363854502 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.405742468 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.458281608 seconds)
    (46/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.505603241 seconds)
    (47/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.563213181 seconds)
    (48/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.561972318 seconds)
    (49/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.560935904 seconds)
    (50/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.647010235 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.637629617 seconds)
    (52/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.397529408 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.651540457 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.603952977 seconds)
    (55/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.647076979 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.39370583 seconds)
    (57/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.716772513 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.378425305 seconds)
    (59/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.421486609 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.54654267 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.386547291 seconds)
    (62/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.440659827 seconds)
    (63/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.486285362 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.387266652 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.377996133 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.41819203 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.533110115 seconds)
    (68/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.490854055 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.479005639 seconds)
    (70/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.365167739 seconds)
    (71/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.463627096 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.364435918 seconds)
    (73/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.617308796 seconds)
    (74/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.427021337 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.491758085 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.472571489 seconds)
    (77/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.369990009 seconds)
    (78/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.480115225 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.525249741 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.612374712 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.471578274 seconds)
    (82/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.652078123 seconds)
    (83/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.423273247 seconds)
    (84/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.715277779 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.495403975 seconds)
    (86/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.684835713 seconds)
    (87/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.768264692 seconds)
    (88/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.474483036 seconds)
    (89/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.732409065 seconds)
    (90/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.571568336 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.516241814 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.423761287 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.397867677 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.495113516 seconds)
    (95/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.575520419 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.452522038 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.410203027 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.394906639 seconds)
    (99/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.730872943 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.478770284 seconds)
    (101/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.545606252 seconds)
    (102/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.382724285 seconds)
    (103/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.374473244 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.772935595 seconds)
    (105/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.488792365 seconds)
    (106/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.43189904 seconds)
    (107/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.544238166 seconds)
    (108/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.368791526 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.477749279 seconds)
    (110/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.398452713 seconds)
    (111/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.723893313 seconds)
    (112/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.769741344 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.367506375 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.44479284 seconds)
    (115/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.39200698 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.406546212 seconds)
    (117/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.476127389 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.474087307 seconds)
    (119/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.612347769 seconds)
    (120/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.57932508 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.413921553 seconds)
    (122/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.38340825 seconds)
    (123/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.370007878 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.372735095 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.516555443 seconds)
    (126/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.371410544 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.388771235 seconds)
    (128/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.477377143 seconds)
    (129/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.623964931 seconds)
    (130/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.619497877 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.376457023 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.646072456 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.521892557 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.481639276 seconds)
    (135/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.455305093 seconds)
    (136/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.471187989 seconds)
    (137/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.510809133 seconds)
    (138/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.399430512 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.511042677 seconds)
    (140/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.42899388 seconds)
    (141/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.368782707 seconds)
    (142/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.510864744 seconds)
    (143/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.556629591 seconds)
    (144/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.657420779 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.464793211 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.546227252 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.515694287 seconds)
    (148/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.371304415 seconds)
    (149/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.951088282 seconds)
    (150/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.42709766 seconds)
    (151/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.467559028 seconds)
    (152/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.37012043 seconds)
    (153/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.525353272 seconds)
    (154/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.696362278 seconds)
    (155/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.470725192 seconds)
    (156/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.613673521 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.459574254 seconds)
    (158/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.466563991 seconds)
    (159/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.370894061 seconds)
    (160/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.454360776 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.371732933 seconds)
    (162/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.426418211 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.433806847 seconds)
    (164/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.390898948 seconds)
    (165/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.429879016 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.501794576 seconds)
    (167/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.48392433 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.55486446 seconds)
    (169/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.372357897 seconds)
    (170/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.666717855 seconds)
    (171/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.529409475 seconds)
    (172/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.727993303 seconds)
    (173/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.482960821 seconds)
    (174/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.603775467 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.506282109 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.48806111 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.947274069 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.597824859 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.51685857 seconds)
    (180/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.548433088 seconds)
    (181/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.590581328 seconds)
    (182/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.372206232 seconds)
    (183/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.376087299 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.375680276 seconds)
    (185/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.47891159 seconds)
    (186/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.461577716 seconds)
    (187/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.654508019 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.518759576 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.431844508 seconds)
    (190/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.400552687 seconds)
    (191/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.42609431 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.57896233 seconds)
  done (took 338.169388808 seconds)
done (took 339.433733871 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.424073748 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.500744486 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.404177059 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.403331603 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403110276 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.396192403 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.42638016 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.403095229 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.418830822 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.417967083 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.395559382 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.413067895 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.42074049 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.416058053 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.43705577 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.403794869 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.403240572 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.41605934 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.419140851 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.422209202 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405872174 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40444383 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.433299157 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.403159766 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.41329399 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.414373412 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.410316229 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.396228623 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.430198988 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.421245537 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.396907844 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.410385274 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.423701519 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.417238205 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407017346 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.416897423 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406553837 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.500649919 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.425939466 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.418652499 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.413716195 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.422764458 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.411711159 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.411057443 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.418839884 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.433438713 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412821529 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.420940465 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.398539223 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.410931776 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.425370822 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.419652462 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.415123566 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.411149715 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.398683535 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.439730907 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.417966529 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.427482718 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.415287876 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407144849 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.440983537 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.427800468 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.420398757 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.415970584 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.414420337 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.423322143 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.418520852 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.42592055 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.41532018 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.409865388 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409449217 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.417317885 seconds)
done (took 111.349835893 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.531852038 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.404693507 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.562631409 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.416830575 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.572465189 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.530492659 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.414453065 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.417654672 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.416223826 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.207010596 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.415168365 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.417280648 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.407727547 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.415935288 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.52825918 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.416547205 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.418553953 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.10848782 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.418951217 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.545459405 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.410191325 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.416827983 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.417764721 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.211090719 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.407609991 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.402963976 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.545131477 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.417731683 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.110165906 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.402414886 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.406796483 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.11016387 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.546207221 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.436760383 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.427845351 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.426907563 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.575969222 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.423138649 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.534656291 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.534473251 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.567160819 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.458331883 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.402849853 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.409750291 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.425242709 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.419793188 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.420109337 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.447911633 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.408755252 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.420363436 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.110978633 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.429032549 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.430302019 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.420969401 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.419658635 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.439609983 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.419053959 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.420805431 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.547658201 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.420986659 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.536236305 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.215186404 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.211563486 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.422306985 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.409186699 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.420513609 seconds)
  done (took 113.667053295 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.479292289 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.486344581 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.52665535 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.411371532 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.461725399 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.529198552 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.41233815 seconds)
  done (took 11.587713082 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.417442114 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.421792509 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.460505589 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.460405687 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.420166655 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.584110318 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421079929 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.424049706 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.420265325 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.463239304 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.421467083 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.423083476 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.430555374 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.412301488 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.45928736 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.423091713 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.528763701 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.413232648 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.422506046 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.568113877 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.421746187 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.431393185 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.4651362 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.42379098 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.423722508 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.420137706 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.194391625 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422678948 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.422972408 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.422528693 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.42340126 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.481289467 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.422890175 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.415076941 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.421930775 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.52907732 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.423262867 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.422733461 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.424267611 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.417521713 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.424342573 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.423044268 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.424570717 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.422810712 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.423112391 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.437812522 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.424178094 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.422551495 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.423831472 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424309901 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.463783545 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.423695906 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.423791784 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.423916196 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.467261981 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.433506024 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.423596957 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.424724195 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425495383 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.424469212 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.570719146 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.46370286 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.426637768 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.461989805 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.42417367 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.425827626 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.425725519 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.425131222 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.504576901 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.425378597 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.46307303 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.426093719 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.598274661 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.440646027 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.426701501 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.419984811 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.419731247 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424747578 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.415577908 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.422545793 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.425841936 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.41820557 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.422270436 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.425570626 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.425401965 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.574946787 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.525145196 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.426671436 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.432725763 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.42308723 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.425578517 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.468292467 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.426168262 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.426433679 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469947306 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.532118708 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.469204353 seconds)
  done (took 146.025917296 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.429519061 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.428450793 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.423004545 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.446539826 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.418207711 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.418161391 seconds)
  done (took 9.850621408 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.420275109 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.43055729 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.428368712 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.430207729 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.428901077 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.429331454 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.428600179 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.419498096 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.431951718 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.428803736 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.429016087 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.428802589 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.430290963 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.428812659 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.429349598 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.428464253 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.430165923 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.428233789 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.4289505 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.428771756 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.418392716 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.429348632 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.43022467 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.42229356 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.432269596 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.428738337 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.445145033 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.429263452 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.428579437 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.427978123 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.432725014 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.430383433 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.421619019 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.428076476 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.433061707 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.422803489 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.432498697 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.429842076 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.430356217 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.430442797 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.430870859 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.432696606 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.430178382 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.431883581 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.423444215 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.425644586 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.435603055 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.446379813 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.431088484 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.432647775 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.431428344 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.431113369 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.431310432 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.432958902 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.424445782 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.427894369 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.435382877 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.431575529 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.433940534 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.425448712 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.43662775 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.433131745 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.42478504 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.437249703 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.433218722 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.434649885 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.425706226 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.436543675 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433385168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.432470166 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.435567923 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.432924641 seconds)
  done (took 105.265936668 seconds)
done (took 387.674888923 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.957946909 seconds)
  done (took 4.25120111 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.633965293 seconds)
  done (took 3.926626101 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.056536584 seconds)
  done (took 24.358470104 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.464736792 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.420838587 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.427990164 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.429061893 seconds)
  done (took 11.034976086 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.892360023 seconds)
  done (took 4.183908002 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.426796233 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.435801423 seconds)
  done (took 6.157327435 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.763913064 seconds)
  done (took 4.056671044 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.232558651 seconds)
  done (took 4.532030729 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.44061922 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.436248669 seconds)
  done (took 6.17613582 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.408406204 seconds)
  done (took 3.701877805 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.77898572 seconds)
  done (took 21.072521921 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.441500524 seconds)
  done (took 3.737363604 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.456160821 seconds)
  done (took 3.749634707 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.259874637 seconds)
  done (took 6.553723922 seconds)
done (took 108.784092906 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.420044081 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.420785613 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.420792238 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.419927187 seconds)
  done (took 10.974368664 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.497925716 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.499139062 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.508266059 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.492611604 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.491740307 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.501782134 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.460937895 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.476096986 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.489017061 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.48693738 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.502613055 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.491252111 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.500632959 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.460567504 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.487627757 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.502980544 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.492247378 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.508230627 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.460719896 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.492377933 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.438173483 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.494801938 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.48896614 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.435986454 seconds)
  done (took 36.955980679 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.922002123 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.496630465 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.579144327 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.481156711 seconds)
  done (took 7.773327812 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.541626313 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.542080425 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.558938049 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.596802455 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.623139368 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.556123229 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.463624024 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.46064364 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.445926738 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.541829238 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.620182707 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.540594798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.754849343 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.436694942 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.755786271 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.438361225 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.437673676 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.542572518 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.593375678 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.61917798 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.437964491 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.541195959 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.546454007 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.541933964 seconds)
  done (took 38.43400622 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.446020976 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.454572651 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.439518469 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.453258481 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.438606132 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.440335267 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.441427515 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.446380795 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.439185064 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.439553799 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.440945674 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.452972064 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.439020863 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.440040769 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.44597649 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.440319953 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.441503294 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.447245678 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.448147117 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.440794607 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.43853613 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.446251243 seconds)
  done (took 33.058320883 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.427088338 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.425608906 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.776576736 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.67908605 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.423955291 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.424592091 seconds)
  done (took 14.455216894 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.506980292 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.650607651 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.429773023 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.813586748 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.89810833 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.43278068 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.431146495 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.689901778 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.020803873 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.029105514 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.493493823 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.506228662 seconds)
  done (took 21.201732947 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517009559 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435221414 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446637421 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467007399 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441681397 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.43653301 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476431944 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936358266 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.446924843 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712382427 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437606954 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52074665 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682277869 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447361123 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.442924951 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.416247131 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67088809 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945792313 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43916323 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438174389 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469107321 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.443061164 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451525907 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659810825 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440382954 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437823957 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.699057535 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.437966816 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744410049 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720255602 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720165637 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44083835 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713365226 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889433081 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548793516 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653708722 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437540387 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.439721183 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.427498182 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.455291623 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445288954 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441623686 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718216495 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442881894 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438129658 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437662533 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948551562 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.452468932 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.440361655 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440565085 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72258821 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522883016 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.445252619 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.438647648 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527640742 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444113468 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.445923061 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571540466 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11161821 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453710973 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450266516 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.445923515 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433515831 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442635094 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124897073 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.449856673 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.445541617 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.445590727 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440208722 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439265543 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462156767 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440791262 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.46095349 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440877677 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257282852 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.444949675 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442632168 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003158895 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457044251 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.439969837 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664853136 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442514727 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441422641 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.441568444 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442251717 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217131913 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448848744 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.409975242 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485931925 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940217827 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665071953 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46372367 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472089711 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.660680329 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.412128379 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443218906 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.442729516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444176504 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464065787 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945335992 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447403144 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.44799138 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688441083 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.652809904 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447817789 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.417660205 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972433023 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450263973 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.470694616 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.459654356 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.66522878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.10178584 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733547509 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447725388 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480738202 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44414049 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274692743 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452298751 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.455527296 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.445555743 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741019342 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.299373729 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446998979 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5156363 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445818853 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.44567272 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451044256 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447009306 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.444763836 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.638759224 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446066787 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.751873358 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.446488567 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443089495 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.459660735 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449929448 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.446642497 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664816072 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450424029 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722642947 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444753533 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444732926 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446409103 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.663524087 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.444727599 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.452270467 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784983575 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458265115 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46012967 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733995714 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481411468 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558819329 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479029859 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.458586641 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.697055611 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.452561317 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.452567491 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456081222 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449580383 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450925537 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.454678811 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442679765 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106535883 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424185622 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45206393 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447180011 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.461679615 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520504493 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.454401894 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.664747302 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.4481165 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466004363 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.45557922 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.46035696 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668217917 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730687034 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.450418241 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639524027 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.948269355 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112293134 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463735911 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.448628911 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.448136305 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.447399374 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448873785 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447816155 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447640617 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667349177 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740413704 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464072246 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113684072 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452077735 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449870378 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.456184704 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731232834 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.459659602 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448990395 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.446680703 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4505116 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466338429 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.738402327 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671592452 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.466637453 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.450481769 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.967523747 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.458655749 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451281326 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.450906482 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475893343 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450569493 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036095307 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793242038 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449100801 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736534813 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.455009681 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.468779078 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.451669318 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458266081 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463917363 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.477056507 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459394593 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.671002331 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.45354812 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453648759 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088715552 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278300835 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059415949 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453276267 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.464997684 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.455600706 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.956448419 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457011538 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452949029 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714884999 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959511531 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457589622 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95548927 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.455963411 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29592293 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736843523 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67970629 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46416468 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.461068498 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740903931 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.665704161 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480375325 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46454027 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458447787 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.423163435 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031303309 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45819666 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652579143 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958825288 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467882802 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.457291786 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.537315919 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.458509531 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888565061 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.458559199 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455038399 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456986907 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.466757382 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047043382 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463389873 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454940218 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145082993 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45854263 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.967504473 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4610459 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676738074 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.741779928 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.716714104 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.461799672 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.461860609 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.699240317 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739985708 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455202889 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462118401 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072583093 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.315324079 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.463202929 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458010515 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303154597 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471474987 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770212638 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.472911369 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.461932128 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460243938 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456921651 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457748178 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.457201267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462523262 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430774441 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968807223 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.456312173 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452384726 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470480358 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461968028 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.704373448 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.472076986 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136273789 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691747293 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44602422 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512178493 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.462197973 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471567354 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.427760184 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456456588 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456193026 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545832957 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.682044966 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476890875 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.430567391 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464625588 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.672832532 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458291262 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469200669 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694794494 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.464696699 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.460893586 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312599502 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494372863 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.470078362 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460174835 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.454881698 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497952738 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533969018 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684449602 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.750278 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.748351028 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892425178 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475829791 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46073184 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.474492271 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538589587 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469957109 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.467954605 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.460521261 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138130114 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320584365 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154286465 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75466156 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.463412112 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471403777 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46104713 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703431827 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460455134 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736033105 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461740641 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.453719607 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483847463 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477558757 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477477639 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676005622 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736161102 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46037967 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466746856 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465564955 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.46245056 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752511549 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.672929929 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981075145 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032326466 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46500186 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472480885 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.979457731 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744008021 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461408208 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460610569 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462772642 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.472704026 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.463102652 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.475142285 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46169574 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704821297 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747236237 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92826297 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.752944925 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.48866129 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.341537349 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477746874 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.708587082 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294575176 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.689972777 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141451736 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.246160239 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715124478 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537610106 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690059887 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.468788465 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700825204 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.465754679 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.468063591 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464585575 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464079212 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.463009229 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.749658459 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135735809 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715999277 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.470806543 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.46525522 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497184777 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.689159298 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.692252984 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.25086489 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.684947598 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75542791 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471990869 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464315755 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142140608 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755912339 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46639858 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.469841146 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694623332 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46784874 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502671483 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.33930113 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.465528253 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037792878 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.677141897 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486843587 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474579327 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.254168837 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137907131 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.47263062 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982126067 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468958113 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477256714 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745654669 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.473656311 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483228237 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759153933 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.469705544 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476699359 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694775793 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.131186589 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299165518 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.483396599 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483045316 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.469212843 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467746414 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505618612 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471061618 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467130303 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.881572178 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473227807 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468033626 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480744642 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.466116832 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483485552 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.470777387 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467772743 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.4757024 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.46340412 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.437585823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475022354 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602804649 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03000315 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47098826 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083346728 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.804598433 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.715704133 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4700194 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.4608767 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.475332614 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47022926 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469221968 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470655702 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.459952255 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062725231 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.471886058 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.78054913 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476570115 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.679604656 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679810142 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470129297 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712857842 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475661045 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488484766 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.437654407 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470062769 seconds)
  done (took 1020.424194916 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.517196156 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.492756578 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.483102481 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.552302975 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.476865032 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.604890727 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.574620131 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.577385843 seconds)
  done (took 21.608766539 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.464073987 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.47316055 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.461263345 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.473180024 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.463398203 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.983361614 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.473964978 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.470673635 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.483874344 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.47256706 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.480962001 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.14793007 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.471065393 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.462488125 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.483176419 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.472071933 seconds)
  done (took 34.075263867 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.439269208 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.57162184 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.639941141 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.546056196 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.473606347 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.463487381 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.735304293 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.485772804 seconds)
  done (took 27.685271326 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.477969238 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.475553599 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.477925477 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.477763359 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.477924807 seconds)
  done (took 8.716839268 seconds)
done (took 1276.657724835 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.479797838 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.478236662 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.481075685 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.478057137 seconds)
  done (took 7.248868299 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.440187388 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.443067722 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.447072323 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.460630196 seconds)
  done (took 10.121932883 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.858571588 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.057141239 seconds)
  done (took 5.247122989 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.478080006 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.495954703 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.477755233 seconds)
  done (took 8.78422417 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.772926148 seconds)
  done (took 3.104488528 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.464534255 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.473097799 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.464162226 seconds)
  done (took 8.735593481 seconds)
done (took 44.573344292 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.476992801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.22724432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.62067327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.474427738 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.627160985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.62275329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.710279573 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.476763307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.468948012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.477273196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.474735323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.628495321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.698846282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.230042703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.700180658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.228362167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.628133116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.467051946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.46485926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.489285134 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.711862348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.46598552 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.475274621 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.466839893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.629014099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.612745489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.482921266 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.230351643 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.47617055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.466316942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.632128398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.467304511 seconds)
  done (took 85.643604333 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.466908251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.466139067 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.469303515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.485049599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.475062507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.466781653 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.487967482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.467062312 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.484537677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.466676743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.468551683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.472824917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.466645031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.471163095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.470073257 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.466803543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.467767455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.467835685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.468012218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.469682159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.469950297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.46940894 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.468925702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.46738127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.475328555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.471135184 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.495382836 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.466877718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.483492914 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.478850191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.466649763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.49670988 seconds)
  done (took 80.469393035 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.46849267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.473330413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.481174959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.470060174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.468185194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.479163801 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.472946863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.468953989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.468564983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.470397187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.469203324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.468533738 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.470796769 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.469609502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.494833201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.484575949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.469520175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.475448793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.468793808 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.469480161 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.473461866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.469534987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.488423824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.486047167 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.470983333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.47268634 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.502289796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.470952244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.477423706 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.483632832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.47286182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.501135675 seconds)
  done (took 80.568550077 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.738653156 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.484921213 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.489024807 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.481519848 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.489214374 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.486237618 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.48181744 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.716527897 seconds)
  done (took 15.70461152 seconds)
done (took 263.719494615 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.497231354 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.490210687 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.511203421 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.479688006 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.544477871 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.508568897 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.703604871 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.513454379 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.692784972 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.496449903 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.594922491 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.485957782 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.356118445 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.623264428 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.497679173 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.485073998 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.434105782 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.47308785 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.483465026 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.717534342 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.509679208 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.47462999 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.502465737 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.468204412 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.456596898 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.547751103 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.551310319 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.639502259 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.604724976 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.550043436 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.476119062 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.48505621 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.5138047 seconds)
  done (took 69.709250292 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.480260359 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.489518148 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.490391248 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.490574099 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.490241039 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.489015176 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.480373146 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.490908556 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.493445259 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.489753734 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.491963339 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.491402594 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.491539107 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.490337578 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.490186926 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.463281721 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.4804368 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.489174106 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.481100179 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.464784524 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.491083382 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.49212438 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.493061754 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.491437276 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.491449574 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.491183946 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.491474379 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.493862669 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.492353307 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.492405439 seconds)
  done (took 45.980798354 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.492954689 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.479019831 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.477477834 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.490117168 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.483938139 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.488743372 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.802440988 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.494597092 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.4924605 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.490998565 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.484742862 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.494867783 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.535689906 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.480245652 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.486807597 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.493190827 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.493575851 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.485504649 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.488855142 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.499010365 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.812999707 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.495157617 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.815814054 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.505889949 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.491800894 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.48712102 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.49778702 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.479542319 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.489220484 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.485706133 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.366583348 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.803190877 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.478880532 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.479527258 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.388851873 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.500447283 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.495318624 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.496511414 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.488088673 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.486943774 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.801061101 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.487030041 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.479568399 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.497386442 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.48646356 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.495511159 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.479737156 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.492222137 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.756011975 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.495490484 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.480711091 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.49415088 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.49926134 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.490081789 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.754706566 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.488914012 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.487084095 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.481083642 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.491919116 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.801818233 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.497778154 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.487308712 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.492064392 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.487973075 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.484908388 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.49030533 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.501501061 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.48957663 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.482081703 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.490079913 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.482428934 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.507749042 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.497232571 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.488969927 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.482075173 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.481724837 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.510017021 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.496065747 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.498801431 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.801455597 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.492996505 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.482272576 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.836570371 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.491947917 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.50098213 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.499415451 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.497548671 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.562328903 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.80359253 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.424146498 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.503362914 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.502639693 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.808671869 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.498101089 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.490421855 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.483584132 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.499288641 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.499132513 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.482281202 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.485878371 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.510546275 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.504375784 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.503036712 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.492811556 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.809867381 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.496855563 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.486973452 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.492002823 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.56313954 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.499757208 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.504717726 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.503519934 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.81743765 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.4952889 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.502075314 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.495261394 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.486674666 seconds)
  done (took 218.12795193 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.48849614 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.488383965 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.487627488 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.48765907 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.486605465 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.493509324 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.487443276 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.48723063 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.491262191 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.486692019 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.489582138 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.49686031 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.494045383 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.486716068 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.492205984 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.50771052 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.498789008 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.492294872 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.508845589 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.486743321 seconds)
  done (took 47.190259312 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.500550865 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.107457245 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.080554863 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.502592729 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.50211825 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.494533818 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.555993758 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.504063501 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.503903988 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.821243769 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.685458529 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.504555864 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.504113511 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.502466722 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.080807807 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.475708874 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.821838313 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.107494849 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.505549278 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.108279852 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.477058831 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.503454255 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.493868567 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.10902212 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.833673481 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.81182252 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.559222197 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.109276864 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.503943154 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.504197032 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.135293875 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.508675868 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.495191614 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.112204732 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.51262461 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.519030536 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.504673489 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.55725474 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.559494038 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.823903358 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.139468481 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.834406164 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.520773473 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.664819988 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.50785115 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.475809023 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.142613594 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.50747424 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.476766463 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.507790924 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.510797524 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.108887034 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.501645315 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.109333516 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.511318562 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.504642635 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.109821088 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.097445471 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.095297606 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.691230478 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.495734169 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.820904302 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.511623743 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.122381346 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.506943504 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.50619531 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.506059006 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.690215398 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.111294991 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.814442354 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.826476994 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.826601729 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.507986915 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.570630039 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.507120546 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.82618443 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.570071787 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.902597219 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.82790798 seconds)
  done (took 136.32609939 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.793645246 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.620237105 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.904919628 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.105702615 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.031626762 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.64090073 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.619470246 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.75576162 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.51489755 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.616458328 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.20012829 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.596513867 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.262617357 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.570263055 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.613702011 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.625076754 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.925101111 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.494699663 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.162948159 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.178331323 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.514508378 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.609740746 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.301007018 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.891775676 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.508087188 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.297463963 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.472640872 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.044925358 seconds)
  done (took 57.229552504 seconds)
done (took 575.901331794 seconds)
SAVING RESULT...
DONE!
