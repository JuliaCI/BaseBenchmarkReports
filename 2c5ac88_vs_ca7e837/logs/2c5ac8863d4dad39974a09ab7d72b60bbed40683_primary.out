cset: moving following pidspec: 31964
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.42171446 seconds)
loading group "string"... done (took 0.502207979 seconds)
loading group "linalg"... done (took 8.459872385 seconds)
loading group "parallel"... done (took 0.17236873 seconds)
loading group "find"... done (took 3.065531337 seconds)
loading group "tuple"... done (took 1.933147509 seconds)
loading group "dates"... done (took 1.470835239 seconds)
loading group "micro"... done (took 0.200852202 seconds)
loading group "io"... done (took 0.527237294 seconds)
loading group "scalar"... done (took 50.875440611 seconds)
loading group "sparse"... done (took 13.52641908 seconds)
loading group "broadcast"... done (took 1.169283948 seconds)
loading group "union"... done (took 9.270116138 seconds)
loading group "simd"... done (took 3.007799571 seconds)
loading group "random"... done (took 11.558519134 seconds)
loading group "problem"... done (took 2.188688557 seconds)
loading group "array"... done (took 24.70635254 seconds)
loading group "misc"... done (took 1.098494378 seconds)
loading group "sort"... done (took 3.667995284 seconds)
loading group "collection"... done (took 20.569328113 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.613220721 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130445038 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203418293 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.280994788 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.228909774 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170809919 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145462399 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.241420827 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.497768376 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213627786 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140435441 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421644051 seconds)
done (took 6.007474548 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252356356 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.247158739 seconds)
    (2/2) benchmarking "String"...
    done (took 0.175341001 seconds)
  done (took 1.083413858 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077394083 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158509679 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107106685 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095264419 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093693425 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10886417 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092769137 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10961647 seconds)
  done (took 1.432157638 seconds)
done (took 3.510283034 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.499353725 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.869889329 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.502536436 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14296077 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310754295 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.292703184 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271204728 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.19696405 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093018851 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089056175 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173511145 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.38894284 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.384903931 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.949270507 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090382106 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095201457 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129979648 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.759500213 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081830277 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110900376 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.510648999 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19452363 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099786575 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121697265 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186517137 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133603999 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161560281 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10182437 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66363132 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134290526 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182439494 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098659045 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159979786 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184400275 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198946953 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113444939 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676724437 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201794161 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097726624 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101351985 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677123419 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120693303 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.182247278 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103900757 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089598099 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180293073 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100732416 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094518953 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094979392 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086612224 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161577537 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.455361398 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105358135 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.167943577 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094160737 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688191418 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098215079 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.271583237 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12677305 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098528924 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09066186 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08785486 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154310086 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093984585 seconds)
  done (took 19.880615268 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145445638 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163961411 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079088475 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154697258 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126036536 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080766753 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101048872 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080167438 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109194909 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.195878882 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138271868 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152378687 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092894684 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091429781 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127528856 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248421187 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109670339 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.1220095 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091711821 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090481449 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138852801 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098205608 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091071941 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107802915 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171164192 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204367388 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110345266 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123805372 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091524636 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096221718 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142099498 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147294488 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09443651 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090908666 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171827762 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124680331 seconds)
  done (took 5.1858541 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118049445 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.218510201 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103804586 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.220580273 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196224715 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151171246 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182194639 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150883197 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.277587672 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.219047973 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164026766 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128590061 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098653729 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079662213 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080440878 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096189209 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.459344504 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.19703406 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148360564 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15930964 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110259832 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083303113 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380742602 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100298689 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085151296 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109591209 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065966725 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196648912 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092600398 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.140644645 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08334679 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11811386 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114260902 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210703883 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.134013549 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139988899 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123077968 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095928183 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102208499 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223599017 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100723755 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077699359 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134074555 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132198055 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115668144 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105915092 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107162246 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221438756 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086426751 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128118409 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.635935744 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194501351 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.134124626 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083741376 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292726328 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12546674 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100193978 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.104732772 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.361940239 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112349766 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084920436 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099736871 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080888676 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092914147 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096171188 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.425314147 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103915611 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.599962332 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083100601 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156616365 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094685237 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11645719 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086688101 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085211037 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125957384 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085246795 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095389932 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08723237 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079339597 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103934601 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107734719 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084282642 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096240647 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145968621 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096681644 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123403672 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109069568 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104324694 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085200286 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127631132 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083626961 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088334211 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.161173965 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095910165 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123119538 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110567343 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130555243 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102287208 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.064877523 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08375857 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.118352826 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100942319 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126188731 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100598615 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079585761 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100023475 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080072812 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079710897 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159129276 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086099522 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079880549 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103866983 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084143706 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092361626 seconds)
  done (took 27.613084892 seconds)
done (took 53.340045339 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.434006146 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082163883 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08136765 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.0985124 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08127905 seconds)
  done (took 1.51399232 seconds)
done (took 2.227411497 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319340561 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186029936 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10213309 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187468186 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085148097 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190577661 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.175685454 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095423261 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201112698 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083537992 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18165983 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083144614 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101905995 seconds)
  done (took 2.72958421 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104191162 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111246456 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102584321 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120073246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085365638 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102164084 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118829519 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112494814 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10223513 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112929365 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08613727 seconds)
  done (took 1.871487702 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100783012 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108381254 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100505932 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118701665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0861193 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099576147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119489018 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110865013 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101132843 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114936144 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087178122 seconds)
  done (took 1.863242511 seconds)
done (took 7.173348297 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.06952262 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.972082722 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.164890686 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20734799 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.351366451 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.233729985 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.544899673 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.151694438 seconds)
  done (took 13.555661648 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.164772847 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111520009 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093016184 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096014639 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095114583 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.112228046 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092025852 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097346771 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109275337 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095002265 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092385957 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108938802 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092141441 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094684977 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094463842 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106204678 seconds)
  done (took 2.429525958 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140859042 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140596544 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100496093 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099861754 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112244629 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099818409 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102809113 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114671973 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096172374 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096222477 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101769337 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11496399 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0992601 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093815681 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114943136 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115604378 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094373639 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115267518 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113892738 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099166596 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115362279 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0969498 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113600748 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101160466 seconds)
  done (took 3.392956734 seconds)
done (took 20.093745715 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146698105 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100058644 seconds)
  done (took 0.96705894 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.138758931 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153347923 seconds)
  done (took 1.016398623 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11186485 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090675547 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136443969 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103054921 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090878079 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106152796 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115920286 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.092029871 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.107604664 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093250423 seconds)
  done (took 1.776301086 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096364653 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0956177 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12144382 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134919338 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.100512854 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.110190673 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096505699 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094597103 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112125376 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092827851 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095962957 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124398749 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096052414 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12486693 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097204778 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095853235 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114498228 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095503707 seconds)
  done (took 2.629121451 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091762126 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093581013 seconds)
  done (took 0.914809392 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094516025 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091232378 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092382269 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108795025 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090685936 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090964555 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105747079 seconds)
  done (took 1.404969513 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.491874038 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.391423339 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.367356369 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108623951 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145569162 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.349156909 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144363117 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103809485 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104325254 seconds)
  done (took 2.974249287 seconds)
done (took 12.409303272 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092089436 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220976409 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.603435213 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113728913 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092005958 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157572658 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.277418931 seconds)
done (took 2.293729003 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351451124 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.145939082 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082089831 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092664006 seconds)
  done (took 1.402854374 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082739074 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100158394 seconds)
  done (took 0.921739159 seconds)
done (took 3.062411676 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090184098 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.12139682 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.106458632 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090257502 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090473643 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088167811 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.106199993 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090543574 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089237113 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087776834 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.106958803 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090318881 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089186372 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10425012 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089998851 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089633094 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089246255 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104226268 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089228011 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089360617 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105230557 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090261615 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088707825 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088265862 seconds)
  done (took 3.046553429 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107140785 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091624097 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108122788 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09424898 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093830257 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110193514 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09368908 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091464873 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.094132941 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.107871922 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094124688 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094079811 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107699091 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094399752 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090545954 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110066784 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09453715 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091049919 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10743674 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094375337 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093702176 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107841759 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095784237 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093946503 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110357043 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094556901 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091955166 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10761415 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094782845 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094373654 seconds)
  done (took 3.69644624 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099313987 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087768249 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090465301 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114014365 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089522658 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089937282 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103665174 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08944214 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091010268 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089522706 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108238461 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090431697 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086556874 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107703426 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093044849 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093738246 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098262827 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.104051199 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088276557 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090604959 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109759096 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087983318 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091046001 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089813631 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106676246 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088500816 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090307329 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106241156 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093596885 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090556401 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093212991 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108764698 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091247581 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099590002 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108407578 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091553915 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09531878 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104336664 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093415625 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088205687 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087245173 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105825729 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0890708 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09582184 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106172903 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091793973 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088699504 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091268123 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10614198 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094236455 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086945026 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.103276943 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094141598 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091601312 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092707134 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103942633 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092082539 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087072238 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108457357 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091744442 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088588063 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087021032 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111894916 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09374854 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105125805 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112436063 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088411407 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091942112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106959128 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096369342 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092570909 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115957831 seconds)
  done (took 7.677141968 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104783112 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098928271 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.092221435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108832262 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091503031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090221829 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112958091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09152492 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092044387 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112037334 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094373772 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091894811 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091452448 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109839078 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093024115 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091799865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113725235 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092922253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090736103 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108230302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093305859 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095988671 seconds)
  done (took 2.908607812 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233576198 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097140721 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139589981 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120279029 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111052026 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121013763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095597984 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097598665 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111117361 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101997184 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099031483 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11215748 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11188164 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098641745 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117227572 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102664058 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110936528 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101659804 seconds)
  done (took 2.833644549 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104963717 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092809295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128384551 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093549963 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094212391 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094925799 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115123677 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11180186 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.092095793 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.111277559 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100607591 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092411981 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.109405296 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094032043 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092391581 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110168957 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093844157 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093909074 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114799984 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099042047 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096830493 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115775882 seconds)
  done (took 3.005264865 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10645778 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093134012 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125723917 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097269888 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092607095 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091273584 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116712152 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093489442 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097440393 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111100228 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093003656 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092634757 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122674898 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094008423 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097247796 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109505338 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093833083 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093982261 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109193165 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093571861 seconds)
  done (took 2.777534142 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166746206 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124529815 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109706681 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11561911 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125802029 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109828427 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115971508 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125029119 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109697317 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135226815 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109344584 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108225896 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132410653 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112825491 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108829259 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134029102 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116737204 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132580643 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11046652 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108770479 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136764298 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110520408 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133200828 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109187872 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108924919 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124484382 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110281619 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113404081 seconds)
  done (took 4.115843326 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09319878 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09157305 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091592908 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108050435 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092577548 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091908867 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091002882 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10794912 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092043895 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091161697 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109121735 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092573809 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091338518 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091543915 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107575804 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092138748 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092664465 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106688133 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092354541 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09283219 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091766164 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108260705 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092505784 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092635652 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0910551 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109160312 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093229315 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090825646 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108689612 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093261823 seconds)
  done (took 3.649085192 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105357058 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101743382 seconds)
  done (took 0.965763117 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099192882 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105951769 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090903737 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10997053 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099500675 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09295474 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116310342 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098925057 seconds)
  done (took 1.572859293 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.139585937 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.157988207 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098492616 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103856104 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158974295 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148674933 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134102759 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096884467 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108397258 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08576894 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.133070098 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101002643 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093563167 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088325659 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109735158 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099595764 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094403481 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.119517914 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099318731 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095139032 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113727944 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098619046 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094011446 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.12089318 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08791927 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095245024 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112769086 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105128614 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087444067 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110651073 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091505556 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094603221 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.111389162 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098718801 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093264782 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158641351 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100507346 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08795403 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110769333 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097919914 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125540616 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.110945813 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093946413 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090081599 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112567962 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098574448 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096900635 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.111679339 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086290937 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087177979 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.109960094 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088378389 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093040437 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092379651 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109551989 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099430317 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093883181 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.106794281 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088691544 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087894071 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108291328 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088587598 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094547713 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.113504569 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094541814 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092000653 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109043754 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094540834 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095057835 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.110320174 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092890926 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107848433 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110702427 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098096268 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09770838 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.110745305 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090760328 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098150432 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10820228 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09361258 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096597622 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121636027 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112809405 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089257506 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088107159 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117043328 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09527864 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096743273 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103347604 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101600635 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09463225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.112248517 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086116946 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090139985 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105336257 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097844261 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085638597 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110308458 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094644594 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097972635 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096526912 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109791339 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094308574 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09764689 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11781167 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092540762 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152807696 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091319852 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087820083 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095088739 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116300666 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086982209 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092135977 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.111046395 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0903205 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08743322 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114898941 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094486972 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093873116 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.11389208 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095848059 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093832658 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11154371 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093477954 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089246342 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095813794 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118238114 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094885901 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094981828 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.111781501 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095121239 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091989939 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.114611464 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090805114 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097760531 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10705937 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093306196 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094904708 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097263067 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110286557 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088237243 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09055217 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110991286 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092438649 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095769235 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111454592 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090458064 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084178073 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112348769 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088449937 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09510566 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118720331 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08980553 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096115844 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106511987 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103532934 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089469205 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.115309062 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097379934 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097668381 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096787226 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102940197 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090728251 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095644927 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111910254 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090309717 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096213074 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111483004 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101632272 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086964971 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.115286051 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087122506 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09117801 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098216293 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113589574 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098178023 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088045684 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152611686 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1073125 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097572096 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110385051 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09362077 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097158768 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111810586 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098937667 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098435994 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.115511637 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091174409 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092016146 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116479004 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090488182 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098533753 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090504951 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112522508 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086797428 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094758367 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102822499 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098872648 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096352043 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.116147916 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100358641 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096094938 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109336268 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103134813 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089222043 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097533939 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104787935 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098991889 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10451819 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118188729 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101153529 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095342887 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108974408 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096724596 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102999259 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113927885 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094906087 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096163847 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087270789 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.115019514 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10120156 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096029571 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107782298 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094821785 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09501156 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114062803 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092744386 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08694956 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.115690897 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098538511 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089555039 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112305242 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.09173335 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093042724 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119096733 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087201878 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090235482 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113113388 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101132121 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094828288 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093547165 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114410296 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101207791 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098428731 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.114275536 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093924715 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102601276 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11105068 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097486781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090255066 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.106925995 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10808684 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098390097 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093600741 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10931329 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092622374 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096643165 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119875278 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101778871 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092793175 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.116886072 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102980679 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099946262 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090538721 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.11937751 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090732037 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086643798 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108850968 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087803737 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096734653 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110180395 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101189011 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092271013 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110325703 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099392438 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096154602 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10879494 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101019766 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104423124 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105468245 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08847807 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092418003 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111089857 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092907084 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091598628 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096872874 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114342534 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100979983 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096334487 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109515145 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095883545 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101559926 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109206178 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102550419 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099814211 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118131144 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091463334 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100599611 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090977169 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117325626 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089589472 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094027955 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112118778 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094380102 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090781055 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111887862 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091525003 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087143783 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110164438 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101763094 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093854206 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.118284198 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094999492 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092306502 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108874958 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091461872 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101104997 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110250607 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102307901 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096100241 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087540839 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10663055 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100927563 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093844031 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.118872745 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092021915 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098811078 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119193254 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100692031 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09630337 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103168036 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122253195 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101439734 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098950643 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106624178 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093497496 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09844111 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.11436987 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100360488 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098567579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106318311 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098540317 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100472155 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114555227 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095441529 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088605755 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09494618 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120113109 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099965791 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099608733 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.114909668 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097599277 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089927864 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116348448 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102028931 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096218193 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100447262 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113035342 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099549052 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090578371 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118573172 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097224103 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088594329 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106956331 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09464784 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100908267 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107983067 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101893451 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100312119 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090905572 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112000726 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100581429 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090335546 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117176456 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101098449 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092267913 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122467864 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097721932 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092809608 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.11666743 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102153766 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087788487 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092328688 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112868446 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101974984 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092543221 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119206158 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096157673 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099843248 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.11718128 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100898067 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100070549 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118579767 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090508945 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102153289 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097095596 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116556027 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093169144 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09211683 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109033775 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095438927 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100551257 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110201452 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104923698 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100800504 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111515428 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093801508 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101879117 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112831926 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104201952 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091727474 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095480408 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107747503 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097551621 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093520454 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120495706 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093342308 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088658799 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118857818 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102385679 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100463498 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115184783 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103704063 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088466685 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087608525 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117317655 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092569719 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104763949 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117545322 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093745797 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092751631 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.116498125 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097679218 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101327192 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108502902 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093283413 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095497252 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114965588 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094323119 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089348358 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098715717 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114093318 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097620718 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093090134 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109057366 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095045819 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101243038 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113023427 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092758195 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092605984 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120850287 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095337023 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093021529 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107877521 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10186207 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096517328 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120424949 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094193927 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095747958 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.110855749 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099381851 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10593001 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092146627 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113758575 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094090001 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100085541 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118604742 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089708876 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091984491 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124700276 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102001747 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095426837 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.118338318 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095300414 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102151566 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12087107 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100113077 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091740107 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089230898 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112670309 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090125204 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09836624 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119495401 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094869885 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092436258 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118590854 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101070631 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098380174 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097697114 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109878719 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103049303 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092154767 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118202896 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091117573 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088721649 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.117951724 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102842268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095125566 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114054962 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099913158 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099393069 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089372452 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112017518 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099525506 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099429236 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.120502568 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096379804 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092989016 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.118044974 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108132445 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097494559 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112752068 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104828128 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102321149 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115037413 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096850714 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098710155 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.119805709 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100255425 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102440461 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092367776 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114212343 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104050485 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101650601 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124273799 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094862615 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089147628 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120103668 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095262316 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089534485 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117281719 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104835567 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102716572 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113701103 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094007848 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104616533 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120554158 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097231371 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093730367 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092606444 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120438387 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093527167 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099164879 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111874344 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104366594 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102380472 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120786247 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105881929 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090653276 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120213762 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099978523 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103977857 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096784378 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.111284341 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091442826 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098704285 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.123412445 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104120904 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10027183 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.11823349 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102397204 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096762061 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09445214 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113463143 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103802115 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100429668 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.118113899 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098833476 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094932889 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11619106 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09943745 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101780024 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.122167601 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098842518 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106992647 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121387036 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096139794 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094020584 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095782858 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120497426 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09760983 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100212367 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111993553 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091072467 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10200645 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122561653 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096343671 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103840097 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122766692 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09632298 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099415048 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102751677 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.12220339 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09928624 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095531114 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.118791109 seconds)
  done (took 61.725693722 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145148588 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104792703 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119168666 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099242817 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114539346 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120404269 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100620381 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100072418 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119967677 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109064152 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099565274 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118303978 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114758276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118299772 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135764092 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108119277 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117597763 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102481895 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09972074 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099013644 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13289826 seconds)
  done (took 3.188722271 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116621508 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112341259 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129781656 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113023558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104208165 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13099712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109309425 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130049448 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11326362 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106626944 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131779591 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109661953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126864464 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109010068 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107757897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126757031 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113509723 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106493443 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131557336 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110390619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126243645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111966884 seconds)
  done (took 3.387594097 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130791507 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102460726 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096421163 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118909637 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103028561 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099298611 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121868229 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.102325863 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107297304 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093570138 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110343678 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095117305 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098309096 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118406243 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09457164 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098808664 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125557163 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10297723 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104026732 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098687267 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109485177 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100211777 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100242606 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108989556 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105500826 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103828445 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098826337 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122426992 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090599427 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10152179 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120082773 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093926068 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090552181 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088715274 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109488116 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103213328 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101501341 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118488266 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101164173 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089638113 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100360647 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123868014 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091149897 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099296455 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119960923 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093900017 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101713304 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099431155 seconds)
  done (took 5.825481202 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128813476 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165379855 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103322736 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138644783 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134878941 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108945896 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10137527 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138298539 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101829012 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124651178 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114344303 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111952698 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125811302 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106604999 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104473166 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124902379 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105108948 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.33775993 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127039945 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104295233 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106061765 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126260831 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11185531 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1327913 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106410891 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101610154 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122949556 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10818262 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109976864 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128971284 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106378075 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105502802 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132419904 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104938741 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102385692 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.1244153 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113788642 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122965599 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105806257 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101739202 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104746876 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127487736 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104835062 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132959453 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104337373 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104193491 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122982933 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101802373 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111606964 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123287362 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110153235 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112030642 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125698879 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104591471 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105369018 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131797277 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106216018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101030718 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124675164 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110792948 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100342509 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125388662 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113052841 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102652782 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.128340801 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111180816 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124761512 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106950126 seconds)
  done (took 9.01972824 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134021521 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104900249 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13389582 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113716618 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105520715 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126986697 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106231275 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105358357 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127131529 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111652262 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126015411 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194975378 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123592336 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112631315 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105428056 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126518376 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108448073 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106716749 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127831509 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108711988 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106572108 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13449259 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107831832 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133656793 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118476725 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103423127 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12681218 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108110391 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113375781 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126928386 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116880537 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126704464 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10828531 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113014274 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138123072 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107324495 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10220148 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128534712 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108504387 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10636839 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.1252277 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115106513 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127895934 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106314011 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107737613 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107097026 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135877656 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.118198404 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132373353 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114258424 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106869506 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137856754 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10712258 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127434925 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115625142 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.120587211 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135972771 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113392354 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128645353 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116009974 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113720048 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143185055 seconds)
  done (took 8.228024611 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102377702 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101849262 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09946309 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121397591 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102136881 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099690113 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100580914 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121299871 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100454798 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099504327 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120231979 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10156715 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100886159 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101401213 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120562988 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102507323 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099798205 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119247204 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102440576 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101526301 seconds)
  done (took 2.945130823 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112282538 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117937381 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123500106 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110680722 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103728778 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128520788 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103770827 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104317473 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10311774 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125597939 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11103866 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109759184 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124113179 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108809428 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130571718 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11062395 seconds)
  done (took 2.658016957 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121512289 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118337979 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.186415939 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105456316 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124071726 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111282268 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103158562 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104744777 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.124848273 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10942665 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107249462 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127352849 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104641711 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10378527 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124743502 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107566107 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.1018119 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126572167 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104815179 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.163564487 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.12934477 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104524347 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102454566 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.12746397 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104687366 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.106408616 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.131541439 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103726713 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104695133 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.125625072 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10680119 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.110993766 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.12379621 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107372541 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103530276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12435848 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104865566 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103965853 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125658555 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104170391 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105232865 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103477354 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.123065056 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107552704 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100880195 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124760256 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103626493 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108510326 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125654569 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105989947 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102992039 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130981595 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10878079 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110180221 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130153104 seconds)
  done (took 7.161947883 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114087409 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103647578 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135635439 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101965291 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1038569 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104354631 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125269308 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106482437 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103299156 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123674842 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105185786 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104426512 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124447307 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105529744 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103873088 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103846045 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122505189 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105121016 seconds)
  done (took 2.829247073 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108361188 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103162442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106022443 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124188615 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103198961 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102618654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123348295 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103029368 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101090171 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103337196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125783711 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103863863 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101686483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123889177 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104071401 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103522385 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124298912 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102780066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103824874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101907592 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125630656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102853473 seconds)
  done (took 3.24079132 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113527045 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.179641777 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108713476 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189690254 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099810141 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096480541 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129030264 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099161212 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113151402 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119092154 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100109494 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097782888 seconds)
  done (took 2.284486518 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130295588 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13800272 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124307959 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105039548 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11088477 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12913518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107917199 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106760445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136130202 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118034047 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127604234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11668139 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113794717 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135483452 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11184444 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131341191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108560906 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107445156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102862901 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122991273 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108206356 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135105037 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108829734 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106885299 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12927347 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115716908 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13496922 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119323653 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107597976 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13545932 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111184151 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107007999 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136661568 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118676817 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124858346 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116693911 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106881779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144528757 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112318947 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135426921 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104991288 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112096423 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135903437 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112341554 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114989111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130025021 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112650459 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127910881 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108345265 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127546259 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133174099 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114979783 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131533061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115795888 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115084373 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14878075 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117797759 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136495068 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112203412 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137656484 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116928331 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110450127 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136707152 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118345151 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133048066 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115536601 seconds)
  done (took 8.843831698 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145182969 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104810541 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128969873 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118762489 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11536822 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130229615 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108777351 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129370796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110732219 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105285713 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172737561 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109141678 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11508267 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137427173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108306023 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12935031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108927807 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115312687 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127153363 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129345867 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10671141 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13876023 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115268756 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137854217 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11969631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135046608 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109271012 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109343186 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128874575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109266982 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11353576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129333842 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115497646 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105368304 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137577551 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108567995 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108097345 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134708211 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109779786 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132561874 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118490726 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121655143 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131182511 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109026463 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140239938 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109656958 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108696773 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125512505 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109280898 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105103636 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140118403 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119264859 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138806642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116997789 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109254963 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130358746 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109268026 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109273475 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130531664 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115141684 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116393159 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130171089 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127347265 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129479267 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109686118 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115278911 seconds)
  done (took 8.828162495 seconds)
done (took 167.154351897 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.146658821 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18192709 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.142056666 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176872323 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.0946648 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128024464 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146953508 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145257941 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092930205 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115421148 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094718006 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095497372 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181577268 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096061116 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093359814 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09490975 seconds)
  done (took 2.866888048 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195774581 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306966875 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108954525 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119622221 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101339273 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098533116 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.11919036 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10188088 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099340663 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125711747 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100519646 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094134928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124576883 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095713119 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098115462 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098133099 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.126301435 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09928287 seconds)
  done (took 3.066611796 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119587705 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14255244 seconds)
  done (took 1.117460334 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129551274 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21008659 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282816764 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16889751 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121318714 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136845894 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147559946 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13324686 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188515146 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13151217 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111332397 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.0968511 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147747706 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104185087 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136379266 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098041897 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126969146 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134569634 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115584562 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100670709 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143396713 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103348528 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102890042 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135004945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179152086 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131044757 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103688354 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101548517 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122936095 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114591059 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103991783 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137287018 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110597808 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17528402 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101933611 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172770945 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104561818 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121693103 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113846054 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098947821 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124967717 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103233715 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13359839 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098605162 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103004652 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126302403 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104644865 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101839655 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128166033 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107282414 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105005406 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127052013 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150102315 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129580021 seconds)
  done (took 7.797344909 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.85868644 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142065187 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098904678 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.006934366 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149750813 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114261723 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.85552124 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144489434 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25098031 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.862333528 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11654203 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11128255 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252300297 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23101343 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.998911535 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34365628 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.705907895 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135390539 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129693699 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162190421 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108091714 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145352771 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121605996 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517885588 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101314927 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099470254 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129518614 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113551133 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174275359 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101620506 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103366134 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19171482 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.264703373 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204444998 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100390083 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122040408 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10094266 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.180261451 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265739523 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212891883 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171706279 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1206935 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.104699067 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130006948 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121287411 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097208962 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177383023 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187284052 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.184587586 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105456379 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111866479 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132561304 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107518374 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176229078 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097860623 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320863111 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.348007937 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100859335 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107580117 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137832478 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263535861 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09984318 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226327178 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148804669 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210157456 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100221649 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837741742 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180095067 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100264673 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127041856 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108132657 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105676018 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129625658 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166564973 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.502012527 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112048757 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126800916 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100871663 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22925185 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101379816 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120935991 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157192282 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122003864 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109158382 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113095069 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133838126 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.181865863 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.221024563 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135515135 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108960669 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126942613 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115004822 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101317779 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230040147 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222796447 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171977114 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228736206 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109733037 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178950121 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.177943248 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108978906 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182401015 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108386193 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137134091 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109872428 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218383281 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156278204 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104889819 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105254703 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130868265 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.134742512 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125201989 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11004211 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.181567334 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554467613 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.157189144 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119097648 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10610082 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109334713 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177395826 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107754261 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258024637 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132600668 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.178236221 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10935278 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0977256 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130539702 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.157401531 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13291327 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110025367 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130472466 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111773797 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251726639 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217244201 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113046828 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247165897 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198807424 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107869164 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18678548 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108564961 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185332377 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131734239 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109564183 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101181722 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826963306 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13574793 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109082564 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105105754 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20611208 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100105415 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124675878 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102511237 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09848543 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814024527 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124865449 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10034278 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10332542 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12927142 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109696592 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108727637 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128128887 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15355824 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258469461 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114474421 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107800193 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123816576 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15275258 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126881273 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101564725 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100428427 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123667622 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110035604 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105067229 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124980276 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187755609 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152158688 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223228999 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.647573529 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124236399 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102207427 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230282655 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12280819 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295949366 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109211243 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22601734 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182239708 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098711588 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324423068 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185205878 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206139003 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104736526 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186793622 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099069258 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130407819 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153906616 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124041302 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11054902 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172589614 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116190671 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134568321 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.032516436 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102490054 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257071712 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099217051 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.183456909 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10166325 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130807008 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297588528 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101752018 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139495278 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156113812 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128376691 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103300391 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.670286519 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101773757 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132602553 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110085527 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227239974 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181491728 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108568279 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132293473 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114495461 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178112218 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228036162 seconds)
  done (took 46.63605749 seconds)
done (took 62.333185929 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261851161 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175619356 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2787707 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173212171 seconds)
  done (took 1.839339987 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239255916 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155645417 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.19939705 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.119678715 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.202787478 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.119628597 seconds)
  done (took 1.918802714 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.171690985 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164918457 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142825947 seconds)
  done (took 1.360055411 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200764994 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214889612 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.326112884 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.230508677 seconds)
  done (took 1.939843457 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.256470097 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116380803 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124960929 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.20209935 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.213594565 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.174384416 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146174519 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.168145849 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131059274 seconds)
  done (took 2.460875237 seconds)
done (took 10.397209526 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.145645412 seconds)
    (2/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.254616561 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.243991438 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.329845657 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.178820679 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.205820855 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103741346 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.322912335 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100485176 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.133689582 seconds)
    (11/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.239167181 seconds)
    (12/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.327210165 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.340893203 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118564718 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.302988315 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.271714867 seconds)
    (17/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.276464915 seconds)
    (18/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.175870439 seconds)
    (19/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.365602865 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.276364369 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.178377527 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.153181926 seconds)
    (23/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.1271397 seconds)
    (24/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.273876157 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109379971 seconds)
    (26/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.235946136 seconds)
    (27/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.179389692 seconds)
    (28/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.194260623 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102668335 seconds)
    (30/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.150797487 seconds)
    (31/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109157101 seconds)
    (32/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.102971465 seconds)
    (33/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128856988 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123051466 seconds)
    (35/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.129245052 seconds)
    (36/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107933735 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084412772 seconds)
    (38/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.12344359 seconds)
    (39/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.108070734 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111873226 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.197816478 seconds)
    (42/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.124066824 seconds)
    (43/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.18789065 seconds)
    (44/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.2106273 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105741438 seconds)
    (46/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109794365 seconds)
    (47/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.247737893 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106070792 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.209856729 seconds)
    (50/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.138963731 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.170429938 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124129171 seconds)
    (53/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.212290143 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10917406 seconds)
    (55/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.132700698 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117190317 seconds)
    (57/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.14495469 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128911588 seconds)
    (59/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.132653391 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.125425492 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.126154384 seconds)
    (62/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102238974 seconds)
    (63/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.161388874 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.105562262 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.140223361 seconds)
    (66/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.2736036 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.085013671 seconds)
    (68/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080116493 seconds)
    (69/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143866655 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.106542417 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.128350043 seconds)
    (72/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.142328369 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133536979 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130668352 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084381497 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099082629 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.141337361 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120720952 seconds)
    (79/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.135346148 seconds)
    (80/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.133359011 seconds)
    (81/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.147939534 seconds)
    (82/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.164229616 seconds)
    (83/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.181017965 seconds)
    (84/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098594036 seconds)
    (85/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077473247 seconds)
    (86/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.263664352 seconds)
    (87/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.086910015 seconds)
    (88/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.155735175 seconds)
    (89/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078793587 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12338875 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104187536 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129160176 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125220012 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101956196 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124408374 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085897505 seconds)
    (97/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.180069058 seconds)
    (98/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.107089772 seconds)
    (99/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.159131144 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109566733 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.111615421 seconds)
    (102/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086664246 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098996496 seconds)
    (104/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.15405748 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112290158 seconds)
    (106/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159742633 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150149744 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085794393 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.102296913 seconds)
    (110/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109369148 seconds)
    (111/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.162096184 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078721874 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080672656 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101214415 seconds)
    (115/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.105304072 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.159468198 seconds)
    (117/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077770042 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.12889481 seconds)
    (119/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082315054 seconds)
    (120/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117148992 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10067831 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134154891 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085324087 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.101930168 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132530171 seconds)
    (126/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090394257 seconds)
    (127/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082311253 seconds)
    (128/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078506956 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.219401523 seconds)
    (130/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081962827 seconds)
    (131/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08609222 seconds)
    (132/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08347148 seconds)
    (133/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200306593 seconds)
    (134/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078707199 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101955025 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083958199 seconds)
    (137/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.101012568 seconds)
    (138/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.127315642 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102312757 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080591702 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.14257985 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124066214 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122223558 seconds)
    (144/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.136119029 seconds)
    (145/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079748448 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085138946 seconds)
    (147/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.128345313 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136335309 seconds)
    (149/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082212639 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085622618 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108653062 seconds)
    (152/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.10208094 seconds)
    (153/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.080388298 seconds)
    (154/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103361501 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100900744 seconds)
    (156/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.16233347 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084207491 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098949509 seconds)
    (159/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.131990216 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101002721 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10167002 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098433092 seconds)
    (163/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.105269361 seconds)
    (164/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11372289 seconds)
    (165/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108542032 seconds)
    (166/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084233609 seconds)
    (167/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.108140562 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110637422 seconds)
    (169/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083961091 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122188218 seconds)
    (171/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108100191 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103384621 seconds)
    (173/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080868145 seconds)
    (174/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079776672 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.107292702 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.0866901 seconds)
    (177/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084591574 seconds)
    (178/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080443849 seconds)
    (179/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077445869 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.107797708 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122595124 seconds)
    (182/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078649067 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098256121 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.100369879 seconds)
    (185/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086752213 seconds)
    (186/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079650131 seconds)
    (187/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083626165 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101163732 seconds)
    (189/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102238189 seconds)
    (190/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082246882 seconds)
    (191/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079260441 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07769811 seconds)
  done (took 26.513933766 seconds)
done (took 27.397812918 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.201621244 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126675569 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110584775 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108877303 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.195461337 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116441253 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.125288086 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135335641 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12117257 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.109139497 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.124073931 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122680376 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108648202 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199379258 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111826884 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127044629 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101219299 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11991756 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.14904821 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128637599 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195970905 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104862323 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119786655 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123626734 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.172968812 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102115117 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.133822948 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111578934 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121988873 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135725645 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111866977 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100117416 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.150677289 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126487271 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101276586 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135079889 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102490157 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085232805 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110795874 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.137275702 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124587435 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112070471 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134770871 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102609991 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111213601 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.135223279 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102897243 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.113293387 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.123945697 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111893709 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103698237 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.148710582 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111802998 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099807948 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.099809218 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126464986 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122229789 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10132787 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.148784795 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103080831 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102210913 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125041203 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115685171 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101952579 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133254963 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102616995 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113832535 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112905331 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134456579 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104369446 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101227614 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.134065562 seconds)
done (took 9.766768574 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107559573 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146526062 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.195661148 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.20890192 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127244449 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140182333 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116765865 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126299079 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138674505 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122038901 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139578478 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159722773 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.177836693 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143439243 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116371189 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113773345 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13948658 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111371767 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.205238514 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126187333 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1501104 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119069124 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128986837 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142780272 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106322645 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126662024 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134563485 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115231566 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105417928 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147417107 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126320323 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104910093 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133478813 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126692896 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122244302 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142052088 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117853288 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114370355 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.129954289 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105627145 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135943747 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124175931 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106193063 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138690182 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116230572 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121572079 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136596189 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120898396 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108148084 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113022673 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.132012185 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131831693 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.140527132 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123956673 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117901802 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142298324 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121321247 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11876441 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131635833 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120882516 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10620481 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105729455 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132633812 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128765085 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131695991 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121486051 seconds)
  done (took 9.507369017 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125671069 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134936896 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140564515 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117326292 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109437182 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12342067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100247244 seconds)
  done (took 1.782625566 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103251285 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181485917 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.203222824 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.203023276 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.176655798 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214017887 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149217756 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102654485 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13604208 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136319347 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182311621 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.233866559 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112050075 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141337664 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183437304 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125845579 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.182828115 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126541287 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117756777 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207015689 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119633001 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131610909 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140337998 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102274902 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.201399207 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103475049 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.257480177 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120343547 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111645789 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.141960558 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117082752 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.202854778 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176668776 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.140692504 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111112426 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.204584087 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.175268365 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141220837 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.189969782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.130793105 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.176514387 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.141259519 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118066112 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116276379 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.142832411 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.165658525 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.146742307 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117169613 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115826396 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210912079 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.111715535 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.204600669 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113935389 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142656522 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113849014 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117862426 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149663536 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118095424 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210602872 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120394847 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.203573711 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.178782341 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.203715015 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.203552202 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126723538 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206623447 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.174988416 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139924278 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111086974 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117804472 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.207375967 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115753104 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.139364614 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.169838809 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144250608 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18185986 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.206691938 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113836127 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.138634239 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10750649 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115577052 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101886219 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.19723906 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115759617 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141303142 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119512333 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114101676 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144107519 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.1065449 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.147675742 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117548819 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.112295304 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.146317578 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117817632 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117215569 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.209640678 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111885725 seconds)
  done (took 15.457481106 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104925487 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103246955 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10704619 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128951542 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104900189 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104332336 seconds)
  done (took 1.602502044 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14011496 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11765512 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151390293 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119652294 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161142325 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.210256824 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.214318374 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109965128 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158907438 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.1272998 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.208531409 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.188622217 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.211858598 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120207738 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.2158995 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119032504 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.21666457 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117156743 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150660291 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11540241 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116158707 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145554271 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115611601 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.200179116 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118808056 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119566943 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135605959 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.14542591 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125397063 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137303318 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120443117 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117393331 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.134378304 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111221575 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.216718154 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109784204 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137361122 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121683399 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120118373 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142309984 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.189653485 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138895303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125509082 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120145785 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136229478 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11063192 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121690667 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.135835868 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.19264876 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.145420592 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121158626 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117832632 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146070271 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120180868 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.108599912 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137031089 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121081703 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.217808707 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120031759 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.108412262 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.144620138 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118613786 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135463888 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123599406 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.11774186 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144037582 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.11042747 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119693268 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138915255 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119711742 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120162114 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143266747 seconds)
  done (took 11.087722148 seconds)
done (took 40.356688445 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.590543661 seconds)
  done (took 2.534000314 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.874199388 seconds)
  done (took 1.822502048 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.377954117 seconds)
  done (took 18.357378485 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.417529438 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.462585667 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.126184327 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147117951 seconds)
  done (took 3.101256613 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.818016665 seconds)
  done (took 1.785835172 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280950002 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259155885 seconds)
  done (took 1.493647824 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.701662183 seconds)
  done (took 1.662538947 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.507105624 seconds)
  done (took 2.459709734 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.28452037 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239597305 seconds)
  done (took 1.491805848 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.609611363 seconds)
  done (took 1.575181376 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.153786323 seconds)
  done (took 21.121580846 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257489247 seconds)
  done (took 1.227788486 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282660841 seconds)
  done (took 1.255285039 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.448622291 seconds)
  done (took 4.419902027 seconds)
done (took 65.257204495 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114377194 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115651987 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115472853 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138527958 seconds)
  done (took 1.445974248 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122947998 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118262507 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120399135 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142181845 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122228816 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117260708 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142850727 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119189574 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117128208 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144837078 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117864019 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116942623 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144424747 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116869952 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114502224 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144393784 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120361752 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117055703 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141787971 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119479559 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118009201 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143063054 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122036938 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120865696 seconds)
  done (took 3.997347106 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11337493 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107247161 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108662745 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130904584 seconds)
  done (took 1.439454337 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125896287 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128671451 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152179694 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124609165 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130327836 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152706802 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116325975 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113807899 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140660514 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126665403 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133970304 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154658839 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128806683 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11905235 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152911569 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112232911 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118188682 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153629149 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124115082 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124776954 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143672815 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123511219 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123025004 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153019791 seconds)
  done (took 4.151320529 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191770811 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128854657 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173907041 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16044496 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17584625 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116080621 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144536686 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148012217 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124554309 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119334017 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146308542 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162628788 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149004227 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120123205 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118374399 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146809114 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128890924 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12361676 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188499381 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123562052 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149015428 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130298552 seconds)
  done (took 4.146790538 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119842894 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107074014 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102923015 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134053543 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.1193782 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110265007 seconds)
  done (took 1.675881483 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108286619 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101750144 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101878867 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127345122 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106433414 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101913729 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100925275 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127611755 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10373865 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101705147 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125791348 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103017207 seconds)
  done (took 2.293640273 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.32271786 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107765487 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133485284 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110357894 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112235101 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104461355 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.143811767 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106357784 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.260735568 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102779255 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.130136899 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192796964 seconds)
  done (took 2.811620833 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200106458 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147206479 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248139724 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366251273 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184307119 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157952973 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292316091 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187594198 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173530373 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16148118 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182822759 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185301859 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15067526 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208439826 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137566367 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183438103 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161674517 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229344282 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13973591 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232440267 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180158159 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173250952 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2136694 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146401535 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163057214 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159236 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.144628878 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127884108 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18915066 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160899752 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194738154 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148779874 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165212612 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211342279 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2256566 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194400488 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268888173 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130905173 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.193909292 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.212148234 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250775358 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140533941 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209093515 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149773927 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153735417 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181667583 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176615922 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.180674564 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158734506 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14228264 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203567804 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175434164 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198295226 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133472407 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305745936 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157953338 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141662587 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188482897 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184738153 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221923293 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198729892 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122585385 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198775794 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187344726 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233182398 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164604495 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16125003 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148503814 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163247411 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228580496 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174821937 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18416179 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225301638 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129840648 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195655527 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166065997 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178401802 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22581394 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168905091 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118892169 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174574079 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132151379 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15222499 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191423748 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147523479 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210234603 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159386722 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.3428838 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180467547 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180289656 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156009732 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185213052 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158185786 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174063777 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101799367 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167025173 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161332996 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179354535 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128366704 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151406633 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166060274 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124744015 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175961313 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12332565 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189014736 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132683529 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157934679 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193098797 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12889033 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201995464 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144944744 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.188503886 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189068607 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190589509 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155708158 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131957419 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240620279 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166748921 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162132243 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172961526 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2190701 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1472535 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159629228 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159618237 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217465681 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165939981 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19710147 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162707505 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13367547 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161330211 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170999589 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182765581 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15441638 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125617928 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189708644 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213626192 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125844152 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136007294 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204276966 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130043424 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15004482 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13675655 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158915138 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142430541 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144937004 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.163949545 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151090514 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190790661 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1625045 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179669351 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13207388 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195109462 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129375015 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194426938 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146270105 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.145022139 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171524771 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221784276 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127943015 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205103004 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159146834 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210243015 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197571162 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129339233 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207586819 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126624891 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118790512 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184261849 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168481046 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187697481 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212144437 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206921332 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163495444 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187735787 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145696922 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190735203 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17927624 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180667941 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140884872 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19530652 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190449768 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12075638 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122675109 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.152283289 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135735032 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127208961 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162878597 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173061041 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187453591 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202148426 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164706757 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162685651 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188421023 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.150502081 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157524391 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200127402 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13839767 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211580134 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185687261 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202179393 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13762874 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184471048 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119943838 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152263174 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133346052 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186361004 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137694878 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132599552 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166452974 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186429183 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193814746 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170947148 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191435249 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186949473 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224851782 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120536821 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161455866 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192962752 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190935822 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180705309 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133014588 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184115829 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189181366 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165765673 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214403368 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167285506 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20321696 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191393432 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.190237402 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129571468 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173614656 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159732412 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163055494 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161412009 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17073611 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130233476 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149136122 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163984169 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137613475 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204583679 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139383556 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201254575 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181230922 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167715899 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151915448 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139989514 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199514553 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144107501 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104630933 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192927503 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215522295 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14808693 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152188788 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199131782 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127661002 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341083829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211051099 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172091941 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161146383 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136795049 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195129834 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159393074 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1865887 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1822217 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166844804 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201190645 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194441987 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140615706 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157668488 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146516917 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175691632 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136431486 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.175828728 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161072972 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.169236484 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17846584 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164192976 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167775585 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200920477 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14539345 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175178639 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136823438 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246839273 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163655824 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196998422 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160100109 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190611331 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206371678 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122910336 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125620026 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.156498882 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18326627 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153111505 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17372519 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192995976 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209026842 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171546566 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188998481 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139273487 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.152456323 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164621307 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143569403 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213929239 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161639695 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135819979 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212758918 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126109426 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156889379 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158098774 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294495613 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145812656 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197015177 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105766944 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288107356 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130273601 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129804805 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187329711 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192963569 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133663523 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180008032 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197878779 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138454389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189222449 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13485013 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205397523 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212427016 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162505091 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196633069 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142178477 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187266354 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157046666 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197793017 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144612569 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173849016 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156469336 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218582943 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175138462 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158786785 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165520857 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19422791 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16736356 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197425633 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136792005 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209318067 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126498871 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190404084 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135123668 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150704272 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158479678 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193019325 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129927414 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199620422 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166581943 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158026642 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125950579 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16999641 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163291261 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136286181 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.155995768 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205474166 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129505696 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17631826 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23108631 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128193438 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192556878 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142728904 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155824561 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136686034 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168531984 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130874174 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17213153 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203077385 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129520262 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20283744 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158382834 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187836306 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180073585 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14253944 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.328667696 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155520331 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187612943 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176295028 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191834592 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1759895 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170788809 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19671398 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146014337 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187707488 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144022583 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.254779477 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186448856 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165407582 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129567731 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169910475 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136694802 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158893612 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152416731 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191874587 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138807416 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134175544 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192300135 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142666815 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172019426 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139938523 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224870529 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147884576 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207620575 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210952001 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135968792 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198571026 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17124678 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153844704 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.160106736 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195943318 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142588438 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175275346 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134077106 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136498016 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235335812 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124002551 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185847868 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170869997 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19413508 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169289057 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161681199 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17196624 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16636725 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17291417 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153816686 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150884528 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197642571 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132756298 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125094702 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196647649 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181287773 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164840577 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137822406 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.200664209 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191754676 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150930744 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133152526 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29242952 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15715851 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219356729 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134852082 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163738119 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14282332 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181488863 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.16165664 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195696831 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129816253 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127717902 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.171486729 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15661311 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166235821 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166497804 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19687442 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15693227 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211804019 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134668398 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.290159968 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141269378 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196315327 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116239256 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12760599 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16838802 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134434168 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139104344 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209570234 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238497506 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.188852652 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146462465 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133079673 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153069654 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13173064 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188469551 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149418366 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192558996 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145361089 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102467987 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166858428 seconds)
  done (took 84.783729674 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159404536 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150184598 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165042912 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219592561 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191159021 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.284455112 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.225953847 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242047027 seconds)
  done (took 2.70561615 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119384334 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15603693 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141796486 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141525726 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108635488 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.434426962 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.130338139 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144527941 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159224066 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.147762003 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132813752 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.501893763 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112436114 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143854915 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.143404067 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.10792203 seconds)
  done (took 3.889097231 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.572900561 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53572973 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.903359001 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285766717 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.252754974 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.196156495 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.732211976 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190826288 seconds)
  done (took 11.739737923 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.15233071 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146879463 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.406464954 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.74344539 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.200368533 seconds)
  done (took 2.725567273 seconds)
done (took 128.768143176 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123831171 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121347433 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121307136 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152189308 seconds)
  done (took 1.582737981 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.175737789 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090121388 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092078406 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116867355 seconds)
  done (took 1.547501865 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422460904 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089926481 seconds)
  done (took 1.614824051 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146544453 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135568085 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163626378 seconds)
  done (took 1.530077669 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138418932 seconds)
  done (took 1.211340466 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121188326 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.117806716 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.230110264 seconds)
  done (took 1.546811113 seconds)
done (took 10.109445789 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119543594 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.923214785 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428675675 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132327704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708215893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423724542 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.417605913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171950024 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171258724 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135340855 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130282485 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687430844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.432916414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878142487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.387154683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.894547935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692143792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108962257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141903819 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109617288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.403197417 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13413792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110904957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109123364 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714393084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419987467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107330457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.905706338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10781503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111857887 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.422876356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109275691 seconds)
  done (took 20.820703955 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116507748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16570538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143549642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110284434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111907744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136831483 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120081999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120215325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199994978 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107657435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15660787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109730075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113913823 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135827855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135137861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107348907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136288629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112072795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116416091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137294882 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132412372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10746476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135480503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112329826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10849678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157643671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110028527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120272797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.133877819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114222246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113363405 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108841024 seconds)
  done (took 5.13207035 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156682289 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174233679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145636806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147005614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185322915 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111477042 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221440436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146438524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200190499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111860789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129601657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135216037 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149145704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108376653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160751463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108941189 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111972385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137544723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116986682 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111304421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158558757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109126221 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11037726 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137556744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109773275 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132124588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136403539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122104631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107501103 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140206323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115687787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109403715 seconds)
  done (took 5.445900149 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124856825 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125696515 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131501492 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160684795 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120083482 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123948273 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151102972 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121168562 seconds)
  done (took 2.148177766 seconds)
done (took 34.624923819 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13525866 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129242766 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130284935 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153048047 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.181373701 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145674833 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12728133 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116573179 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151293402 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13098909 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108394126 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.118729754 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158953659 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12133582 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.211752891 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126210466 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.217373099 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.183652532 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145957 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126747356 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118565071 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.218053716 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122843333 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.117073168 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.218271133 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111069224 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.208738165 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121650091 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.119710805 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.140380174 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.184116811 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.152276475 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119415562 seconds)
  done (took 5.949441745 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.200326543 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120841995 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148032183 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117841674 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118537722 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145673022 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.203955621 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145962623 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119521591 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11970363 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117082547 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216472873 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125968209 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141993612 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122815381 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112360283 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.232260348 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.1201952 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109172162 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.092138834 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.143115848 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117574183 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.245044864 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115274408 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118100128 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.145878355 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122340337 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124368416 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.119415298 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.150037148 seconds)
  done (took 5.326976115 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124304268 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131051977 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135929908 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.215107048 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146456607 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.15834842 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138059451 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132014429 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168295025 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113468817 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126686179 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176043201 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128937497 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122450456 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144469641 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13125316 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134369024 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.139466353 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121120468 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129500959 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160462192 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131762807 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135208373 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148020047 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111530591 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119376268 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121438439 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155725517 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120966229 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125762278 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.142685011 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115568465 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113510685 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176875937 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114072303 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125896766 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166399024 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125074451 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.123931104 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.172999897 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116867176 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.112219054 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.167139148 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167272508 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.113709011 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155571756 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125988014 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125747579 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.1391061 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131880297 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154774619 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.140550894 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133265353 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.110701706 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.139148425 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121660271 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112071623 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.143953534 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128709176 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114109427 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.163145577 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121523253 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123143113 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113278521 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152326279 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111565183 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11081368 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145405119 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139736923 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119437485 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178771339 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113572204 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123925532 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152845379 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126366253 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124486995 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.110828758 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151627932 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12405004 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117910715 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.154607112 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116388139 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.114796443 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.157468067 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133748275 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126492976 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.152239576 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125949761 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116271456 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.14177541 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131563854 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11333927 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.144300323 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127857007 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11277202 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115939323 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155793829 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125178416 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109293744 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167306033 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117029405 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111778621 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.16561809 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116968192 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117294726 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121352468 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18523533 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112780135 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151545709 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127895065 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112500264 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120178113 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.144908692 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11111336 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130663641 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.15710365 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120161947 seconds)
  done (took 16.766698705 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.309547019 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.266548423 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210481412 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.238187353 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124932023 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.2319501 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.29421905 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.298523394 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112637099 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17879659 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163682523 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.266595972 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.112326121 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.171429484 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.299678825 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.350599103 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.140802725 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.179836002 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175118821 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128062747 seconds)
  done (took 5.361469691 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135264155 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147965134 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164465535 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141039578 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122898226 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.15926413 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11350195 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134130941 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155854269 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12243789 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113879586 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158899728 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126815171 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129738936 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155904958 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.156588499 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119474002 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145494396 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136640254 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117832334 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.12967473 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139238791 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12028129 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163156945 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133111484 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123033935 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140022193 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11899962 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119495036 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149267235 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118893672 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131243005 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147204929 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10859283 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127047826 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128033763 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14879937 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116402536 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116656866 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143441677 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128762396 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126683167 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120670313 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.125171532 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133370976 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113256974 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127505189 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155341629 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105305197 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132495145 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.1548666 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128675081 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118857775 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164410054 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121556753 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12907213 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.152771883 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128792452 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116773495 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139523494 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112565382 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116562338 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121093142 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.15650225 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12578357 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132354805 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158254095 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112684166 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116798891 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145873536 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117668496 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126779671 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163483891 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123111054 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119999985 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154228919 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123240615 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093921543 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12213585 seconds)
  done (took 11.566401403 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138427308 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124129877 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131234553 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178107676 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128529551 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117835974 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15326902 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132990927 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127830541 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161144376 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128937525 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126204941 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163435937 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124050984 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123844762 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.157150473 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128869271 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150363771 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161341681 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140935864 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12706947 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.148675847 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125776745 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124574517 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171014219 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125582051 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139701047 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158362541 seconds)
  done (took 5.041535379 seconds)
done (took 51.099738957 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.249607792 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432389766 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.211637638 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.208018849 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.239263887 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.243082634 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209505434 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.221084034 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.600676041 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.181087359 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.20962563 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.212334406 seconds)
done (took 28.329677736 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.263619301 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.757309467 seconds)
    (2/2) benchmarking "String"...
    done (took 1.492712091 seconds)
  done (took 4.353792666 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.19849976 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.198131922 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446871126 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.196653645 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.216836665 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.200278536 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.212147143 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.206135078 seconds)
  done (took 15.779737812 seconds)
done (took 25.698425705 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.260082763 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.384633413 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.437326811 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.204496224 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.206010244 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.20537058 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.199922867 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.220043963 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.20641889 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.207698096 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.600650491 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.47399322 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.210855643 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.586356578 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.205708299 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.229288332 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.201111752 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.425667412 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.205346975 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.229833228 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.17955687 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.184912373 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.225498253 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.200946696 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.20717565 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.213320378 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.258759396 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.203017852 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.392081981 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.225837149 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.23412242 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.203204307 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.255268421 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.203812155 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.214248836 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.205135093 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.378095685 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.209719959 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.184132426 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.221667348 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.387458386 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.216128944 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.206847404 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.202041414 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.211182253 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.260044373 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.185791142 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.335585093 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.222059632 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.21500641 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.278211585 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.567211263 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.202075507 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.215682256 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.211771313 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.423674886 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.215596149 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.255173884 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.228023848 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.218827293 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.209490504 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.204198885 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.267534982 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.21496265 seconds)
  done (took 143.760157846 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.202470236 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.20772726 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.206932147 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.269012782 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.207531123 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.206715296 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.204679039 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.203865669 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.209258043 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.232774997 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.209112743 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.20594842 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.20806931 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177756778 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.215473283 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.220822907 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.204613451 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.207765977 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.232843175 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.206583639 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.211078702 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.208467771 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.208386327 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.207730805 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.246000224 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.279976952 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.227266776 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.235008748 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.220027621 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.204552589 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.244010716 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.212685118 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825782146 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.075275772 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.208756251 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.223534474 seconds)
  done (took 80.384736922 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.204082281 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204747523 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205966518 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206753264 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.236600536 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.206152702 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.769724492 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774283557 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.180434949 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.310616881 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.519679396 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.42248335 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.206177502 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299504529 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.219155993 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.207891283 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.222469977 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235266887 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211978857 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208366891 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.7722022 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.224086012 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.211439259 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381588386 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.223735225 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238724083 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59824794 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207537949 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240118522 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537879234 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255574191 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207924243 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.53059161 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.336483275 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210067459 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318972805 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210471984 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239412724 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207484499 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48873487 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208154662 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.20908973 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209776003 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.822942494 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213577801 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.773112461 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213454641 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.141159873 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209576186 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208994959 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.920365161 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.864805336 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.211421555 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.208587286 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21084291 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209049626 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209491147 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.242672197 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.918238834 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304162822 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.208248448 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209994922 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.214033341 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242290212 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.211099911 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.405547882 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208806176 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.957221889 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.269412851 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309437671 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776955253 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213765235 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304831272 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325443663 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.210842256 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.210999383 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211936848 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.211391247 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320839663 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.211483031 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.180409025 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.386838118 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227918892 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.527009324 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31055221 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209721686 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.550672769 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.215758284 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210106705 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.894567925 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305304482 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211932596 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.210464633 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20964496 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.180221672 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778391435 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.440149882 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215702918 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.920572301 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.216507888 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.771782385 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763082588 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.859384479 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215957836 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323048557 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.387705212 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.230143113 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.211561322 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.530629247 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.218049188 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.272410771 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212537617 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.212744069 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.611399311 seconds)
  done (took 373.772478489 seconds)
done (took 599.021468252 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.040644058 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.995629399 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.147280649 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.001241372 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.98662754 seconds)
  done (took 11.285183686 seconds)
done (took 12.397581413 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.402088889 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403273542 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274412321 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.407494013 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245445362 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.420756718 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388385366 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.229815395 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321527518 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.293298033 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32349337 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262738465 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247469871 seconds)
  done (took 18.334371398 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.487750818 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.224892927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28135388 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.480223403 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258982635 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490884182 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.524583158 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.22457473 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36141993 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25858693 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23624814 seconds)
  done (took 17.944596027 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490673409 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.226080542 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284169596 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.483254728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26027421 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499627273 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.528590275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.226535049 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.356001224 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239940817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236507023 seconds)
  done (took 17.948459441 seconds)
done (took 55.340728285 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252048159 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.312213483 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.249684518 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235099811 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233751673 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.234162529 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.236686139 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.235245157 seconds)
  done (took 11.104508966 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.232666232 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.233947262 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.235064214 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.231831397 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.233236965 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.232572397 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.233679195 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.233603408 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.233415277 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.233054276 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.235738029 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.23358494 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.235052858 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.234845358 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.233111116 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.233776334 seconds)
  done (took 20.855488349 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.235223736 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.232808518 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.233102758 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.232856365 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.234255474 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.234097205 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.236241013 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.23476828 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.232599713 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.233603992 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.234891639 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.234433947 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.236091668 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.233593029 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.234095105 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.235916384 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.235636398 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.234827852 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.238623007 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.234465414 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.234493958 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.234742743 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.236678492 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.234368311 seconds)
  done (took 30.750198243 seconds)
done (took 63.826839101 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.23016885 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.237101942 seconds)
  done (took 5.586554975 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.293637398 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.29109677 seconds)
  done (took 3.703976494 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.235316375 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.234525524 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.235532895 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.23507433 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.236996312 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.235562246 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.235673207 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.235916403 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.237495897 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.237503351 seconds)
  done (took 13.479287884 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.236315464 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.235867103 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.236122567 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.235630696 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.236922224 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.237250336 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.236023234 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234646082 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.236654757 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.236480158 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.237400535 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.23634068 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.237853976 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.237663693 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.23808829 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.237412907 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.23800785 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.237486977 seconds)
  done (took 23.381420901 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.249826759 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.254807609 seconds)
  done (took 3.624980701 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.36525452 seconds)
    (2/7) benchmarking "second"...
    done (took 1.279241636 seconds)
    (3/7) benchmarking "month"...
    done (took 1.342875161 seconds)
    (4/7) benchmarking "year"...
    done (took 1.333334002 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.279539836 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.258099119 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.279568151 seconds)
  done (took 10.25859941 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.238856032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.442323186 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.572425252 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.834199039 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.238401948 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.241831776 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.161894198 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.242411006 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.246615682 seconds)
  done (took 14.339615706 seconds)
done (took 75.493892627 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.222006572 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.31398264 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.247773411 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.24137077 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.575594931 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.235176256 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.227052078 seconds)
done (took 16.184150893 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.210331549 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.205807175 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.211642953 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.24151334 seconds)
  done (took 9.989880611 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.222543338 seconds)
    (2/2) benchmarking "read"...
    done (took 1.551600838 seconds)
  done (took 4.894674498 seconds)
done (took 16.006470878 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239992033 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.240449706 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.239952811 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.23971713 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.240181249 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.239772105 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.239046394 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.23954774 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.239250612 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.240028152 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.240332445 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.238218409 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.239937587 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239491313 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238868203 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240474302 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240520419 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.240882052 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239445257 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239482009 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.241442917 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240644 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.241656474 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.240597627 seconds)
  done (took 30.883033534 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.240048164 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.240462784 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.240875319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.240936435 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.239598795 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240553592 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.240492616 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.240597897 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.241257014 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.24118223 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24018105 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.240417578 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.242821502 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239575853 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240749459 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.241283792 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240035837 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239503174 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241469789 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.239857112 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.24048035 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240467432 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.241081415 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240839559 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239562246 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240928319 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.241442123 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239994266 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240576037 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.240757909 seconds)
  done (took 38.340916135 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.243668475 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240855231 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.240711737 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.239773402 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.242598949 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.241010977 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.24060945 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24074095 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.242791431 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.24201121 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.24170596 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.241670288 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242380694 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.242292566 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.242291509 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.242115768 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.241910883 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.24113892 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243316992 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.242543211 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242329078 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24179845 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.24147727 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242260586 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.24406053 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.242728268 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.243525741 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.242784202 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243204199 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.243624155 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.242207671 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242421223 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.242746852 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.242711286 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.243667293 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.245012929 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245707582 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.243874674 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.242951054 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.243022008 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.243297926 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243096312 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.242759056 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244102539 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244023315 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.244196976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.244591374 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.24553231 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.244300457 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.244451917 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.242886814 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.244580199 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245741436 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.243480157 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244668657 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244894855 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245181738 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.244967507 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.24574685 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.243388919 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.244622092 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245369797 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.244955546 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.244664185 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.246004002 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.246195399 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246416121 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.245524123 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246093529 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.245301817 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.243504195 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.245896762 seconds)
  done (took 90.654111606 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.246594409 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247343494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244877297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245011456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245350937 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.24464347 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.247415172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246072021 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24747314 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247990554 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245804857 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246256369 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245328398 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246749355 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245494558 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.246413482 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247446643 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246384352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.247654074 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247361594 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247662689 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248141111 seconds)
  done (took 28.552058898 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246917972 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248233591 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.246585429 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248718552 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249189812 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24720197 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247591492 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249072268 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247368976 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246169347 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246122031 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246416332 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250567783 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245923376 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248363693 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249669744 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24721309 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248170649 seconds)
  done (took 23.589339754 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.247219706 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.248140867 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.246481069 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.248562121 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.248128468 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249844571 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24882143 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248911333 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.249851085 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.250235983 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.249594288 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249036757 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.24973034 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249800174 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249758485 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249323257 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.248432947 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249800038 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248982979 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249180784 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248378178 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248818205 seconds)
  done (took 28.608246226 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251154147 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249502664 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24853271 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247880909 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250071988 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.248415692 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249679712 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.249029942 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.250946251 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249855576 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248465803 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.249475228 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.250621598 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249462537 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.249905667 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249236265 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250511478 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251197002 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25076675 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250863115 seconds)
  done (took 26.127316428 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251106815 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250182738 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248761896 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25003004 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250492013 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251241033 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250904889 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252391808 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251825616 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250070352 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251368224 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257512882 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251382656 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251250531 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251203931 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251083669 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250782717 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250639695 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25110918 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25195344 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252128419 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251534098 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251130585 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25247549 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252275782 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252093158 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253808131 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252098088 seconds)
  done (took 36.176518717 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252328656 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.252842793 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.252466904 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.254712903 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251818467 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.252960209 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.252578637 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252532407 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252016329 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252295132 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.252274299 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.251470314 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253496654 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.254477233 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252783286 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.252820076 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252667183 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.253794091 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253155253 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253145964 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.253967359 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253006199 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253118417 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252617148 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253184968 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.252825501 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252960936 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253221793 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254643809 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25357011 seconds)
  done (took 38.725290022 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271998896 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272146732 seconds)
  done (took 3.679080431 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.254433913 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254707639 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.253266314 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254524368 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254108504 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253852944 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254045386 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253911136 seconds)
  done (took 11.169186525 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245080281 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.255122935 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255430357 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.2549888 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.255503872 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.244773577 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252017869 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259170213 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.248793995 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247126972 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.247870321 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.248374807 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.249612347 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248205488 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.24829203 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249818604 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.257462202 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.255377041 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.256889967 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.254566345 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255296869 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25092022 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253809386 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.258927393 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.24512497 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.256364303 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.255641675 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.260035488 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247715831 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.253554756 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.252193171 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.259003648 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257047873 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.257669297 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.258446881 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.257327752 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25696402 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25462471 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.257058914 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262861544 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258632407 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.25739504 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.250338039 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.253893923 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252619781 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.263146999 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.257812157 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258073662 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.249424713 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.251057976 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.259578078 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249492215 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.259127407 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25468928 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254407063 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261013831 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266651197 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.252917 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.252922992 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258555999 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.266642806 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.259933039 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256785485 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.264795989 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255271177 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.258758888 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262305275 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267240938 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.260461398 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260837107 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.259144722 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267835469 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262961327 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.264830444 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261198157 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.259619737 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253070673 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263346744 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260240702 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.262593969 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.266496166 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26104481 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255394373 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257291201 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.254518119 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.264779806 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.259634777 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.260628761 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.250732918 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261615027 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268032639 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259808801 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251120866 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.25490598 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.257264097 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262344976 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252065955 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255232225 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.264197113 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.260910703 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26053431 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253364256 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.257402354 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268348447 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263018374 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260045334 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.26757362 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252983953 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.26405275 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.267789594 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261989256 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252693661 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257476876 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.263073469 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252411608 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259380559 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.266615214 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.256254994 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.267280728 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259914092 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257828369 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265468532 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.267780507 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.263915057 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.253944178 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266551183 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264004346 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.258997081 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.267732547 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261852701 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262075783 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.257050596 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26839772 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.256511958 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26745622 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256060643 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.267273785 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.262357857 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263542981 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.258024634 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.262789233 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.260050259 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262423274 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.264666559 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.271250837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.259673121 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270596045 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263008378 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.260486988 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265178913 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.268457349 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265090987 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.257123763 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.268393977 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254552093 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26750393 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.257721153 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.269092331 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263960018 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.264806339 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264221168 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.25416285 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257184362 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.267923435 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.262632484 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.263707323 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.26853568 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.264377556 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.264158806 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.257388015 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.266268192 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255913033 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.260252974 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.26733446 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.265847827 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.267565359 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26067434 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272212876 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26623447 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265619516 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257688356 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.261535276 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.270895741 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.266135342 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.275691683 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266625958 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.264376131 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.258347648 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26038998 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267615329 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258282296 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.269728357 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269648346 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271932807 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.258892824 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269544604 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257158551 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.268431001 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.262944398 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.276467151 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.267777523 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268960212 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259398912 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270807997 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260098141 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.271356991 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258560231 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.268619018 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.267896064 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268433607 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26797505 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259235475 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26425603 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.271902622 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268250651 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268056714 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.260498659 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.27062247 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.259106902 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.261259272 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.271431696 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268658552 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.268282949 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.275511317 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263314737 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269780579 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.266794185 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.264312386 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270131055 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265940358 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267134159 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272440483 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27010293 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.264418827 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272474827 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26882804 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.261667513 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.268711216 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.277815115 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269403198 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262193461 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.273142899 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.270989339 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.272403334 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269437833 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262222749 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27347179 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.270010324 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278720381 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.261516885 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272717726 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.263996622 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.272074968 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.265265525 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.270278564 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268065848 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271479998 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278012909 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.271552835 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263929 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.273739352 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.270234318 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271122021 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261597933 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.274641849 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.270460683 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.270439627 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.266841052 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.266380399 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272371667 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263225871 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.274327717 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263409584 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279311001 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.285951278 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270702772 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.273387259 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27499122 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272401745 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.271676741 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.26472385 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264639857 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266863658 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.265197009 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.26625274 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.275213359 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264616079 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.276032119 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269590228 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.271913992 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.27434286 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.273002815 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.264439862 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.276333329 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.272945211 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.271849286 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.263759167 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.274210742 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.266827279 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273139214 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.271814214 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.266426799 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276154445 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275251769 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.2699762 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268518047 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.267731166 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.266056406 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.269620924 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.278871408 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.265768423 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.276645427 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266405726 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.269893459 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.270553214 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277469552 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.283802234 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267050076 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.278090028 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273418074 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.264945194 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.267429901 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276531744 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276987925 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.287059854 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26700421 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.276764924 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275291096 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276291887 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274768524 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.275516771 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274475094 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.276066855 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277200678 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276763465 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.270003975 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275619371 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.285723117 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.275614633 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274770529 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.266318807 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277722516 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.286036168 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26960793 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.272869397 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.271303084 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.276286909 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.277123809 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.276238916 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.27620686 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.276360324 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278474617 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.279279709 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279330233 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.27626714 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.278714005 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287361909 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278704282 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.289137142 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.271100163 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.28277079 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.277324686 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269500659 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.272030875 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.272130774 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279617869 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269333775 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281960768 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27861944 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272321543 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.276847419 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.284742068 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268043714 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276394593 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286665012 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.270845009 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279041282 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.277701391 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.269106946 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.281333447 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.278188491 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267833124 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272304123 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273214471 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282505143 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.270714362 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.281744816 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272586437 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281803914 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.278057902 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.278086651 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.278721887 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.277677335 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.271427953 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.280556061 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277994813 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.28803288 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.272377934 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277631676 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272374647 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.283727473 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.29049094 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.272537544 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285167411 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.281603832 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.273131753 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.275767481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.286633207 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272567718 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282682438 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.271441711 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274946641 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273892443 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.280233635 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.280843023 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.284323834 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272167587 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273026523 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283760595 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282158945 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280324482 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.276276658 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.286958368 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.274666879 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.272909115 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283590158 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.274825726 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287285686 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273439707 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275952402 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279066965 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.28515489 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.280875684 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283300996 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.271845891 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.275343521 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.286121737 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284623379 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.277059599 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.276925064 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.285318822 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.275861088 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27844528 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277866536 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.276700121 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.278521788 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.287208894 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.276900866 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.275622263 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.274784826 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284763607 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.285345359 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284794698 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.276447947 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290370574 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.291537139 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291929841 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276694668 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.279188141 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.278633941 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.28562339 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283513718 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.275974616 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291235796 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288983644 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289815979 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283286358 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.284719916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.275780462 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287025592 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285927476 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.279819162 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289960055 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.278632526 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291195168 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285462289 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.285831231 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.276222638 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277404135 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.277890923 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278235242 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.287721611 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282128603 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287616299 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.282865527 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291692776 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285945728 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.284230215 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.285178004 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.276685744 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288326301 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.277676481 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.285642757 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.288261966 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.279404711 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.289323319 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286513262 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278955028 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280835726 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.289730535 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.287727142 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.277853728 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.283387899 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.289979849 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296564481 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.287865768 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280456718 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282828694 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.290894889 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286763811 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286915872 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.279181559 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295286793 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300741147 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280583429 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.283095107 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289289749 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.298125778 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.288696261 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.287344312 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282636307 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.285056987 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.291361225 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289064494 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289631014 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292618166 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.281810402 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290858488 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.280170025 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.282398564 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.287670092 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298237258 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.289442105 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283195101 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.295096461 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29960155 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28564217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29973422 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.294293405 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.288806132 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.295615533 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280906534 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.290580851 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.284205054 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.29479696 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.290110879 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289406222 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.291623584 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27998304 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29157498 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.295004852 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.299369056 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28909494 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.2816564 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.284835217 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.29280592 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.290244522 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.292061083 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289360968 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.291644951 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.290816523 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284822815 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299181302 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.302926513 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.296680315 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292723549 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.289952712 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.289131076 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.292917042 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286280174 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.294606302 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291273316 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.291446336 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.28877529 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.300348251 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.291716265 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.283693075 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.286521977 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283683141 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.294503772 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297288451 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310093179 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.294025198 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293922351 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29388805 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292049598 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285098047 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295929707 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292488232 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.284912191 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.286246878 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295988578 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.293960035 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.292924087 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285665756 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.296393025 seconds)
  done (took 759.62004457 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293324199 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291350538 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292935609 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291762997 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292953424 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29367879 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292075372 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292337383 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292736427 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291983375 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293105575 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293702631 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293811195 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294092179 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292943667 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292165112 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292758643 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292803014 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293688502 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291990552 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292930826 seconds)
  done (took 28.317934478 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.293938034 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.29443742 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293882095 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293285578 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295680261 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.294810025 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.295115791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293188185 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295072846 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294450669 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.296112014 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295571675 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.293210957 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.295522465 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294133963 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295363465 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295622316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293460713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.29459723 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29554704 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294733295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296441028 seconds)
  done (took 29.653816439 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.296248061 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.296191486 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.287750609 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.299277174 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.296905913 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.294408189 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.295823372 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.296598535 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.295579187 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.288662635 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.289055314 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.288068705 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.291928776 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.301157425 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.292104706 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.302540221 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.298285423 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297852451 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.299378779 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.297734125 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.299773303 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.309269014 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.297222129 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.290517859 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299147565 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.300477928 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.300616779 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.298095842 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.288724871 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.300308399 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.298492421 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.290751885 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299336351 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.2995315 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.291296406 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301178841 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299553159 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.299489397 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.301638933 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.294993892 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.307476977 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.299814333 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.30154524 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.311355873 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.300625137 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292031143 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.30364532 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.300168192 seconds)
  done (took 63.454355972 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.3012088 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.30192912 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.300564155 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299216817 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.299558872 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300757694 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.299649112 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299735896 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.299591817 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.299816262 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.300561994 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.301108887 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.300323748 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.301017832 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301016108 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300504255 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300825608 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29972511 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.300909639 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.301306757 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.301592848 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.301333309 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.302169998 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.301166497 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301765208 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300273692 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301379439 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301240513 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.300893229 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.302157871 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.301507753 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302017161 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302865621 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302085774 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303060319 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.301559856 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.301856509 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.302760223 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302474142 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.301494639 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.301285404 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301942695 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.302502611 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303006788 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302170421 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.303332337 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.304308818 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.302441542 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302886482 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.304337263 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303034573 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.303081708 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30391815 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.303191533 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30303821 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304247185 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.30301263 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.303452251 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.304161804 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302731615 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.304004384 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304212691 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.302831561 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.303087732 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.304266435 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.304339507 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.30545811 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304147338 seconds)
  done (took 89.717446622 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306403403 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.30522467 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304510595 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305137236 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30618473 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.307173152 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306290065 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.304506567 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305284081 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305723552 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305945566 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30466554 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.305806213 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30728781 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30636493 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304615984 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.307122617 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306154652 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.306466765 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306195974 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305896711 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307207059 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.306882875 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305257939 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305557922 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.306764507 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307927969 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30739092 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308035725 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307100569 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307711106 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306533406 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305511236 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307415833 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.307968184 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306734041 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306601027 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307587242 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.308331011 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.305959724 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307461651 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30726606 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.308134122 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306912428 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308041071 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306025539 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308581316 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307552244 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307278937 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308929209 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.308538537 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307026925 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308205543 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.3068162 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308010033 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.308247072 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309134261 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308153859 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.309735614 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309769702 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308233154 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.30909643 seconds)
  done (took 82.21153158 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308842436 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.307409542 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.308727038 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.309185031 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309382709 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309063855 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.311336894 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.309286437 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309771678 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309695506 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309747924 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308973537 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310641277 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310326653 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.30949201 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311009795 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309438963 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.309661676 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31172662 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308824863 seconds)
  done (took 27.373908236 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.309018827 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311056695 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.309984548 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310472496 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.310924416 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311988093 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.310474586 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310516672 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310990137 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310467064 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310929336 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311489345 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310431773 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31103821 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312088415 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310951913 seconds)
  done (took 22.154748238 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.311347979 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.310506974 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.313613667 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.311109766 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.312541085 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.310840588 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311971092 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.311812524 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.310839337 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.312313346 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.312411642 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.312295775 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.312205119 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311645883 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.311533778 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312020523 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.311307984 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.31169932 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311383532 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.313681004 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.313605102 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.312204806 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.312312098 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.313159593 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.312846704 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.312513232 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.312915731 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.31254574 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.312203467 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.312879078 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.313875409 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.313609266 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.314813968 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.312043525 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.314487401 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.314215293 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.313557252 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312593987 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313482914 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.315661131 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.314096205 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312183589 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.313687416 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.31353149 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.313482851 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.313202294 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.313665883 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.314561693 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.312573942 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.313394896 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313724546 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.315439169 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.314845915 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31351904 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313174573 seconds)
  done (took 73.391941676 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314934565 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315180617 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314455975 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313920082 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314899518 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.315826433 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314572487 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.316148981 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314902641 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.316006484 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.314398145 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316830952 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314607487 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315314365 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.315376904 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317331369 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.316684203 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.314458326 seconds)
  done (took 24.861983814 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.315438793 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.316136472 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.315839508 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.316795093 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.315535602 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315015502 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316122541 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.316779254 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315825471 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.317166358 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314930228 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315091541 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315125786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.316934575 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316188254 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316568783 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316216877 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316631459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.316167784 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315597429 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317400197 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31663232 seconds)
  done (took 30.142924617 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.306449081 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.306076308 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.306762151 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.320381776 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.315571068 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.306300586 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.307067538 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.306917295 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.323183197 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.330665311 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.326886404 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.314932691 seconds)
  done (took 16.959419392 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318421907 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317918286 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317649002 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31812241 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316369592 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318686374 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317915183 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317981846 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31818913 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318324359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317924318 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319003313 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318423537 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31925412 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318521054 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320466735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318811384 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318415894 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318880835 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319753497 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318476831 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319462567 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3195633 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319274119 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319258105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320424889 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320031697 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320666543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320262542 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320319733 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321042585 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319674493 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321015725 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32015284 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321342658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319959757 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321289909 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320747191 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320623092 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320523224 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319737672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320879265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32014951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321745937 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32140973 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319882776 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320155906 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319395274 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320727063 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323427155 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321082003 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320964981 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321398135 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32177906 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320906584 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322113375 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32190128 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321346445 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321058202 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321857987 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321775606 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322069184 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322735735 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322567153 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321983323 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321934124 seconds)
  done (took 88.319373134 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323015863 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32116061 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323575162 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321811137 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322615304 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32215709 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321878268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322291313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32224657 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322821882 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32287246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323369611 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322836463 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321699845 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323412894 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3211371 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323312609 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322759087 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322338803 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322583633 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32377172 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324015029 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323668935 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324477399 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323956297 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323628933 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324267024 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323927408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324678923 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324504096 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323963774 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324674138 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324400096 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.323778579 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323606639 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325126178 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325211917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324889044 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324455742 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324825132 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326242703 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324918817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325162354 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324920212 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325882065 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325492611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325483972 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325544033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32409608 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325858719 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32697153 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324352584 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325498222 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32620862 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325312603 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325940141 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326279037 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325406706 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324141057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326267097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32664591 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324087736 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32617971 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324323554 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326276895 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325235965 seconds)
  done (took 88.593850823 seconds)
done (took 1782.400935638 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.481856408 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.436901519 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.314821543 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.322959629 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.314994666 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.315541094 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.330376454 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.31664874 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.316587741 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.31617199 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.316100551 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.506268856 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.353432142 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316587813 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.315765325 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410995053 seconds)
  done (took 26.882380647 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.345981031 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.323981967 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.441951804 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32279078 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.344462378 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.520041007 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.384201906 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.321081992 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.502702097 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.34031532 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.319811828 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.34320755 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.320347556 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.3195092 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.340781575 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.517793579 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600271028 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.313055212 seconds)
  done (took 29.118988176 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.797036194 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.334930659 seconds)
  done (took 5.330413681 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341089138 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.322209158 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.322593517 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.321359348 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.311940176 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.314725855 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.321491449 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.315977614 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.328491714 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.459921908 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329683801 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.334573213 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321982735 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.323259308 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.331870283 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.367569246 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.4940209 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.331583005 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.331638866 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.329077936 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.321883189 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.421449463 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.367690638 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.336235628 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.456394664 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.336452469 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.331393991 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.330047374 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44505386 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.333383242 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.323527933 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32325329 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.324259814 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.272899639 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.870225625 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.322304034 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.348138784 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.33356153 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.333411894 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.464428422 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.326359719 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.329604465 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.315215961 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.863657985 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437274193 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.448865229 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.328171823 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329028549 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.324913285 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.390906286 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.327612492 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.327175019 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.385075632 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.13524665 seconds)
  done (took 84.921376043 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.321028962 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.316810439 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492069051 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.3450074 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318055512 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319086961 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.325371155 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.623442446 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.353180471 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.321086949 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.655655601 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848617044 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.32975818 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.389504406 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.876167852 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.338406163 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319506236 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.337403556 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.318440723 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.324756954 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852155464 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320250255 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336965576 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.40667511 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.361665981 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.839208174 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.324387108 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.324460743 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.32428746 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.318038124 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816807354 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329882107 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.320687999 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.319091594 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.614833268 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.715857323 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.680105441 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.323617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.358518303 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322028999 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.34290986 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.802221938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.693027653 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317409777 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.317337952 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80428768 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.316428473 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.32536897 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.320863804 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546884619 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.315955822 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.32034248 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.323196254 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.317026655 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.316558123 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.413755641 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.332077056 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.844465307 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316921595 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.326781866 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323109313 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.3169044 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.324349409 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.316532457 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.317116691 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69035933 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.580642238 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.32171795 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686947313 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794845908 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.316234912 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.889140382 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.320974578 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.337868458 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.36157216 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316582694 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.321362081 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834013609 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.31664544 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31616731 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.665688224 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.317658784 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.634155252 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.334838694 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317378064 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860001012 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.324209313 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.376324266 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.316022726 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.317550184 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.331691203 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317843167 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.615253056 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.374562156 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.318094366 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.316964716 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.360093641 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317709307 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.334272183 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.321077298 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866061225 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.322161826 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318640788 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.336603225 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.3171829 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.318174916 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.318548512 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.32039307 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.557637309 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.320739338 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.321421725 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.317854533 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.317997028 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.328066487 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.410242531 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.322348959 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.64008335 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.324279969 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319139468 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.33675695 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323150519 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347457962 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318060667 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.344055069 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.319812636 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.553025876 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.336880307 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.336610504 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319519012 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318539505 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319586351 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32145678 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.3777648 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324321307 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019296801 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.363297367 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.321413963 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.319749538 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330118243 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321700518 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.331428178 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319970483 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.624220542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.616359162 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.568670156 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.322372491 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321374134 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050412353 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.328683235 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471091298 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.336586788 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320902255 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539191679 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.558836715 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.323126148 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.321285228 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.324125091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557928756 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.320512174 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.664141314 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.828536754 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.319302297 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.324511988 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.017087055 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.145795836 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.327410787 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.321754158 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.637570368 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.33915711 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322062638 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.320854379 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.323627107 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.321882491 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.323188822 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.328639042 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.321672614 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.322413367 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.669711963 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503636358 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.338949103 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331329689 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824977709 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.332079972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328544574 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.330523165 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.324987081 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.321757016 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.337269472 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.327293922 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.322689853 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.322585872 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.331698346 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.826879811 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.321988613 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.323058266 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482354452 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968894167 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.321573829 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.322302024 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321452505 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.951416764 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872030215 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.378403449 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.63854329 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.334948863 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.364589128 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.322255183 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.375835633 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842389352 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324243994 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32119432 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969642796 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.321534031 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.801276463 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.321694234 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.323179774 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884673294 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.321947101 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.323935878 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.321655995 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340727923 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601692802 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.324605972 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.350108608 seconds)
  done (took 495.587079794 seconds)
done (took 643.036302693 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.322338027 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.324824909 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.326615898 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.326939692 seconds)
  done (took 10.504730373 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.340328778 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.329801805 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.338196537 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.327799427 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.341016778 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.32866863 seconds)
  done (took 9.210858749 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.321928336 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.323554774 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327432714 seconds)
  done (took 8.177773448 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.541044537 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.341057769 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.690690277 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.324124266 seconds)
  done (took 9.102842591 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.337292107 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337668643 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.339304535 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.34259388 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.343341318 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.341445881 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.342961995 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.34325701 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.341179044 seconds)
  done (took 13.271604178 seconds)
done (took 51.472105491 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.355972903 seconds)
    (2/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.404590992 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.428440752 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.570511151 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.475954805 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.320770557 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.402518228 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.481923446 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.327164552 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363719573 seconds)
    (11/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.535442169 seconds)
    (12/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.303019648 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.523874458 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.435546154 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.4940829 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.484997535 seconds)
    (17/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.490543276 seconds)
    (18/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.310805243 seconds)
    (19/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.312324345 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.36002263 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.543045456 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.405824381 seconds)
    (23/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.404498756 seconds)
    (24/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.515252156 seconds)
    (25/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362783161 seconds)
    (26/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.307663348 seconds)
    (27/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.306689051 seconds)
    (28/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.44519777 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.483614627 seconds)
    (30/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.312635211 seconds)
    (31/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.367941486 seconds)
    (32/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.310754485 seconds)
    (33/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.399649834 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.405483347 seconds)
    (35/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.503628345 seconds)
    (36/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.307785234 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.567731442 seconds)
    (38/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.490373843 seconds)
    (39/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.442580007 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.400346329 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.308451018 seconds)
    (42/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.498617498 seconds)
    (43/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.63685542 seconds)
    (44/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.499361784 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.394749271 seconds)
    (46/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.359747651 seconds)
    (47/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.577449603 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.443603782 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.635995806 seconds)
    (50/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.412102179 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.304346641 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.441201248 seconds)
    (53/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.729757135 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.365441001 seconds)
    (55/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.359912414 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.334065798 seconds)
    (57/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.475235329 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.443887312 seconds)
    (59/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.488748946 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.490513706 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.331547873 seconds)
    (62/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.356227572 seconds)
    (63/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.309115816 seconds)
    (64/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.658856027 seconds)
    (65/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.392587734 seconds)
    (66/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.413509003 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.634631076 seconds)
    (68/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.458054003 seconds)
    (69/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.580703936 seconds)
    (70/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.570877866 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.417172089 seconds)
    (72/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.354669945 seconds)
    (73/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.405811875 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.418250906 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.637453669 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.39221172 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.483698363 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.339384763 seconds)
    (79/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.402560987 seconds)
    (80/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.362017828 seconds)
    (81/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.304624587 seconds)
    (82/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.329607583 seconds)
    (83/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.617379672 seconds)
    (84/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.441938298 seconds)
    (85/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.307909286 seconds)
    (86/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.362145394 seconds)
    (87/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.311177389 seconds)
    (88/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.488976019 seconds)
    (89/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.306409956 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.420153759 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.443968536 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.414254275 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.416915628 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.548763882 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.488066109 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.556612483 seconds)
    (97/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.404239734 seconds)
    (98/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.444928664 seconds)
    (99/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.333929257 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.457456102 seconds)
    (101/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.31519827 seconds)
    (102/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.308725228 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.463897953 seconds)
    (104/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.492214796 seconds)
    (105/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.36447994 seconds)
    (106/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.392632551 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.404680454 seconds)
    (108/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.521445685 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.454425788 seconds)
    (110/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.378409989 seconds)
    (111/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.358528002 seconds)
    (112/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.308556036 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.586317011 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.488743908 seconds)
    (115/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.461400733 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.460308464 seconds)
    (117/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.314149251 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.448844041 seconds)
    (119/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.574888472 seconds)
    (120/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.355196729 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.480879549 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.372636786 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.557940676 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.431246931 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.370465037 seconds)
    (126/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.307994012 seconds)
    (127/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.550144217 seconds)
    (128/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.326424072 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.316268384 seconds)
    (130/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.439851712 seconds)
    (131/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.737345129 seconds)
    (132/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.549435564 seconds)
    (133/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.314352866 seconds)
    (134/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.31263943 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.44891385 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.456388195 seconds)
    (137/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.308236092 seconds)
    (138/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.442106519 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.332935195 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.572518431 seconds)
    (141/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4885951 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.461376138 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.421729246 seconds)
    (144/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.414349748 seconds)
    (145/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.308364452 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.502371186 seconds)
    (147/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.399760571 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.399434485 seconds)
    (149/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.308927091 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.333501372 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.379528789 seconds)
    (152/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.309636898 seconds)
    (153/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.41619597 seconds)
    (154/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.33425032 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.572163377 seconds)
    (156/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.362956425 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.544416454 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.445407029 seconds)
    (159/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367239009 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.391379387 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.437899201 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.444232419 seconds)
    (163/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.494073525 seconds)
    (164/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.408359062 seconds)
    (165/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.365668225 seconds)
    (166/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.44869408 seconds)
    (167/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.481069793 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.370640693 seconds)
    (169/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.498291826 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.438149271 seconds)
    (171/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.582324044 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.334951238 seconds)
    (173/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.441173589 seconds)
    (174/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.495896232 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.670268931 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.557541549 seconds)
    (177/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.45361996 seconds)
    (178/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.579496092 seconds)
    (179/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.326069372 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.312641996 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.573820934 seconds)
    (182/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.394503223 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.41111428 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.328089981 seconds)
    (185/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.592179296 seconds)
    (186/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.432399541 seconds)
    (187/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.54694897 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.436167088 seconds)
    (189/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.430784224 seconds)
    (190/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.313650012 seconds)
    (191/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.315263342 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.31217713 seconds)
  done (took 323.873990724 seconds)
done (took 325.078342135 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360660756 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.436501755 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.339941022 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.342588828 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341481871 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.33422351 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.367299922 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.339630162 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35513921 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.356031596 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.33605593 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.356040017 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.356036882 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.351420025 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.373051686 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.341757612 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.338807831 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.352005765 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.358177452 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.357786484 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342817023 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342365873 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.369098902 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.339650834 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349479352 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349816254 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.34644786 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.337154915 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.353884367 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356761956 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.332202206 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.356494599 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.359021389 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.353996493 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342671093 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35189243 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343037336 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.437391791 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364177604 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354643215 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.351520481 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35905077 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347337831 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347787812 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.354434073 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.370241928 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351108012 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.354074721 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.346271644 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.350902828 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367951547 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.355752872 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.352510416 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.348038935 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.337924976 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379310668 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.351062718 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36273953 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.350479221 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343883967 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.377087719 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362760418 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356063554 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350062827 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.351542259 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357364014 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353075096 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361348985 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.351363416 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344040301 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345347892 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.350171978 seconds)
done (took 106.736959477 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.465211302 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.337292344 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.498274988 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350830744 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.511001778 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.467636799 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350681235 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349583905 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35152835 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.145455366 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.352407074 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.351211183 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.341208164 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350478487 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.464643258 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.351775745 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.350706455 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.044342617 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.35282771 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.481427229 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.341563931 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.351933557 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.35091876 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.142229188 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.339821239 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.335739422 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.481449795 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.350832244 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.040767984 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.335534739 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.337539711 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.038406658 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.48430315 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.372777666 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.361431408 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.360432804 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.511536971 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.354062859 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.465479756 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.466933552 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.496510627 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.389187379 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.335847715 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.340577308 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.355283198 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.352602233 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.351889819 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.380582382 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.341038512 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.351319045 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.045943118 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363365922 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.361472462 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.351888617 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.35278619 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.373431169 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352154061 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.35323341 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.483776044 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.353771268 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.465906991 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.144427751 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.145346345 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.352662352 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.337793779 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.353619297 seconds)
  done (took 109.195684316 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412224942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.418339324 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.452941501 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.348027707 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.392519985 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.45455124 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.347623323 seconds)
  done (took 11.041107163 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.3484723 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.353179464 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.391218538 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390550934 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.352536199 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.517623559 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353443578 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.354118126 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.354203729 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.392965173 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352298575 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354106282 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.362590538 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.34249016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391295546 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353364244 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462463724 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342809758 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.353452563 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.498457309 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353963141 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.361640453 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.391961598 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.353613555 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.353742998 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.347428655 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.140672451 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355637092 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353105465 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352477913 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351922533 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.406318556 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354682948 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.342930032 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352442641 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455565465 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352797891 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352773503 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353823425 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.344676364 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.352410905 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.35239396 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.351796488 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.353299267 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35396891 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.365570129 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353183485 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.353354329 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.352126461 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354089289 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.393062455 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.353002185 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352691281 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.353420167 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.398467601 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361682623 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354311922 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.354700072 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353448406 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354153081 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.497971268 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391023139 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.35559808 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.390323178 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353773227 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.35442259 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354949942 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354461938 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397176632 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355549631 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392099011 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.354187545 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.525573652 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368433665 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356288627 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.347637555 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.349036335 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354593008 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.340178641 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.352137631 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.355586774 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.346887939 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.35212174 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354860128 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355086953 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.503661862 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.452654798 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.354299707 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.359943027 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.351791968 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.355942303 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.396500755 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354870844 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.354339111 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396481547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.464227176 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.397747089 seconds)
  done (took 139.095793357 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.358775822 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.356911725 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.349362439 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.373269093 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.347416247 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.34553864 seconds)
  done (took 9.349083563 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.347714723 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358450704 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356201453 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.356951886 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356201237 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356045276 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.356960296 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347504267 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.36045783 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.355546748 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.357788416 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.356679961 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36042019 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.356616483 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.357040336 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358455169 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357073366 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.356432632 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357551997 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358116452 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.34448629 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.359318158 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357693807 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.348436184 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.361614507 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.358014154 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372419439 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358287526 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.356562348 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.354648323 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.361759741 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.359499848 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.348826567 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.351102247 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.360575872 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.349670392 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361648675 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.358743031 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357054218 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.357986656 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359880254 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358996636 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359759179 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.360150709 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350040008 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.352073998 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.362557252 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372767254 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.359658992 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.359256679 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.360108041 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358016319 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359835724 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.35983583 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.35144825 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355525962 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363669928 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360245801 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360970201 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.350947895 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363134586 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.359454348 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352712856 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363688453 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.361736581 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.360356973 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.351831624 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.364040745 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359742588 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360012666 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.359853672 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358811614 seconds)
  done (took 99.978991667 seconds)
done (took 369.874591662 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.767787316 seconds)
  done (took 3.988406682 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.609517554 seconds)
  done (took 3.832912937 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.907688484 seconds)
  done (took 22.388487762 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.441409977 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.350075968 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.346929989 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.35140728 seconds)
  done (took 10.711316997 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.620462831 seconds)
  done (took 3.842542209 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.354833837 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.354809977 seconds)
  done (took 5.932272768 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.516904324 seconds)
  done (took 3.738012628 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.668395374 seconds)
  done (took 3.890665471 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.370719164 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.361139495 seconds)
  done (took 5.962655024 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.324605981 seconds)
  done (took 3.547004089 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.322565166 seconds)
  done (took 21.543867076 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.368916188 seconds)
  done (took 3.594162285 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.350471684 seconds)
  done (took 3.573110122 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.769219509 seconds)
  done (took 5.991019984 seconds)
done (took 103.757928251 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.344083601 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.349070177 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.347550535 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.343870906 seconds)
  done (took 10.606990432 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.424385158 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.424795043 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.433052681 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.418403585 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.418286727 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.427714658 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.387137755 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.386590688 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.417131493 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.413095992 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.430047051 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.414615938 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.427358885 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.386946345 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.413262031 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.430238114 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.415899547 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.433179558 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.386390088 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.419981563 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.363326375 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.421066979 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.414620562 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.361899462 seconds)
  done (took 35.091590013 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.868295424 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.421529935 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.506307934 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.400841474 seconds)
  done (took 7.420983352 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.468685211 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.467600599 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.485257579 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.519737835 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.550657611 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.481177139 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.388735322 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385273551 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.372336703 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.467670937 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.553304511 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.467079475 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.681954278 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.364540028 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.683030568 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.365074484 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.362232272 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.466462547 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.519527005 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.544628724 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.361934751 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.465455116 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.470854805 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.466785885 seconds)
  done (took 36.58445574 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.372938247 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.37989856 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.365202721 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.380618311 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.364072074 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.364637334 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.366554424 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.371657287 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.365827199 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.363189106 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.364448641 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.380238873 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.364354756 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.364138924 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.371198883 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.366482308 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.365144293 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.371606233 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.374524106 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.364467927 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36452991 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.370348411 seconds)
  done (took 31.340678568 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.347439195 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.34816459 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.698924028 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.601975958 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.346421316 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.352282378 seconds)
  done (took 13.920556596 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.419478719 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.547050603 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.353936221 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.679858899 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.7647732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.355841137 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.355539801 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.584234325 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.856852365 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.853263202 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.40798164 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.421335609 seconds)
  done (took 19.82581207 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.362828123 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.354372708 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.359594645 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.369039188 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.404659455 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.358716983 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.36200709 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.34702543 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.410023426 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.408771455 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.358751016 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.406744971 seconds)
  done (took 21.728828757 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439761472 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360326908 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365493049 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436900901 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359075652 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358491479 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349596683 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053831233 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.370071157 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634960508 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359214497 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445255846 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605477856 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369479165 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365722446 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.296219895 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590593619 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81444263 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367306288 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361054589 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397894945 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367797583 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375364829 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.556792282 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36899163 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360246823 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.62499112 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35978039 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620632678 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600447351 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60142196 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369048296 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635515747 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983948402 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474264246 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550381027 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367989778 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364638495 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.332477897 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.376413091 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378412376 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370621375 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593144408 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367741365 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361476073 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364731103 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07302807 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.375178273 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.362968461 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363911267 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59593595 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451471753 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.36743669 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361976481 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423459957 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360795472 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.368248246 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48502993 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004394994 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370091567 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378137924 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.367983971 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36160046 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368387567 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979674096 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.376496177 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.367351458 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36789334 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362760449 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365430234 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389697707 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362301537 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.38334136 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363168093 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078880274 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370857084 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370529009 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863674733 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379460507 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.368250024 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589479462 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363643008 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363825937 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.363674242 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362865083 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050060272 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376608203 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.348352342 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407770256 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060617973 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.558704382 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390140935 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393013878 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584258978 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.334516693 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364774706 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.379410232 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372605637 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387517663 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.069518711 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368877038 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.370741287 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61324812 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.576317124 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365445061 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.305914084 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819766935 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382903717 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.396076254 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365738824 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.560253738 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.947615798 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610127893 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372909458 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403904016 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36626234 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111384607 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372080718 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.390656631 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368304123 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636826613 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.130857356 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37219557 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43986123 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367839868 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36756715 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369109926 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373656724 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368380955 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.535137211 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376514306 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60523921 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.373459653 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368690286 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.376231744 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37488791 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.374732131 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58895187 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380798247 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646795159 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368512631 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367695935 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367866929 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.587425296 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.369544431 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.375249494 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709907748 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367090289 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387844164 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607853638 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405439106 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479714622 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401346052 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.368648885 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620487042 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.375018056 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.37320514 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376723983 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377044564 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370252934 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.376929968 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358005635 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963835432 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353019764 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376143124 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369298713 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.385330892 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44428556 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379009658 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560393029 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.384382532 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357931675 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.37791891 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.369097818 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605869257 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604749665 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.388538301 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549104254 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.820166395 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952131079 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392230354 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.370777439 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.370960623 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.370016991 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37341707 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370278105 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373418273 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560715596 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614181283 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370760965 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.954281199 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378849656 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370468079 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383562776 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603676834 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.385535359 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372866846 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.371008943 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377685721 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387690761 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608501328 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600217598 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38810703 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373552941 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.934723513 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378197416 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372712159 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372776744 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397745262 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37199237 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253642527 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716168669 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36724475 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606650464 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392649015 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.395033363 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.372991689 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383185378 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386092994 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.387017223 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380933974 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.565440384 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386369937 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3813263 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013127464 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099525862 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906907598 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379430397 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.395788617 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379101848 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.079586721 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378843911 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37349752 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607188336 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079074233 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379096824 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826818551 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.379789812 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104626484 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613973083 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605718362 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375836821 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.399277969 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634419674 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59225566 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40402642 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386776444 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379426759 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.344336258 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913868841 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382152779 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559200887 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081152102 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38065153 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38292094 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.402101882 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396519774 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750693285 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375043629 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370183932 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374254633 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386452709 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241481175 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372419428 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36331307 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976542523 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362317025 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.815549845 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358559608 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.54843927 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594983803 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.571646201 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.355271986 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.35865992 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.592201254 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585879275 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35679543 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348723932 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878075976 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.208521511 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.354585541 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346162272 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083385288 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351885217 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614685252 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.358115096 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.363094977 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355777757 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346277807 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347037883 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.344798362 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350064129 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316443136 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794646271 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.345688457 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350842623 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346693729 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348977636 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590245981 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.358417344 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926789808 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574946679 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336694819 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376239069 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.349939035 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343942101 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.313598746 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3378627 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338003305 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339888456 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.55487526 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350441418 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.308524103 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396566545 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548676412 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332512044 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332138853 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544436466 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.337845779 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.338908273 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075287181 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36754706 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333069021 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339331435 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331121505 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368719257 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408008229 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526792055 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.576217527 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577223253 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710726506 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347199665 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34072318 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.348367422 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414167485 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333055922 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.345544544 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.334522845 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912856476 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094067817 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918691203 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564613521 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334071302 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336745746 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32489706 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564966624 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322138448 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598971371 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323148919 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.321688678 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344053643 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322267046 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330550488 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536470599 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59572582 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322298585 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332869915 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327491486 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.322832447 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563240206 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.53943853 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777427699 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834853229 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323734367 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329445328 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035991452 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60388952 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321800162 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323523837 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324928211 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.327026051 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324316712 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.334006725 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330901549 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554111651 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556665324 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961201334 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.560972706 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.504866723 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.246225476 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323202044 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591341058 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164877183 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515910399 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923196353 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011735425 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576858537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397351468 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517744435 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.33123017 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561345567 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.326468075 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3242663 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327281448 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323812205 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.324275495 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558003661 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91987247 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582227631 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.330180694 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.326857853 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354928442 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.51895011 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.552504759 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020320129 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55040757 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566812609 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339106555 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326941518 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92205276 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56995099 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334052965 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.331608612 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529533371 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332753192 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364153153 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.219087293 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.325649203 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842326629 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.546151826 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346089452 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325655842 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.016331166 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925565894 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.334171712 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788734473 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335587374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327138787 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609042389 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.334241625 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33600337 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61267545 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.334332506 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336406142 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52819159 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.917881608 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051676631 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.351315463 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340564404 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.33592963 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328597434 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328706901 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333933818 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336918245 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.696423305 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33464783 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329910364 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341959904 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.328844749 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341378115 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.333017617 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329764605 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.337648149 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.315452232 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.306761538 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346808638 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449208978 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869732215 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334045667 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.941569139 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.678965576 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575348846 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330541177 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.300086773 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.335272297 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329115541 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32816749 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32839392 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325657555 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853798732 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.340789578 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.569109824 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34063564 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.539705016 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539636131 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340960519 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52893389 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345866991 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353269223 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.297207812 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328660361 seconds)
  done (took 968.63034366 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349515112 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.345567469 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.34476258 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.371145393 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.358046193 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436415697 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.398389799 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.370262443 seconds)
  done (took 20.17798105 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.329996817 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.331816153 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.330315831 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.332860977 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.319151575 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.845101921 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.335731995 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.334441038 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.341028182 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.335840713 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.336904419 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.972518751 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.333505525 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.323531379 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.325970584 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.33759053 seconds)
  done (took 31.671178954 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.971993856 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.338654617 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.75848117 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.346418298 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.342084077 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.325573282 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.44817531 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.324881644 seconds)
  done (took 25.062245923 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.333293161 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.334597835 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.332952577 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.333125302 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.332653049 seconds)
  done (took 7.874394504 seconds)
done (took 1231.160398922 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.338329049 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.337143564 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.33681997 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.336638687 seconds)
  done (took 6.553878368 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.301934769 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.30049127 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.304828809 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.31641293 seconds)
  done (took 9.429054241 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.965397093 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.829489985 seconds)
  done (took 5.000433005 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.870959381 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.869656436 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.864348385 seconds)
  done (took 6.812752959 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.615909901 seconds)
  done (took 2.824125912 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.310929899 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.327884235 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.045121383 seconds)
  done (took 7.892660091 seconds)
done (took 39.719109986 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.330674937 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.085790724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.477656071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.335235602 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.483735678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.479949976 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.573503591 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.334759598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.322972401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.353769456 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.339596263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.483883442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.553583776 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.085678097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.551737806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.084426707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.489196681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.324264817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.327377791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.332711449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.570927898 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.325219333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.333237929 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.327983668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.493864856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.468262261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.323139262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.104392174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.32358268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.328959685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.47373635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.331217378 seconds)
  done (took 80.963170179 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.330990301 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.329193729 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.338054445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.34070385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.328997223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.338195373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.329961668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.329983008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.336421318 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.330013424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.330416467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.331670809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.327308622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.332875637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.324083527 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.334804121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.333575084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341275403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.331144057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.344385558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.328590556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.324541631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.327191955 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.326623825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.341330321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.3409617 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.326340364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.32676628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.325585657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.34305668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.340260304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.325579727 seconds)
  done (took 75.849394279 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.334370785 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.331331415 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.349838224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.330451698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.339678437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.335152131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.334970127 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.355270704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.332427557 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.342374683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.329948448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.332277404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.331782268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.347282807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.334618293 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.345092094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.331080761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341869734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.344360937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.332176245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.333918562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.353074889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.332731651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.332875754 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.335826148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.340087126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.333130216 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.346577281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.332502221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.336650185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.336950906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.337257605 seconds)
  done (took 76.019236255 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.568132323 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.345097337 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.347908741 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.338482849 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.346899102 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.344098678 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.338481398 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.575129175 seconds)
  done (took 14.417102071 seconds)
done (took 248.457496446 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.346524362 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.798358326 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.370206915 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.342470287 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.354503291 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.365790422 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.549204414 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.364502268 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.549247635 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.367511676 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.356505895 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.340192162 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.094779965 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.492215955 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.136837042 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.24789824 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.167712194 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.336290193 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.881877455 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.611931055 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.371835639 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.331580383 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.130834464 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.186173775 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.313465209 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.427257784 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.427963063 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.556447891 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.496029553 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.411380129 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.816489451 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.346584157 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.352226885 seconds)
  done (took 62.45636998 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.33523356 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.348050128 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.346691099 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.346969317 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.34802149 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.347987225 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.336034028 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.348270146 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.349436499 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.348554336 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.347550771 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.348960998 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.34916251 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.347852697 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.348399865 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.32110452 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.33705561 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.347802668 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.338275384 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.321836844 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.347668467 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.3487521 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.348681792 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.349545994 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.349330255 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.348154206 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.349197721 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.349196733 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.348975619 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.349728982 seconds)
  done (took 41.569067332 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.349012034 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.866970899 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.047734928 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.349696308 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.340043038 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.345297944 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.607924012 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.355289204 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.343927175 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.344556545 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.791947575 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.357598454 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.371424289 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.051385673 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.346783351 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.352328011 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.351302653 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.341454723 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.874620835 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.354567543 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.608183923 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.35074971 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.608777459 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.348593285 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.345283417 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.341641774 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.345705488 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.115216192 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.360224455 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.793819294 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.061180993 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.609486094 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.046833599 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.09257626 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.054048988 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.357418415 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.35090511 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.799264457 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.348715366 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.342779549 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.608122792 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.347570797 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.059671052 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.023927195 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.363137437 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.351976264 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.144999273 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.796698442 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.567062677 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.353198579 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.087476834 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.353047513 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.354673498 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.345096939 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.567226518 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.351219328 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.342905681 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.158725819 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.35442718 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.607054417 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.358931744 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.345132778 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.873868693 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.348757803 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.872573285 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.350699686 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.352699881 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.345240882 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.062023284 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.353186407 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.04526962 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.35983711 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.354892781 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.793707618 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.87446304 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.191018482 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.346072485 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.880483728 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.082876645 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.62453374 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.351100428 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.093140183 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.626739324 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.350267802 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.357152631 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.356877907 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.354432705 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.464424855 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.607624584 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.965516584 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.024235779 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.171598635 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.617905646 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.353828761 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.345352692 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.167704175 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.3601646 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.354984678 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.054252393 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.038802616 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.36216773 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.354252243 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.016028451 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.368637341 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.614421702 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.353199731 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.097087072 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.352680429 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.422705434 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.356003039 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.354379748 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.352399928 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.61241879 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.351956264 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.35867986 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.011843562 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.823626712 seconds)
  done (took 187.779506882 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.344744812 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.358054396 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.342777996 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.342983754 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.342610396 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.349487994 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.343008838 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.34240522 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.3472285 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.342590354 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.343587544 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.349956882 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.348012216 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.342156644 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.344297937 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.349638514 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.342054342 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.350769013 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.348250984 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.343280958 seconds)
  done (took 44.141701666 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.358532238 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.866982434 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.835293033 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.364647651 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.358390334 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.349869644 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.400755222 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.359253651 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.358701668 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.62769397 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.510255244 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.360425877 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.359936048 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.360467639 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.838370084 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.336121466 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.625695725 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.872505734 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.365813272 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.875492417 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.335533542 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.359551458 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.350525164 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.87401717 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.647299436 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.61962528 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.40802555 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.876201008 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.360695528 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.361565818 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.869198454 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.361893413 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.350773001 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.856784267 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.362168037 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.37559273 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.36186875 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.405337248 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.409726448 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.631922253 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.878481003 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.62637283 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.372071819 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.510557047 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.364391935 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.332702433 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.883423885 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.364290814 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.333918698 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.362752002 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.367787649 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.859334291 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.353931257 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.859228085 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.361645749 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.364734566 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.873168505 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.858543738 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.849668529 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.509672338 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.356794305 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.618556212 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.362714867 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.885855772 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.365890305 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.365189423 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.363503079 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.512910939 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.878191226 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.618104488 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.632136973 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.632154379 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.364725353 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.415409501 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.365365302 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.632038055 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.418617383 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.728364612 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.634479561 seconds)
  done (took 122.233229916 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.619701157 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.470759853 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.710212005 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.908910114 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.841255782 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.483759412 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.465059343 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.595048656 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.376477372 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.47026777 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.960080228 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.444138088 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.068148631 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.421142468 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.461569616 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.495093589 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.740211897 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.282057295 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.951773579 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.939560024 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.374937886 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.457170159 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.860976226 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.54521502 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.358569565 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.91410477 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.254490888 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.850057434 seconds)
  done (took 51.549743655 seconds)
done (took 510.942958446 seconds)
SAVING RESULT...
DONE!
