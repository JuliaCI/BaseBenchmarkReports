cset: moving following pidspec: 4083
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.415004285 seconds)
loading group "string"... done (took 0.49748587 seconds)
loading group "linalg"... done (took 8.384199263 seconds)
loading group "parallel"... done (took 0.171431569 seconds)
loading group "find"... done (took 2.996333125 seconds)
loading group "tuple"... done (took 1.935550694 seconds)
loading group "dates"... done (took 1.467312128 seconds)
loading group "micro"... done (took 0.200192115 seconds)
loading group "io"... done (took 0.522177437 seconds)
loading group "scalar"... done (took 50.6722305 seconds)
loading group "sparse"... done (took 14.160223524 seconds)
loading group "broadcast"... done (took 1.232063413 seconds)
loading group "union"... done (took 9.852493979 seconds)
loading group "simd"... done (took 3.236348646 seconds)
loading group "random"... done (took 11.914991921 seconds)
loading group "problem"... done (took 2.181786803 seconds)
loading group "array"... done (took 24.624695491 seconds)
loading group "misc"... done (took 1.093686123 seconds)
loading group "sort"... done (took 3.652022053 seconds)
loading group "collection"... done (took 19.05376601 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.596192385 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126369516 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201371103 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.276385357 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.228549084 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163853938 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139968007 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.236572481 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.512024977 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.200046298 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137930657 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414751051 seconds)
done (took 5.96688402 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253664031 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244836841 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162271042 seconds)
  done (took 1.083147941 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07814334 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159227525 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111195782 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095203506 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092820569 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.1086635 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092696612 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107896014 seconds)
  done (took 1.447153272 seconds)
done (took 3.544253123 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494359508 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.858943491 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.481256983 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141253187 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.308145056 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290734114 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267739644 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200468451 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094370388 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090741122 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17205478 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.402465331 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.383612411 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959859232 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089508561 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094198649 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129989982 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.773215962 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078866404 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121180658 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.49169274 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.18757154 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115785896 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107435435 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187835161 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135144282 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159510072 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10186305 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664175722 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131820376 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176576318 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097557148 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15888584 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183002275 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192158396 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113037546 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677842795 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202594662 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097015513 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103661654 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.692381618 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119276008 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.181502904 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103200412 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088872878 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182080891 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101822552 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.096010891 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097401171 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088045785 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162755289 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.433658575 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105062744 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168938394 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09418162 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69740631 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09658489 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273428851 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126336916 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103619439 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.0936555 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090045783 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.163004578 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092641967 seconds)
  done (took 19.884685337 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.149015006 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16495073 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078131991 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156244099 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122934193 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080310492 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102479032 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081851885 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126813878 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178492672 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13785299 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151330155 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092643488 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092168238 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128208351 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247861268 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108007357 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121399375 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091602851 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091162927 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140648729 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096907538 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106972114 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091756744 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169822215 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20629856 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107939397 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122358873 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092091781 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09679422 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144105697 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151449789 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094415318 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091067761 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189626806 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109550777 seconds)
  done (took 5.211386163 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.205047546 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123018884 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.221377913 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.194374059 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132197321 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18229079 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150377879 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267219508 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.187370942 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.139473751 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163710248 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130565983 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096320722 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095738093 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081622677 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078194209 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.149237646 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.435668983 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187866702 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149724921 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162152241 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112366449 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082802519 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101629864 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086322683 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093164642 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.137878011 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.31216802 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201095106 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110250932 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.100243132 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104729447 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0970603 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133960576 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197211976 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142328103 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12494601 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109629768 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086219191 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.220741567 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099837491 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099305168 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079275022 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.115581356 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1327399 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113162595 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107315954 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.121002739 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219132929 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086957643 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10846788 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.032297793 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197647133 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.125855272 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085536865 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29083026 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126549014 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098201474 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108433274 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.785321041 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130829166 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08403437 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08023459 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113580626 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080513073 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.433086292 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.12321874 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.183930844 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084876241 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159974932 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097154996 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119708712 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087898466 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103076771 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113009584 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086522072 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098283891 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088331123 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081862996 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108585663 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11582829 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101968831 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083934774 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1487667 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114729606 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108568826 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12624111 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092433459 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086687899 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131002304 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083564263 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104692254 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.144437471 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11308586 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113214645 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112294307 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141885005 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090310184 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085446179 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.245192872 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084042644 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125372739 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103947025 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128545994 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10359765 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081527525 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104797644 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081560484 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081692626 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163395565 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090103758 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08159307 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106202896 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09537157 seconds)
  done (took 28.290413406 seconds)
done (took 54.062392553 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.440940587 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078728257 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079020594 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097646631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078982613 seconds)
  done (took 1.53016932 seconds)
done (took 2.262131236 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323712451 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.18549045 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102525788 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184917223 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085136675 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189550936 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176724354 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094093954 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201253324 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084390552 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180386465 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083234103 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102269177 seconds)
  done (took 2.750570795 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103242027 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110239325 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101402856 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120429987 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085035954 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102170995 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119410597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111681976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101395007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112624075 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085220707 seconds)
  done (took 1.881402528 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099612082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108078162 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099854629 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118678541 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084458053 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09766693 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117930024 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109676102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098319203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113145965 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085709729 seconds)
  done (took 1.86445968 seconds)
done (took 7.222045618 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.074469042 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.220900954 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.164242999 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.205331169 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34953424 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.232988786 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.54847524 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153449557 seconds)
  done (took 13.824593052 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.170773495 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107518184 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091886664 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091817226 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089890135 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.111796107 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092109426 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094384938 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.108479 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095260311 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094200129 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.108002993 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094302459 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093617182 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08897514 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.105994935 seconds)
  done (took 2.432791768 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146870124 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141066307 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096344648 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098030245 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110279216 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097981115 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100961965 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112838232 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094552865 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094858545 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.11573086 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097231731 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096631782 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107531701 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097297988 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117822197 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110039653 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098450078 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115221992 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113424439 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09915612 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095239516 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112389417 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098164874 seconds)
  done (took 3.384998666 seconds)
done (took 20.377241005 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147898106 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099494822 seconds)
  done (took 0.982919939 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141851557 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155993203 seconds)
  done (took 1.036298583 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11221176 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092509717 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135636827 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101252765 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090512288 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106306999 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114355893 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105035428 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093000658 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090401811 seconds)
  done (took 1.781352662 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097932143 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096963775 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12096645 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.133775883 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113464999 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092938974 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094060892 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093733079 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11184626 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089780558 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094052668 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122242447 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096187214 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123768101 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094991868 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095594926 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113883924 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095165109 seconds)
  done (took 2.624934812 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093579276 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094625903 seconds)
  done (took 0.931714614 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095945549 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092680544 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095697875 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110660961 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09102784 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089734383 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105227918 seconds)
  done (took 1.42506541 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486012397 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.376048512 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.351830477 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107769302 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142959071 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.34482225 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144755891 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102787661 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.1023944 seconds)
  done (took 2.937807984 seconds)
done (took 12.461331795 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093728018 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.226264883 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.595307375 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112777326 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090365037 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157284614 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.278993844 seconds)
done (took 2.30318576 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340370059 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140165247 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080540326 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089411524 seconds)
  done (took 1.394535072 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085200671 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10287018 seconds)
  done (took 0.93712733 seconds)
done (took 3.082196245 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091939656 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.120848669 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.106014427 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089186226 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087681336 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087600656 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.105933868 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089149138 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089261914 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.104963344 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.089056453 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08801938 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086916694 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1026535 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087534826 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087929656 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102759835 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088646652 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087694723 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088435473 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105169735 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089005648 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087825399 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103772557 seconds)
  done (took 3.053521292 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109358163 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093480912 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111000326 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09618042 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096799929 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111422258 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096361623 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093938078 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110914821 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094277484 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095528714 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112525284 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093544512 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093481557 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089740114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108774215 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092950992 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090437643 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106221015 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094455278 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091586949 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105820242 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093482081 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092120079 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110784684 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094419998 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092366409 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110567115 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094390513 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094181923 seconds)
  done (took 3.722849628 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100399579 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088877916 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090811116 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117543859 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090034109 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091457799 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10565181 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08965711 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093974652 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090272374 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110619459 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092287132 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089082599 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109810176 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094242722 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092723022 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113733442 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086639791 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086081148 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09008964 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108733455 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087188204 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088163478 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.104580969 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089947837 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08668148 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090663374 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.104730492 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090798041 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088959683 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.106991649 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094292919 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089601561 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.11365664 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.091640941 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089576008 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09297881 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102341269 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089577693 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086872331 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.102365353 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.08900397 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086599161 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094227904 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106894826 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090057161 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087305905 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.105882011 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091469524 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091730164 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.101866417 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08780494 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091371251 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089219754 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.107438314 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086574716 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089471286 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.100951596 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090836906 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088640956 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084931253 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.102006838 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.093256025 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090031363 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119332236 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.094995735 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085980863 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.107271922 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091426758 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094288715 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.106249657 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099296939 seconds)
  done (took 7.626729958 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.105009072 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102218157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.09309566 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110844075 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094178079 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092864548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11471113 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094433808 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093964079 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116829204 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0938445 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094800127 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111108051 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095618531 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094241264 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094318865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115973314 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093989934 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093724607 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111905899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09484499 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097835335 seconds)
  done (took 2.970808833 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235765268 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096710921 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135916774 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118555524 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107847131 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119018393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09527629 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096923379 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109271911 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099380012 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097438895 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111066332 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111147214 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114202027 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099787413 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099737771 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110709237 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101556099 seconds)
  done (took 2.823254598 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106798801 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094904523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132374524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097100014 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095564235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098001386 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11921118 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112865946 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111466933 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093596617 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098404625 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107248961 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092940002 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092031931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091337203 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110836598 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09452084 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091400218 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115026537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099013477 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097320984 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118264495 seconds)
  done (took 3.032164787 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108330135 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095749412 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129628328 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098949104 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095370666 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11172286 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.101811422 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095315653 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.115365958 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094029828 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095065669 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091812557 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126035095 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096008738 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098474787 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111509453 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09595572 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094129444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110317864 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091309986 seconds)
  done (took 2.822826468 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171332981 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124720349 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108426941 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113538363 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123687837 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107325968 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112782305 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12381761 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107271139 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133361771 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107534242 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106544339 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131615715 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112553295 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123870073 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11613893 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113431603 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130790478 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10780849 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123721469 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119346078 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108556884 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131920481 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108592918 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106261018 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127034032 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10870901 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129110339 seconds)
  done (took 4.107220913 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09449134 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094359642 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093662508 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111409128 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095043617 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093383623 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09326533 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112127908 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095814747 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093407543 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112422713 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096308212 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093795075 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093477008 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111288319 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095926022 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094302835 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.11151215 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095484864 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094520923 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093906212 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111208091 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095700978 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093503753 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11049512 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095472435 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094538754 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093660579 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111668205 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095262313 seconds)
  done (took 3.739355299 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107392159 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105093367 seconds)
  done (took 0.985031613 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.10282038 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108726572 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.093626477 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112365623 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101530256 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09224963 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119681029 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098494644 seconds)
  done (took 1.601587522 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14443056 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159678881 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095959783 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102689127 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158853041 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148516852 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131914483 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095553297 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106300936 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084653112 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.151087534 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083413049 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092030885 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088593281 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110422487 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09790594 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09114151 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117850306 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097870392 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092944339 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113110012 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097962503 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093102633 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.12172479 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087227181 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094631117 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112783763 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102829055 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088586616 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110986435 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089910384 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09058055 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.111915099 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096199601 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090954716 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160009187 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097179948 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105017755 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092089848 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095619462 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141235934 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091461313 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092544438 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106332754 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095252796 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095463947 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112902671 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092719008 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08445683 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102587381 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092801413 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086683661 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09097994 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109804384 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092069685 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096968356 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.110802549 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088853065 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086930555 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104957175 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090600733 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087298338 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111678033 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094932609 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091342087 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.11010428 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091097253 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091394833 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.110347593 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093649337 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091056364 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123220125 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093198342 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095428457 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114582468 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09294719 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088893614 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114706627 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091912303 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092331532 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.112671707 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121566364 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09376767 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105846355 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088403066 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099199246 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.1111684 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095252214 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085571696 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116797877 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095268793 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09301075 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085092329 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107479638 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089666099 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094682654 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.102865747 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092901591 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091074833 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115970115 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098154357 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090710394 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112509775 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098169724 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098258736 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109011629 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.137530128 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089118843 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106084075 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096001554 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096088982 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104159446 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092579484 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09014881 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108384833 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088300954 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096947796 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109637588 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093763986 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095655973 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111715413 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095370395 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093819297 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091560836 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107442297 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096744634 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098309022 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113312033 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095178181 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093054033 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111493514 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093066783 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095581734 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10788328 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098328259 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089321573 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.1109615 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094650167 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097781249 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11041329 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088725599 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092200749 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110669923 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092746735 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095740816 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110550674 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088666563 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086030041 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110074913 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089779821 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09444974 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099998818 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107284324 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095978857 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088945638 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118158774 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090405659 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097120209 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113247083 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098728126 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097566203 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103381872 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091397254 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095660833 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111326592 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090012966 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095402943 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091529005 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.11792706 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086159786 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095569804 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103564341 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091399901 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098933277 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113303812 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097060261 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088620572 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15328039 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105128074 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098917602 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110510536 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093614769 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096402372 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109607667 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096974219 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098461856 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114667953 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091771907 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091255612 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11625042 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089825368 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095372216 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089680706 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112579504 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085440298 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094237183 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10305778 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098118942 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094375422 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.115548042 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097642319 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094472615 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109982839 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102095016 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090933714 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113950502 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087445286 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097741575 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10243245 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118375386 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098819656 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093727863 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109535638 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095914782 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099837328 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113696154 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093710484 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093498639 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104050429 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086959742 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09978807 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114151962 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090860901 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09372706 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094129272 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122981019 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091825768 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085575058 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.115717794 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09816347 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08836781 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112392984 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089891169 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090654894 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118955565 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086879274 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089334615 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113364954 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098055826 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092455683 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111468409 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097407694 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099083281 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114133531 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096466817 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091781243 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119507356 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092602863 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093397779 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09001353 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.114854309 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097819899 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094669291 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111640268 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091582343 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088855786 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115046875 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099797897 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097855334 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11106833 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098088524 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.098555382 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11768973 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092841551 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098875924 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106589651 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087410882 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09114826 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084934303 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.113997285 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091100874 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097881738 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110267879 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092635872 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096125832 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113826474 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091566341 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09829435 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12215999 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088176394 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086593633 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109751244 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094257748 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090061127 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109117145 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096265141 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095200507 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.115840546 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096958282 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089919201 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111221893 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100501159 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090287716 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.118472953 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100274349 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099728751 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089296888 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.116533014 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090558704 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096525015 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107423677 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093071889 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092317968 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112359089 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091047693 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091609876 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10858108 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087124932 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090613575 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11745166 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093129321 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098252324 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111760181 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093659919 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090116075 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107251608 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100232085 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092181322 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.117767061 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094897443 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087967468 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087024616 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.117460131 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094633502 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099804443 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108433178 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099294415 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100406893 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.116265672 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095792692 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103305095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120828592 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100604653 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099869926 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105773903 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093693467 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098146668 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094060109 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115587203 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096680711 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087373303 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115321261 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100366165 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09443092 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111534403 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088870584 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094890766 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.117808167 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099664357 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098632347 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095259801 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114763918 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090670659 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097165628 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118974561 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095825288 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099917119 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11320238 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098976041 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089970544 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11780124 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09566058 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088544663 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105587049 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09237252 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100343507 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088559104 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117336223 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098721438 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089843071 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111324578 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09921418 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091067146 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11468949 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099777035 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092070853 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121874667 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096132794 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091798527 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.11782003 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099517516 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088088274 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092081482 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112390217 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101027163 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091153516 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.118627252 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094646647 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097780226 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.115400236 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.09997893 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099650627 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.119231926 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089281101 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100173765 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116443362 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097318524 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090773472 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111333801 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090498133 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093710275 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099881099 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110591547 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102919015 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100104504 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111760531 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093237465 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099819615 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111934872 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10236693 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090530909 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114550012 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089000291 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096920961 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113225959 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101776949 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091418258 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108548943 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100250438 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100096337 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097871034 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115902708 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102033972 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087600496 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107613126 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097832546 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091536667 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121857799 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098813576 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09289853 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111976611 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097906264 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096134803 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119535378 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09088282 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091758979 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114707102 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097536002 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094053488 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107385066 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099702664 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093059704 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095377531 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112991025 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090208301 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093186222 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.119448368 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093186165 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090006401 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.110813821 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102150174 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09376244 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110870925 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089776651 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10083532 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11540194 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102510426 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091835459 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114224434 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094015282 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097000769 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121991918 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094741495 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094939557 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112059345 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100722553 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099766544 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086715095 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113092426 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104937568 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09866157 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115133563 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097180212 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093214988 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119938559 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102179714 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096153132 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107399768 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091489555 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092528569 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108058163 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098577256 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100380103 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111893824 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093615108 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098711442 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097924412 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.116462747 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097898556 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088780607 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119931222 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09305941 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097684624 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108370725 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090159118 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097012513 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118131331 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095979021 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094934293 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09572666 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.116536062 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090158001 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091790153 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118084447 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099631847 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099517562 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114170636 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094633985 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097631972 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123715542 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096900162 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093903991 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120994953 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10244364 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095625836 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113157338 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100174362 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100998548 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.115141648 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10316655 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093175776 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093940544 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.120979514 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102034621 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121483731 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095267057 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088392343 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098417806 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112589644 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089969818 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097829297 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121634478 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101760349 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093976864 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111160348 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104246013 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099750742 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114286507 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093187827 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091855955 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118483646 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094386054 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098096705 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111082496 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103087318 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100877092 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099581871 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122945032 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090367089 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099133548 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116811855 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102614717 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096250662 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108552492 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091080882 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097839127 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.120508618 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102109383 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098864514 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098483217 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119657293 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097562255 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094739874 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112491137 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102275388 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.09993773 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116311509 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097940223 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093994079 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114910562 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09854694 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100771963 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.120111457 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09731014 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105368396 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121314387 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096109436 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092970393 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115808346 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099288004 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095998794 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099381686 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11260962 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091103777 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1015318 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122433721 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095521904 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103433693 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121687172 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094688058 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097433193 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121812844 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101908186 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097186514 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115732155 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099430442 seconds)
  done (took 61.290514487 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149340561 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102875297 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118537324 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098173961 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11285236 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118839187 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098059665 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098958882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118773202 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107736982 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097218652 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116884635 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111886855 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13550591 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114863363 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106777123 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117456916 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099603031 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097337523 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118178638 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113503258 seconds)
  done (took 3.17862324 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.122120931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111794734 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129513512 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111091819 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103258064 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128526445 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110247726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128379153 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112232243 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104363253 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131361684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107665397 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125749965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106863361 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106166939 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126753193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112113778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103993632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130434308 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108437843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126424993 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109980528 seconds)
  done (took 3.380441381 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.135018616 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100514521 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095282164 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117284015 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102062405 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097014474 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11940872 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099558615 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105516717 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112880229 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089734863 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093441217 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095891619 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117826359 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094742941 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098329237 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125118017 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101201518 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102122373 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.117832076 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090725356 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099788662 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098371109 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10944161 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103763587 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10182599 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119437456 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102511917 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089406725 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099754984 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119232149 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092183707 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088458155 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.108794488 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090366289 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.1009502 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099782926 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118762512 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099456153 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087947925 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119049404 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102565567 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089705284 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118456152 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099300813 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092930567 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100674993 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.11792417 seconds)
  done (took 5.809337622 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133348168 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162780483 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102607372 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134594147 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133662867 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107028196 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.122110705 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135058011 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099357479 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123359456 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113633209 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132243376 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103241776 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104308446 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122216018 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1036984 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.343244465 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100081095 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126893798 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102995911 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126376516 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105142226 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110689241 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130335535 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105029282 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100435981 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121343117 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104376272 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109422363 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12635963 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106071079 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125230803 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112610808 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102530349 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120493754 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103575327 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111988374 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122500189 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103193962 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100549355 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123270097 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105892863 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104294958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132624328 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102896064 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102808793 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124007368 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101650804 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108903589 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123976534 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107408239 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1305923 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104684231 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103110191 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126242681 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112284811 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105746111 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.120275829 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.1038707 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109284794 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.120738117 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10463367 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109506573 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122207643 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106588545 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.131402854 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103856328 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104331046 seconds)
  done (took 8.949779546 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138173513 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104790722 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133565799 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112269096 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105206577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126872429 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105564769 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105699742 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127343625 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110736522 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124816132 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.196919768 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122596551 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109231949 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103691293 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126046044 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104578731 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104202673 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12616437 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10527049 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104370809 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133794105 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105900325 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132599837 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11628931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101888328 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127088806 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106269643 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133475747 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106547421 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115695868 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127299014 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105587941 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111855308 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136517921 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10420358 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.119959081 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107298157 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10597569 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1270645 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103488382 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112752862 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125980214 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103566712 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105220589 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127203395 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11302121 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135566417 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111278931 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110598063 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127226987 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113828746 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10507777 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126923564 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113206814 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139951888 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11404124 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133309373 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107394011 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113479701 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135027178 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119855134 seconds)
  done (took 8.160653219 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108315101 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101667582 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097990952 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119054213 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100675757 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09932933 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098287963 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119663511 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099816211 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098274163 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120051809 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099486125 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097860238 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098266351 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119681193 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100366989 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097195847 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120014734 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100105823 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098621197 seconds)
  done (took 2.936087464 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.116747862 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11453876 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121609217 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10811205 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100977302 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126427593 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102489148 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101296333 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100437298 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123811155 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109051253 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128975154 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10179605 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106748393 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130631111 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106848386 seconds)
  done (took 2.642460194 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.128217602 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11640246 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185799515 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103150358 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121761203 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108802064 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100376702 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124510946 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100877961 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107239978 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104669771 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125788863 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101818818 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101780043 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122971781 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105273516 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099621932 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12590215 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102752443 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.183677413 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104955196 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102085723 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123369038 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105840656 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103060508 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127009714 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107555304 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100541142 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124034106 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103233294 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102923946 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128145297 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102779719 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106545317 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102377079 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123326172 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10187434 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101206942 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126205508 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103519905 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103050638 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125084349 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104504515 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103698942 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121003967 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103807253 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100830364 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127276758 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102583296 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102678676 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100528221 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129981896 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105947658 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107990772 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130628559 seconds)
  done (took 7.087095334 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119052158 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101904623 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132694171 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10064928 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103502978 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102063247 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125586424 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103964172 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102105906 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120994014 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103354012 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103282279 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123603812 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103024395 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102143482 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122702817 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100709221 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102152619 seconds)
  done (took 2.82152801 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115191516 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10192759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105316806 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123491644 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101263303 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101638569 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121923138 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10240139 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099576664 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12398707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102702879 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101609521 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10009422 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122793432 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101566013 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101064804 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12342146 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101835385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102381895 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121170825 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102642779 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100916257 seconds)
  done (took 3.228278061 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120678755 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.18095451 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107745951 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.188862375 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098214923 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095993114 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128245726 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098369311 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111703829 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118284998 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097387958 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095955133 seconds)
  done (took 2.293977154 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136412641 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13675042 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123906177 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103391488 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109827597 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12817821 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107122042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106627244 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134986573 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11739801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127466125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11367677 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113233158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135781578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111390868 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130587588 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107147955 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106364156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12278174 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12062173 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105438575 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135762125 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106262217 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12732189 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10772916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113026559 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133845916 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116330441 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104928781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134903397 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109900287 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12748584 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113851909 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116371795 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123841896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113722663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126934303 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120516135 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109810269 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135180276 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103230041 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130162502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115042154 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111068199 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134413947 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10745092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111144843 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12710791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107278913 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146372868 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11161207 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113209905 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133548199 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114409411 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135178177 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126499764 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137509358 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114754846 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109455036 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138849574 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114363765 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132377473 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114474025 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137700329 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112058909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113104 seconds)
  done (took 8.784611595 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150855406 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102658175 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127416666 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118371842 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135446514 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107133415 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107505655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12848838 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108758879 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103652715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169622961 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107349132 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134884166 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116481602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106488669 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128941356 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107951182 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11460258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125269245 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126380505 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128246169 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117077185 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113371813 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136695608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118756967 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132247125 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107711492 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1060325 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130311055 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107843213 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11122958 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128929113 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115765916 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1245784 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115388896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107638446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127857212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11219688 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106439289 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13360735 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116191293 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142189729 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108024213 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107459405 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140275283 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108070513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10616943 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125264034 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107389344 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103545343 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140959617 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11708687 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139830463 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115378981 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128436419 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108446543 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107466113 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128972242 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107899022 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110811099 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135742493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106902149 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148792245 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108658676 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107933314 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137269543 seconds)
  done (took 8.787884911 seconds)
done (took 166.588565443 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156635005 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.183717931 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144352104 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17742352 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093620411 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127482254 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1471449 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146705974 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092239122 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115236549 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094164558 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09506468 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183015772 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094070824 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093182084 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11664088 seconds)
  done (took 2.91119127 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198523658 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.304494408 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106766158 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119998574 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100285621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097712776 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118951918 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099788929 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098256271 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12662187 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098430428 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09403591 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12580493 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095063865 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097827341 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119267113 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105429619 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098139273 seconds)
  done (took 3.067235347 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.126535258 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141770931 seconds)
  done (took 1.135594811 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.138201352 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.209230361 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277638475 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166184304 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118813973 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138531989 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146662615 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132765817 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185286824 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13252979 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111703107 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095363871 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145353047 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103515767 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136419445 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097135786 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125804115 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134064029 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112769317 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100591082 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142450035 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10323283 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102271789 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135505768 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176282419 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132912908 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102606697 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100503686 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123204917 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113239695 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104069185 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137753778 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109742875 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175538141 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10100876 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171691919 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126184069 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100653839 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111976337 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120354246 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103875605 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101694064 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133646732 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097316308 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101031187 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127591849 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102149894 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100986801 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128789699 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105736947 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.126937891 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106056319 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171081708 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106663959 seconds)
  done (took 7.777706417 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.86394639 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14004068 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098487883 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.99732397 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147597956 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113333488 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.818397278 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144945749 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2498813 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.875465268 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115417991 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111033957 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253936848 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254802114 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28106864 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.353388777 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.689995087 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13570756 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128246101 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160309472 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107100309 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14657619 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118950727 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.512593726 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099692476 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098299949 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129488811 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112738311 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174759678 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099670166 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12508607 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193368419 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267367764 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204435056 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122201989 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09965333 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09855702 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181237106 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264431671 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213930812 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.193511446 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096769817 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099009474 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129806376 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118710509 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096210748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175840031 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188285324 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189690344 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103984398 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134492865 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112263828 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10635813 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174643887 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118514425 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354555492 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359544062 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098826857 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129274708 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116034976 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261952557 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10018023 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252797903 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127183678 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209185886 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099102398 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821941077 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181603489 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098659144 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128411412 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106029259 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127214846 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108778712 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185956581 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.473361643 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134567692 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104969347 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098909501 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230056993 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122070542 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100887418 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177937654 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101115766 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107409615 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136484625 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11123303 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187769255 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267700701 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112009431 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130073186 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106818184 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112039615 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123521279 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.206177806 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.247133512 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14972468 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226746444 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129647656 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.156051016 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181492858 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12741529 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164352685 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129156021 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116337639 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128595293 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219939506 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133944342 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12603631 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106817601 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107907121 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15682474 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104613883 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129532562 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162830947 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.548779109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.181377572 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097552119 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126548366 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109820294 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176667443 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108684258 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259278924 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108797872 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184114752 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128763059 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098258942 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108345799 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178692647 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109086318 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131728959 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108622883 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130071729 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.254135443 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21579043 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136160274 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248311671 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.196859278 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109111654 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188748546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108654405 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185414789 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11036698 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13107982 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101722897 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818476518 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112767655 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1301693 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105282855 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204182799 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101019868 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101950581 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122786084 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098795878 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807985272 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102975937 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120856221 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103921155 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107058041 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129684317 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108856269 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105249004 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177248986 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236547773 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.136631719 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107281457 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122290014 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.153970905 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123838019 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101830483 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100464751 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122631658 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110729913 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105457004 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125224809 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165954176 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174262107 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223623442 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.64761244 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123271506 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102132662 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234507498 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10084073 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34246087 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109996849 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229848132 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182127928 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097442826 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.352941176 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183135683 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205388576 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104580681 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188067575 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097999693 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13106626 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154755567 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123731337 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108718689 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172975664 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116943358 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135413942 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273081965 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101810384 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248007031 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098802716 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186725888 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102389227 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131529189 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.323276417 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100519294 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139703039 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153437759 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129508774 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102946725 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.622585487 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100869598 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134966663 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110695097 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227295058 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181085184 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108057823 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132115225 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114689621 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183420542 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227170923 seconds)
  done (took 47.271694875 seconds)
done (took 63.022501266 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260726452 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17406215 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.278557887 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174386435 seconds)
  done (took 1.848432641 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.251715056 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156058219 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.198493596 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120087724 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.203731094 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.120349742 seconds)
  done (took 1.942223834 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.183123217 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165908317 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143614252 seconds)
  done (took 1.381875959 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200429833 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212507838 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320488293 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.228338781 seconds)
  done (took 1.942098487 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.270574631 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115688785 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123978332 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.20590756 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.216961999 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.197284898 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122216744 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.168192181 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127875467 seconds)
  done (took 2.484435405 seconds)
done (took 10.491515693 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.242685947 seconds)
    (2/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.163325509 seconds)
    (3/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.334386481 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.363512725 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.162713498 seconds)
    (6/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.355994919 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.163306129 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132540019 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.192147907 seconds)
    (10/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.294847729 seconds)
    (11/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.120652515 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.266674003 seconds)
    (13/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.293000888 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1406401 seconds)
    (15/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.269041491 seconds)
    (16/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.289067293 seconds)
    (17/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.355426383 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.171218417 seconds)
    (19/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.267805792 seconds)
    (20/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.179664525 seconds)
    (21/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.231789642 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123817764 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.149866486 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128624921 seconds)
    (25/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13155494 seconds)
    (26/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.206119694 seconds)
    (27/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.14033241 seconds)
    (28/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.240835699 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.225481955 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.2055804 seconds)
    (31/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.250352964 seconds)
    (32/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.106086143 seconds)
    (33/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082535207 seconds)
    (34/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.306933622 seconds)
    (35/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088213258 seconds)
    (36/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.12176753 seconds)
    (37/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124650756 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.153595343 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111158399 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.140570787 seconds)
    (41/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079104293 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.193670703 seconds)
    (43/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.142183735 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135162976 seconds)
    (45/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075388349 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.122963685 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.141512743 seconds)
    (48/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191805245 seconds)
    (49/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.081137614 seconds)
    (50/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132738019 seconds)
    (51/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109560897 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.116927921 seconds)
    (53/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10489799 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102898984 seconds)
    (55/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110908234 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107987548 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.125830701 seconds)
    (58/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104769458 seconds)
    (59/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0757579 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.124968128 seconds)
    (61/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.143798734 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166112215 seconds)
    (63/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.106206083 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111317289 seconds)
    (65/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082488176 seconds)
    (66/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.189222589 seconds)
    (67/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.078976691 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185307384 seconds)
    (69/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.165737198 seconds)
    (70/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.132758997 seconds)
    (71/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.306909144 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122606328 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.097714218 seconds)
    (74/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.146819536 seconds)
    (75/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105400406 seconds)
    (76/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.128814643 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.102251773 seconds)
    (78/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.139139669 seconds)
    (79/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078019366 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111054495 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.098569897 seconds)
    (82/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13728173 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126403458 seconds)
    (84/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.075610869 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130098617 seconds)
    (86/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.136889828 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1218234 seconds)
    (88/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.106216381 seconds)
    (89/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.17061444 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08339022 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098251258 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134430818 seconds)
    (93/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084016772 seconds)
    (94/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.139310523 seconds)
    (95/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.082197831 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150122608 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115567066 seconds)
    (98/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084295713 seconds)
    (99/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.183729406 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082959045 seconds)
    (101/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.078674392 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.124482884 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.118202145 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104409365 seconds)
    (105/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.194126516 seconds)
    (106/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08505198 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101122119 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133443115 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.136221345 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104859897 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.130676879 seconds)
    (112/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083918656 seconds)
    (113/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143219443 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100735682 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.207749916 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078876284 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.123860971 seconds)
    (118/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128518592 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100481584 seconds)
    (120/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.075956886 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.126252897 seconds)
    (122/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109966267 seconds)
    (123/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076181463 seconds)
    (124/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084009076 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123476124 seconds)
    (126/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077464412 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116180348 seconds)
    (128/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078887138 seconds)
    (129/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132083981 seconds)
    (130/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079932991 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122265488 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121223773 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.106771578 seconds)
    (134/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.127874505 seconds)
    (135/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084878725 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133134796 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11051188 seconds)
    (138/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099299552 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.150899768 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111093863 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077124914 seconds)
    (142/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079067915 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076009207 seconds)
    (144/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.103745636 seconds)
    (145/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085056114 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110289361 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102527002 seconds)
    (148/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.132030895 seconds)
    (149/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083751564 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083764356 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075698416 seconds)
    (152/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127204499 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103787628 seconds)
    (154/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.081866847 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097850435 seconds)
    (156/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.106204229 seconds)
    (157/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083612832 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080019775 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100784893 seconds)
    (160/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.102324501 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109280352 seconds)
    (162/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.079290014 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101452596 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.146609263 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10192554 seconds)
    (166/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.110829998 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.078731768 seconds)
    (168/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.102251125 seconds)
    (169/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079772005 seconds)
    (170/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076324935 seconds)
    (171/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077483407 seconds)
    (172/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.081180762 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.125558693 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.102624828 seconds)
    (175/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082686057 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.126057687 seconds)
    (177/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076315056 seconds)
    (178/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079654691 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12108055 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123294861 seconds)
    (181/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077592275 seconds)
    (182/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.077075963 seconds)
    (183/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08295709 seconds)
    (184/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107047308 seconds)
    (185/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.132551757 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10649716 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101739066 seconds)
    (188/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.099697819 seconds)
    (189/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.083245568 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09904431 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083431571 seconds)
    (192/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076797728 seconds)
  done (took 26.105028913 seconds)
done (took 27.002192934 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.215140045 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124364941 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108529409 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108735209 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196623365 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116218534 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123377903 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135401206 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119013591 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.109135515 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125591277 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12268336 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108328207 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200383962 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111099636 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125689878 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101389585 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119273141 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148092526 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124937642 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.199315711 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103482227 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11806695 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124523332 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17421556 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127179783 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110179525 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109984692 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.145448562 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11158809 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110559635 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12458807 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126165352 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124857457 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123062596 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110333228 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101223823 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.082289567 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134064633 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111323165 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121060304 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133739696 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110731972 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101060676 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134374317 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11041437 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101412255 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136156945 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099986128 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110436352 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126357386 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12740325 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109179816 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.122033222 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101193205 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10263961 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119149639 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126116975 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122550689 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100183052 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126505304 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102137888 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110818905 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125547279 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11120045 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101754857 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.133087419 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116450063 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109886296 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102880397 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12635678 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109904633 seconds)
done (took 9.741087101 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.116934709 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145070535 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197989503 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.207156223 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128271789 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140324247 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116286354 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124719723 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137431478 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120022922 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137121586 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157035115 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179897654 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141719185 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115757571 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112552405 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138922466 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110578795 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.205812136 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12561203 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149012319 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117994801 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126822678 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.14276431 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105872796 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135381797 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134766733 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115032202 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103242854 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139372161 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125675444 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.1040325 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133240987 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124014549 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120989892 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140187253 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115496035 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.136543592 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106885276 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.104944084 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135431002 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121609862 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105522036 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13968777 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.113953896 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119232068 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136615323 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118540833 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105877119 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135125464 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108718865 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130219775 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141669758 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122847887 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115746298 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143068826 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119934318 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117561878 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132839298 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119000299 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104718834 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128919693 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107620448 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126026472 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133058216 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119159431 seconds)
  done (took 9.468976571 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.133890035 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134138574 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139684836 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116816315 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109015019 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123705765 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100317863 seconds)
  done (took 1.797635958 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.112976943 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183195486 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205519025 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.20753929 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.17911462 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215388226 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148678996 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101225383 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134364977 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136345834 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184083662 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.235504764 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111154661 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141524844 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185032882 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126627301 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185267716 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127231804 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116246763 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20984327 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11805765 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131568467 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140429517 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102110247 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.204610977 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103279198 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259349282 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11809286 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135437128 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116770758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114957541 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.201663339 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.20508861 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114797259 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109334863 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207546057 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.202141715 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11571214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.217871388 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106066688 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.203385638 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116014242 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116039401 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.13987316 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116711946 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.192426976 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120683384 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116108141 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139227346 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187590737 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136044528 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18257069 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.1365001 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116883836 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111741072 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141601015 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124199476 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116709709 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21374051 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118667147 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.20759622 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.20748669 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180337532 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209209283 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123883568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.20871207 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.198955921 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116079784 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109364602 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.142181555 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184533197 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.139128579 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113469293 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.196916274 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118837317 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210145775 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184445627 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137568504 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115569322 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105479471 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141167881 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10366239 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.198626995 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117953511 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113250904 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143729532 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115621583 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115653385 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.131299019 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125910457 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115008884 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138264194 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12163371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116947886 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14268571 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211587035 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112805126 seconds)
  done (took 15.539169753 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.11510105 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103536996 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107231748 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128988937 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103935905 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104319031 seconds)
  done (took 1.622588577 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.149353483 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116851089 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149213441 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117906935 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159870515 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.213702937 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.217231536 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110453 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156870939 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126170444 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.213237442 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.190897283 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.215716438 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118710385 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219104121 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117944736 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.219605286 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114136204 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150342131 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113967795 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115239648 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145543588 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113925741 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.205624787 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117257621 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117634361 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135752482 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125190229 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150056712 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112006023 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119316942 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142434789 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110818774 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11105067 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.219230388 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108403382 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139128164 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.139678838 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119725197 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144295454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.192595304 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140131702 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123402214 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.118226455 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136496027 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110198571 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144912905 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111103976 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.219369041 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119362891 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119561961 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.143527824 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119193076 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12010797 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136657234 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112848291 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119580309 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221124432 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119673461 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.134134317 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118186948 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.141376546 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11202891 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121481024 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.141979978 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120289418 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109311043 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142347375 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114538968 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117300658 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14441431 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118411412 seconds)
  done (took 11.108215367 seconds)
done (took 40.471171048 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.484758751 seconds)
  done (took 2.43888949 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.886600562 seconds)
  done (took 1.840635532 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.817021733 seconds)
  done (took 18.806379327 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.427012718 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.461971077 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.114002887 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14757664 seconds)
  done (took 3.10680766 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.826755609 seconds)
  done (took 1.809340267 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284987542 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256181434 seconds)
  done (took 1.503575728 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.71412354 seconds)
  done (took 1.688401711 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.506068924 seconds)
  done (took 2.468040391 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.292222605 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.238313406 seconds)
  done (took 1.50868161 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.616853742 seconds)
  done (took 1.5931073 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.435272505 seconds)
  done (took 20.412438057 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260777325 seconds)
  done (took 1.240050484 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290739593 seconds)
  done (took 1.273042374 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.496598081 seconds)
  done (took 4.479456023 seconds)
done (took 65.136651799 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120809702 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115965421 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115119555 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138905335 seconds)
  done (took 1.459336254 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.129599139 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118071897 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.14434114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118624166 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121607463 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117760428 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141667107 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117932736 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115324481 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143942461 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117102817 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115875017 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143665581 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116362248 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115195224 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144784284 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120131194 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11606007 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142529291 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118177676 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116935322 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143749694 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120601939 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119936631 seconds)
  done (took 4.003563202 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.123031226 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107002205 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108604267 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131252914 seconds)
  done (took 1.45588388 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134895072 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12782072 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15070266 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123737237 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128559667 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.151429258 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11684935 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113878577 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141517674 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124765386 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132109753 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155072575 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12817487 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116831092 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15062593 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110869179 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116169694 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153098688 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122604249 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149013207 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117860922 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122182446 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146470748 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.125075157 seconds)
  done (took 4.141516514 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197830651 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127753225 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171300185 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158752582 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.173985577 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116031134 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143705751 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147825795 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123289329 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116773747 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146000082 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159855921 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14757032 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119003939 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115570079 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148023751 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128041654 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120412022 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185884146 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120599269 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147970782 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129638574 seconds)
  done (took 4.134835843 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128178429 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10796437 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.128303863 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108977287 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.11928867 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.133637711 seconds)
  done (took 1.718510762 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.116461225 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103149722 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102289271 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126821228 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106601748 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101973281 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.124952787 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103010744 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101934565 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102406364 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127874238 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102159873 seconds)
  done (took 2.304302965 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.335649156 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107071535 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134612537 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109505204 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112294032 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104386375 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144758201 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106801385 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.264104553 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102959089 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.130630213 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193435073 seconds)
  done (took 2.839820848 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203377408 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144457456 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249657094 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361467761 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181844466 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158117593 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289445248 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18710948 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.172481166 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161534001 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180213956 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183518635 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150493211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207374245 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135795696 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180197454 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158218489 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227545577 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167646941 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20601385 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179454558 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171924715 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212310258 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171911458 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137240362 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182418142 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11821168 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125002805 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186938422 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158032581 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194807753 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173026111 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139438292 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211592209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219637436 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193956922 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268523026 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156663189 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167104804 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211451558 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251323898 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139235239 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209251732 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148853994 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153190575 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178752987 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174769986 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.204642847 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131607969 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140298047 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201182894 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199431667 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169940906 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160956884 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304267118 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131271922 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.138271285 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190822144 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209966929 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197047284 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201249883 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121235997 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201430695 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212191528 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231195463 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140265982 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184124971 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123339527 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159600132 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225669472 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204100583 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156323415 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222474113 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156062776 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16690619 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192621233 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150043271 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223622082 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191257294 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119820351 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146868505 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158974273 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123949696 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213155292 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120183904 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238554074 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129445678 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.338279273 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206518416 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153003314 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182791713 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155150997 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185428553 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143316804 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.12540026 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141690093 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.183896444 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153912329 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12561781 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180790703 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136904339 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.150025128 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148716266 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147203101 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166120849 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.128881238 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186128091 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190717735 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130718806 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199961881 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146568656 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18371373 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164504926 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215108426 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129100944 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155927369 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211572295 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192193971 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135570732 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19715163 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219288244 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146389528 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131707763 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185947335 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216033013 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142920132 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220319198 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135281667 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159743486 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134474269 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194170811 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154677723 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178776714 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126993922 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186658175 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185890706 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151704601 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137739554 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20266509 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13081967 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121371162 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161163906 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133434945 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166988719 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146337873 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.162443934 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151522329 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186990546 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162040806 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178673918 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13201415 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192941265 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129844053 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.189738431 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146248091 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116478114 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194619298 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218909623 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128106169 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203765496 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159353169 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210441318 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194570617 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128098269 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204885413 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126092281 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118992779 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182016463 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167884192 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185157047 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210179532 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179550299 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186075113 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186386137 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146131383 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188890229 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.178569297 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179097864 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140636769 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196463053 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163516584 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146436973 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122678545 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124512946 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162203178 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128362691 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160782153 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171436852 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186399308 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203872842 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164074914 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162908002 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187182439 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.150121585 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159375953 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198014589 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136734059 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210793437 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1846964 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201565067 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136690233 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184071688 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119527737 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151741565 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131515589 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185403096 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135349526 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132041348 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165381378 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211367607 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168374218 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171791048 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215559571 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160206458 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222867676 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118520309 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.156165288 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192951287 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190326904 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180401404 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131478304 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.182252837 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186598888 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167050762 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215804927 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165340824 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201249635 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213869442 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162573225 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127694626 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17341741 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15710477 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163545297 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159226343 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171915095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129080445 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174495551 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136904571 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136165425 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2039982 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167549903 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174480216 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.182046853 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164730605 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151331852 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139119184 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199479603 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142005214 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10195009 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192187189 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216404579 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146674653 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179869503 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168446348 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155866122 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311679134 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210267111 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199361605 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13383274 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134231506 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196007252 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156383516 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185205852 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206815287 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139953908 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229980904 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166210771 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.169933564 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12849849 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171336346 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147956986 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132487793 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.174486158 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.184229164 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142132512 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206883733 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135295688 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192088709 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172541006 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.167833313 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147234244 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136574778 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246228159 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19217557 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167369679 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189126306 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160524857 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206931534 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121991501 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153518059 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131126258 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209575428 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128235154 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198932967 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.167505593 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211193013 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197545305 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158701354 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166553246 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126655278 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190086068 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146552458 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211465803 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132714152 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163589367 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184302003 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.152479217 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129155923 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185453275 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27067201 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171573387 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166849549 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.130909118 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263788236 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153341157 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130543335 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183643542 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168082732 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.128207971 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.206061738 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170743135 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165352592 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159522627 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161709916 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205405183 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18408034 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187891689 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167141475 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.170698192 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157852059 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185134915 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195483898 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143684076 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143975383 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183720057 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18804843 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203170597 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129111795 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194277442 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192882424 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167606831 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196766008 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136755545 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208986156 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126136236 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187058388 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135875535 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122467156 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186112375 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192860402 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129630076 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198213305 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167189004 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128099434 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154914948 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142642821 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189730642 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136922205 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.155405122 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178010377 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155357576 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176538655 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229264076 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128660138 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191449827 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143666004 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156001267 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136202979 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139981581 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157084666 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172314237 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203733179 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129686939 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200165022 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159007831 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186689949 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153384063 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168900543 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.331854347 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.153179153 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186926692 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175463165 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19143189 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175569578 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170920171 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19415461 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146969258 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187871425 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142519372 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245097008 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158857559 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.191710256 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129061891 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168856079 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135515358 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158849168 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150164749 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191481945 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139676013 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13365314 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.191395716 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142191715 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172417714 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1389514 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223090881 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149259942 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208121855 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212216309 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135451901 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199759339 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168973654 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155296967 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16024992 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196638388 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141966248 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175686449 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132361543 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135620512 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233818219 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123140985 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185241727 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169194503 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193399252 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194631904 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134359167 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200176712 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137966203 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195922984 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126216921 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150262885 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197125888 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13236724 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.15251202 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168065981 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182131572 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162704767 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168044383 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174631837 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21616397 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.1236213 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13136202 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296428086 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156540668 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216505336 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.131711812 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163778099 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142109975 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184294792 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161337562 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19671859 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127721738 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153531652 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143275378 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.177426617 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138791414 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165439432 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196602694 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183325098 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182007858 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130649229 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277287304 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1390419 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195922598 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.112808066 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15438331 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138811467 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131879375 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167838275 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207044498 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208395785 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.18999694 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143988671 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161603662 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126379792 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129078281 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189979261 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148112146 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194290337 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143566209 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.128708885 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13891422 seconds)
  done (took 84.408172709 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166442655 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150407274 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165795388 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220027295 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191440803 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28737462 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227616727 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241847152 seconds)
  done (took 2.727054167 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124148135 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157854088 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139189496 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142180229 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108725943 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435643023 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129555394 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.143886446 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159102412 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150080297 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133437337 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.521977862 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114857443 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142237776 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119997505 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13199944 seconds)
  done (took 3.921585357 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.616887508 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538155543 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.924786598 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287020365 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.253270693 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.196591313 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.73668369 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192802457 seconds)
  done (took 11.823475915 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.159382461 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146161805 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.4109612 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.747270046 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.200616031 seconds)
  done (took 2.745722629 seconds)
done (took 128.654932214 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128355712 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120974974 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120238672 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149956991 seconds)
  done (took 1.587226314 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.179113322 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08829555 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090298493 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115238209 seconds)
  done (took 1.554966874 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.42867082 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08889934 seconds)
  done (took 1.622709226 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151720948 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134571858 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163461686 seconds)
  done (took 1.545703767 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14412081 seconds)
  done (took 1.226067881 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126602533 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.114080146 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.234620582 seconds)
  done (took 1.563258598 seconds)
done (took 10.18358626 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125438169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.918651981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429960358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131272642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709000396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42400719 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.418688222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171367273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171087285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136752237 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130606669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.68597372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.429563333 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.870300358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.387933487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.895902142 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693293411 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109155289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14266934 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10982415 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.396868854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134712954 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109789738 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109266692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715069597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417062916 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107300477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.914136581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107142306 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110988558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424497947 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107790912 seconds)
  done (took 20.817122306 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123116284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.163596387 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14279937 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11095356 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111502311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135925678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119908693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120078495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198744998 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107583651 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157873165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108245964 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113832426 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136777945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133556017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107743321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13928047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11111571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115729505 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137376169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130313787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107690432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138022065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112641319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108634967 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156910169 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109307382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119297003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136365718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112532002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11289317 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136968106 seconds)
  done (took 5.170841246 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163638352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172772492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144637053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145897003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182358292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110543441 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22044702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146172609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201263526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111923531 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129130489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135988612 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148953645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109762755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16247877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109323428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111712141 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139973829 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117397411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110675213 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157682655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108057569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109743323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139326906 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109555684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157064855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109967811 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120624794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134872867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11312081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114211788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135410872 seconds)
  done (took 5.472942755 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130004175 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12383605 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130701314 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160083908 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119264711 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122117087 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150854973 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119118179 seconds)
  done (took 2.143045129 seconds)
done (took 34.69039993 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139864423 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.1259906 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126917572 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150179029 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.18613907 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143349976 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12451997 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113456642 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.147873194 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.1279578 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108961986 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114240796 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155911148 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118035584 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.216670347 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123041027 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.221127612 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188194601 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143690493 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.121816088 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115904554 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.221090554 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119430458 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114434669 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.218298214 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111598353 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.210444853 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117146536 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147148487 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112104456 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.18879318 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148616709 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11591724 seconds)
  done (took 5.919476853 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212770499 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119050506 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146867717 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117284897 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119197033 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146222899 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.207916727 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145420446 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118240969 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116984474 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116902565 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.218306301 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124249301 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143024515 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121453794 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.1072293 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238101864 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120634289 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108802766 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120064538 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115919756 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116211312 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248482688 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113495144 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116884585 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.146725738 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120901894 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122151542 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.14791991 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12077738 seconds)
  done (took 5.34420518 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130118662 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131467421 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.163248811 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183646061 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145661048 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159057217 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137406941 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.159860232 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.140123852 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111919511 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126068202 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175566302 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127806236 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.150379635 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.116933892 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129979 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.160229218 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.113299933 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120938156 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128436869 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161616392 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129812704 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134046563 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149318401 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111103678 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118106163 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151303459 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126071375 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119774063 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154943572 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114268485 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114858312 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14350894 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.146295343 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114326477 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15609427 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13585418 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123357759 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154698051 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143762756 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115224991 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.141963609 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138877032 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164584578 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142807995 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125224841 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123823568 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156536648 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111873597 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130276513 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184397454 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112986004 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131775236 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140462752 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111828651 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119155619 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.141483003 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116637544 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126567739 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142733179 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135980022 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118887521 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151406325 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115031413 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12273318 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113510484 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141680522 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115358923 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136247063 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14819566 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.147405093 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111520638 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.151828737 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124522157 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1223763 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152456599 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112173679 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122200365 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151061152 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119282607 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12445315 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14235598 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117123184 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128734783 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.159487493 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126932209 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122426818 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.152901322 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11701098 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113288706 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128119844 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.143042399 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.11695395 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124561254 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.141359876 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116398146 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.1240592 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152496576 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110546169 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137270674 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.144210656 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112570415 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136202994 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.143214767 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118491398 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121269172 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.180913844 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114083484 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123128985 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.153072632 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11429501 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120231092 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.114954439 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.140962202 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131505945 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127949046 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149347004 seconds)
  done (took 16.766381483 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.320540747 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.269198595 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210233605 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.242823504 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125429178 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.236417399 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.296837783 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.300612908 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113041545 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180307312 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163239579 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270976281 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.112380729 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.170919132 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.303214318 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.354914672 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.140198565 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.180432017 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176607553 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126521572 seconds)
  done (took 5.407339756 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139400503 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14760427 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164101048 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139975256 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122194997 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157675975 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11339704 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134054816 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152066997 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122985008 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114312886 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15721467 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126328483 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129064345 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156521012 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.142901973 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119299601 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147557919 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135030273 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116786206 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129114491 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137754333 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119875945 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163345442 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131424098 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123030981 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140393921 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118457815 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119518559 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151493162 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118233355 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130166615 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149271063 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106251126 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124903694 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156020567 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.119700573 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11525162 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.11696429 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145497431 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128296265 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125175137 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150406534 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096390762 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130738694 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107454994 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156198752 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125103463 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105110804 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.160460532 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126553786 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126834351 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.147803567 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137457174 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.11986744 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.157203962 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125256161 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126522159 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.145298822 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113156751 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11074118 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115779003 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.150696352 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127939601 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123978047 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.161278721 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129428142 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112171953 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146628918 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116791086 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115950025 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.155324204 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.132646678 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121674734 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.148929324 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125780292 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120451622 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120030928 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12324299 seconds)
  done (took 11.557427008 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143798705 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121121751 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130127477 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176501609 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124252269 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117726323 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151143979 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132979087 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125806238 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159106675 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12678758 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125960189 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163986915 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123886943 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12070205 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15847601 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12427995 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149056157 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161028118 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140566476 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.154413388 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119241438 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125837806 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123788007 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171899141 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124543292 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168217649 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127862125 seconds)
  done (took 5.024824154 seconds)
done (took 51.116756077 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.263289854 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.449209032 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.227908737 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.227486852 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.251288797 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.247293334 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.223813583 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.244264093 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.609134293 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.196550069 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.229960109 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.227556298 seconds)
done (took 28.517289959 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.280043692 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.793173571 seconds)
    (2/2) benchmarking "String"...
    done (took 1.513963535 seconds)
  done (took 4.422804557 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.216044839 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.218404192 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465003693 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.217569229 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.216103669 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.213266573 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.218516217 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.230770715 seconds)
  done (took 15.892909188 seconds)
done (took 25.927740648 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.267958493 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.406396339 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.462174312 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.220810192 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.220746995 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.224753988 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.2182585 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.23905871 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.229648715 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.227697078 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.619437665 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.474903674 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.231070341 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.586905517 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.222145641 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.244467757 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.213239157 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.453307922 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.219840192 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.24333125 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.193833966 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192815953 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.244319651 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.21289772 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.223309192 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.229555294 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.26215969 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.216990944 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.412059593 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.248414526 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.247343402 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.220262175 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.257862521 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.215286556 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.219359626 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.221345036 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.410982794 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.228963903 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.202861058 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.233423896 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.416516576 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.239212473 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.227900282 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.220579489 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.236440969 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.263097367 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.205260803 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.34724341 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.237727814 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.219853309 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.222397176 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.60111432 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.216969724 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.227491567 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.229069391 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.45103689 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.227102105 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.270382863 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.240810356 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.228156446 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.225936575 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.218233853 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.281435471 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.234567274 seconds)
  done (took 144.723500397 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.222738242 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.221873177 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.221729005 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.283884205 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.221424123 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.222843903 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.219939556 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.220880988 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.222644204 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.249422286 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.220292381 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.217316735 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.221720046 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.205939192 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.228763648 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.234653955 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.2200057 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.216617884 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.242483627 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.219410099 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.227204441 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.220081382 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.22176815 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.219703674 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.25808403 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.294035957 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.247288044 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.239947018 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.232279114 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.221541785 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.250851401 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.222098389 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.80870484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.088409184 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.233083278 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.230362627 seconds)
  done (took 80.867146022 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.219919485 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.219876674 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.220701881 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.251351674 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.217315789 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767757866 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767544266 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.185236195 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.31520585 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.216918254 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.489591398 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.424046381 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.220611883 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30966562 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.226521709 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215053646 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.217635608 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.233960197 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220433007 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.244219461 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.219387946 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.764157905 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23484025 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.385017633 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.228349577 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250268155 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.609715438 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.25082909 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217146644 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24953526 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546829243 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261327445 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216635987 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.54154833 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.585802221 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32932976 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215776265 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251050327 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.218499879 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.499450099 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215800931 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.220651707 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.222946544 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.223452507 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843283978 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.221108034 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.767359591 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219951623 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.162060808 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.221675003 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221521633 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.109268662 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.845932147 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220642193 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.220598445 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.22406222 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.222322169 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218983501 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253383411 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.165321982 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314208504 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.223638987 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.227162351 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25293982 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.222458839 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.271138001 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221205388 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.51252262 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28405057 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.325918429 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.769820009 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.223187142 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318508804 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335415062 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.219430899 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.223766709 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222150057 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.223757186 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.333409492 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.220791562 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.889589277 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.390755701 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.23331398 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.476471412 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.317100664 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.218892977 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.52477885 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.22322194 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.224358739 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937423629 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31683525 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.219044541 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.222300595 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222654563 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.885610923 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760104755 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437271958 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.223593639 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.221857411 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.719940596 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.224437569 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.061504759 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.744796274 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.810888645 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.22107617 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329130841 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388061863 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.233088921 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219803248 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.457537678 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.221398494 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278527798 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216642389 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.621149455 seconds)
  done (took 374.038492398 seconds)
done (took 600.742590256 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.112267087 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.061696297 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.196677358 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.068793169 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.049084338 seconds)
  done (took 11.601828988 seconds)
done (took 12.718653158 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.405266837 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407671697 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281241016 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.408993641 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251653598 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.420413706 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385109964 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.238553874 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.329311903 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.299148062 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33527199 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271894927 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251531473 seconds)
  done (took 18.402677388 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.497634088 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.230809686 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285837106 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.478244421 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.267095377 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.492033315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.537418738 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.23103093 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.360906484 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245499605 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24332663 seconds)
  done (took 17.985794972 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51215148 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.230094078 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290525341 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.485164629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26665911 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490619165 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.535720313 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.2307403 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368453279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243702591 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242693642 seconds)
  done (took 18.011703747 seconds)
done (took 55.517159307 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258366481 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.318127831 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.25159151 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.238650725 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.239520032 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.238748408 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.24363843 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.239130582 seconds)
  done (took 11.141483972 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.238968952 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.239162298 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.237060807 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.238370614 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.238135627 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.239615551 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.238921052 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.2391852 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.239674554 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.239291717 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2391713 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.236929618 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.238243979 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.238923029 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.2386061 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.238581341 seconds)
  done (took 20.935690734 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.241769462 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.23794846 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.237761851 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.239353571 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.239456835 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.237955855 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.244017566 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.238426789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.239894875 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.23868937 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.2403266 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.238907893 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.2394521 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.238077144 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.238850369 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.241567136 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.240367485 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.24104699 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.243134277 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.240607956 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.240884031 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.238974989 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.239806559 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.240723042 seconds)
  done (took 30.873307584 seconds)
done (took 64.066974102 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.238303478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.241863066 seconds)
  done (took 5.598519723 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.299683563 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.297590588 seconds)
  done (took 3.717420576 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.241594952 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.240977657 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.239783166 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.239886613 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.236920173 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.238512432 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.238585285 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.239607713 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.239654671 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.237027822 seconds)
  done (took 13.509194477 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.242370268 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.240222846 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.240692998 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.239140012 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.242460499 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.239486402 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.241706961 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.24169934 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.239179389 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.239249526 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.243592537 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.240112817 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.240750981 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.240879298 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.240522501 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.240166321 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.241688292 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.242500662 seconds)
  done (took 23.455427878 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.257182196 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.258433565 seconds)
  done (took 3.633774831 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.372934681 seconds)
    (2/7) benchmarking "second"...
    done (took 1.280984812 seconds)
    (3/7) benchmarking "month"...
    done (took 1.345975001 seconds)
    (4/7) benchmarking "year"...
    done (took 1.337023365 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.282461615 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.262768921 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.282222775 seconds)
  done (took 10.284378845 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.243741157 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.44332128 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.573188932 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.846252337 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.242602541 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.24749997 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.175716067 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.246315846 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.248553748 seconds)
  done (took 14.387775097 seconds)
done (took 75.70269951 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.24276637 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.286060322 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.259739137 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.239245818 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.564620245 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.27460735 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.230333204 seconds)
done (took 16.216581722 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.217389594 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.215998203 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.203984025 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.242809771 seconds)
  done (took 10.000428637 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.230458356 seconds)
    (2/2) benchmarking "read"...
    done (took 1.548986665 seconds)
  done (took 4.899429935 seconds)
done (took 16.022446473 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243548924 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.242492109 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.241499544 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.242621727 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.242034945 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.244174836 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.243247382 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.244215002 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.242014284 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.245876988 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.241957029 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.241434923 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242933631 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242080752 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243168691 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.242725783 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243734085 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.243804532 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244940625 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.245481334 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24467301 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243926343 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.243649311 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.244196416 seconds)
  done (took 30.959613215 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242909074 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.244443552 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.243771801 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.244763583 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.24234489 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.246073656 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.240820641 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.244070697 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.245661649 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.244767901 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24358918 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.245180456 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.245179861 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.244538673 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245228834 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.244099342 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.24582433 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24441627 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244230414 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.241898101 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.24420286 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245136975 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.244425595 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242420504 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.244405453 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244453726 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.245358842 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.24402604 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243147993 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.245192721 seconds)
  done (took 38.448771297 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248304585 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244000903 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.245829654 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.247281347 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.245401463 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.244379095 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.244962141 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.244094518 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.242132273 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.244085182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.246135835 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.24356945 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.24661314 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.243784909 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.242455172 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.245966326 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.244872867 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.244301753 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243529234 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.243362531 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.246919384 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.244129672 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.242436056 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242373055 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.245650655 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.244807751 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.244653095 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.245059209 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.246023369 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.248078388 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.246056182 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.24419737 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.246242978 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.243321785 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.247046368 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.246688353 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245229416 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.246357291 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245804727 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.245505114 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.246902292 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.244061709 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.245624451 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.245626448 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.245368454 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.244782334 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.2448259 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.243675123 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.246242488 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.245629815 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.245866317 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.245405629 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.247571162 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244886459 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.245657466 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.245435587 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.248299286 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.244115485 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.245580126 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.245404853 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.246070279 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.244269023 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.248345924 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.245074935 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.246657757 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.246949395 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245968056 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.247498066 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.244681798 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.244276584 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.247857059 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.245799433 seconds)
  done (took 90.789558942 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.246876547 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247810151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.246887114 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247134059 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244610409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246503286 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.24534965 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247279271 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246242761 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.248758842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246647245 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246763979 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248762049 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247326119 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248114746 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.248653579 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245336944 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247638229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.246969811 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248692348 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246345942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246838349 seconds)
  done (took 28.559425742 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246710628 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248653324 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.248258422 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248545637 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248700505 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250989402 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.246574662 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249055253 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246335199 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247448994 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247169153 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24671227 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250694226 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246518791 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249094973 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248043017 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247170992 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248563741 seconds)
  done (took 23.589866378 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.247914775 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.247692099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.250289086 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24822713 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.247447923 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248863827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248179302 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248742156 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.247440347 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247356293 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247034997 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247378914 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.247276418 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249052569 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246909502 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249142339 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249392813 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248749851 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249086148 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247850703 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248190074 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248637158 seconds)
  done (took 28.588269615 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249578257 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.250387715 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.249325499 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249816016 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250051791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249383081 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.251462295 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248890825 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.248825109 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.250232818 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248124375 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250083247 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.249517596 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248613467 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.249920814 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248080899 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248507253 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.25012531 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245959405 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.248387913 seconds)
  done (took 26.110369904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251386879 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2497753 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247935733 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24767672 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252540921 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248353552 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249781975 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.250668519 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248872309 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249867839 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249171333 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251385919 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251778019 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250045721 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249476434 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250886396 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249030044 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251600867 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250928196 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248687023 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250843453 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249171911 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248530504 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248651551 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248038808 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249274906 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250236012 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249491927 seconds)
  done (took 36.121435655 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252278544 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249738999 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.252101581 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.249161134 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251353495 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.252140114 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.250440563 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.254927921 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251336857 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250940347 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.252526076 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.249324931 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250868873 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.250778378 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251080309 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.254817669 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250358299 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.251596405 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250040394 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250098007 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.251039707 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25207944 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.253281573 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253693812 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251504722 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.252869675 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25261239 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253270749 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250985324 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252685459 seconds)
  done (took 38.678933583 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.274607005 seconds)
    (2/2) benchmarking "in"...
    done (took 1.269365474 seconds)
  done (took 3.669480014 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.250721375 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251180652 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.250593307 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254211986 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254534606 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253766842 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253673305 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251125615 seconds)
  done (took 11.145993182 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.24496014 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.251785924 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.252790017 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.253283526 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.254305073 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.242032648 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252353601 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254913181 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244168998 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245497421 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.245909378 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247340477 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.249041033 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24537019 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.24536565 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247045384 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.250787423 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.25448245 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.251846964 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252323766 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256854919 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248555387 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249850374 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.254922459 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245815517 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25628577 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.253467175 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.255769707 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247640173 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.25317952 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.250043579 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.257086995 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.2558819 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.255534916 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254242763 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.254448812 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257622274 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252905524 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.257088776 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259096018 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254879803 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.252505392 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.251956087 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.251858727 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253335223 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.257060671 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.25555048 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.254352488 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247126692 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250715517 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.257537393 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248113822 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.257485609 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252139476 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254619136 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257449225 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.257131552 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.24720214 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250039228 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.256276682 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.26315487 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.256045623 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253450317 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.259420243 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252965776 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25510011 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258071542 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.262169091 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.257632109 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.253874777 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256266987 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264253394 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.261312569 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.26045027 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258054025 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.255145038 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252207185 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260506718 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257613882 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.26019113 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.261614572 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25495624 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25468876 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25556814 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.253083208 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.256875838 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256195963 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.253551189 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247680248 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25714086 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.262875273 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.255028111 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247930879 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.25061998 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.250957193 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259044694 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244292462 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251686101 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.258504013 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.254448832 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256680566 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247545508 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253549522 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259566676 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254346015 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.258260053 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.261342481 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249165724 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260717311 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.261488511 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257441081 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246100031 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252743881 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256724317 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2484487 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251462849 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261343913 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.25175973 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.260851918 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.254608585 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253809719 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257723001 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261268812 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.2558801 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248191418 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.260413592 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254759922 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254174393 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.2625582 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.257734935 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.255875744 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253413523 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261384261 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.250937548 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259092013 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251463637 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.260356354 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.257307498 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.257471638 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.253691509 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.257156972 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.253489863 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.25595813 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.261127483 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.263854491 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.25474647 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.264957929 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.258747619 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.258384543 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.259254077 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.261389077 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257169866 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.253757674 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.259889612 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248207304 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258138497 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.24973184 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262487373 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258531649 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.259077978 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258969822 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248747128 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255467939 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263293815 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.257175741 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.259674929 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.262709957 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.260511151 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.256925171 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.250572138 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.260269898 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251056508 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255074924 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260951535 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258036469 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.259864647 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.254278217 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265105586 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259336921 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259884094 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252202405 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256559556 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.266784518 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260344815 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267206949 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260478908 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.262406615 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.253984238 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255149581 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263532908 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252901313 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.26328484 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265153917 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268219719 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.253891383 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263482695 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.250682117 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.263084276 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259222468 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.264566364 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.260261663 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258955644 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254054803 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261040056 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.253753253 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.26193618 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.250131129 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.264541019 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.261729041 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.262061114 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259427388 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25511098 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256196354 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.260895395 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257258084 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25939754 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.253466486 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.263257349 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250006208 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.254575556 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.263757571 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.261570554 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.264107979 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267046676 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258316842 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262152069 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.26002597 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.254869509 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.262414318 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258909262 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258638787 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261579643 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.263220889 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.255976106 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264833867 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.261517877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253243718 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259124128 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.265170707 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.26072169 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253511403 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265436257 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260755227 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.260324084 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.261691674 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254510984 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264121427 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.262130788 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.267721832 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25582286 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.264218337 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255881859 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.265096451 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257610894 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.26049412 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260484431 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264318953 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26747444 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.262751877 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256210092 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263720588 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.261436727 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261750225 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254624931 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26444433 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.263157031 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262070858 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261098494 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.259351513 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263914606 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.256896961 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.264643416 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256254227 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271086318 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.275986005 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264224915 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.268360815 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.265260855 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265398712 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.265178952 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258423035 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260007087 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261016902 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26002349 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257795147 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.266235337 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257722235 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.26911308 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26202385 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.263968627 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.264656271 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.266013354 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256378709 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.268403918 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.263425011 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.261440495 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.25795239 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.265403941 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.261413687 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266713664 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.265705952 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.260540561 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271503936 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270983662 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26219672 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.261541468 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.260890423 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261861674 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.261534912 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.271421897 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257380774 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270679982 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260247276 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.262396356 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262353984 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271898564 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.278129377 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260271527 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.268259319 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.266793399 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.258156731 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260253571 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.268688876 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271177789 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.279978357 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26059483 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270086325 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266252466 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.269449331 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.265351493 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267865071 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267845963 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.266480954 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270937034 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.271346269 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.264246487 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270026645 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.275262523 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.266554569 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.268061642 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.258608066 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271890042 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277712194 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.261441323 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.266335713 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.262243213 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.269286976 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.267008551 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.266977016 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.268462433 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.266816067 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271254744 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.273178343 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269049696 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267863309 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273213184 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280786305 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27025698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279980487 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263950125 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.274385279 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.267969827 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.260441055 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.264062998 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.266068035 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.271774028 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261651491 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.27301179 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270900005 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263614595 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.270350747 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275422321 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262464772 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269500836 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278346123 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261914526 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27405325 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269592592 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262981538 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273634282 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.273493 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259970995 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.26701669 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267588383 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272527691 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267002591 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.276118078 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267042966 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275067792 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.269552002 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.272163031 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.273123717 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.27258227 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265442031 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.273676403 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270896894 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.27859111 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.266725862 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27130712 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.268855157 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280078242 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.283728283 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.267718385 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279120187 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272909958 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267640945 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.269473906 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.280061572 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267166175 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276665887 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.264360037 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265866476 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.269300554 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.274777632 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.276761997 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.277821446 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26472691 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266838857 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278735689 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.27657769 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273969158 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.271718465 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.279774039 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.267639656 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266096634 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276303041 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270104167 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277523793 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26621206 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.273627623 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269452333 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276593684 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.276048726 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273646497 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.267594814 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26984867 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280472085 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280012016 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.271469226 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272679176 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.277367115 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.268487241 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272669377 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273940385 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.26992792 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.272624559 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.279668898 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.269677869 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.27182578 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271343347 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280223417 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279459732 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.279136797 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.268632625 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284233708 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286440141 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281756563 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270155141 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275414833 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273185887 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.27910516 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276722003 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.270465173 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283232508 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284412586 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281926933 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275817146 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.277370372 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.268914969 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282149241 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275775761 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273707032 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284403584 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272956496 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283743559 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278702045 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.276697754 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.272674322 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274157948 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.275497858 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273334242 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28119689 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27800087 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.281091881 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275997368 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282203958 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27933701 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.277343644 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.279768892 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.271526995 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280600683 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.270503311 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.280352174 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282229075 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272768978 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.282053786 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281481046 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273532303 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277636442 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282593255 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.279806467 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.275031399 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.277942077 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.283928693 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.29020736 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.278904583 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272076566 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.276235061 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.28125434 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280857803 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.278618839 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273895827 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289391959 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.294031802 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276905248 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.278065567 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284713018 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.288454039 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.280854502 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.281172754 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276951304 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278320097 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284443274 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279503018 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284445706 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286586331 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.275682341 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.284456544 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276320883 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275312476 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.283186616 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290437221 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.278369103 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277390982 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.287750943 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290352181 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276514002 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292139219 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.28706633 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.282568198 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.285576154 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273609942 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.284424055 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.277541281 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.284731738 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.27907756 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281708272 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.280376113 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.272854839 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281594799 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289202465 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290074034 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279279341 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.274106324 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.277056356 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.282306519 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.281506148 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.283182127 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275371871 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278385987 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277924533 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271064402 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285839897 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.290135041 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.283581201 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.280372688 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265734569 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268225796 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.270747803 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268830622 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.2735781 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.270659598 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.268795157 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268842646 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270514943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267182353 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.256769608 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258462375 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257654688 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.26668018 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.272093047 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285012296 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.262033664 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260946665 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259774491 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.260893289 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253599802 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264273673 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258697701 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.253971576 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.251762086 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255881592 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.257160773 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.257455872 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.248141196 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.259143996 seconds)
  done (took 755.221313559 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256798157 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25193306 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250550622 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252369831 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250880968 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250838175 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251048801 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251048261 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.251901473 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248495319 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246561484 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247773978 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24927451 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247930257 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246199068 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248574717 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24670443 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243740468 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245693254 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24167839 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243936241 seconds)
  done (took 27.355342281 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.241459221 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.241711074 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242937463 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245104576 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242929194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243920147 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243214536 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244655361 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245848979 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244425651 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246419898 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243800223 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.243939633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.245550617 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244258255 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243833951 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.24534252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244975564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.244183791 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.241217644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239966142 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.238957527 seconds)
  done (took 28.482263055 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.238930471 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.239753857 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.233403571 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.244914391 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.238693943 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.236463329 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.235616297 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.236984349 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.235317587 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.231337231 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.231022488 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.230873146 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.233279819 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.242610722 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.232261633 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.241020079 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.238252741 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.237434441 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.240013694 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.237512358 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.241731207 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.249363399 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.236702715 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.227244478 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.238430068 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.239191121 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.236556234 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.236347915 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.2315994 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.239913626 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.238303537 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.229476464 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.23872157 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.240561078 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.232121541 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.240354695 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.239244622 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.239816855 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.23672875 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.237286921 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.247479419 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.238078968 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.243112834 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.249988262 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.236871178 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.229387341 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.241623998 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.236308732 seconds)
  done (took 60.527075506 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.234315603 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.234741341 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.238135846 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.237827846 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.233029489 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.232437799 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.233925175 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.23327283 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.232487331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.230905213 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.234052746 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.232579008 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.228870618 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.227844738 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.2286081 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.228320509 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.229458391 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.227818324 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.22912465 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.225779186 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.22223687 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.219867216 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.219106784 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.223052404 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.22199879 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.221024506 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.220440299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.22377629 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.222641069 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.224138378 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.219845325 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222105839 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.223703317 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.221915275 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.222406183 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.223740433 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.223950252 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.223446589 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.223008032 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.221553963 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.222480747 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.224770665 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.219896192 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.223662913 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.219109861 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.225439707 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2208177 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.223366334 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.222364885 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.221573105 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.22205284 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.222092296 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.220274284 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.221816209 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.222492299 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.220050936 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.223059599 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.222481815 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.222167507 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.221820288 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.222401824 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224958259 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.223941183 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.223496817 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.22324874 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.226266298 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.225027109 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.21932886 seconds)
  done (took 84.42333547 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.224819197 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.225638122 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223320164 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222695183 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222074033 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.223676443 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225415741 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.222785292 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.222402203 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225015977 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227853618 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.22428814 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.223599479 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.225084555 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.225004299 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223771995 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.226193859 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22546768 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224964603 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224362558 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.225300154 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.226759467 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226280745 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.227513797 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227276532 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.225812102 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225072738 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.222931924 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226808418 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.225879331 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226725371 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.226323938 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.226193784 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226709016 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.223969857 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.226151991 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.22823537 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226340862 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.226481605 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224417436 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.22479771 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227597857 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228486953 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.229684656 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225197866 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.226713886 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.22559418 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.227441989 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.225825809 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225370653 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.225270753 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228027778 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225561096 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226362763 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.226702621 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.227681421 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226788114 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226103521 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22648537 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.226242269 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224742751 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.224173756 seconds)
  done (took 77.094870657 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227013296 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227387723 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.225634632 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.228395915 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226884428 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224656702 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226606637 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.225954135 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228272833 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.226564546 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226987232 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226773166 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227300326 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228896019 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228442433 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23190584 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22605532 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227588205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226550086 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229281817 seconds)
  done (took 25.653837645 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.230027819 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.230236809 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.228886629 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227766526 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.224902756 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.22795609 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.231151072 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226886456 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227293434 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231079998 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229474976 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231075167 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229918295 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230688959 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.224562804 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.22391959 seconds)
  done (took 20.767471562 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.224553619 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.226575279 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.226684919 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.225510596 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.226010271 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.224497636 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.221820083 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.222599762 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.222064614 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.22060731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.221164543 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.221409863 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.22249811 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.219523336 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.218236015 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.218597487 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.217215423 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.218192699 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.218533296 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.218065873 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.218681781 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.218756124 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.217233915 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.217848767 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.217673609 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.21787534 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.218024348 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.216270925 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.21689311 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.218279298 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.217413752 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.217325043 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.217073738 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.217130592 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.218018967 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.219221151 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.217733672 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.218781214 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.217421799 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.218993962 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.218469253 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.218649827 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.217346291 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.218892332 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.218519628 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.215949768 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.219436503 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.217929636 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.218213183 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.217782261 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.219731039 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.218945561 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.218830273 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.2181569 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.219270251 seconds)
  done (took 68.179797884 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219662746 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.218584541 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218048197 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219035744 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.219591945 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.217513457 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220016176 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.220382283 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218953754 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220176096 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219113848 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219268834 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218725846 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218609418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220788292 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220215839 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219898782 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.219456197 seconds)
  done (took 23.052458711 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219500647 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219348209 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.21930636 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.219848529 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.222253359 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219830211 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218678057 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.219657474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220503463 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219681154 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220147313 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.221430152 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220756393 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.221599991 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220848942 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219271507 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.220098685 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219766113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220751277 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221082988 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221097781 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221203223 seconds)
  done (took 27.951624725 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.211819271 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.212012954 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.211340525 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.225235243 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.221256487 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.21184071 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.21192355 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.211984391 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.229275977 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.236249277 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.232543455 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.218943401 seconds)
  done (took 15.740421822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223151704 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222086396 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222140311 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221976997 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222673779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222642434 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222707858 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223428264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222584271 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223421617 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221892012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222545722 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223534553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222960971 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223193345 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223002191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223579091 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223341167 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2233404 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224025463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221735773 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221985092 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222444212 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222285631 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224418257 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223802708 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222100028 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224342209 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222605166 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224350116 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223566986 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222988896 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222967071 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22438423 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223838065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223423376 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224747884 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224455189 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224075214 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223462872 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.223505629 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226153792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226212987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223829511 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224971887 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224199092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222922268 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225692571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225036702 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224518734 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226098701 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224500687 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224550232 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225158604 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226857864 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224107748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224962117 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224555474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225823358 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225202416 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224899293 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225483584 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225366419 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22516891 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226220231 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224659802 seconds)
  done (took 81.885382399 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225116343 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225957362 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225600086 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226070967 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226887583 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225441221 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226442397 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226724585 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226703784 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226066122 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225968583 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226917817 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226809102 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227183508 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226625909 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226093654 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225604793 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227473077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226341232 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226312448 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228154646 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225713194 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226854122 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228065146 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228441313 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22743807 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22675916 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228417142 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22764896 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226942783 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227969182 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226908044 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228096055 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.22853933 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227904214 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228282627 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22864108 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228306231 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228160371 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228221073 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228232868 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228173593 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228270798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229009975 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227592341 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228591556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22855903 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229114002 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229444832 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228353927 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228115124 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229485658 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228373452 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229022879 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228087672 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228612665 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228287883 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228810729 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231145725 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228571875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228776839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230448042 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230258098 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229876977 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22931061 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23117194 seconds)
  done (took 82.147674528 seconds)
done (took 1736.265064508 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.38597234 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.341244244 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.219136911 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.231820415 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.220403942 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.216371866 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.229127493 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.22063471 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.221562638 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.220556335 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.220658274 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.41017483 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.254250865 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.222124979 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.221835574 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.317175486 seconds)
  done (took 25.266871784 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.243701426 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.241158944 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.335194387 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.238415701 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.256596474 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.410618766 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.291660098 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.240170993 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.387059131 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.25568592 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.226281103 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.259245614 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.236368004 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.226650229 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.257333534 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.407676578 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.480025031 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.236279643 seconds)
  done (took 27.345934424 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.632128736 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.255359896 seconds)
  done (took 5.010752916 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.254172798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.240173332 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.237687529 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.234687793 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.226348841 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.229902122 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.235885926 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.234930817 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.23526548 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.352595063 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.242910638 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.248301081 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.251222677 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.237297742 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.245709113 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.278959767 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.405145577 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.252396713 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.24345726 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.242286133 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.235870151 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.328172835 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.280460752 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.247585215 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.348276153 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.240834997 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.245027213 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.244538235 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.353139544 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.250218848 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.235551015 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.238413937 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.237347078 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.178576304 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.761050649 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.235820137 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.2624663 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.248811418 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.245923191 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.386489277 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.243642567 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.243538744 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.231510462 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.760607919 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.349709251 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.354999247 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.250673687 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.256500647 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.240695999 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.300311696 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.245745196 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.241980565 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.294095981 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.037369306 seconds)
  done (took 80.113453325 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.285042925 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.234816821 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.413909185 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.258439288 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.230674865 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236909171 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.237002675 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.488403912 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.245901509 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.233321982 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.543062328 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.830470474 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.23868919 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.296695862 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.272178297 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.289486192 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.233164916 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.238603051 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.238925645 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.235321737 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.784575175 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23896246 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.239576103 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.313980827 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.272044283 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752427226 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.240854986 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.238775856 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.242519393 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.234351508 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798278118 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.240162431 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.284719431 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.235439684 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.510903923 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605999916 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.567123684 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.241731399 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.25599709 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.235444582 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.25886779 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739409653 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.591072543 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.238890776 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.240849912 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744408245 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.239358848 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.248360318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.234452873 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501539031 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.240060667 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.236678778 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.247968087 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.241500385 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.234589818 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.293127972 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.28967346 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752760844 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.242263467 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.241885746 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.287242074 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.235690893 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.247476893 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.240166177 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.240352264 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.589989421 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.472546903 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.245147893 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586556001 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794112218 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.249919883 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870119581 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.241356052 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.244955601 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.267020124 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.23441908 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.255854122 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754359225 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.276574048 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.235678039 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.565506189 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.240952255 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.527886562 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.252020845 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.239968878 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806447813 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.2520371 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.279573674 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.234526151 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.248426938 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.240910454 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.24593624 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.520100028 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.290620115 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.238305027 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.237296874 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.262531814 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.236765002 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.252016506 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.23694637 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.862167007 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.25041163 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.236599905 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.258354966 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239033541 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.258181021 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.242005461 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.238560598 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518537799 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.243296372 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.262096456 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.238280651 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.238289413 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.244624399 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.316303043 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.239560878 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.527301586 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.248711698 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.238484274 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.245204948 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.2376042 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.255865642 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239458493 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.258976559 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.230634909 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.544902106 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.257791463 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.25734474 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.240460654 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247038271 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.239929547 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.238963888 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.293258947 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.238684664 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011635229 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.283998837 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.286477393 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.237041997 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.254592424 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247814357 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.239772091 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.240145547 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.53651484 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.522485912 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.472741404 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.244221531 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.245511918 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.038513455 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.284438143 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.421256585 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.259955123 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.237856149 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517570497 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.46540019 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.24043774 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.240038974 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.242488875 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517191273 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.251467784 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.555196745 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829212027 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.247708925 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.240910078 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015417483 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050435171 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.247893827 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.237609116 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.530669557 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.261271155 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.242024976 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.240879455 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.24133942 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.245240672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.246396739 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.243776703 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.242761177 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.241145418 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.58435501 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.434116766 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.261015368 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.243539079 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7571255 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.267790184 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239102357 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.256172486 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.24440761 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.242833254 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.295823193 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.242612059 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.2810031 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.2434765 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.252686089 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.785156316 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.249406089 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.250274987 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436584554 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967457837 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.248431435 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.245691577 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.248735853 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.30408079 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79147052 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.303375411 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.530940104 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.249115945 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.281965911 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.246552931 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.261689151 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.791173703 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.257731162 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.244157842 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.965290171 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.24935654 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.685202268 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.243870858 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.24718012 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877019554 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.250515732 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.250625421 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.247880581 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.252208977 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566931333 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.25350223 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.29646458 seconds)
  done (took 477.539301903 seconds)
done (took 616.390157554 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.244601179 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.249439059 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.250166397 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.250669705 seconds)
  done (took 10.133296991 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.262918162 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.251818139 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.261578193 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.250432997 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.264250192 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.251807776 seconds)
  done (took 8.683996961 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.24621593 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.249970301 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.251566666 seconds)
  done (took 7.886238409 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.443834846 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.273285725 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.583007491 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.263691507 seconds)
  done (took 8.706248983 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.264375417 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.262009147 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.259502606 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.262342246 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.265890398 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.263826407 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.263988112 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.262960889 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.263405813 seconds)
  done (took 12.50798262 seconds)
done (took 49.053908658 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.373266714 seconds)
    (2/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.291841741 seconds)
    (3/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.233379266 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.240733119 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.320535237 seconds)
    (6/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.476448076 seconds)
    (7/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.425182544 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.287485767 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.243937609 seconds)
    (10/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.241967832 seconds)
    (11/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.477606487 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.541143537 seconds)
    (13/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.232349174 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.341560862 seconds)
    (15/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.429102407 seconds)
    (16/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.231259361 seconds)
    (17/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.387968977 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.475577415 seconds)
    (19/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.370894807 seconds)
    (20/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.238040707 seconds)
    (21/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.239333538 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.253428528 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.314112308 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.326363521 seconds)
    (25/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.392929073 seconds)
    (26/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.357903628 seconds)
    (27/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.279014977 seconds)
    (28/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.519767012 seconds)
    (29/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.537764934 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.545592651 seconds)
    (31/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.356275089 seconds)
    (32/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.542598665 seconds)
    (33/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.473093945 seconds)
    (34/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.232899752 seconds)
    (35/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.227431901 seconds)
    (36/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.374448274 seconds)
    (37/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.332078342 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.333583997 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.34820553 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.368898343 seconds)
    (41/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.46038898 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.231111187 seconds)
    (43/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.448034167 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.32745801 seconds)
    (45/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.239247568 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.351608104 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.49239657 seconds)
    (48/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.2540053 seconds)
    (49/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.246914634 seconds)
    (50/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.28290068 seconds)
    (51/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.279673097 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.358230471 seconds)
    (53/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.495360436 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.497879935 seconds)
    (55/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.324063516 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.285800453 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.360099475 seconds)
    (58/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.312931714 seconds)
    (59/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.241870277 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.252744324 seconds)
    (61/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.330765235 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.480831385 seconds)
    (63/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.250480896 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.335474878 seconds)
    (65/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.651570474 seconds)
    (66/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.234014467 seconds)
    (67/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.421939015 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.465245587 seconds)
    (69/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.329435034 seconds)
    (70/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.328422525 seconds)
    (71/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.410141149 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.347982925 seconds)
    (73/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.319501006 seconds)
    (74/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.407210363 seconds)
    (75/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.371737091 seconds)
    (76/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.256770722 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.485687817 seconds)
    (78/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.369082572 seconds)
    (79/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.409829661 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.41159134 seconds)
    (81/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.239853828 seconds)
    (82/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.230166196 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.338460665 seconds)
    (84/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.331691707 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.366920659 seconds)
    (86/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.28687257 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.340018012 seconds)
    (88/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.367599574 seconds)
    (89/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.233188642 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.230811229 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.388610047 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.292218741 seconds)
    (93/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.432735392 seconds)
    (94/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.416164457 seconds)
    (95/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.592297501 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.33746732 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.267035548 seconds)
    (98/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.260868606 seconds)
    (99/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.376055897 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.462904305 seconds)
    (101/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.265893036 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.363951027 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.404080488 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.342740991 seconds)
    (105/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.32102643 seconds)
    (106/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.231037169 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.383227367 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.399996751 seconds)
    (109/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.33080443 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.375113587 seconds)
    (111/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.29996121 seconds)
    (112/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.491617742 seconds)
    (113/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.499995624 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.410127816 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.337684866 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.230797307 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.497796191 seconds)
    (118/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.280425083 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.366511135 seconds)
    (120/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.355372755 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.358505702 seconds)
    (122/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.290652107 seconds)
    (123/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.233588423 seconds)
    (124/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.245169171 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.334991602 seconds)
    (126/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.287062353 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.262624254 seconds)
    (128/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.412503162 seconds)
    (129/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.296226362 seconds)
    (130/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.409798205 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.392429022 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.345380085 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.237510068 seconds)
    (134/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.352594173 seconds)
    (135/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.480310039 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.295002448 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.292342281 seconds)
    (138/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.434261407 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.414674582 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.325801087 seconds)
    (141/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.234308349 seconds)
    (142/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.246659878 seconds)
    (143/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.253481299 seconds)
    (144/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.416193375 seconds)
    (145/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.238089155 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.310033104 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.256828534 seconds)
    (148/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.29195407 seconds)
    (149/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.657835147 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.427100967 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.238736752 seconds)
    (152/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.291398244 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.293673617 seconds)
    (154/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.380848235 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.318922048 seconds)
    (156/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.463106452 seconds)
    (157/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.420483402 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.599535042 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.375223596 seconds)
    (160/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.48971787 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.306940589 seconds)
    (162/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.352418012 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.415191257 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.37376532 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.408182154 seconds)
    (166/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.331851797 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.40970201 seconds)
    (168/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.343304438 seconds)
    (169/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.342549584 seconds)
    (170/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.252127637 seconds)
    (171/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.283763449 seconds)
    (172/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.458162136 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.413703898 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.380486995 seconds)
    (175/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.414868752 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.270391369 seconds)
    (177/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.24680947 seconds)
    (178/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.332814193 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.457286468 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.364895576 seconds)
    (181/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.240895744 seconds)
    (182/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.31547882 seconds)
    (183/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.441419351 seconds)
    (184/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.292929954 seconds)
    (185/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.296219283 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.363890911 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.500072476 seconds)
    (188/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.235664767 seconds)
    (189/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.464015814 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.379056686 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.553315414 seconds)
    (192/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.241030578 seconds)
  done (took 309.096227307 seconds)
done (took 310.238247576 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287385829 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.352310671 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.268000258 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.268314037 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.270734962 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.263263408 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.29540972 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.26976234 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.283028021 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.282821208 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.261920954 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.283027687 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.284252343 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.278399325 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.304017349 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.270180735 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.269089321 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.281128325 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.284495176 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.287494319 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.27091134 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271806461 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.294363429 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.269598784 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.276181689 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277924117 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.27683551 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.265464814 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.277359304 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.283673803 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.261864597 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.277519708 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.286582356 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.280393035 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.273613368 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.280464811 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271765962 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.355261912 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.29184059 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.2814749 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.28001064 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.28446953 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.2788057 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.276236039 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.283203787 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.298915312 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.278849521 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.288376902 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.265694504 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.259190777 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298417522 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.284153457 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.278528822 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.260781672 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.269462757 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.289513352 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.282454248 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293182798 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.280551002 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.276164214 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.307289714 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293439226 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.286232361 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.283587207 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.281586853 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.289434001 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.283135867 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.28815166 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.281132237 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.272255493 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.274872143 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.281552484 seconds)
done (took 101.454947776 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.395866926 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.267035061 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.430142394 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.280883366 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.43807822 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.393942557 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.280270172 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.27948506 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.281296251 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.076462031 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.281868533 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.282215752 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.271471484 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.280849897 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.390012814 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.282174828 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.281911651 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.97374604 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.282902596 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.410838783 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.271687293 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.280561948 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.281715089 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.081942193 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.273189527 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.271573189 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.407782507 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.280679086 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.981021405 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.27348015 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.265686141 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.980265236 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.407105409 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.301349286 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.292036963 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.289542217 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.438875936 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.291173752 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.394773359 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.401470678 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.432874339 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.321464191 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.267044216 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.266881436 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.281520231 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.285678233 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.283236388 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.310572748 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.26870079 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.279363176 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.974925391 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.288587929 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.294278362 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.283788099 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.284282451 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.303354453 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.284341719 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.286156609 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.407538276 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.282722562 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.398855979 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.081310481 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.076947562 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.284839337 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.271605382 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.285853798 seconds)
  done (took 104.569361481 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.344501304 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.348854444 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.384673425 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.28015783 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.327647796 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.385966742 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.277965932 seconds)
  done (took 10.504263842 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.279872274 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.287099268 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.321278151 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.321890895 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.284139253 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.448711411 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.283660988 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.288193152 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.283649043 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.326871061 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.28702239 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.283152939 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.293454981 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.274982104 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.319542557 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.284233124 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.393915145 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.278188831 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.284522799 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426981041 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.284680313 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.295302276 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.325248183 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.289200845 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.290256232 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.285158077 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.060260202 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.285331896 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.283372889 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.281508396 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.285243102 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.339240059 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.286467487 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.276931209 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.281043713 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391572159 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.286732826 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.286187111 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.284133326 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.276360818 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.285959897 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.282559048 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.285787167 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.283558716 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.287333041 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.301864708 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.287186605 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.283211159 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.284508908 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.287020931 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.326512932 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.284162472 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.285364788 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.286853224 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.328713832 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294678574 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.286055669 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.285437487 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.283901289 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.288126558 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.428401473 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.325048739 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.288436939 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.325025059 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.28479381 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.286612863 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.284401046 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.287975383 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368779539 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.286145268 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.32773886 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.289674667 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.460846232 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.305054699 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.291251416 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.2827518 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.279169487 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289250023 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.275647147 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.285211063 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.288070272 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.279335463 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.283604752 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286793107 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.289688567 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.434611585 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389340793 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.290289984 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.296535731 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.287565913 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.288631592 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.330896667 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.288134741 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.289562202 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331170473 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.399587647 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.330458625 seconds)
  done (took 132.538307517 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.289458469 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.294010818 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.283778734 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.305955148 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.283889689 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.280851116 seconds)
  done (took 8.899278831 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.283450943 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.292048117 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.288608376 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.28869171 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.291959393 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.292074005 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.290450843 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279762258 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.294128076 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.292913818 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.291782892 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.29366857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.290593826 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.290461735 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.28966696 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.290790557 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.293472915 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.289441218 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.294050534 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293805303 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.279498847 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.291394348 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.28777344 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.284175194 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.298018041 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.292846697 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.303374216 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.291872514 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.290456001 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.284273966 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.294233885 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.292285442 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.284743294 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.28771474 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.296480217 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.289768273 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294141596 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.29503834 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.2887729 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.292327612 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.292971084 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289874764 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.290632525 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.291479164 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.280964285 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.290577539 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.298977058 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.308039092 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.296185348 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.290396941 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.294005118 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.292718539 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.294681769 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.296359241 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.286175272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292403955 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.296285792 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.29460336 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.289432497 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.286584093 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.294291109 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.294587602 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.286533593 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.301253975 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.292100952 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.295388793 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.287803897 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.298416463 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294740193 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.292093522 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.294495292 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.295107424 seconds)
  done (took 95.175543625 seconds)
done (took 352.841618387 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.587885979 seconds)
  done (took 3.749009146 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.539857596 seconds)
  done (took 3.704567601 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.784005208 seconds)
  done (took 22.196874395 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.288090278 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.292631465 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.295640376 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.28348522 seconds)
  done (took 10.321941098 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.539757301 seconds)
  done (took 3.70190357 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.286238386 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.301919497 seconds)
  done (took 5.753580057 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.426895727 seconds)
  done (took 3.590504786 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.494957321 seconds)
  done (took 3.660615717 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.293034367 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.296618426 seconds)
  done (took 5.763557026 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.261839455 seconds)
  done (took 3.428608625 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.174149689 seconds)
  done (took 20.338862147 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.300334121 seconds)
  done (took 3.472007088 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.328823563 seconds)
  done (took 3.490978544 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.690893659 seconds)
  done (took 5.855986891 seconds)
done (took 100.190458102 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.279501836 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.283810063 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.279134988 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.280365785 seconds)
  done (took 10.284086983 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.358700007 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.36150679 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.368413523 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.35340073 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.35081259 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.360915511 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.321786446 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.318292522 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.351957812 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.34669966 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.362298448 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.351929398 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.363577973 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.320661911 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.345903406 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.361426285 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.350874209 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.368204241 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.32506894 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.356701871 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.297797113 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.35659066 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.349429628 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.29507462 seconds)
  done (took 33.462040713 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.782501143 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.35994025 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.439764157 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.33716809 seconds)
  done (took 7.084502854 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.400843862 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.403056979 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.419731017 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.450875259 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.502317399 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.415917476 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.324912421 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.319634568 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.303133229 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.401708379 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.484347811 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.397610796 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.614494042 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.294693354 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.615830359 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.298184159 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.300134203 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.403714749 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.457048215 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482393406 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.298877127 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.402666456 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.406682162 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.403256991 seconds)
  done (took 34.970550335 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.311925013 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.314163047 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.303653632 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.316725118 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.301966043 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.299915971 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.301753556 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.307216435 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.301926051 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.304121581 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.300211811 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.310121588 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.299519983 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.30423123 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.309613207 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.302284216 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.300191836 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.305510583 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.311122509 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.302512251 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.301797354 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.306297678 seconds)
  done (took 29.889696649 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.285721575 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.284774412 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.637333679 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.539637665 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.287914816 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.283622078 seconds)
  done (took 13.491809884 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.353080302 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.493694323 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.295955159 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.623510904 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.714763787 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.301127654 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.293165674 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.527909432 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.806431309 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.796099659 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.343619347 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.364554863 seconds)
  done (took 19.085035615 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.291693409 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.291019626 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.296018143 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.307882266 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.347621758 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.300235994 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.302509208 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.287739237 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.348594778 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.350720808 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.301633311 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.342524931 seconds)
  done (took 20.942032391 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378099591 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294627553 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294807066 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364434299 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303431696 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295642681 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283969927 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977991441 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.302023581 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573339183 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293528572 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384366456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545011713 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304549799 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299830293 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.228578108 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.527481165 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7672027 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299640781 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301069323 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333831452 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299886519 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304915684 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.497354815 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302963888 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296874888 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.664932777 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298592672 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563532932 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543847192 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545268473 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303585466 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576370155 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921012881 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407176398 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492257813 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309526534 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298383256 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.289629882 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.305515454 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307067364 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305809025 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533541564 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305433825 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302316 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312965829 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987413826 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.3044363 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.303749357 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305156435 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534573059 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387255893 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.304834271 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.302246163 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335340939 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303217789 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.307823071 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421317464 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946572168 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30122286 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332487022 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.305389071 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299026081 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307826018 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939274047 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.313415905 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.304977079 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303933654 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30032088 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313702841 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327798255 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297981566 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.317929065 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299391283 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031745269 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31255599 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305996551 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819910849 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308662723 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.310048337 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52363874 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298993861 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305950386 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.300106866 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301914439 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995220854 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312906554 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.269438303 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344018817 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980535825 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.495422644 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325218097 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328617167 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.522292814 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.270046473 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30300612 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.302033773 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308249633 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321225665 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.983879087 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301517084 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.307001288 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547272223 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.513210166 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306712222 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.241286628 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761833055 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308946753 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.328672614 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30679417 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.50013487 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.89680791 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553647363 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31269255 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341441551 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303641805 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057920735 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313291026 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.313296467 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308696305 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579107432 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.074592169 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308739316 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376036605 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306333313 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308215325 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31718589 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310601164 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306209545 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.479590358 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319387172 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546871622 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.313055529 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305953726 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.312088314 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321583551 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.310674577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526859756 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314490856 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584877248 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309961649 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306977863 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305239711 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.522297795 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.304513069 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.312315502 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644343955 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311597983 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.317941044 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544776433 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343593437 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418002551 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336951436 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.308897139 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558197515 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.310386721 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.312808558 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318238121 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31235263 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311097693 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.315731857 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304300599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901909328 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293928959 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3167153 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308676763 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.321716537 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381291919 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31831559 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.502101076 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.31814279 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308089176 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.319722126 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.31840856 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535397348 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543273588 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.316189869 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488655044 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.762760903 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900820903 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327237075 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.313213114 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.312706895 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.308670725 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314469504 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311700601 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315246792 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504372011 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554840387 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319832533 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915932995 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316636774 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311763991 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.319891699 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545912887 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.324388726 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311510658 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.323280186 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316623609 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325930539 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.553024748 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543346661 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.326489432 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310842617 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.827244265 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314861102 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311376099 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310001363 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337938357 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314689666 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13118643 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647638847 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314493626 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553884711 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319016773 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.332582203 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.316075388 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310870741 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323261403 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.324548068 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318795912 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.504521653 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325329779 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317649118 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969666043 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057392873 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849942677 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328840532 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.322723236 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317086892 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.999848985 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309545078 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314737732 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548153267 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999946435 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313787472 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76247073 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.312041796 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041982945 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5559302 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542821917 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312511068 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.324949091 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554967635 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529290748 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339198128 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31193973 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318601691 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.280145112 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839182192 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324713277 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499756378 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001689149 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323283463 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321117251 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.340893768 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.316367535 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686784689 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319314734 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313295081 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328321749 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321028303 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151569658 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31919629 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3186771 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941815336 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335888561 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.772094563 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312073583 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.511694516 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557292805 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.53535447 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.329479515 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.337975722 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.565658756 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551533443 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319576277 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324779286 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861579609 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.178904084 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.324393861 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318375753 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06621913 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327388807 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587722166 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.321949541 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.342474516 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329966366 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315801651 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315301461 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.31392899 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326752861 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292163457 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775241578 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.327639391 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324287375 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333403404 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320821414 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.563733469 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.330459969 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.913760238 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547643281 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304427188 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368365492 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.321984571 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318339523 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.293519942 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.318919577 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317972806 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328495495 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.540303946 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317012555 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.28306687 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311333524 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530223893 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318864379 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329769777 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53393726 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.327084052 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.331604527 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072977949 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357504136 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325924401 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326942152 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317033054 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370294967 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391121673 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516730346 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.563526355 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.561371719 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699105612 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335416003 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330951832 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.340721617 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405767561 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320679187 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.337615569 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.326326495 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915361645 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078964372 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930327038 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564626085 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332570948 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323769979 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326932164 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561380919 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324646422 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602316821 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321169946 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.312513993 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345262562 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331694756 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329996653 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537716585 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59575989 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323227509 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332136726 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330447334 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.326167733 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570863248 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.542858942 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792002702 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836591127 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326373289 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330672636 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.021494043 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602206806 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329135402 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330708404 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326479207 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.349478926 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325582519 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.329446244 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326727814 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5750872 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563770349 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96093798 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.565369924 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.510221115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.243625123 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323747291 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575297257 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165810503 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.524528704 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938188729 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.031858863 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581018435 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402469893 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527063989 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.330275418 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57122427 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.339148337 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331933368 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331022713 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328658457 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.330253587 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567415225 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935267439 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586492516 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.330066086 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.337407941 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360936637 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.522345174 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.557967584 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040686273 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551506219 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56595592 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345243417 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332947244 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940276824 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574448494 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330320929 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.335452404 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534645461 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336207457 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36515061 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.217149548 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.32938713 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85687136 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.539085957 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349406843 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340861166 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.029977941 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936405112 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.34210057 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796250349 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330078532 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342238592 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610215459 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.33665056 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333826731 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616534673 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.335949954 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332011544 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532944531 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.932947749 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073407692 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.336705911 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339839301 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.35354891 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332969797 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336801643 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333839919 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341709045 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.712277504 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334687791 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333638543 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344546882 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.33922919 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345625775 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.334589297 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335431384 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.334685289 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.308133238 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.333905222 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343349894 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454478798 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860842601 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335447323 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.947450079 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.664272319 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582033764 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341141971 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.301460563 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.339534179 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333592557 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332947402 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32814012 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326911146 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846276314 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.338676156 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.57455631 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3442355 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.545654239 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542055774 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335271033 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558074913 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344658418 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355783101 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.301383482 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336079292 seconds)
  done (took 951.087663939 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.330753645 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.33681009 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.332127558 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.370661345 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.323599961 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.437549731 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.319808016 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.374257446 seconds)
  done (took 20.027029717 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.330077815 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.333781635 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.331816486 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.332333743 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.336993429 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.852002491 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.323520716 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.330043748 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.345221188 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.332704899 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.327306886 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.980183513 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.338415099 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.333087578 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.34105605 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.335365127 seconds)
  done (took 31.706809558 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.022299472 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.332026026 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.821505816 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.342955226 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.340719774 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.321517684 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.45131738 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.323653603 seconds)
  done (took 25.158848398 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.336915681 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.334843632 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.337316836 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.338458244 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.335075769 seconds)
  done (took 7.890690215 seconds)
done (took 1206.251326026 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.339366253 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.341167541 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.338592752 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.338739565 seconds)
  done (took 6.556403816 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.302457857 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.304961165 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.30566683 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.318044155 seconds)
  done (took 9.432688707 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.98301819 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.835585392 seconds)
  done (took 5.019588839 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.87884733 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.87771322 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.868808059 seconds)
  done (took 6.831846278 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.623876276 seconds)
  done (took 2.83063453 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.30891913 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.33213786 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.058967687 seconds)
  done (took 7.907477202 seconds)
done (took 39.779906085 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.332517647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.081986928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.483079645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.332989982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.485201519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.52705099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.573976772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.329709433 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.331031936 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.335211653 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.335994579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.487798673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.566736241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.086474107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.567303944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.084857047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.486859989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.325087913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.325331284 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.325137395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.575304034 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.335653128 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.326073389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.326632849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.494803493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.468924163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.327496211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.084413856 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.326609531 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.3226943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.4749453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.326114493 seconds)
  done (took 80.994309307 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.325613844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.326038905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.330014725 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.337402518 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.324756542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.342431121 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.326980151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.325812939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.325351437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.338544825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.325314133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.3425937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.342946339 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.340421438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.329501415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.339549616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.334359222 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.325911205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.327262854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.337205463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.327176993 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.332230822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.329426273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.329508911 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.326453156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.33655842 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.339303373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.327779586 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.327927967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.339092648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.336461167 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.325755558 seconds)
  done (took 75.831804881 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.346476099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.327778108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.342750842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.326913221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.335269977 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.33245573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.3275315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.338685738 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.33668616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.337142692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.329081753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.326438596 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.331668758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.328190327 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.331044234 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.328881488 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.330119365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.332412221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.328151596 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.343278024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.331190944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.340825743 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.360097247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.332109175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.336609532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.335532253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.330382975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.328591474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.330159754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.339133722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.342934116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.336943178 seconds)
  done (took 75.913183375 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.572356591 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.346696086 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.348781244 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.341117253 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.349142049 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.346639658 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.340333825 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.579302356 seconds)
  done (took 14.434242384 seconds)
done (took 248.380521993 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.346423612 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.826875238 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.374292713 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.337865931 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.374311205 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.368573697 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.555296513 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.370765451 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.557973167 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.357207121 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.354379632 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.355190024 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.115062322 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.490336352 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.14936249 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.258475261 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.197018212 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.339144111 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.883231259 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.625628932 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.371946561 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.337031298 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.135820713 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.198111492 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.316069962 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.419013976 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.432441059 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.566078621 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.500257215 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.42024524 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.828720189 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.348057017 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.347906339 seconds)
  done (took 62.666786035 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.340938193 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.349645381 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.347228009 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.348600537 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.353573281 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.350843353 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.338791615 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.350628177 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.350683566 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.351825266 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.353302317 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.349183084 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.350726991 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.348628618 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.349656565 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.321113455 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.34216419 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.352653213 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.342024417 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.324458057 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.350679272 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.348307405 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.350293726 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.350446639 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.348914754 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.350706602 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.350700627 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.351503332 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.350267514 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.348789683 seconds)
  done (took 41.628698845 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.353242256 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.903714261 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.06008854 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.353448309 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.342812291 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.346655947 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.620990594 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.352818882 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.346735096 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.347379522 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.812413675 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.36007032 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.374126527 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.067909518 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.352188241 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.352955125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.352273186 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.342148811 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.910853675 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.356019294 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.616409676 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.353132007 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.619516309 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.355991804 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.346313734 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.345418894 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.349730452 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.128116221 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.366631228 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.806313403 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.079697009 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.619271429 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.066981673 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.111723085 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.082613887 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.360705783 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.353523357 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.814192223 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.351892126 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.344578367 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.619635426 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.350589831 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.066600349 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.024008097 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.356831044 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.357185019 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.157659504 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.813906707 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.581153571 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.356356608 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.097991858 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.355068294 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.35927049 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.346353236 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.579131652 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.352614114 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.344715946 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.184227658 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.354282986 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.62011862 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.360389708 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.345694725 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.913613448 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.350223975 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.909404605 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.351487227 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.356469833 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.348845809 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.074739039 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.354327801 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.042977731 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.358129593 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.355114813 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.812599745 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.912864974 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.21450142 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.352942917 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.918729798 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.103723475 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.639466624 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.354719824 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.108042852 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.643436975 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.358081629 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.360610401 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.358853289 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.354056452 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.426483873 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.618617997 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.962660624 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.042631358 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.196907321 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.629805127 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.359519461 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.349962321 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.191367709 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.365755296 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.35645097 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.069876483 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.046840184 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.360859592 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.358413597 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.027723143 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.363070028 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.628753133 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.359023829 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.107685048 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.353776967 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.428429939 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.359300598 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.356579956 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.350844725 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.627411891 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.359427931 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.360279643 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.026959339 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.837093445 seconds)
  done (took 188.774335339 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.346303375 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.344144396 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.343774294 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.343554127 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.343780319 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.350592118 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.34337786 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.343766886 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.353148107 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.345185641 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.344762189 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.350817358 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.35061886 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.344427368 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.35960986 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.342985136 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.347527901 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.363050673 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.343903566 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.34458821 seconds)
  done (took 44.171478175 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.361519755 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.896339305 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.861144732 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.366182355 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.363571913 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.352459779 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.409398025 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.364580322 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.361482752 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.645001692 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.520458298 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.366353851 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.362072108 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.362359267 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.855254086 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.337721288 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.640356222 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.902269573 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.368609937 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.893751378 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.338154568 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.361838106 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.351068842 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.896191149 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.657163511 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.629821584 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.413726513 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.896842569 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.366148434 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.360642321 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.895156984 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.370469626 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.352539805 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.88265548 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.368408903 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.377683516 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.363328721 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.410385168 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.409259097 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.64573537 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.910441384 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.640940111 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.377900106 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.511445225 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.367098949 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.331976651 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.911331051 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.369663254 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.336723135 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.363802347 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.368019133 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.868684876 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.361800758 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.871782249 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.372232809 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.367611661 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.899815321 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.8796488 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.868204428 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.521665742 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.359270813 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.628894444 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.371882192 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.910743781 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.36970311 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.364063524 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.363967361 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.519987259 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.906036577 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.636239552 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.652531641 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.654541557 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.371158511 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.420216016 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.367171008 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.649319396 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.425216074 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.727719685 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.654218832 seconds)
  done (took 123.017957709 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.612793963 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.468053077 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.728838942 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.928239613 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.86106393 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.493547715 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.466808658 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.597932493 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.378783998 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.4703061 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.996747885 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.450338551 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.08141286 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.424771611 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.4687805 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.482440931 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.752522706 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.342042474 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.975857869 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.980174315 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.365529392 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.476142682 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.856568606 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.553790178 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.361326647 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.922761624 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.272703358 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.875389684 seconds)
  done (took 51.876150802 seconds)
done (took 513.346288892 seconds)
SAVING RESULT...
DONE!
