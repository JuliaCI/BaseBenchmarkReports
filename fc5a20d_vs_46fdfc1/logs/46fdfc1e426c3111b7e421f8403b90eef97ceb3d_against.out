cset: moving following pidspec: 16349
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.181798258 seconds)
loading group "string"... done (took 0.583370553 seconds)
loading group "linalg"... done (took 8.800617802 seconds)
loading group "parallel"... done (took 0.168483646 seconds)
loading group "find"... done (took 2.488630922 seconds)
loading group "tuple"... done (took 2.140837114 seconds)
loading group "dates"... done (took 1.405237844 seconds)
loading group "micro"... done (took 0.194591505 seconds)
loading group "io"... done (took 0.521695042 seconds)
loading group "scalar"... done (took 48.082575447 seconds)
loading group "sparse"... done (took 13.649903874 seconds)
loading group "broadcast"... done (took 1.150462848 seconds)
loading group "union"... done (took 9.661446752 seconds)
loading group "simd"... done (took 3.277791331 seconds)
loading group "random"... done (took 12.311760804 seconds)
loading group "problem"... done (took 2.202979653 seconds)
loading group "array"... done (took 23.629473832 seconds)
loading group "misc"... done (took 1.11715603 seconds)
loading group "sort"... done (took 3.862683586 seconds)
loading group "collection"... done (took 19.532751267 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.894906049 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.17562359 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238692854 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.260067289 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.30993229 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.207375253 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.198208515 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.18097455 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.651694534 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.230607747 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.193307473 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.405943242 seconds)
done (took 6.730192785 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.323698495 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.566180867 seconds)
    (2/2) benchmarking "String"...
    done (took 0.479999657 seconds)
  done (took 1.685887081 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.091867757 seconds)
    (2/2) benchmarking "String"...
    done (took 0.14448206 seconds)
  done (took 1.005275112 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.134104624 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.198279124 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.147004448 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.130692038 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147479299 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.14718415 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.131042013 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.148338975 seconds)
  done (took 1.692090523 seconds)
done (took 5.481779282 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.533606753 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.910526261 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.525214764 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.219412189 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345089344 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.347680736 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.388102286 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.266624547 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.133562166 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.098807257 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.238341901 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.529246561 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.45567687 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.038626979 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096834591 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152669693 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.200201506 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.846621278 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.121814443 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155384843 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.525859119 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.246890264 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.155219389 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14914243 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.224828031 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.16467967 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169819012 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.141562555 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.71044174 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.171553379 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.236971405 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.121879186 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167970941 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.200325823 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.273420943 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.148158016 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.719857952 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.240183965 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127211149 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.138066859 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.719929888 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.155850056 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.24711662 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144743546 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111705615 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178741025 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.140614669 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.117563763 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.148881782 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.14028418 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198968738 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.4935467 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.148105007 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.238375635 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.14828003 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.733461497 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.135964147 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.314803789 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.167567607 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.150333084 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.131386471 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.129114463 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.196894033 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.134419747 seconds)
  done (took 22.733625694 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.245456982 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.245555388 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.118386982 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.200745989 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.164993747 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.137522726 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.125197555 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.134561315 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.168369805 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.220131694 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.180918677 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.252044342 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.1360159 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.128614889 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.220611923 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.289631314 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.150781046 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.162578286 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.12828887 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.150323586 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.16389682 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.151428614 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.148447509 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.13587042 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.209763337 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.245882315 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.162804851 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.16311341 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.128305771 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.152014512 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.179814486 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.185629122 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.130678419 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.128419403 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.234190186 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.163292832 seconds)
  done (took 6.913426631 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.270541386 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.140796745 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.299116668 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.226360629 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.167030249 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.216456645 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.230053696 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.330016477 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.313461788 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.206148282 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168531626 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.152133591 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118211471 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.133995601 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.118755115 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.878139113 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.210722956 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.178974226 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.22602092 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153862862 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.136197557 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.161464457 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.124226692 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.141250854 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133245854 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.166824566 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34026827 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.277695578 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132874649 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.508597985 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.137260751 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.136132255 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168347944 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.236121926 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.174174454 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.230405277 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.149894829 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.160052685 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.14123919 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.246454176 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.138636904 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.13609489 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.117809813 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170430681 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.169809304 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.145318619 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142637133 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173470662 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.140233824 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146850308 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.141791565 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.235448237 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.223422895 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.124216494 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.31365476 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.163035537 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.13696197 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.139734878 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.128958229 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.884313291 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163065568 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.137042637 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.117123343 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150833217 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.117720556 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.521227105 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157573459 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.469707495 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.125844984 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.197372515 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148643832 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.139348237 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.142560447 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125207612 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.161365422 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.124890114 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139035627 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.125362101 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.135996833 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.126751314 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.139623761 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.143815355 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142090066 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.119466728 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202313157 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.13794338 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.160232248 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16362814 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.127671961 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.140718173 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152016538 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.137567214 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.126094108 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.25948635 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.135128706 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.160167226 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149981852 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.167500281 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143233647 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.344218423 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.124920635 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.180642176 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.137788262 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152987331 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.152183668 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.120485154 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.141461564 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.118302893 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139134452 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.187829961 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.139331894 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.120711161 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.143603107 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.131367125 seconds)
  done (took 32.149517198 seconds)
done (took 62.439410279 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.436052238 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108453456 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.127181327 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109546193 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107080517 seconds)
  done (took 1.613486882 seconds)
done (took 2.322811022 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/21) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.21955718 seconds)
    (2/21) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320358126 seconds)
    (3/21) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.236150631 seconds)
    (4/21) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.146238778 seconds)
    (5/21) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.205006516 seconds)
    (6/21) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.206926174 seconds)
    (7/21) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.190528558 seconds)
    (8/21) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.204835964 seconds)
    (9/21) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.205235596 seconds)
    (10/21) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.222409707 seconds)
    (11/21) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.126594241 seconds)
    (12/21) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.231216763 seconds)
    (13/21) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.219968754 seconds)
    (14/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.212896696 seconds)
    (15/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.128270153 seconds)
    (16/21) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.242934874 seconds)
    (17/21) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.203396396 seconds)
    (18/21) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.203159494 seconds)
    (19/21) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.213051743 seconds)
    (20/21) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.188540945 seconds)
    (21/21) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.145427292 seconds)
  done (took 5.000271753 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146012353 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138678389 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.160384921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.14183731 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.14424453 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.141350168 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159305035 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.145939578 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159990945 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.135756928 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.143702981 seconds)
  done (took 2.33185456 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.140104269 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.135937538 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150969547 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.139654561 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.144630263 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.140057684 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156975688 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.145554892 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.15737106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.13562395 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.144465647 seconds)
  done (took 2.308584772 seconds)
done (took 10.348578545 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.227321086 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.820078029 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.195251994 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.306586613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.371376905 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.313825103 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.665455363 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.247687014 seconds)
  done (took 15.975575386 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.262399219 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.13123694 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.1540837 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.13625811 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.156202266 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.131803144 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.148828423 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.133033887 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.137435284 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.147813699 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.131318096 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.149230499 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.135269157 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.153649706 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.134509493 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.148549198 seconds)
  done (took 3.166959639 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.176694536 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.174641832 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.138071747 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.156724469 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.135368331 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157726691 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143126511 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.155591085 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.134769233 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.152097554 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.14306065 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.156274063 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.138394624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.15142156 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.139133964 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.173940694 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.135345214 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.155340704 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.156490221 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.156095339 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.139072923 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.153758519 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.137405252 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.155614971 seconds)
  done (took 4.402268752 seconds)
done (took 24.262420313 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.192025187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.143381292 seconds)
  done (took 1.062585193 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.206893209 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.223295155 seconds)
  done (took 1.164491239 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.154099694 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.147672829 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.16144092 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.160883307 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.132307538 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.14891768 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.155830501 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.150227204 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.132177144 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.149293496 seconds)
  done (took 2.232378852 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.136709843 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.135802534 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.164464419 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.218098545 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.156987631 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.135783747 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.153354906 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.136793443 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.153864957 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.132494013 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.152020379 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.150499166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.153134069 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.152082468 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.152959884 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.137579297 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.157631777 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.135582325 seconds)
  done (took 3.452985048 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.133321214 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.132782179 seconds)
  done (took 1.006490141 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.137446808 seconds)
    (2/7) benchmarking "second"...
    done (took 0.130608927 seconds)
    (3/7) benchmarking "month"...
    done (took 0.151500271 seconds)
    (4/7) benchmarking "year"...
    done (took 0.132907963 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.149205217 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.132544299 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.148968804 seconds)
  done (took 1.723872289 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.548934539 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266450294 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.396835729 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103812223 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153496684 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.371545921 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154582297 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104761437 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103555627 seconds)
  done (took 2.971744382 seconds)
done (took 14.347688069 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.134532401 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.246185147 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.656206141 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.154891066 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.149962297 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.192799657 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.38543812 seconds)
done (took 2.667518125 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370433559 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.208908619 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120351268 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.135383906 seconds)
  done (took 1.578951905 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.124862666 seconds)
    (2/2) benchmarking "read"...
    done (took 0.139586605 seconds)
  done (took 1.015792162 seconds)
done (took 3.346203732 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.152576944 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.149971864 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.136040973 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.152048664 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.137054091 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.151912475 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.136893176 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.148797972 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.136027144 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.14900128 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137411608 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.151245211 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134610274 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.15160196 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13454609 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.270586644 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.135711462 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.148363978 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134735709 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.151239623 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.136447659 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150756391 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.13705863 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.150962773 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.136559894 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151928118 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.134294242 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.149855858 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136530561 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.150465503 seconds)
  done (took 5.180053483 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.139147863 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.128503282 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.150211769 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.138703951 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.14773827 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.132436953 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.147067375 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.13213042 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.151067674 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.132290635 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.150435052 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.131586496 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.148650956 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.134225588 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.149597306 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.135378947 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.13953639 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.149707166 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.130946051 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.15132483 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.134052242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.149163033 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.132798591 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.149976753 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.13279908 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.146105032 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.134394884 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.147383966 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.133270159 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.131969226 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.153312723 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.133941404 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.149917459 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.142623793 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.1519585 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.131839601 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.156821479 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.129114114 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.152643363 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.129197225 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.147625407 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.133048693 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.149381845 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.139475976 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.148901756 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133257658 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.151443979 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.134886846 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.131896032 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.151766017 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.12871979 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.150636265 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.135018846 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.152064658 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.139107843 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.146488949 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.134228871 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.146695121 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.133775741 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.149075242 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.130988165 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.128443498 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.155811364 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.135564237 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.164799099 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.155061338 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.133072299 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.134164547 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.151952424 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.137882129 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.154879542 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.141308123 seconds)
  done (took 10.95894024 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.133698497 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134875671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153961618 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136940319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155581516 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136981735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154096691 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137542072 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1534413 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133821556 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150393286 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.133045759 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131646279 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.151845567 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.131885556 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.150443712 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.132918509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151115306 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.132681887 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152096506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.133338465 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.150291459 seconds)
  done (took 3.896961548 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.276820048 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.14036785 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.200256401 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.145454461 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.171371583 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.163629607 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.139649881 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.157726552 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137773595 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16022694 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1429774 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157099587 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.151542106 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.161113993 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.141665362 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.162143175 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137465177 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.162178794 seconds)
  done (took 3.673711022 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.134410109 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.132517061 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153184494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.132442331 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.1522005 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.13359101 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.15289975 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134274826 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.151823357 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.133971855 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.149925001 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135061798 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.133217569 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151466189 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133395454 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.152999554 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.13469101 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15169897 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134645404 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151399839 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.134028077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.15106076 seconds)
  done (took 3.897168837 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148711439 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.153400862 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155637948 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.157139396 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135989151 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.153241554 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144105197 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.153281713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.143169463 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.1530629 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.136644681 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.151987763 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.151121382 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.153977192 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.142486206 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.154063097 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.136937526 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.134844243 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.155633548 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.136116261 seconds)
  done (took 3.723184352 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.228789848 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171266612 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.170544522 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16023539 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.170294979 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.152880824 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177397629 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.150953763 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.17064684 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.16102739 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.169295132 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.16936588 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.159480895 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.176659266 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.151987973 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.177902022 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.15811019 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.178103095 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.169646504 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.153148037 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.181703553 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.151712728 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.178986658 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151195344 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.170900434 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.151862608 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.171193697 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.155809758 seconds)
  done (took 5.469429318 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.148432353 seconds)
    (2/2) benchmarking "in"...
    done (took 0.163242616 seconds)
  done (took 1.09193746 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.137548078 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136129252 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.156355428 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.136066395 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.156360805 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137193564 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.155583192 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.136382078 seconds)
  done (took 1.930693421 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.247379433 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.253039161 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.141043984 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.16593395 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.251559713 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.232067569 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171896091 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.163877753 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.136068979 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.148948131 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.247639382 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.127547644 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.156014881 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.13266701 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.1556369 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141179755 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.156114405 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.146067387 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.161364724 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.137023919 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160652692 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.139523539 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.157976723 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.145836074 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.153860208 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.141330263 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.170935145 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.147216765 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.152883198 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.136465678 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.153676875 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.136949678 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.160575238 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.140792415 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.157490488 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.252981123 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141188066 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.154294691 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.136261951 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162389366 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.165325284 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.15754713 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.137312224 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.15469523 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.139287824 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.160773936 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.141331031 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.157438317 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.129253168 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.151782081 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.136949678 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.152063192 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.136223818 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157059986 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.136307347 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162632762 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.138792859 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.152570519 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.13320856 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.152415471 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.134951868 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.152980068 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.138166173 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.159337511 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.138843424 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.157967504 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136116192 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.1580972 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.13804416 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.158221028 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.136604871 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.170799792 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.137285754 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.162626755 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141638752 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.157202951 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134154699 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.162790813 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.13680357 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.157453332 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.141577361 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.183752138 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.138945672 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.152547681 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.132810603 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.162666216 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.140830758 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.160298876 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.130878515 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165267385 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.139640662 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.158135961 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.131334998 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.154094177 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.135032884 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.160986743 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.131640204 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.156767212 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.139693881 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.141823342 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.162477505 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.136071634 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.159950648 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.142237781 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.163538324 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.136262929 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.207958777 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.155125243 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.133804376 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.159756279 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.143422568 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.152846881 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.140764688 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.160436253 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.138473405 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.158571282 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.148721007 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.164255384 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.142314466 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.14452599 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16295501 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.157853174 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.144325057 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.151840887 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.156753173 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.141003615 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.16670388 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.140859952 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.168608382 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.146002086 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.163479099 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.137917888 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.162889709 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.135141697 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.163198547 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.137089919 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.161063638 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.138813671 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.162984763 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.138590389 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.1535249 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.135968128 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.160151162 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.13739317 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.161336438 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.138675176 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.154102557 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.131770108 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.160525092 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.134676414 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.163135689 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150173147 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.154481376 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.141352891 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.154250621 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.147900861 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.155957682 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.142628613 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.160025029 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.143464962 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.161988896 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.131633569 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.155151783 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.142002765 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.159919359 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.135334738 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.139070898 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.159718984 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.14531834 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.152189116 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.141773825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.151121172 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.134714826 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.163889416 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.140017246 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.162475549 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.13398701 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.196035893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15051935 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165110103 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.137594592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.15882711 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.142014358 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.158159917 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.143854536 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.164902813 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.144117209 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.156180196 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.138118192 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.164535309 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.135314693 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.160579219 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.138368155 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.159278216 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.131836527 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.160494361 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.131473213 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.162652597 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.140681018 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.162929308 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.14486067 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1615908 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.138319964 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.167019074 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.135895075 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.161555391 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.132988979 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.143155564 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.170587475 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.144352085 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.164898204 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.139055951 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.158161942 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.140356884 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.167362624 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.140752745 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.159127009 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.139976669 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.154614634 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.132877162 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.164595511 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.14251058 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.156642685 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.141700771 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160175397 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140885793 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.157581561 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.134170344 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.16487362 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.143037952 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.155541707 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141479094 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.156280139 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.137560719 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.166441766 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.13351188 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.156562716 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.140883209 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.164787017 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.139929875 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.158847923 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.14287571 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.165267874 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.143467127 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.160232946 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.138676015 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166305785 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.138862002 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.137892744 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.157199809 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.140774117 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.153965668 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.141263704 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.160150044 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.136651944 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.15685179 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1425682 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.165689785 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.143695019 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.158162152 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.142547108 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.167201639 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.144948181 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.157452076 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.144985477 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.1562925 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.1328472 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.155997142 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.133821347 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.161257099 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.1366495 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.163934464 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.139160922 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.158073384 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.143787559 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.160846013 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.140203164 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.164889264 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.151000696 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.154829535 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.133450001 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15730059 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.139890555 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.156629904 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.137599132 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.161521378 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.141703075 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.163914001 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.142684695 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.156152609 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.141497253 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.168256243 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.13875724 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.166274985 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.146476239 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.16631221 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.137669951 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.143878562 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.158229758 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.161746965 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.134980922 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.137781837 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160647454 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.138342452 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.157861834 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.137825837 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.158201472 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.132651784 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.158404711 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.145650854 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.160772749 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.143053038 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.161326032 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.138333024 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.157766501 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.13575637 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.168889284 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.13882778 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.167224058 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.140951234 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.154339528 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.13546164 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.165039074 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.140849615 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.167027246 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.136668427 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.164123455 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.146940124 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.163081283 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.142872987 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.168516821 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152098601 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.167377639 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.146941591 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.156330913 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.139235443 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.164498153 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.141797501 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.142201393 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.164396813 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.137184484 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.166666446 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.145347603 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.163070667 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.13872623 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.155458596 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.141926428 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.16797597 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.144217711 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.163954578 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.143451063 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.162489657 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.138261507 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.164097892 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.146832848 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.162101689 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.148661502 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.160904958 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.145268822 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.157186469 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.147133306 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.162081365 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.135860643 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.153912519 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.139324771 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.146015775 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.157264412 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.14468893 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.167097087 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.137087544 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.160485491 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.144758772 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.159066946 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.144329317 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.167151214 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.144217012 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.172889653 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.142410218 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.16038918 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.146262035 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.166293004 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.136208801 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.158940533 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.141340948 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.167488826 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.141528961 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.166472776 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142085107 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.16728056 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.144403209 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.165306007 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.147010036 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.165402808 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.136299874 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.167169372 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.146534555 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.142302314 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.16132247 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.139085075 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.15759078 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.138596116 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.169983138 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.137242941 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.170635945 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.146846118 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.162794514 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.138015177 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.167684592 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.139182783 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.168627869 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.1375427 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.164519664 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.135175709 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.164825918 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.139518859 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.170655291 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.138326598 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.157192615 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.147797007 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.167408998 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.149432062 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.164686864 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.148721706 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.157175923 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.137982071 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.165692928 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.139816802 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.17285599 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145775381 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.160855791 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144067691 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.167437843 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.145357521 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.16978856 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.142619253 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.162527372 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.149002816 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171041932 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.147489496 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.159876825 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.153487884 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.144536048 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.166839931 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.142582657 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.16170981 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.143857958 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.173001818 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.140640301 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.161229721 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.141501584 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172806891 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.142131342 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.161839645 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.138106808 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170409449 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.145081578 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.172073977 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.140341031 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.165226039 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.141373285 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.166945741 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.150520398 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.161987569 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.143488638 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.164485442 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149669451 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.168988738 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.136545018 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.160498133 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.15388165 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.169251551 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.144940568 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.167813589 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.147565483 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.173699603 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151362544 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.169238909 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.139063983 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.159429073 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.145199959 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.16036753 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.147658582 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170251189 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.144097863 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.161037308 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.14996907 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.168645119 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.147726467 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.145564531 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.160966489 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.151563268 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.163990337 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.147160893 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.160528305 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.137966706 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.16862717 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.149417115 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.163150146 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.145062092 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.167063144 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.147046422 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.16022687 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.143483958 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.170147125 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.148920474 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.172785799 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.144406492 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.163078769 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.149477598 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.174667463 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.146958562 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.162530375 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.152632678 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.171012948 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14604867 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.165848325 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.148845534 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.171540459 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.147862937 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.172368777 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.143058276 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.163896191 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.153151668 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.150918772 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175318454 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164162147 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.141083443 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.148347705 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.164251124 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.138347482 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.170291069 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.15254845 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.172333298 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.143588371 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.16374722 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152827535 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.171454974 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.144227558 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.164718572 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.141191348 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.171098015 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142733444 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.169950313 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.141330751 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.173892784 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.152765446 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172780212 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.15344116 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.160859492 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150257585 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.169055646 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.153170665 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.167662382 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.139716649 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.160680628 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.148530829 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.17356425 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.152192119 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.168515703 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.150563909 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.148344283 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.167600223 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.144545685 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.164560312 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.15244257 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.172432682 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.146530575 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.167843411 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.144434917 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168485811 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.146917286 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.172656244 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.153274449 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.167120344 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.158668291 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.171875907 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.144345381 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.164897436 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.14637853 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.169296529 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.146905413 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172319608 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.145459559 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.161887905 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151293262 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.174316999 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146846187 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173608739 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.153193433 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.165267315 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.149112118 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.174006485 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.151118379 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.167895582 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.147307 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.147713547 seconds)
  done (took 92.202862601 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195558947 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176266269 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.148013515 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169078205 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166998401 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.171772263 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148630842 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.170516865 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.15129375 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.178872117 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.149076988 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169112777 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.163391448 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191486432 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18463549 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.158825504 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168420999 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151061179 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.147630505 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.171281697 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.183439319 seconds)
  done (took 4.388737213 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.148875775 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.147320969 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.170603189 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.148128264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.17066863 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.148339045 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.16845983 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149195369 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.168708534 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149700042 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.168190662 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.149331211 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.148105985 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.171275063 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.148128613 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.170496122 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.148886112 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.169810002 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.148331362 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.170414548 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.149055546 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.168606846 seconds)
  done (took 4.352131371 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.177178676 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.151318684 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170041735 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.148592289 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.174325939 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.148833382 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.175293799 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.149886798 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.179995655 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.144391126 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.162552864 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145122365 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.170836249 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.150375268 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.164581683 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.150713509 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.180471692 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.152670043 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.174547755 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150287058 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.140167335 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.171846573 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.151186753 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.16279619 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.154663592 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.176559253 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.153189871 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.175054523 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.141880682 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.173711894 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.15015408 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.16665981 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.142247628 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.139696606 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.163813499 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.151659928 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.176426136 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.148962867 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.172861786 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.141431393 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.172408936 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.154570075 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.163185975 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.150836151 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.17131976 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144214149 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.174025831 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.149933591 seconds)
  done (took 8.532303095 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.178259191 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.20848573 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.152034277 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.202002783 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.186011852 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.159357486 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.17484954 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.179705045 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.174164046 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.153857205 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.188300481 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.163272648 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.179946347 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.157644209 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.177044651 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.153874316 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.177286161 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.152534062 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.180302607 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.153615275 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.180302677 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.154866202 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.185576881 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.18482008 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.155830082 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.174643997 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154448831 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.178297254 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.16240054 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.180472251 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.157738983 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.179280968 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.163117251 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.180621711 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.152746938 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.177536473 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.165367189 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.177201095 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155463554 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.173622568 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.154251528 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.17902109 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.155503922 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.187743428 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.176393381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.155800609 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.175963089 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.153031961 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.184223706 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.157306387 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.182438912 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.167020541 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.178962492 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.156214907 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.179979172 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.163758464 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.177727209 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.154804742 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.180099019 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.16248372 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.175302041 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.156692482 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.187125402 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.154428436 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.184377915 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.187109338 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.156658749 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.178010276 seconds)
  done (took 12.580406 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18373796 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.179511585 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167150096 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189489319 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.157877409 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.182033693 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.157915752 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.181256639 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.157448583 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.426563182 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.158650273 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.311574817 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.164113118 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187143072 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.158433765 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.180641686 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158305047 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180899051 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159517771 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.179790041 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.157843606 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.188722812 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.157247581 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.189061682 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.18981052 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.155872266 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179867425 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.158315873 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.187259078 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.158310914 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.191219009 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.157275377 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.18037615 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164329975 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.191475746 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.179923299 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.15314231 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180623457 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.160045143 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.179829153 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157390824 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.187162069 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.158842964 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.177166035 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.156913111 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.179542594 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.165024268 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.190134724 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.161016634 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.185173199 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.179968975 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167683963 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181306715 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.158015275 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.188783225 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.172247882 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.189313948 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.187660595 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.158640425 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.186614234 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.166037106 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.194554559 seconds)
  done (took 12.028897459 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.15429937 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.153302735 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.175654041 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.15363057 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.176897844 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.15355137 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.175946396 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.154138317 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.175081901 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154173586 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.177808994 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.155443161 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.175020092 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.155184888 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.153742316 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.177180073 seconds)
  done (took 3.527470777 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.171644104 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.192752933 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.25627351 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.157124939 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.177064276 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.161780908 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.176863204 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.158521346 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.152027433 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.183338398 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.15718612 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.179776073 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.193661987 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.157080729 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.154182037 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.181103966 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.153470983 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.181231635 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.155599187 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.255881003 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.18335935 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.157632685 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.179314353 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.158275993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.180033229 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.161166375 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.184116011 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.154265776 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.180183318 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.154397218 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.181074842 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.160554425 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.177318778 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.158500673 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.17976001 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.155933865 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.178036677 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.155332323 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.18007227 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.155857809 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.179818397 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.155762195 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.177812277 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.157287948 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.175693152 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.157509206 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.175749514 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.16174047 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.179384125 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.158158171 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.177202143 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.160072311 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.18220669 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.163542096 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.18443742 seconds)
  done (took 10.388564496 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.165505753 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.178927781 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.1670563 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.176212841 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158111307 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.15566337 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.181796303 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.156928895 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.180682683 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.153487954 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.181152366 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.157206932 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.180497533 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157063757 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.180584975 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157691631 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.176698936 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157308761 seconds)
  done (took 3.937788737 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.154771008 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.153527973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.178552524 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153194271 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.177069514 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.154433675 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.176500518 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.154810957 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.176759 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.155119097 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.174411285 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.154896164 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153760196 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.178287337 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.153624075 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177664213 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154247269 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.176800555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.154408043 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.17713733 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15569445 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.177187057 seconds)
  done (took 4.546892311 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.167122579 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.280534627 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.185002506 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.291284527 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.153547738 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.176836873 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.161858781 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.177613229 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.16933124 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.176161578 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.150760372 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.174841926 seconds)
  done (took 3.186603897 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183775604 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.214059134 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.156862894 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.179741223 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165666178 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184287262 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161740959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184082138 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16786576 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196283969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160356845 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192637207 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190839212 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168634084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.188884215 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164890381 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184751078 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160264794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.180701052 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174082892 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185098677 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190726977 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161586889 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183729649 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162374629 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192796584 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169145392 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194894686 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.160855092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192368457 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188698786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163090013 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19201953 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171711291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.181987318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170143354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18504525 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177038365 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188698018 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193524261 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159105009 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188222259 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170460992 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189569219 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169351075 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186026728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165784908 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185335719 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161340279 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205376326 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189594291 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170829195 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190117822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168471842 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193049619 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204989964 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172890212 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193588864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166150598 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196594343 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194501829 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16698115 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193378431 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172449024 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189109173 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191733949 seconds)
  done (took 12.83516612 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196409543 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.182266195 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162794794 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197286959 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171384434 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186388088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162366527 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185403745 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162838165 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183158906 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.22884656 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164090839 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193416356 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170016313 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186719205 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162380775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185892983 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171300694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.183794042 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.205622586 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163154896 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193028526 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170372363 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194297962 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195306261 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168323709 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18566963 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163928109 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.185246741 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163925803 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191547054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163189118 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194072793 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159077282 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19541675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163847652 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18741678 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168355207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186339408 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189240406 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170827589 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199423614 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162993632 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186321249 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173061114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186467707 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162073753 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183799839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163312668 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18350043 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195569422 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174313507 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197435163 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171275621 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187049903 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162619912 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186929428 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16259861 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186856723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189420387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172685367 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186864544 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.182661776 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187066176 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163161251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195905639 seconds)
  done (took 12.836604642 seconds)
done (took 225.917712237 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.22991995 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.271211304 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.256009651 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.237612757 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.148251255 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.207938943 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.182702563 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.255764507 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.173954104 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.149671477 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.172282383 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.153408126 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.240573959 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.149890709 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.148263267 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.175779964 seconds)
  done (took 4.0919684 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.250717497 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.420282076 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.166637741 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.175880117 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.158020304 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.153539427 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.177473895 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.155819744 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.17898568 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.182379897 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.157870075 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.14972749 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.185413313 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.150736278 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.179565711 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.154971173 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.184461795 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.153711865 seconds)
  done (took 4.287122545 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.173747444 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.227863263 seconds)
  done (took 1.357239003 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1853221 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.270687425 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.37404121 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.226277587 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.175554796 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.196520451 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.204447716 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.190456901 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.268072776 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.166410757 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.191587143 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.175792117 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.180828652 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.184482747 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.171410694 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.176394219 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.18323608 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.194246699 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.168673545 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.181059128 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.179171108 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.180339413 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.161370311 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.193832051 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.2580164 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.167052947 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.181916499 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.156105395 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.180496696 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.173035063 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.18626824 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.170677082 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.191612914 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.235627729 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.157863022 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.232553735 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.184396703 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.155057777 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.193648299 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.154576989 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.183752627 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.159011352 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.190582126 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.152940957 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.178362486 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.158269497 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.17849735 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.15472198 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.187571618 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.157580024 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.187771503 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.18558631 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.206561743 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.183774417 seconds)
  done (took 11.176323889 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.971609448 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.20731065 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.180918188 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.127585708 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.205853272 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169492712 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.986063591 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.180873001 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311153953 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.012544612 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175524765 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.187962031 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.298839189 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.34075653 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.344627345 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.441998106 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.825828829 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.171558408 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.21208989 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.221629021 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161307034 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197150211 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.17234559 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514003631 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.179132346 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157261059 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.184468011 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.165679309 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.234901449 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.179827966 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.161370032 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.259191061 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.354984527 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.270181634 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.18056961 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.15441852 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.179816582 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.245415496 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.335292078 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27606241 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.250505808 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152856938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.181443115 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.160270171 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.196386776 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.176484942 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.240630739 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.226990527 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.250371015 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.185351294 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.188559243 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.164959455 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.183291884 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.235806662 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.154926056 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420604953 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.447879231 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.155695637 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187633148 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.168072001 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.350146622 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.157936425 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.318160292 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.178619782 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27212832 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.18194269 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.912032808 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.246825871 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.179668309 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.162135283 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.184696951 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163378388 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.183617693 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.218000558 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.489809354 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188376609 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.161036889 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.180416727 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.288303772 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.157115161 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181107737 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.239436733 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.158328933 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187807891 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165091245 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.18774706 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.249785814 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.334131177 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.164096007 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188031383 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.161664273 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.192251892 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.15824233 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.289226863 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.314443966 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.237239596 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.290039187 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163024572 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.2410794 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.246990347 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.18655857 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.248056335 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162778102 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.191579948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161154153 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.306237407 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.19359047 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184030875 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.162790045 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.187919707 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.221576012 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.180235769 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.187048786 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.247019192 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.5521691 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.24484615 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.154547586 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.185192125 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164189664 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.239115323 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163176826 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.344944214 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164480204 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.24712947 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1861669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.154836659 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.188203751 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.243087756 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.164279061 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189628374 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161590172 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.191910996 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.340870022 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.281767535 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.19062878 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.30843608 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.255047377 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.163339626 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.253087141 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189236773 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.245281052 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167756179 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187097675 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159836178 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869612051 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.194327645 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.186863218 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.163725708 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.266216884 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.158255809 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.185562563 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158178634 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.181052563 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862658862 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.161304381 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.181442277 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.159409098 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18846838 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.16299021 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.18915052 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.163390331 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24125093 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.331606205 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.166736636 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.187464341 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.15725233 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.237230866 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.185201344 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.159182533 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183432823 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.158248615 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.191280051 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163138343 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187451072 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249503795 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.23767352 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.294205988 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.641595974 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.183797674 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.157684507 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.326282413 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.158793657 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.408424772 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16486482 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.294700674 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242787578 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181276125 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.417877441 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.244754518 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.267492535 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.161777556 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.250926392 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.182469293 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.163445296 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.239242015 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.185293884 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.164722762 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.236967005 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.193909086 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165006109 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.353128564 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159026368 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.308501731 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.179626473 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.25024544 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.161013492 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.188768627 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.393137494 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.157958215 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.195567467 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.24177432 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.162319245 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.185228653 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.040354992 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.183825052 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169194141 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.189343282 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.297134782 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.245589471 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187892329 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168164821 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.191844996 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.241397387 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.288710387 seconds)
  done (took 61.004125735 seconds)
done (took 82.866015296 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315263624 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.224310158 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.416260615 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233029284 seconds)
  done (took 2.238240003 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.342560182 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.199389601 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.30106091 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.182030411 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.306755698 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.157165586 seconds)
  done (took 2.489571404 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.228801721 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.224148685 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224779492 seconds)
  done (took 1.68626583 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265141678 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267099538 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.404744835 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.317573345 seconds)
  done (took 2.321321587 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.335110491 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.174502428 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.215270461 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.286918609 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.302780891 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.267153316 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.18280048 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.234093666 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.214241281 seconds)
  done (took 3.247266429 seconds)
done (took 12.981268988 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.333842803 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.477929701 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.436989229 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.22693654 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.318260164 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.311350975 seconds)
    (7/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.278835668 seconds)
    (8/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.275009134 seconds)
    (9/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.27455321 seconds)
    (10/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.213134994 seconds)
    (11/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.194978286 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.197052781 seconds)
    (13/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.24782516 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.330942504 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.312003922 seconds)
    (16/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.153297497 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.330105804 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.417511333 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.234780066 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.134834744 seconds)
    (21/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.164065556 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.214429643 seconds)
    (23/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.132004706 seconds)
    (24/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.203078758 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.183993021 seconds)
    (26/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.196890051 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.161697448 seconds)
    (28/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.216848455 seconds)
    (29/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.286361694 seconds)
    (30/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.279274341 seconds)
    (31/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.254774437 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.187262919 seconds)
    (33/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.253693434 seconds)
    (34/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.260098578 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.183817719 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.291104476 seconds)
    (37/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.346674392 seconds)
    (38/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.344524608 seconds)
    (39/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.2950503 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.170744967 seconds)
    (41/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.145524651 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.189989034 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.134666287 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.190549091 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.170150618 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.192947092 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.179732841 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.265129665 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.179566689 seconds)
    (50/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.221561485 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.130576102 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.159158927 seconds)
    (53/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.346113846 seconds)
    (54/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.134073334 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.192759987 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.215930392 seconds)
    (57/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.229556845 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.281042512 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.226608566 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.37071921 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.190262114 seconds)
    (62/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.187743567 seconds)
    (63/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156432742 seconds)
    (64/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.220924253 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.183718405 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.212332798 seconds)
    (67/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.189869745 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.208550961 seconds)
    (69/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.203378726 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.188033478 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.130801899 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.134258763 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.269332085 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.166528788 seconds)
    (75/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.202857639 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.130735131 seconds)
    (77/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.129149384 seconds)
    (78/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.199493525 seconds)
    (79/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.279500836 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.16334675 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.21364295 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.163646229 seconds)
    (83/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.134242071 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.194124686 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.181661439 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.188686215 seconds)
    (87/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.17131969 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.203484116 seconds)
    (89/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.131636433 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.197695601 seconds)
    (91/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.191009486 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.187691675 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.172271488 seconds)
    (94/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.197062978 seconds)
    (95/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.31097516 seconds)
    (96/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.130806508 seconds)
    (97/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.162886984 seconds)
    (98/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.136855322 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.18666871 seconds)
    (100/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.229339919 seconds)
    (101/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.165288477 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.160867803 seconds)
    (103/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187010932 seconds)
    (104/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.187476285 seconds)
    (105/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.195242076 seconds)
    (106/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.129577861 seconds)
    (107/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.129193594 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.156703517 seconds)
    (109/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.133242782 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.199390928 seconds)
    (111/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159220038 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.163955556 seconds)
    (113/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.196313651 seconds)
    (114/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.13196287 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.21376168 seconds)
    (116/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.130846597 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.198341772 seconds)
    (118/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.244418861 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.200998395 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.166543875 seconds)
    (121/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.161405441 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.173687799 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.212297318 seconds)
    (124/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.129788223 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.163156083 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.161918914 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.165607722 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.210265496 seconds)
    (129/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.175970142 seconds)
    (130/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.128841454 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.189702475 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.249323116 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.164293867 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.183330785 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.210011064 seconds)
    (136/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.163955975 seconds)
    (137/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.26699324 seconds)
    (138/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.170476218 seconds)
    (139/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.135279144 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.163072483 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.160936108 seconds)
    (142/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.222904324 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.172927647 seconds)
    (144/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.199695576 seconds)
    (145/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.171119945 seconds)
    (146/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.129783892 seconds)
    (147/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.224364216 seconds)
    (148/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.171204522 seconds)
    (149/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.253664729 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.290259118 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.172687183 seconds)
    (152/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.199347906 seconds)
    (153/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.157443485 seconds)
    (154/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.129816787 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.161921568 seconds)
    (156/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.165405042 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185285852 seconds)
    (158/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136942973 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.190744228 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.137267316 seconds)
    (161/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.132206058 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.189405441 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.170831151 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.191023733 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.162229639 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.211755838 seconds)
    (167/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.132657931 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.202496351 seconds)
    (169/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.133641156 seconds)
    (170/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.135333271 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.189222805 seconds)
    (172/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.205144523 seconds)
    (173/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.133023201 seconds)
    (174/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.130984533 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.163819296 seconds)
    (176/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.130628972 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.181299871 seconds)
    (178/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.156842221 seconds)
    (179/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.13385997 seconds)
    (180/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.129316584 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.192338844 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.137600738 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.129508787 seconds)
    (184/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155425351 seconds)
    (185/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.13382463 seconds)
    (186/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.137964751 seconds)
    (187/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.13512228 seconds)
    (188/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.160025936 seconds)
    (189/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.132140407 seconds)
    (190/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.131935073 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.190450895 seconds)
    (192/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.131942966 seconds)
  done (took 38.728789954 seconds)
done (took 39.734179816 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.31294182 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.154822551 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.17085797 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.199361734 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.296798776 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.177248029 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215495211 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.171678535 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.209433476 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.171241399 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.187905599 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.183978703 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.197547537 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.309533566 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.173953755 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.191780673 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.161862413 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.211074397 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.185470582 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.214122201 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.2976067 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164393531 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.211069858 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.161721613 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.29635703 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.193644108 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.171616726 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.200491697 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1846313 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.199474947 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.172959774 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.189028367 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.186797218 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.213237591 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.162349137 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.199754522 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162641422 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.136022186 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.198697194 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.171970193 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.210504841 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.17271037 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.199883659 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.16334207 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.200753601 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.171603037 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.191348285 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.174962892 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.189162672 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.171903214 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.193468038 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.187725758 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.199481303 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.160863194 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.189880361 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.164285696 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.210317946 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163004946 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.21353742 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163326845 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.191173053 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163761537 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.200989805 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164146153 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.197562134 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.164785829 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.199852579 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175639653 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.197056832 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166674757 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.187938774 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.173982389 seconds)
done (took 14.909601912 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.1682839 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.232576642 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.314347376 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.316587535 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.191380621 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.209426842 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.204452885 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.18934384 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.202561094 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.182548283 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.226725689 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.196202185 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.31658544 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.21095406 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.179150296 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.205806199 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.174420085 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.200038567 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.315700481 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.215747128 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188734126 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.207864771 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.189533809 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.208663336 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168507462 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.218626405 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.17211211 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.203521341 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.167593449 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.213160765 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.187769408 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.195712946 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.169987539 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.213894518 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.184796055 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.205879672 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.205628453 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.17855022 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.194729441 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.170115697 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.19990042 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185436011 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.193222197 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.182075109 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.204000034 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.184639681 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.202556065 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.181966017 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.195089473 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.176657031 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.195862337 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.193381505 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.207881114 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.184596938 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.207381539 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.181560099 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.206651837 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.181880531 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.198117372 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.18156841 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.202815246 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.169262726 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.196401861 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.188955314 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.201324903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.180628347 seconds)
  done (took 14.343652291 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.188764088 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.226727156 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180146721 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.208451368 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.173894949 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.191557041 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163437753 seconds)
  done (took 2.420817968 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.166622236 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.331178706 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.321502965 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.321305035 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.311517128 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.362089062 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188615047 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194008401 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.202240592 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.204508409 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.333844549 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.388230724 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.205651291 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.179550067 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.356686768 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.16642242 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.325550966 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.195130679 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.180239401 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.323965918 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.212299413 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.196899969 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.207436993 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.165056464 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.353933416 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.168289347 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.372163457 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.215423903 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.174999418 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.209355673 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179514588 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.270750981 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.326587271 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.21045714 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.174341723 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.320756362 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.345395319 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.185068646 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.397939221 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.171761926 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.312888322 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.209456384 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183106106 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.209580562 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.181639788 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.310438778 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.214525883 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.182733503 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.210390023 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.337732054 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.175666752 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.358964572 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.180747217 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.208130797 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.179880695 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.210091451 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189497631 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.209536842 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.338921241 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183167985 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.323917658 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.353472114 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.319622209 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.326260273 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.19164539 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.329841106 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.306919895 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.210674905 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.175426218 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.212605038 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.329342718 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.207573184 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.17935968 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.316141879 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.214815236 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.329970871 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.330809176 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.17685573 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.209910562 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.168739056 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.209366428 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.167554128 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.313781103 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211387007 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.178569984 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.215652424 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.208653489 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.183708557 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.198674915 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.190684025 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.208519463 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.179946835 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.214649573 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.181248817 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212213928 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.334117488 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.177440302 seconds)
  done (took 24.59527486 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.169987258 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.166751512 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.201779849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.16836722 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.19746722 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.169283468 seconds)
  done (took 2.19614275 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206001754 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.210329958 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191049923 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.21054067 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.230412261 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.316063376 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.325583163 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208361063 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.199696483 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.226206978 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.320785136 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.324058666 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.321414895 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.213761541 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.325235493 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.184672296 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.32712002 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.210274225 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190757358 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208811818 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.182219261 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.215471465 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.18105389 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.309542156 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.213816086 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.183444278 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.206415844 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.194365289 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.221838336 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.175694968 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.214726817 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.18252796 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.204288059 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.203487958 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.327564839 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.17585707 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.207887539 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.186522742 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.213878734 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.184437909 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.325746032 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209775349 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.189148005 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.214616049 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.177471451 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.206018727 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.184628646 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.205824707 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.332484529 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.184699186 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.220224234 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.182328284 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.217047642 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.211843001 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.177531025 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206290759 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.187924526 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.328236363 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.21608551 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.17546505 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.214160753 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.184629204 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.208349679 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.18717443 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.21223474 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.186150418 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.205177209 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.184249548 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.21000792 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.184411998 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.215371941 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.183264087 seconds)
  done (took 16.989929097 seconds)
done (took 61.619684599 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.686258707 seconds)
  done (took 2.807899385 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.162242629 seconds)
  done (took 2.286422736 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.939496217 seconds)
  done (took 20.097990185 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496110504 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.417877581 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.090171872 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.243862435 seconds)
  done (took 3.372671413 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.160227358 seconds)
  done (took 2.301629418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.479945808 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.344419217 seconds)
  done (took 1.957483141 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.97558663 seconds)
  done (took 2.119973287 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.976362008 seconds)
  done (took 3.11239921 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362747455 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.286380762 seconds)
  done (took 1.795287794 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.739185549 seconds)
  done (took 1.888189553 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.10047842 seconds)
  done (took 17.250481434 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.32335753 seconds)
  done (took 1.47355603 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.355952318 seconds)
  done (took 1.510173186 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.824659476 seconds)
  done (took 4.97877698 seconds)
done (took 68.090533092 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.185713561 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.213062359 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188571186 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.211863744 seconds)
  done (took 1.938531639 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.189052044 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.182733362 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.217830144 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.181708721 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.219930691 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.183527039 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.212887058 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.18509749 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.212797871 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.182579922 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.21339236 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181064855 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.215984728 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.180778715 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.21144721 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.184130119 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.217221268 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.181465813 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.214418119 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.183155553 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.21432041 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.184657909 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.216354677 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.188183916 seconds)
  done (took 5.90318301 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.181714937 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174355482 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.205836441 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.1721251 seconds)
  done (took 1.892951121 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.193989264 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.222928837 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.195567886 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.219152659 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.195969055 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.222948812 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.182535293 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.208649857 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183294537 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.220236316 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.197081137 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.226665905 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.194517054 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.215872983 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.19347607 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.20824799 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.185784519 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.225298483 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.189663573 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.222515307 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.184633604 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.222120913 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.188711358 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.225177727 seconds)
  done (took 6.085682194 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.260774083 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.225150838 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.210509661 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.260320324 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.240134936 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.18325801 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.240105883 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.189902291 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.21730864 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.192079314 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.212568931 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.231198535 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.218570462 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.187124214 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.214604524 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.190100012 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.224446978 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.187139789 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.256201435 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.214360918 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.191702101 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.223779993 seconds)
  done (took 5.932768197 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.187741472 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.203028053 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.175871317 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.199388065 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.189540025 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.204916631 seconds)
  done (took 2.322037111 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.174641343 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.167771823 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.202251837 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168408287 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.202658103 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169429436 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198883741 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170748808 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.197888362 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170617297 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198243785 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.17067778 seconds)
  done (took 3.353447879 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272368993 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217900964 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.34865097 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.47040535 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261904674 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255556311 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.353034838 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25454885 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.273658822 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232098509 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247572963 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259910287 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248586639 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253050056 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242459394 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245629559 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239483387 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.3049202 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2395218 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3092014 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25233118 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242047749 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.285022279 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244295382 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205390923 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258389283 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.212695623 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195893836 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264704192 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259233804 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273267502 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217135294 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237732396 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280923782 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.332647748 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243026504 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.392186115 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199440586 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.262243473 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.286022616 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.324722019 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235750301 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286391028 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219429021 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224218596 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285259739 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217015376 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284902779 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.231417068 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210964676 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278625306 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277183223 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265333322 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203422796 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401144657 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231386198 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.206832587 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275161388 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283548767 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298434738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275735482 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.189186768 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267606167 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286066615 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31387462 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.236936695 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.230168096 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222880996 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25890541 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302271259 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249570074 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254666672 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.2893076 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228349709 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23713665 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261928978 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251859332 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304479641 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237124218 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.216327998 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246597001 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200225043 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221913624 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.255516431 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219858126 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314808677 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198621766 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.27006898 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272169666 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216588576 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259135117 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257733543 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258557461 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214726467 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.159312717 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242742321 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.254335555 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224467511 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22577913 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247930201 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206887971 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.224061174 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216743274 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.220822844 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264154052 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.191723962 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257053009 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26683002 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.19942941 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278475705 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243505966 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.230015981 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268324275 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291634363 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196359817 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231129321 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316283376 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266730916 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.203541875 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268066281 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294990934 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.206546028 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235414294 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262385601 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289423676 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210825413 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299822973 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236005011 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202053697 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.226095721 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271362301 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225740997 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.259109975 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193469994 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.262580039 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284111967 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.224959613 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206040936 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281476437 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230711461 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192464907 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232166953 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20437585 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.240994752 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.216412366 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.237820536 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250893287 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232984795 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.264060255 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255063091 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20086856 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270629247 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23014861 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.26468743 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21537222 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.215430259 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.239160161 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29478155 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22864828 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279695134 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.227234203 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278811014 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272301596 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227372978 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24986669 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228728248 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.186707751 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260476419 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267657571 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259302737 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.254179809 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275064866 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.261232451 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263240178 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245324354 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233956637 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.282531878 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255810323 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.205128669 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270281647 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271344631 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.186571909 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.223216793 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.194013429 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23805653 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226777512 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205112815 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280330341 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265090344 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270056688 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235500339 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2376474 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.288790006 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.191159295 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258220406 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.276042715 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205692567 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.287905117 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291409822 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278924086 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205967742 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264306585 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.219073599 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193784 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233897411 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256465225 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205276243 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234013696 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211440225 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.290295155 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268771329 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245126213 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28635925 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232812496 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.299397989 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.221254672 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.22882875 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26542663 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26702823 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.255379053 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232274299 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.227125251 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290182571 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242581547 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292286191 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265568757 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248064367 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292514921 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.266034529 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197502629 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245045546 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258656006 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206972199 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.261208217 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.241057469 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19969383 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246288373 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.20500065 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240161126 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286935441 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241873356 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242017229 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.253980622 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269768802 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193473206 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241495025 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272354327 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213586937 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.195670134 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232843506 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291241365 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250646119 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251114615 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236150142 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230011652 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.415678209 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248725763 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271211165 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238016999 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207546435 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273186136 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25535412 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226408121 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.283147529 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242450803 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308320981 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.237992415 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.239940079 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228373454 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216541433 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249961605 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.195386997 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.252417853 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.264834166 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.211080963 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286404158 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237446326 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268204916 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244293914 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.247423992 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.247147769 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208346187 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32605927 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269422809 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271224085 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.233575862 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.263576324 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2827817 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192797352 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22724021 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.199945258 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28590612 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228425556 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249754596 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.266822966 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278574321 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275064168 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261530814 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208241355 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.229441328 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233487373 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250636621 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282075745 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234745074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.204953856 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286520932 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.21718942 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200507062 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259796165 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388651727 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215722195 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270164104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.165111569 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.391229639 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229311842 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201814839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258234724 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270070726 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.201100014 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.286254488 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274770555 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210218282 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.258117461 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203972307 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276072886 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281701884 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269741774 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276724715 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.212979947 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263123055 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257359962 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271915863 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216751236 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.247505706 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22724042 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29573635 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.275555851 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.200994484 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273091501 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272927933 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270193996 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240866174 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240747235 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284005179 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197157963 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268578847 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239031863 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194551765 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262968356 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.263150084 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201581011 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273923451 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274158047 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200768548 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228834547 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216971027 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267827215 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242646289 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.199274363 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286887879 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.232274439 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283232805 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278528366 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233976611 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266692503 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211984709 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231148667 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207600981 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245866461 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230947036 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.249198659 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277520137 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.200012935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275748264 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267641717 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264209925 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224415549 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243857546 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.336189959 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.231366293 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293450515 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218508652 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297378179 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252248697 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277205363 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239519494 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253965955 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268808624 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214982436 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.323649955 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268235018 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.268039113 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20391371 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244223515 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207648193 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.23581665 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219599364 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273078092 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243913349 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.2050399 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.269592803 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24639488 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.215620087 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245852912 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302461787 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220488165 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289200463 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.290446991 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238862917 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245019635 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278124543 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231660605 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.232159341 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274019273 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.24672509 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221414818 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.237354555 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.237889818 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284962564 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.230433703 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261174064 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244363476 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271735743 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275495369 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.205483672 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280658455 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243254956 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246477573 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229463537 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.251607833 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240332587 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237548504 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.196377417 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274421349 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263072979 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.23363397 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245436029 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.279708683 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265690001 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.226954419 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203489494 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394508338 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264608649 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298252523 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.192686234 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240350885 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215165769 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26222734 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.268147716 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272003025 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.202113831 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230987614 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.215485712 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.253715155 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.198598299 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272377095 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284549453 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227232528 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287053472 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.236968122 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.325516185 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245536042 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274184517 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.178568867 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.229779289 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212863871 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237037964 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212684937 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.280391173 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319953326 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.26748618 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.248772976 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207123895 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.228650585 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203144128 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.263897245 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222202488 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277275413 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251353053 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.164559404 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244059178 seconds)
  done (took 121.317877228 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250881485 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.245172099 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.354601099 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.325909181 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.3150937 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.390814991 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.368812054 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.401293558 seconds)
  done (took 3.934103911 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.19301819 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.237553463 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.24364907 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189319605 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.21513029 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.594101736 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.238422777 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.224797232 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.233188732 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.227506934 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.214482302 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.649212515 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.221016933 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.190847662 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.255003656 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.182123859 seconds)
  done (took 5.590089494 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.295926598 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.646560572 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.382881581 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.373718404 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.342236956 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.289596114 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.915509857 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.271610796 seconds)
  done (took 13.81283409 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.245591496 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.276281082 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.543291434 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.419331746 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.290924146 seconds)
  done (took 3.072269665 seconds)
done (took 176.296062793 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.197406737 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196630102 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.230767264 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.19850981 seconds)
  done (took 2.103430052 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.259366571 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.155572856 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.196041969 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.155792717 seconds)
  done (took 2.065833651 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.464847521 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.155607427 seconds)
  done (took 1.940488592 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.217324354 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.239949717 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.208630371 seconds)
  done (took 1.977258491 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.724365578 seconds)
  done (took 2.029626253 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.191480425 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190233618 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.390511322 seconds)
  done (took 2.077253749 seconds)
done (took 13.490124548 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.215582652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.038867513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.657697393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.205822612 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.827292773 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.475310932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.561294632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.252647142 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.277407902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.221705498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.215806983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.801754259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.545420686 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.958993947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.530001895 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.957786811 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.76895365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.220125408 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220325643 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187793433 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.536420728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183486462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.185056074 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.22085078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.766258544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.523442751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.183899852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.005656795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213050626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194926603 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.474380576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219579319 seconds)
  done (took 24.132791119 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.186693154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.273808003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239704994 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218821193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191342209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.224709231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197007525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.230190795 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.320054736 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.187938425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.240574866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.184192278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222720571 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185907859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240942861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.18536603 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218304646 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186157053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22418619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187473281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238040256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184361503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217976252 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185579046 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.21619523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202051881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216619865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197607461 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217308919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195165461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.220900437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186386202 seconds)
  done (took 8.135185906 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.228669651 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.28469123 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239996231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.259814115 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.271283451 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187576087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.307396702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.225367416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.330115652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.225142597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.207553558 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.221843784 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.228677195 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.222372971 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.210945679 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.221897282 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.18903598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.222306202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.193477188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.219911694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238683984 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.187215148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217417522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186859725 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.185238151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.237992135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215756976 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198087411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216824081 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196859811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.223909619 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.187516094 seconds)
  done (took 8.507844748 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.200649468 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.199849995 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.242946258 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.209658854 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.229896204 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.19895002 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.233780706 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.195629207 seconds)
  done (took 3.035023029 seconds)
done (took 45.109372568 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.209208657 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.200985544 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.242578193 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.200092903 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.387100413 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.194608756 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.202577786 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.228886648 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.199812421 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.242408549 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.18489963 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.226947784 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.205305647 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.231926281 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.355471321 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.201168947 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.356937568 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.39102221 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.1942504 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.235536865 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.195312267 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.359780598 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.232912369 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.194328203 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.34203309 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.189629003 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.38079549 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.197703912 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.196187238 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.220653967 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.358072559 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.229426103 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.194533048 seconds)
  done (took 9.489760535 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.302978962 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231103341 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.195604623 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229838934 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.195417308 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227762063 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.340232581 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194271911 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.230565284 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.197221099 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228979257 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.288881079 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.238132796 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.190693802 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.23252098 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.176275768 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.344224221 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.195464242 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.223076901 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.15885826 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225721302 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.19565868 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.354724997 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.228937632 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.196963665 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.194327505 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.232277094 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.200012236 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.23084395 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196797861 seconds)
  done (took 8.219848487 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.201538338 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.207707698 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.247905827 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.294976128 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.225776406 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.241528898 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.212100505 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.240229291 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216626919 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.22327511 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.204545005 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.25852261 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.205877997 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.234042821 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.188355796 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.239192987 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204521957 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.22157678 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.199147811 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.240480441 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.208367349 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.240449361 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.211352924 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.23091903 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187963427 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.230048598 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.199430528 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.233417462 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.19834722 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.239045203 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.191457238 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.224198133 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.193631816 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.258169143 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.191468482 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237214383 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.209499406 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235931608 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.202883202 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.256361231 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.19159252 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.22553238 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.215989477 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.280573807 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.190626476 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.233763246 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.191130101 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.237570294 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.188303275 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242059413 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232935487 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.226645092 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.210393654 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.22342073 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.187705015 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.230694559 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190757079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.227361803 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.205216949 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.224367079 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.21109521 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.231729118 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201514383 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.225928032 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.20301157 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.18886843 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.223235232 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.193623505 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.250711211 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.198271652 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.261129296 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.188426754 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.236130796 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.201735081 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.23638425 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201593582 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.223500419 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.201620262 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.235705044 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.196386845 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.238887431 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.194480597 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.230230324 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.206801298 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.245661337 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.20458251 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.236544955 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.20080717 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.226475518 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.192645517 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.241163978 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.191600412 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.22750875 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.203861189 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.225023448 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.194414667 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.2340783 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.199567766 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.223045333 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.216978639 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.230221035 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.189530177 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.250252704 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.194139142 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.192513028 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.234030808 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.266574192 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.195679422 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.232245036 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.201883214 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.18978412 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.231955614 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.190885098 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.224904298 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.205196834 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.241465622 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.197867411 seconds)
  done (took 26.90984985 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.453065714 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.44633064 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.294670851 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.529343571 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.202768174 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.402259533 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.445932266 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.44785765 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.250473262 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.227091588 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.284646532 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.410806709 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.232329894 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.218837675 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.489857195 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.534297832 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.221577269 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.26721785 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.260549474 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.20643952 seconds)
  done (took 8.183746411 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.203546694 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.26004934 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.216452245 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.244368435 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.203483069 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242835628 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192339473 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.24702876 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202326427 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.234943354 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.196728858 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.199518039 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.238644523 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.206007342 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.240688777 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.213527223 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.238634117 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.196276915 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.247855401 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.197512686 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.203514637 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.219005433 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.235017735 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.213748061 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.242259019 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.200934769 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.225322578 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.19594894 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.233214293 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.199744046 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.229309886 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.201039881 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.23213301 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.173576681 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.205265698 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.24385182 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.198526782 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.22952807 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.196101264 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.228569848 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.206203526 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.238063863 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.200066922 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.166742922 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.250678037 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177301527 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.241779349 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.203826338 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.208444663 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.211898594 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.202996344 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.239167145 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.199638445 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.249618684 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.199135519 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.2455241 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.202773062 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.240394745 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.195334197 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.228526198 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.19029913 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.229244445 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.200664135 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.241093228 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.203185964 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.234358085 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.199853696 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.225135403 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.196915334 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.228607144 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.195168254 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.239020688 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.212906265 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.236650206 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.19993115 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.237285761 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.200368846 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.161663085 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.239137253 seconds)
  done (took 18.482096851 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.217755554 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.23666578 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209667794 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.258686876 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204282961 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.199116312 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.237953304 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.213687997 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.250077611 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.211297191 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.244589902 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.207457666 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.252640926 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.237299729 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.204981443 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.207830688 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.241673679 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.263940897 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.206368492 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.253977479 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207366174 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.232229951 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.204783793 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.238654301 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220762151 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.239067063 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.220814532 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.238282256 seconds)
  done (took 7.743952845 seconds)
done (took 80.354602916 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.546703251 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.787709946 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.471564087 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.472353642 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.47052827 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.509947179 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.472091947 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.489713112 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.053995484 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.446631726 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.474260938 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.481762521 seconds)
done (took 32.095685213 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.714012026 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.232773595 seconds)
    (2/2) benchmarking "String"...
    done (took 2.275048454 seconds)
  done (took 5.88595519 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.242707051 seconds)
    (2/2) benchmarking "String"...
    done (took 2.250573624 seconds)
  done (took 5.855991673 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.465172492 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.461680917 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.791263051 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.461272624 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.461285475 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.461596827 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.462511259 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.469172442 seconds)
  done (took 17.933419187 seconds)
done (took 36.217081097 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.460993817 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.842612737 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.728936969 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.447365479 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.468630752 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.465403247 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.466291977 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.546304666 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.461669742 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.447473383 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.014106054 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.750119691 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.482908406 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.885523572 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.454993893 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.467434372 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.478164298 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.855550276 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.468550854 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.449928933 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.454758458 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.449411409 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.488636369 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.481585403 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.477961478 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.474433586 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.46251957 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.471082531 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.793931617 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.481378673 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.454803296 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.48648428 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.460379284 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.464895292 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.481831453 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.464961781 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.797961878 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.480682075 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.450553733 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.466623165 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.795587903 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.487635474 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.463506358 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.467358245 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.448873003 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.542341523 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.452881823 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.657701793 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.495233437 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.468430099 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.482971123 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.924777166 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.479944621 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.473289585 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.474523192 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.854955159 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.478347142 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.609336843 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.506511408 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.472484804 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.466364123 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.474854588 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.528986542 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.47961532 seconds)
  done (took 162.040912469 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.466310555 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.466305736 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.465775221 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.471867267 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.473289026 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.467678537 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.466167241 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.46736921 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.466981171 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.475548322 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.473882259 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.467381082 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.473897623 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.477894989 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.477091466 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.49128063 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.474499795 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.46838142 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.477489071 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.467823806 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.47933393 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.475523948 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.469599661 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.467952175 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.475546995 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.559681787 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.497682422 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.487560534 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.478354545 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.46811672 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.489992687 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.482821454 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.279654767 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.432306021 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.483517702 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.47730057 seconds)
  done (took 90.310605073 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.467538785 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.468396365 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.469095407 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.509531974 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.470505083 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.109204809 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.109379272 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.544786317 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.796851821 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.08828043 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.778487614 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.469524791 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.56742062 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.483061079 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.471555008 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.570069839 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.497323856 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.477143427 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.47015867 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.111873654 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.484359638 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.470477007 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.660330968 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.470298004 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.506399941 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.874134763 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.58814239 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.469742486 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.509719078 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.818890028 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.507739357 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.471193928 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.874992204 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.271348682 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.586179709 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.469508168 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.509564799 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.472540398 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.472035725 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.764900271 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.470636943 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.471242049 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.474549662 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.173087933 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.472588588 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.113611026 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.47270662 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.581763924 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.478903987 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.47219203 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.293271233 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.392209233 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.479438551 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.47282989 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.476313993 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.472498563 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.471883122 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.473800404 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.510182125 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.214079249 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.453029397 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.473367807 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.478756273 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.510764323 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.472981865 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.585625589 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.474674747 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.22203445 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.534635445 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.615703575 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.115520207 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.473326322 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.57309285 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.597425622 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.474146188 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.475679135 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.476232837 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.474543166 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.592143806 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.473847827 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.475036176 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.330632617 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.66608149 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.475212315 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.193596965 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.585262204 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.474783211 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.925315433 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.482213835 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.476599085 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.339688867 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.575061256 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.475880627 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.476901287 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.475894176 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.333125882 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.120829821 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.861625002 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.482839263 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.618016021 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.482871321 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.461497373 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.130096222 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.232313061 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.478007713 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.594573793 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.668247198 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.478574475 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.47728737 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.198796369 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.483954629 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.537705248 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.477494939 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.882522491 seconds)
  done (took 413.972518164 seconds)
done (took 667.687621747 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.463006434 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.461683361 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.462312212 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.461155221 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.465069057 seconds)
  done (took 13.688794504 seconds)
done (took 15.063501372 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/21) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.783031348 seconds)
    (2/21) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.77509654 seconds)
    (3/21) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.779502617 seconds)
    (4/21) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.584188394 seconds)
    (5/21) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.789377546 seconds)
    (6/21) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.804962489 seconds)
    (7/21) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.697937426 seconds)
    (8/21) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.790736168 seconds)
    (9/21) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.796778906 seconds)
    (10/21) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.775973398 seconds)
    (11/21) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.548935937 seconds)
    (12/21) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.789990193 seconds)
    (13/21) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.757332828 seconds)
    (14/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.807917194 seconds)
    (15/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.575774126 seconds)
    (16/21) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.676666914 seconds)
    (17/21) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.719332046 seconds)
    (18/21) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.712929906 seconds)
    (19/21) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.694124302 seconds)
    (20/21) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.695293585 seconds)
    (21/21) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.555484674 seconds)
  done (took 37.489509945 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.883465278 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.492450122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.613868495 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.840242534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.554488738 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.868254545 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919410422 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.493718091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.742923105 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.533181489 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.53482234 seconds)
  done (took 21.854892582 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.886576638 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.491703169 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.614171676 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.866166361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.556521119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.88988041 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.92878005 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.49363477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.747991487 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.534543184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.531712937 seconds)
  done (took 21.919800417 seconds)
done (took 82.640493741 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.542605173 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.626730466 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.523898745 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.521751963 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.520576953 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.521746166 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.521963302 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.522056751 seconds)
  done (took 13.681258211 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.522630776 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.519731525 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.521951919 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.519852071 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.518728534 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.519996014 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.519107981 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.519740603 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.518991207 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.519920584 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.519926521 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.52010748 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.519279581 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.520003067 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.521059347 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.520344242 seconds)
  done (took 25.701948133 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.522783659 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.521650414 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.520878877 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.521118293 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.520302128 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.523098503 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.520452007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.521834446 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.521367138 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.520022414 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.522659271 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.521099156 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.521645595 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.521344928 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.520406192 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.523525582 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.522373411 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.521664033 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.523265214 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.522781633 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.522506249 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.520822446 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.525525208 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.522468465 seconds)
  done (took 37.90697232 seconds)
done (took 78.669389594 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.484173581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.506522233 seconds)
  done (took 6.373411521 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.620239208 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.618312986 seconds)
  done (took 4.621359043 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.52418642 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.52330635 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.525210922 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.524436662 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.52350449 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.524059798 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.525479043 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.523550725 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.522410985 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.522226744 seconds)
  done (took 16.619599463 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.523484655 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.524248579 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.523945678 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.525210434 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.523814306 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.523429271 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.523697462 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.523467474 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.524751576 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.523217023 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.524364237 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.523716808 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.524496027 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.52698119 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.523724281 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.524913469 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.52423929 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.523857957 seconds)
  done (took 28.818554791 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.547360247 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.549965537 seconds)
  done (took 4.479865281 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.706074634 seconds)
    (2/7) benchmarking "second"...
    done (took 1.606093834 seconds)
    (3/7) benchmarking "month"...
    done (took 1.690967686 seconds)
    (4/7) benchmarking "year"...
    done (took 1.678476153 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.606321098 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.552601976 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.60491198 seconds)
  done (took 12.829678551 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.52306456 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.871893067 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.054114703 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.73488996 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.515199943 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.547489244 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.47158888 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.545822483 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.546632292 seconds)
  done (took 17.196382515 seconds)
done (took 92.320200707 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.489504357 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.500741958 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.527371882 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.515839549 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.884398777 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.492632967 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.48967868 seconds)
done (took 18.287252869 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.473214296 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.479925974 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.49128922 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.499823057 seconds)
  done (took 11.329429043 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.488091607 seconds)
    (2/2) benchmarking "read"...
    done (took 1.900345009 seconds)
  done (took 5.774167512 seconds)
done (took 18.488935849 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.527761247 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.526825653 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.529748022 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.52839771 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.52785225 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.526613685 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.527513939 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.527265513 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.528533552 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.527133514 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.527467424 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.526913373 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.52817352 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.528225551 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.52705103 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.528531736 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.528359368 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.529056244 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.528110244 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.526957932 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.528629165 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.528483615 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.529492123 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.527989697 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.52798418 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.527800847 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.527962949 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.528520212 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.52921192 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.531329508 seconds)
  done (took 47.231115704 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.536907662 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.536801922 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.531430918 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.529282739 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.528479215 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.528678193 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.530002664 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.529344758 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.530397126 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.529141241 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.529359774 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.529922485 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.529545761 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.52987213 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.529814092 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.530647438 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.529608409 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.530396218 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.530686339 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.532297578 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.529679158 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.531053355 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.531065647 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.530868276 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.529035012 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.529871291 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.531251984 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.530604485 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.530114759 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.532197635 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.530873095 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.530767635 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.529714987 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.530059724 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.530860384 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.530972688 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.538462887 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.537453261 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.531777749 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.530863876 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.53029921 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.531047838 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.532014511 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.532642385 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.531304434 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.531094282 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.53236274 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.531763013 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.532324397 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.532258467 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.532065775 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.531171317 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.532699305 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.531662092 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.531978543 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.533358746 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.532973921 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.53338361 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.532454372 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.532241006 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.532682054 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.532043216 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.533549134 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.534663102 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.533395483 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.5328246 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.53652102 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.532779692 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.533404004 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.532913648 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.533247699 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.535066994 seconds)
  done (took 111.674771424 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.532522257 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.533505344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.53410074 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.533758239 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.533907978 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.534348467 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.533855597 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.534497369 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.536067681 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.535514816 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.535308436 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.534875629 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.53520528 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.534309705 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.535422905 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.534974664 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.536752335 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.535706181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.536179496 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.534717787 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.53464229 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.534126581 seconds)
  done (took 35.157249257 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.534583902 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.53658695 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.536677325 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.53704469 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.536682633 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.53660036 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.536498881 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.536520461 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.536665731 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.534935972 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.534730569 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.53584328 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.537223274 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.535656176 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.537504316 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.538623592 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.535612804 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.537901921 seconds)
  done (took 29.050558036 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.536328188 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.537611312 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.536237674 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.536470036 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.53579942 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.537416176 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.538469872 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.536605528 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.536565439 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.541687599 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.537652659 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.536382944 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.537800233 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.536826227 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.537773763 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.537433497 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.537532951 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.539162557 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.537840881 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.538480278 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.536878747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.539227091 seconds)
  done (took 35.221336108 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.539437523 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.538300227 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.54020843 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.537187446 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.538440607 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.538264607 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.540381078 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.539379624 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.538869363 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.539927668 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.53739655 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.539645859 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.540975008 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.538110468 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.543887041 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.539726246 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.540019999 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.539993039 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.540416767 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.539083846 seconds)
  done (took 32.186063186 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.542297872 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.54293238 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.541368425 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.540939668 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.54222356 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.541571872 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.541638779 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.540757174 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.541062868 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.542529396 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.541558462 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.541028926 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.541935675 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.542985389 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.542565434 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.542101758 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.541945103 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.542675993 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.541917656 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.543005504 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.544114862 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.544088952 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.542751561 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.542233338 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.542431059 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.543309313 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.544718989 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.543164253 seconds)
  done (took 44.584346726 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.568778264 seconds)
    (2/2) benchmarking "in"...
    done (took 1.569308709 seconds)
  done (took 4.537364144 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.542774958 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.5430201 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.542909053 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.541798228 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.54328473 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.543718514 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.542627453 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.543721377 seconds)
  done (took 13.743948515 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.533315375 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.54393579 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.543665993 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.543103771 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.543892767 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.535678106 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.550457639 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.548122076 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.537067179 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.537570176 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.54336372 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.541429116 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.538758665 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.535820512 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.53749796 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.540979058 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.547326514 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.544854831 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.545391701 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.546180209 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.544562825 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.540667636 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.543995853 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.548461575 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.538301135 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.554454446 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.552419271 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.549126463 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.538075897 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.549458698 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.540684817 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.551833721 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.544449472 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.545175333 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.546783079 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.546727765 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.555235061 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.545874304 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.554816782 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.550784705 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.546783499 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.546939942 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.543538533 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.545001986 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.546423117 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.550893658 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.548213639 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.54538304 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.537513465 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.545315713 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.552505944 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.539252233 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.549062769 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.549477905 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.546110438 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.558239355 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.554585398 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.544241066 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.547328539 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.558574662 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.56579241 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.554785493 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.549369442 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.553315124 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.553530934 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.553900325 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.560545024 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.554327055 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.552006858 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.549061441 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.555960224 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.56728862 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.564653229 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.554948852 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.549498788 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.549793169 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.543299326 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.555414205 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.558935952 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.556112827 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.554421411 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.551335194 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.553574376 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.552917728 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.544456386 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.55354169 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.548165378 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.549648458 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.542578005 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.562405666 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.558300047 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.553231316 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.542072704 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.544190012 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.546059104 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.55454482 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.542839421 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.54578372 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.554265735 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.551471873 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.551524674 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.548480921 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.559248282 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.554630026 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.550862648 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.55904225 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.559630593 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.544951072 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.562493387 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.559299126 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.551727004 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.546099472 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.556206554 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.55700882 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.548204908 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.557183634 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.557820097 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.552147937 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.557829596 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.553735709 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.558305983 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.563640181 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.558254789 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.550920337 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.553098756 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.55959204 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.552267226 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.555260344 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.558254999 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.55373529 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.553319805 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.553444611 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.558861291 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.547664336 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.558278535 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.548334114 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.558159456 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.554614592 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.552990153 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.555431106 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.55193101 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.557182307 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.558709456 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.562405945 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.558776364 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.556581881 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.569446086 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.553725303 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.562313965 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.556444713 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.562541368 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.55532844 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.55076508 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.559178021 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.547966051 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.558997132 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.549403524 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.558122789 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.556521259 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.556838547 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.554618852 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.547502095 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.55315414 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.560033367 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.562301323 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.554681151 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.558470948 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.557192922 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.556596408 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.548317003 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.560245894 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.546789155 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.553626407 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.567495211 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.557455875 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.55696056 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.560794218 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.563955165 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.557134255 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.557016433 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.552101842 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.564733057 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.56403681 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.565463737 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.564178587 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.557978986 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.558238865 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.551409086 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.552998185 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.5593374 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.554062846 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.565840531 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.571738207 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.569283147 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.553314216 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.562923539 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.550630077 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.561673869 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.564871483 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.565639667 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.558801297 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.559402002 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.554165163 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.562747539 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.5580167 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.563098981 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.550645791 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.562280859 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.561476009 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.557622306 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.559665304 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.554685131 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.558182643 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.564601826 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.558991545 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.559920644 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.552726922 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.563588637 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.549927124 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.55668357 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.565549222 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.560254625 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.568780499 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.571698469 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.562175121 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.565622765 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.559704694 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.556699634 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.563250047 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.564273641 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.560571843 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.57651633 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.561271653 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.55771764 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.576221389 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.562579851 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.554963379 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.565794295 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.568556728 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.562385342 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.556974249 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.568335121 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.564109095 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.563039825 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.561261387 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.555497525 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.566677299 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.570943344 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.570365338 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.556262707 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.567298328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.558524447 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.567624347 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.565544054 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.56939175 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.566309095 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.571078697 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.571113198 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.563035844 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.558263101 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.566047749 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.563565241 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.562883171 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.55776639 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.569980233 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.571506894 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.562045844 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.568141032 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.562313755 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.569089617 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.556752853 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.56569554 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.558652116 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.584887924 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.582322654 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.575192558 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.566763483 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.57040822 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.5726261 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.567011908 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.559427215 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.560967774 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.569164696 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.561012054 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.560992638 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.569569007 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.560066891 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.569015515 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.569087312 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.565412194 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.569815757 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.566036575 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.558830491 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.571403109 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.566381032 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.567900988 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.556898331 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.568491636 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.566990886 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.57248132 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.564684238 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.561696009 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.580557835 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.570292144 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.565007464 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.564164968 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.561304129 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.559403958 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.568830924 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.572029585 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.563764289 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.57306177 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.564613209 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.569170283 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.565674308 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.580213448 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.575229015 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.565650352 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.574519079 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.56859088 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.55905538 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.56124232 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.570038899 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.578843301 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.5782764 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.560032739 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.572968112 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.569063077 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.5715657 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.56902236 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.569505382 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.569337134 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.568596677 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.581484908 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.572197065 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.566567648 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.577754056 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.577221098 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.569573338 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.570453897 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.560892974 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.577796869 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.579250406 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.570973096 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.569283566 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.565519959 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.573497929 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.571225572 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.570257433 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.570213852 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.56960742 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.581477365 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.574827148 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.575230831 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.570845776 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.580612521 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.580990781 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.580827492 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.582495931 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.568584036 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.576588406 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.572153135 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.566229477 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.564673902 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.566877324 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.576012145 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.56234253 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.578070787 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.571051319 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.575956412 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.578343656 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.578343726 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.563386447 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.579530959 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.582977346 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.564308562 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.576570108 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.572829478 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.564311844 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.575735853 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.572282481 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.561943666 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.568686563 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.570097846 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.579614558 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.567051159 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.576795136 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.567380112 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.57742259 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.573157522 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.574802494 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.572825288 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.573756341 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.566088747 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.575327002 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.579452527 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.582479867 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.572824379 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.577438444 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.569507128 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.58643924 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.583457924 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.574542685 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.582930413 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.576354786 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.568357471 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.577117872 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.579069937 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.569803884 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.579061276 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.567086499 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.572252869 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.570475827 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.580570826 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.576408354 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.580405581 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.566228569 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.569626836 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.577162501 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.574505459 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.573416284 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.579213111 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.583486769 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.567353083 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.568529839 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.577733663 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.573977109 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.581453271 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.571641896 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.574163098 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.573660869 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.580619784 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.577054386 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.576060336 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.566724372 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.569328474 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.587973373 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.580995112 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.575657072 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.573366488 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.580482965 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.570867217 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.576043504 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.576449631 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.571517649 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.573019935 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.580219245 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.573868577 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.571534341 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.571570519 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.578691676 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.586375963 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.576565148 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.575462564 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.591031583 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.588671087 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.587835018 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.570219858 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.57498499 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.573856144 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.580198502 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.580524032 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.571844995 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.593092739 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.583309093 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.586270782 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.583075892 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.577130304 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.571167744 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.582699169 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.579674971 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.583174718 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.587105036 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.583556331 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.588572471 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.580294114 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.579910336 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.575492386 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.572975935 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.57709273 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.577386342 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.583073309 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.584085169 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.580298445 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.583564782 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.585787201 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.580404604 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.580299003 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.581319664 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.571934182 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.582098813 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.573966913 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.58571694 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.581009079 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.57434657 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.584754737 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.583141543 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.576304082 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.580512927 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.588468897 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.582181715 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.574744526 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.583824591 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.590670853 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.589509183 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.582237587 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.575181523 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.581299899 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.585515029 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.581486654 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.583377677 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.578909581 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.600136652 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.593965406 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.57549923 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.579472571 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.591001062 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.592876301 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.582946477 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.58346421 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.586475277 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.583889474 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.589614084 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.582906528 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.593308059 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.586044356 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.578921593 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.587779843 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.579014343 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.580640947 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.589566313 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.592015227 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.588325443 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.584461125 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.598362752 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.59254658 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.590762903 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.60503036 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.589314395 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.588755246 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.590104579 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.575912063 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.585715963 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.586761138 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.590548631 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.584321791 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.585115258 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.585035779 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.576258894 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.593158599 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.597533108 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.597178454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.584642362 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.57641925 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.581087232 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.588230109 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.622269773 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.587831595 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.585651848 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.586208833 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.585938408 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.578783727 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.603881402 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.604357091 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.591145983 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.586182782 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.585726579 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.59261279 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.591408446 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.58471381 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.594271799 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.586547005 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.586387347 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.592236485 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.596760943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.588700281 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.580654565 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.582143093 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.582220127 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.591237056 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.601419287 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.606647885 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.595588657 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.58776357 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.59028009 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.587567315 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.586925754 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.592823501 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.588672275 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.58227202 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.58663675 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.591742498 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.59064124 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.589716402 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.58447628 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.596255362 seconds)
  done (took 935.792807964 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.589545081 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.589477125 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.588460795 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.588328166 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.589460713 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.589583145 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.589556884 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.59064103 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.589948135 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.590117989 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.58937865 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.589907697 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.590011901 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.589901271 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.592226009 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.589967272 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.589234986 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.593735069 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.591011818 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.590438212 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.591030675 seconds)
  done (took 34.832080323 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.59106797 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.591434218 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.590591933 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.5900911 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.591881412 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.590683145 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.590119177 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.590978503 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.590912713 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.59147319 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.591004554 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.59010877 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.590611348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.591609031 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.59323724 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.591278262 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.591602954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.591873939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.59241884 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.592253736 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.593505362 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.592334402 seconds)
  done (took 36.451227563 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.592292777 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.593522263 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.584559321 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.597389236 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.592297387 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.592020605 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.592839634 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.593759374 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.593707132 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.584677842 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.585007702 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.586572357 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.591013704 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.599523934 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.595094879 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.600259851 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.592845989 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.593469952 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.59310084 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.593751273 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.603102392 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.603521509 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.594542225 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.584324515 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.596292448 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.594608714 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.595852936 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.593688904 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.585212966 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.598381261 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.595130009 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.587897875 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.60103474 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.592371278 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.587292141 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.598611178 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.592726422 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.594534543 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.596268841 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.600788759 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.605777313 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.595861037 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.606148939 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.605258951 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.596460904 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.593273558 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.602585357 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.594514568 seconds)
  done (took 77.986727295 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.595985006 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.595831076 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.595072111 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.595123305 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.595350428 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.595620504 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.595658079 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.596495756 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.595984866 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.59640587 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.596440371 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.596673502 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.597744378 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.596101083 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.596605546 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.597226854 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.597994689 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.597018936 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.598479457 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.606730297 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.597988893 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.59692933 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.597077743 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.596831203 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.597546099 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.596857883 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.597454747 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.597656099 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.598075496 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.597149959 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.599685407 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.599658449 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.598311769 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.599352334 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.598408918 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.598409197 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.598331115 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.598028073 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.599124582 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.598554048 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.599376569 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.599152867 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.599700981 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.599437122 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.599065984 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.598696385 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.601286518 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.598514309 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.598908352 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.600787014 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.600226607 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.600922436 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.599450112 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.600135534 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.600402956 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.598462975 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.599400385 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.598947534 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.600463928 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.600417623 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.600181559 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.600724506 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.599815871 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.600334791 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.601086004 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.599388582 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.602102405 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.600162772 seconds)
  done (took 110.144789853 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.600001648 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.600978658 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.601036765 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.600588315 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.601975921 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.600846029 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.601115477 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.600284645 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.601443103 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.599808258 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.601527052 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.601850766 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.60051575 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.602577813 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.601849159 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.602700665 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.601507636 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.602187681 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.602081382 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.60249575 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.603347814 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.60209968 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.603044284 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.603471713 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.603018303 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.603746817 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.603961649 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.601841128 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.603915414 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.603569211 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.603034855 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.603249966 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.607683281 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.603144856 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.605025192 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.603025776 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.602939522 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.605716691 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.604300449 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.60308549 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.605375796 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.604561516 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.605131561 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.603356614 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.6039569 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.605101878 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.604229351 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.60910539 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.60375471 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.603119852 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.60364443 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.604389497 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.604592246 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.60428655 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.604899408 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.605233808 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.605643218 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.604895148 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.60538257 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.604650983 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.605775497 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.605885707 seconds)
  done (took 100.860045823 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.604568011 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.605311192 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.605483002 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.605723536 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.606125332 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.605376913 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.606756767 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.605165713 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.606151523 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.606708297 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.605508354 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.606030697 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.607298945 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.60538264 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.607506514 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.606568684 seconds)
  done (took 27.148674563 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.6057213 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.607037739 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.606756418 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.606298329 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.607577961 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.607231338 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.607323389 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.608012514 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.606794691 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.607088373 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.608184462 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.607271777 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.608641574 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.607237694 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.608523332 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.608162532 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.609134793 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.607516081 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.60738478 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.606753903 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.609226564 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.608913675 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.607808787 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.607383802 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.60848038 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.608939866 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.608161694 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.609243676 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.608011047 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.608195917 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.609811485 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.609810647 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.607872691 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.608670278 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.608490158 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.609125574 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.610511294 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.608851865 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.608614895 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.610771943 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.608648278 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.610629606 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.609904374 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.60973438 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.60951431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.609252755 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.608978418 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.609690171 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.609732704 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.610892768 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.610902964 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.609506139 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.61123932 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.610382787 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.610615847 seconds)
  done (took 89.931547932 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.60994167 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.611158514 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.61089207 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.611169619 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.612509873 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.611144057 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.611351905 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.612837778 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.611828851 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.612574686 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.611670031 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.612216191 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.611645797 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.612004361 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.611650127 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.610994737 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.612160806 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.612054089 seconds)
  done (took 30.468388684 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.620002655 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.61369934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.613348108 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.618202985 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.61205807 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.61093565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.612591587 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.612182317 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.612422223 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.612068755 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.612210044 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.613364591 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.613058197 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.61290266 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.61244925 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.613759474 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.614588141 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.613545759 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.613832178 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.612559461 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.614305213 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.613166451 seconds)
  done (took 36.957005218 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.602949928 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.602269535 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.602429261 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.625103234 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.614863384 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.603403268 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.601901959 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.603980786 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.628767527 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.63595238 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.633206011 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.613846076 seconds)
  done (took 20.82935323 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.614497276 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.615544128 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.614002939 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.615962966 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.614674254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.615234591 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.614274203 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.613901111 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.614824832 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.615536585 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.615980286 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.615285226 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.616366579 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.614315759 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.617063036 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.615730045 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.615208191 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616534268 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.616869785 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.616164947 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.616435512 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.614601829 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.616644617 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.617143074 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.6156396 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.616152375 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.614927289 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.61715376 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.615837042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.616175492 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.616954922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.616612769 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.616990192 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.617833874 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.617245601 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.617510789 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616318178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.615985455 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.61681007 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.61818748 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.617159627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617750624 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617547944 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.617904204 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.617003112 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.618008966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.618142712 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.617377461 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.619361302 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.618557499 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.618974312 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616545093 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.617973138 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.617996255 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.619869538 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.62010204 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.618915226 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.619224903 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.618353424 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.620094078 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.6184915 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.618907754 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.61826235 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.619731811 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.618011341 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619414103 seconds)
  done (took 108.182267454 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.618118128 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.618960064 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.619526966 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.621017798 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619521099 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.618943722 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.619637874 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619836014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.620012223 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.618993309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.621132408 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.619936446 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.620317919 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.623766402 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.620326579 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.619705132 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.625464873 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.62030877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.620923862 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.620300039 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.621389563 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.621577018 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621380275 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622019671 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621623951 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.62206884 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.621861272 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.622091958 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.621067875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.621624161 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.621892631 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.648452432 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.622155024 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.622296872 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622854206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.621209932 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621950948 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.623318161 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622037481 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623488993 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622023583 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.622021348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.621999138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622069818 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.62316004 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.622628268 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.622781012 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622803431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.62431305 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.622716059 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.624323247 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.62307658 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.622892897 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.623913977 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.623128751 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.622933125 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.623261171 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.623511132 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.624326529 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.62864726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.622572186 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.624475361 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.623880314 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.625350263 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622893945 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.623977812 seconds)
  done (took 108.550778143 seconds)
done (took 2072.90949008 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.83698339 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.793536036 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.612534946 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.60403624 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.615385029 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.597812473 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.608772038 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.619379392 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.612874863 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.619746617 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.614034788 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.90536548 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.633634696 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.614136267 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.610635822 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.772416031 seconds)
  done (took 32.142669679 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.654871684 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.630551273 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.774383949 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.628939337 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.654906535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.893786843 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.702129789 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.622694268 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.835296304 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.624153672 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.605383478 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.651254046 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.619332738 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.593975394 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.646059809 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.890104112 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.986189794 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.6044321 seconds)
  done (took 35.088836158 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.234908922 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.616851486 seconds)
  done (took 6.322895182 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.646876115 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.620706376 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.628129178 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.621225227 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.597225318 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.591394339 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.620257297 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.591505247 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.598816023 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.793640658 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.632755325 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.642769517 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.623002199 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.621907506 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.629410905 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.682526807 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.811151474 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.630509648 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.63328521 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.648763366 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.62298404 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.881456993 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.691311864 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.641006723 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.785806072 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.610615708 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.643706648 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.642762323 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.834813421 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.636269808 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.622027284 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.622721996 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.624487514 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.606864114 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.267578091 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.603438887 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.661831159 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.636422411 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.629978994 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.836246425 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.623970688 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.637984761 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.593306244 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.272250613 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.820491279 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.926718964 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.594111863 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.637697503 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.626148409 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.829184773 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.625467386 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.625688644 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.73190264 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.601077623 seconds)
  done (took 102.599335575 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.629801457 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.592063278 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.8630733 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.620870853 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.593089806 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.603861218 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.605322855 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.018572753 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.625675304 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.595803768 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.022444963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.419134374 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.613036058 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.66202902 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.653071666 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.661440187 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.595496187 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.604643998 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.602083197 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.60018575 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.291347035 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.5962694 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.603439516 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.805814622 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.670118595 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.321719612 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.605215998 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.594775076 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.609029123 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.596623984 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.365047958 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.607151161 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.66445775 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.595347425 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.007456535 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.172739844 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.132305372 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.608708971 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.605666963 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.594709286 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.597202898 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317865002 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.151665027 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.608257586 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.621203577 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.319865257 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.608218894 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.606621974 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.59861928 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962318742 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.602537865 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.6004538 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.608531224 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.608905155 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.596927235 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.671054329 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.650079594 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.323442528 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.604952557 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.600322849 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.633319223 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.597541489 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.606618272 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.601128817 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.59996561 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.143246917 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.836162196 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.605127789 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.143115057 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.373463064 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.608781047 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.446854659 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.609701624 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.627855051 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.715500623 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.598339426 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.597304029 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.327318579 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.618398471 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.598835648 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.124452837 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.612771917 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.019706067 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.618505607 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.601431439 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.322868711 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.616065493 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.667737356 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.599852677 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.610823765 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.610621923 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.604783192 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.009029151 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.665419115 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.600743363 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.601697605 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.632954023 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.60030455 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.599672207 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.606316138 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.441181592 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.620406407 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.600217667 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.603316944 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.601798385 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.611500946 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.603235998 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.603433928 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.979021005 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.610983981 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.604401928 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.603381268 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.600369712 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.618193836 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.80322393 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.608936863 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.0802102 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.612831213 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.604349128 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.614132216 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.601942468 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.615126966 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.60183589 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.635852087 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.602042201 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.010026974 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.62315166 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.602498195 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.602837065 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.602566849 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.639013942 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.605118849 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.64642494 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.60793939 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.59161811 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.621740446 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.624077335 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.602381699 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.615724807 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.607122247 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.604371478 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.604479243 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.024491872 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022128722 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.865673212 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.607337986 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.603741369 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.578717238 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.652377094 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.873189461 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.627434885 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.604355693 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994668526 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.808799778 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.607403008 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.604705739 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.607558475 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.983270149 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.608936374 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.024578475 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.392816573 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.61469807 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.609832158 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.59291632 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.476700704 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.607356145 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.60998546 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.024194558 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.631810512 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.605719414 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.60525916 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.605789605 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.606718215 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.612278698 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.608880571 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.606114786 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.607717434 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.723111577 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.889148404 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.626272796 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.61198306 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304160885 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.624253824 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.613046255 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.625537577 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.60870024 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.606577275 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.637234595 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.609862329 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.637634367 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.606631402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.614062165 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.339099756 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.613722457 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.61218986 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.889354575 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.536645407 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.615803309 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.607327021 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.608488342 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.651328776 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.334713933 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.611824102 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.066621321 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.612818642 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.680967112 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.607683352 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.644244914 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.338124562 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.622231849 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.609036806 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.500600391 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.611294355 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.389160871 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.608255282 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.612022799 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.433808238 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.608485478 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.611272285 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.609868406 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.631896765 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015889591 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.616075201 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.638939282 seconds)
  done (took 567.027722744 seconds)
done (took 744.648979264 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.608302006 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.618908871 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.619733418 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.62149258 seconds)
  done (took 11.956058449 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.650426008 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.63394542 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.649825791 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.63673104 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.650228356 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.633974754 seconds)
  done (took 11.345324639 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.610534901 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.619919963 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.620030801 seconds)
  done (took 9.341035267 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.940166274 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.624609107 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.138243558 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.623100815 seconds)
  done (took 10.817124581 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.650000954 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.650623379 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.650473848 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.648924769 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.64901654 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.65148075 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.651615753 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.650429778 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.649916027 seconds)
  done (took 16.340043591 seconds)
done (took 61.2881291 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.593945711 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.60943511 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.6297562 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.635984087 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.764183141 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.817527425 seconds)
    (7/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.608631307 seconds)
    (8/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.598443489 seconds)
    (9/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.599804906 seconds)
    (10/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.748316039 seconds)
    (11/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.729211725 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.682088483 seconds)
    (13/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.59723342 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.907637347 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.800303237 seconds)
    (16/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.597763096 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.599992429 seconds)
    (18/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.613631454 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.598045533 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.600857483 seconds)
    (21/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.916223564 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.774606883 seconds)
    (23/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.435148701 seconds)
    (24/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.619020547 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.62756926 seconds)
    (26/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.715068236 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.784774656 seconds)
    (28/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.67912421 seconds)
    (29/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.598154067 seconds)
    (30/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.630081032 seconds)
    (31/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.444381091 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.915324637 seconds)
    (33/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.604125427 seconds)
    (34/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.609082342 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.771832787 seconds)
    (36/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.600135045 seconds)
    (37/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.567500379 seconds)
    (38/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.590966491 seconds)
    (39/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.600390804 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.749242275 seconds)
    (41/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.599824322 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.644431181 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.600457782 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.819989679 seconds)
    (45/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.688605933 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.688826211 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.802842527 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.126314177 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.861743313 seconds)
    (50/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.802399314 seconds)
    (51/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.611466304 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.832801155 seconds)
    (53/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.824864321 seconds)
    (54/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.608856057 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.877268471 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.611506673 seconds)
    (57/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.578283035 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.900835155 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.983297597 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.853948816 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.618422566 seconds)
    (62/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.781887627 seconds)
    (63/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.939667119 seconds)
    (64/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.60243429 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.908329125 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.97167922 seconds)
    (67/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.73512805 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.781797112 seconds)
    (69/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.575182919 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.624149691 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.391283417 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.052955407 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.162964438 seconds)
    (74/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.744183251 seconds)
    (75/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.65734686 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.625427717 seconds)
    (77/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.732981408 seconds)
    (78/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.687373863 seconds)
    (79/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.782104344 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.620089887 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.791697115 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.972116636 seconds)
    (83/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.602986525 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.813807259 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.782773703 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.82449109 seconds)
    (87/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.789342416 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.851557241 seconds)
    (89/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.91765133 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.865870583 seconds)
    (91/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.730267654 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.821566276 seconds)
    (93/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.683254274 seconds)
    (94/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.603288589 seconds)
    (95/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.949928689 seconds)
    (96/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.603751147 seconds)
    (97/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.617097817 seconds)
    (98/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.456568186 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.788460041 seconds)
    (100/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.511629727 seconds)
    (101/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.63739977 seconds)
    (102/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.446798507 seconds)
    (103/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.38109972 seconds)
    (104/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.994724329 seconds)
    (105/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.816751767 seconds)
    (106/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.774263194 seconds)
    (107/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.603617541 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.60566885 seconds)
    (109/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.606427465 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.608066362 seconds)
    (111/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.587838649 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.809295512 seconds)
    (113/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.78546804 seconds)
    (114/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.877191646 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.622339964 seconds)
    (116/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.607647453 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.689700555 seconds)
    (118/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.604569059 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.695385495 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.776960743 seconds)
    (121/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.580249835 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.688389983 seconds)
    (123/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.623728269 seconds)
    (124/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.606440945 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.870400209 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.606224786 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.832361503 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.607077827 seconds)
    (129/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.767432227 seconds)
    (130/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.626569133 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.809632496 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.624599749 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.61885202 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.8363764 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.789011577 seconds)
    (136/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.646598914 seconds)
    (137/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.163747988 seconds)
    (138/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.694597616 seconds)
    (139/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.605873764 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.113131146 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.767989631 seconds)
    (142/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.881851526 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.754454808 seconds)
    (144/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.857562823 seconds)
    (145/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.691343013 seconds)
    (146/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.787279514 seconds)
    (147/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.520009633 seconds)
    (148/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.693866657 seconds)
    (149/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.608443295 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.279866455 seconds)
    (151/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.695035102 seconds)
    (152/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.586058953 seconds)
    (153/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.643960311 seconds)
    (154/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.798194799 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.79071773 seconds)
    (156/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.616690084 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.960180481 seconds)
    (158/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.619508388 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.762119681 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.608669999 seconds)
    (161/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.048656537 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.83869939 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.702456018 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.878904363 seconds)
    (165/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.81785498 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.815123209 seconds)
    (167/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.608342654 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.698932246 seconds)
    (169/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.610166558 seconds)
    (170/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.97895291 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.807377042 seconds)
    (172/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.609536869 seconds)
    (173/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.618800058 seconds)
    (174/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.623572034 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.630400975 seconds)
    (176/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.795839401 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.912805672 seconds)
    (178/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.870289092 seconds)
    (179/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.064382349 seconds)
    (180/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.608871421 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.868759847 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.611724298 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.628839044 seconds)
    (184/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.614221403 seconds)
    (185/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.611769835 seconds)
    (186/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.6207575 seconds)
    (187/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.611984527 seconds)
    (188/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.61055753 seconds)
    (189/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.834440329 seconds)
    (190/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.947831006 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.98645561 seconds)
    (192/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.777642465 seconds)
  done (took 420.795287876 seconds)
done (took 422.286177115 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.687120408 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.81233242 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.659310797 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.658718612 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.666362532 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.628995 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.690338206 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.665542804 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.682293258 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.681677817 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.628772625 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.669528785 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.682656154 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.670304094 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.701847701 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.661195534 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.659469406 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.670147859 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.683477417 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.685467405 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.661616327 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.6685545 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.695752582 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.658731323 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.676174044 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.676662934 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.674888545 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.643042457 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.668484728 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.68480957 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.629275273 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.674480533 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.686161557 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.670812259 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.671209935 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.672152862 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.669811294 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.812466097 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.690498073 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.673452958 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.669743128 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.687238649 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.67416492 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.673226603 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.670733618 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.697449934 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.677528407 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.684635804 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.630569013 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.645674635 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.692386092 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.684007443 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.671283967 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.644390394 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.631610277 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.708263879 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.672808463 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.691080479 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.671479313 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.672370069 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.704012151 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.691446238 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.684257055 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.680371995 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.67302511 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.686340351 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.673023504 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.688030789 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.672704749 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.671611033 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.671708392 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.670821339 seconds)
done (took 130.229333985 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.839905968 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.633223261 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.879475874 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.671444113 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.8946989 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.845233671 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.670667548 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.671682133 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.672623034 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.528265221 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.671358976 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.67048603 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.635848315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.671853383 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.841686223 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.672021281 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.671096025 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.428290986 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.675346355 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.852192726 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.637379516 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.672391789 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.673688882 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.53680709 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.635227916 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.642611397 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.851814187 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.672662425 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.438833737 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.640872348 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.634506456 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.436083457 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.852719259 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.691600587 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.683877398 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.680785385 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.895862595 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.678399676 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.844334534 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.844700852 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.88110611 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.710889772 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.641391409 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.638833052 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.676716921 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.675664412 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.674194253 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.702881142 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.636405021 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.674354051 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.429504548 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.684611499 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.674339175 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.674569301 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.675331619 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.701472164 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.674291263 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.675433518 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.854305006 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.67608779 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.845241563 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.541048131 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.561742802 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.676507956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.637430011 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.675835803 seconds)
  done (took 131.823773892 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.789183666 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.795623103 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.845639728 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.667528112 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.758122524 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.845710617 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.667782893 seconds)
  done (took 13.881975076 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.679374451 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.674869688 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.757989407 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.759130194 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.675748502 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.90059979 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.677730108 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.687077945 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.675817993 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.760573534 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.679161575 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.676328394 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.686311437 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.641673987 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.759052879 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.685266471 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.840409663 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.671032888 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.676904445 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.878887043 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.67720553 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.687128091 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.764105757 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.686991412 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.678439207 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.681673277 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.490046884 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.676662724 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.679606464 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.678035244 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.67724506 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.791264658 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.677705734 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.642509568 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.677939701 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.84085574 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.678903023 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.678495289 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.679824019 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.645293371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.678735613 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.677782559 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.679076718 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.678163194 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.682801563 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.700955408 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.678402121 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.679520419 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.679272832 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.67994708 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.760877203 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.679258654 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.679376895 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.677771174 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.765818894 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.687811209 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.67922974 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.679822902 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.68060282 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.679737695 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.882323514 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.762120449 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.680371505 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.763149001 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.680542268 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.680335537 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.681484286 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.680578376 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.817951291 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.681822249 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.76424062 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.681225176 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.915740962 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.702727281 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.683074991 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.679671696 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.681253671 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.681075505 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.643370012 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.686890351 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.68132002 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.675678241 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.68514376 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.682215944 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.680589271 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891022316 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.844483157 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.682307995 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.696000449 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.689322714 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.681508661 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.765270779 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.682029049 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.682655176 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.765274411 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.846099284 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.76879539 seconds)
  done (took 172.265608711 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.694211883 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.693743667 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.679308451 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.70980779 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.674924164 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.674023422 seconds)
  done (took 11.642955505 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.676914222 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.68627896 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.683255322 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.684025742 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.683272224 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.686446649 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.684161093 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.675389796 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.688412961 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.685199563 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.685982344 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.6892366 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.685998269 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.68447056 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.68470809 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.685503164 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.686335392 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.684492491 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.684688744 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.684878015 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.648708261 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.686055189 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.687459139 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.679333734 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.690910695 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.687197862 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.708610501 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.686530808 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.685917741 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.69237394 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.688025551 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.68803526 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.678093562 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.682661252 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.692250879 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.678678692 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.69145371 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.690212282 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.685723373 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.688278377 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.688574084 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.687848784 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.688010396 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.689662841 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.68013642 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.681816871 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.692367933 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.708592692 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.687824897 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.68909566 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.690901965 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.688289202 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.68987439 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.68956206 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.68201089 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.68250823 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.694986004 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.689550885 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.689981666 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.681885524 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.690944917 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.687650783 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.68112195 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.692219869 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.691312492 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.690351685 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.680792928 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.692242568 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.688885437 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.688357996 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.690923266 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.687701558 seconds)
  done (took 123.964418662 seconds)
done (took 455.085136886 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.097400166 seconds)
  done (took 4.621348637 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.880663875 seconds)
  done (took 4.406029077 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.430122504 seconds)
  done (took 26.961267771 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.73626744 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.657403781 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.673874031 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.656213266 seconds)
  done (took 12.249331427 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.312379109 seconds)
  done (took 4.835388984 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.662748175 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.65750072 seconds)
  done (took 6.844510605 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.094565587 seconds)
  done (took 4.617848052 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.506291059 seconds)
  done (took 5.035281162 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.673964405 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.671870285 seconds)
  done (took 6.877693106 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.634254538 seconds)
  done (took 4.15696598 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.309910779 seconds)
  done (took 19.83627513 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.684424884 seconds)
  done (took 4.212520041 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.698628226 seconds)
  done (took 4.222236012 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.912719139 seconds)
  done (took 7.437366931 seconds)
done (took 117.838534498 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.651674281 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.664894188 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.661443679 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.662808937 seconds)
  done (took 12.167361646 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.805925739 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.807551295 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.813156757 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.800580368 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.796722614 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.81179129 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.725641577 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.722887387 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.788502156 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.78463204 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.815587443 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.798596246 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.813088801 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.725353832 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.785431234 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.816240529 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.786972142 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.813539557 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.724829393 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.801218368 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.691601076 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.801061364 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.787086403 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.691662326 seconds)
  done (took 44.237424537 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.268411577 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.811214121 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.89204542 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.77661042 seconds)
  done (took 9.275654817 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.859146264 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.864916761 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.875859004 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.920593185 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.955369883 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.869214654 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.728263978 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.72304013 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.707972641 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.859566639 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.936322698 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.855426727 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.079310574 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.693507813 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.076994149 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.694816778 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.693146454 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.860995312 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.90830915 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.938934344 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.694288987 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.857053191 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.867005504 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.855090093 seconds)
  done (took 45.902240503 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.71228988 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.719537799 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.696128677 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.717632319 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.695934937 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.6954626 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.696789655 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.709628508 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.694206156 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.695082314 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.697609941 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.71683983 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.696332683 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.695617019 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.710326502 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.698590233 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.698444753 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.710154832 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.711425384 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.697021109 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.69650149 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.710869029 seconds)
  done (took 39.001233887 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.65870227 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.658008815 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.097432711 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.003033138 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.658284828 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.659813584 seconds)
  done (took 16.265759983 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.790335978 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.9928933 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.687983367 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.14871549 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.275214956 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.690000523 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.688425323 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.0361752 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.421298267 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.409080652 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.754471151 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.78438578 seconds)
  done (took 25.211035915 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828668297 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.670755199 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.671809244 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734654805 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671128361 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.671447256 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.736695637 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29100146 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.69833636 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028904025 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670866665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842161842 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008987944 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670210716 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.680072515 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.664941122 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99203097 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400187831 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683670179 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679104794 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743787181 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.685139989 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.678783873 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00501642 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682435665 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67358845 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.019074982 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.67248831 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107208257 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065016997 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069859651 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683018001 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033419263 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266581037 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858179871 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968986419 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700659769 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.674416348 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.664921845 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.683325443 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.696532849 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.685747398 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057256233 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68578197 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.673085593 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679125398 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304726879 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.704618094 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.67495266 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.674373396 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070257747 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843471087 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.702273243 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.67398047 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706220462 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674524183 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.701053884 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873223544 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396304725 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674321993 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695541382 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.684122821 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.666864551 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683758388 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.569203528 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.709060907 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.702176862 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70219544 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674131676 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.674445542 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.737171815 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675579066 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.723413012 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67522979 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676162031 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.687485538 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685859075 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455588033 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704408571 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.682650706 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987666309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675204577 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675804515 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.677369029 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.676120755 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.675751575 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707941212 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.650300014 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740243295 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.300662605 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970571118 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728904981 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737474158 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981948613 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.652440928 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677833054 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.676366946 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690155431 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727193801 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301331265 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677239683 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.705652793 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016669019 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.975875284 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677444108 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.662351337 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305349235 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677226413 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.731407534 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.683115919 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977327983 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.496220923 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080568346 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697261781 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745004794 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.679523492 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.700091471 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680175251 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.707918304 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.680286299 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080465749 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.654857507 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681904173 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830996665 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.68544743 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.68164094 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.680276591 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683659982 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.679563931 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.969966013 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.680688585 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072058255 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.692585419 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68141703 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.689337659 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.688414148 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.692031298 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.983649317 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68042668 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.034950674 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682993976 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681348864 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680642839 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.987663305 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.68540329 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.711831512 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111328543 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696429274 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.6924838 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079982307 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75506585 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877493779 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746550801 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.697278194 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027324983 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.70925821 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.709639962 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.682313302 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.686149545 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690261729 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.713312357 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683575125 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542751561 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692968079 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.689762853 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.682726065 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.727963102 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83366998 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713467823 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97409922 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.681625925 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686199342 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.713096198 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.685472922 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988248645 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07054675 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.699001737 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93335172 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.309386619 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.517400921 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738922596 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.682601258 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.683839125 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.685208014 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683516109 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683258255 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.685682655 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9752171 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085023381 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.682007398 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50971817 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.688170611 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.687786205 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.71366715 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072911995 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.726810302 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68417136 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.68261816 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69487342 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.704758196 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.080090842 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997698241 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.731042265 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.685856002 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.291977632 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715033525 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.686474726 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.684752789 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740135669 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.688575063 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3908592 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158490056 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.685184896 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076753266 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.696418379 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.734115211 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.686456567 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687787742 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704037714 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.705459332 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719024605 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.981065121 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.700050893 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694905477 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40889655 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679409092 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.44662579 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.703206252 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.704791091 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.696314455 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318114057 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687844663 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.68746731 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064072742 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321810825 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687573957 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317968088 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.690431583 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.70259144 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079380486 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013695876 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.699998512 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.69539213 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095170972 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99898786 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743567461 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.694864829 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698775592 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.663521528 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394372846 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.706079243 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947865996 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320297993 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.697994137 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.699412125 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.736704437 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.707369631 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245921007 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.688404859 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689537475 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.704728932 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.703906272 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410459319 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.697884416 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688565844 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.533043273 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.705241149 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.371536213 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690754948 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.986142721 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.079119977 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.074598592 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.699250932 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.714688509 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.033762045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082048213 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699647979 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.704949281 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.454912807 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.641375415 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.72137225 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692828885 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.710744293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694284518 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133373245 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.703353757 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.701242246 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700729541 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.692936512 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69390472 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.692991267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.702739364 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695060245 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38473887 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.71613171 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684455545 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695630709 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702524602 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031663385 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.740156692 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.518189149 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013803851 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.707669321 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759764493 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.726739203 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706594253 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.679301118 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.695095654 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.693646937 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701307758 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.99931779 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.694960092 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.668909713 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.757400644 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99415184 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.694581064 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.696216328 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033457746 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.694647273 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.709766933 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687308631 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759090874 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.697121052 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705293808 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.685972916 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754673272 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84898324 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99089123 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.088410475 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.091380266 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263393411 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702743414 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.703918215 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.741164711 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856669203 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699624513 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.712012401 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.704487491 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518271422 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.691298733 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.527899951 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090702736 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.706145942 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699077096 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.697657433 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025363421 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.698027242 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053698797 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697994417 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.711050825 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750162015 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698152538 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699872379 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004531442 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050225242 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.699252049 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699116348 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704999218 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.699801979 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094666508 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.001434121 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.411125465 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472728131 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701797624 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.702310049 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344219471 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049813807 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698672017 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700711872 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699217198 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.721188497 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.721326574 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.728909033 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700243376 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01737309 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079688067 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288989612 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078556637 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.729309503 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.651854681 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698740182 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.057584208 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.61901035 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994700723 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529263882 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.646325067 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03903115 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854705057 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997940799 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.701138951 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025100887 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.708104153 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.700894087 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700010525 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700825294 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.700327675 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.082203889 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534180987 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041607386 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.727474632 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.707240006 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764593249 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.999324426 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008077005 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.697173223 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007790935 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100083048 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.718339392 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.702425288 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533179254 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098880521 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71184995 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.727832219 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034546502 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.702451408 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7668765 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.663347623 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.70118309 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454961137 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.003443385 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753583399 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707741187 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.65595164 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532536994 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.704976101 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396352427 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.709183899 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716825164 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07195049 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.73743365 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.719992466 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080506188 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.732265186 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.713426826 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013132885 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.531915616 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.706082596 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.730589483 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705735276 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.706258875 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70544285 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.788370016 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704960875 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.707675396 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.261328763 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.704815187 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704832926 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748009926 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.713769049 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720015863 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.711841499 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705782698 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.736865841 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.697672588 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.696089915 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.72616832 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909165893 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42071579 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711382293 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.406767718 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.129779772 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043938828 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.712352668 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.687966815 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.734409034 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708114349 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706017574 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70721179 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.699834804 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473871293 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.713526629 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.096926641 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737238654 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.003756693 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006421627 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.719408034 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016943355 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725482689 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766023598 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.681660636 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708720502 seconds)
  done (took 1155.312710955 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.744343467 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.754634161 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.73936134 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.804243543 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.721313933 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.790961546 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.715126483 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.773820959 seconds)
  done (took 23.609480857 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.707881358 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.730785249 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.705012209 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.731141369 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.714737608 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.350849225 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.704663281 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.733978393 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.755081913 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.704663351 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.704918272 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.519808071 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.733085191 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.708229168 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.717185126 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.739564508 seconds)
  done (took 38.534546747 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.083084029 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.940865315 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.471808182 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.735284774 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.717898834 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.707120648 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.147290658 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.726525978 seconds)
  done (took 31.096405416 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.746174497 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.743685213 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.745458623 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.745173531 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.745431385 seconds)
  done (took 10.292122623 seconds)
done (took 1452.431974033 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.737452577 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.740119606 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.738740241 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.738329434 seconds)
  done (took 8.521746935 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.683665989 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.686083405 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.686648351 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.719676923 seconds)
  done (took 11.343933262 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.231590972 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.431607679 seconds)
  done (took 6.230240662 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.713294198 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.560632396 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.545943867 seconds)
  done (took 9.387199239 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.103870262 seconds)
  done (took 3.67058283 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.215046062 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.282548221 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.7029213 seconds)
  done (took 8.768835409 seconds)
done (took 49.487776834 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.708062946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.474202201 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.861873427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.701156621 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.869201663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.862741694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.012743031 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.702623497 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.706000603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.708191244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.702104018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.869884432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.000410737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.473845103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.000150229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.475957522 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.868276546 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.715782643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.714480591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.70351572 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.036139512 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.704293611 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.702173789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.723566663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.867649162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.853140333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.702829878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.477422863 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.714742986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.70445704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.854028155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.720138783 seconds)
  done (took 93.76165454 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.720235164 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.703913256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.704561244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.704425123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.713811303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.705889555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.70498099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.705211047 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.719861304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.719363964 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.704104411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.718492694 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.70867308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.705698888 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.707604158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.704333911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.704983295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.722372517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.706250425 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.706171644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.708011123 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.70392471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.706331651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.710223347 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.706391854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.705795129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.705919517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.730937712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.720467945 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.727239617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.717076522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.714516839 seconds)
  done (took 88.321203348 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.708474381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.712305525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.715634579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.717142382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.713611277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.713776661 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.716155734 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.713798242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.725703737 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.732684303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.729683851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.717861678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.714578859 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.714797113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.716398572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.716849189 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.721202605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.716172287 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.714808566 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.73716525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.72156564 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.717370693 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.717248122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.718075322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.75431799 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.721058174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.722305958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.719628593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.717927678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.717950446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.720005596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.732287115 seconds)
  done (took 88.624234132 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.039520179 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.748365557 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.752174631 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.720671113 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.753008047 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.748543094 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.720702123 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.042081608 seconds)
  done (took 18.097896877 seconds)
done (took 290.3721833 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.720025012 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.744875868 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.788928536 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.733550335 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.778106141 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.791141178 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.056432456 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.787419546 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.039733963 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.751635805 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.778161246 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.740833663 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.737763789 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.964072805 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.722428809 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.735820945 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.743056641 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.72285079 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.730547439 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.072088078 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.791233578 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.728859376 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.732830411 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.734315237 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.708326248 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.839629816 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.841014629 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.979179476 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.947545005 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.840866705 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.740191053 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.73445869 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.724677139 seconds)
  done (took 79.060032217 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.740799022 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.752304885 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.754973939 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.754874067 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.752396866 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.754371837 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.743332305 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.751828986 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.754029615 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.752131817 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.752474739 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.753193475 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.753042688 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.752160872 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.753584517 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.733320068 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.743509213 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.753583748 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.744853518 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.733316296 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.753174059 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.754135285 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.7559374 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.755089526 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.753180485 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.75302432 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.753813596 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.754777197 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.754627457 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.754413882 seconds)
  done (took 54.106249895 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.754116707 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.717790859 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.726191509 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.770037167 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.74718042 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.750560459 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.169476929 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.765610278 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.752814098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.750270338 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.719027957 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.760152111 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.818306224 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.719179792 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.761327959 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.758221977 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.755559488 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.747053309 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.723744898 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.779590058 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.18074135 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.765565579 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.172214846 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.781773018 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.751286529 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.748263169 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.76027608 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.734558913 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.758360823 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.737861149 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.735340647 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.166575093 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.727966035 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.749903183 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.745920064 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.76372624 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.758576632 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.720793266 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.751369361 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.752062955 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.164450102 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.750264542 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.726283909 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.72029383 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.750536294 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.757646067 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.722053901 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.722500047 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.069255385 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.763862011 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.720361228 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.754173488 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.760334746 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.752971939 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.070186788 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.754447754 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.750693437 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.742261987 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.762118423 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.155507275 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.761126607 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.751993043 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.742417035 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.749798141 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.738034215 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.752009805 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.7736268 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.752412929 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.728823547 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.754421634 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.72153065 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.752343926 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.760845845 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.721695685 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.739511359 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.720684802 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.753146333 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.722813774 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.765813795 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.153364614 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.759944124 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.723253006 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.179908632 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.757548987 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.764920106 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.764427166 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.762113395 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.880729875 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.152810703 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.723091463 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.724180987 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.740073022 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.166340985 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.76994819 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.75578298 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.744885436 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.762021343 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.76211088 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.728402334 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.725182511 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.75540025 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.777596718 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.727230257 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.757181622 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.163438033 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.76649803 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.724631323 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.755332295 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.879731773 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.763112334 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.776798153 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.760608874 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.183464042 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.759493019 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.764606659 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.725139978 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.730164849 seconds)
  done (took 250.10043275 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.729339394 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.727705597 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.729004227 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.726350117 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.7262346 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.75638599 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.728700347 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.729753413 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.756142663 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.727732905 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.727423298 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.759956555 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.759670137 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.72862401 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.73379862 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.728383546 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.727588054 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.733662919 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.729646906 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.730031522 seconds)
  done (took 52.284026204 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.766028697 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.526449068 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.493675139 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.766929859 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.7661549 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.758441419 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.834262793 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.768717726 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.766441179 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.183867655 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.994726843 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.767145739 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.765222868 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.768840716 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.494048301 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.742894959 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.184468221 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.525130186 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.76849158 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.524560071 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.743971283 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.767802246 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.756922441 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.524360814 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.197100483 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.160992121 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.838920508 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.52838926 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.767523231 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.767201611 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.526614453 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.768969434 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.760969184 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.515687295 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.77029551 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.792107921 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.767851485 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.839203435 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.841105422 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.192460647 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.532766283 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.17475665 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.787035628 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.023323217 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.772886203 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.746069455 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.540167782 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.76955631 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.746836731 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.771902488 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.782349417 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.508886989 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.761867483 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.508191999 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.769441141 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.770761421 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.530643317 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.509163561 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.498539654 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.996717669 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.759614194 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.165862083 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.769051009 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.542813999 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.772837733 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.770199339 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.772473022 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.000996915 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.531882092 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.166382541 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.192040482 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.191313015 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.771800031 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.854075438 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.770296349 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.192385917 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.850575132 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.259906515 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.191917841 seconds)
  done (took 161.616905058 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.144944829 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.89228756 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.316617358 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.536922328 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.452437492 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.979155799 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.892678671 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.097844565 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.748836566 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.932648768 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.676314635 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.88333705 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.668511478 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.860227128 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.903128603 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.959118824 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.349156621 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.736718336 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.618392884 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.646193206 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.747963551 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.928549573 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.623590193 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.245468436 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.734644189 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.612442825 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.749805754 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.480501117 seconds)
  done (took 67.013400519 seconds)
done (took 665.754895385 seconds)
SAVING RESULT...
DONE!
