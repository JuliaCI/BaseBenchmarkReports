cset: moving following pidspec: 12961
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.154944704 seconds)
loading group "string"... done (took 0.576294583 seconds)
loading group "linalg"... done (took 9.666198963 seconds)
loading group "parallel"... done (took 0.165885341 seconds)
loading group "find"... done (took 2.429694028 seconds)
loading group "tuple"... done (took 2.258723194 seconds)
loading group "dates"... done (took 1.392077652 seconds)
loading group "micro"... done (took 0.19614715 seconds)
loading group "io"... done (took 0.511697192 seconds)
loading group "scalar"... done (took 52.915512931 seconds)
loading group "sparse"... done (took 13.981468104 seconds)
loading group "broadcast"... done (took 1.296580312 seconds)
loading group "union"... done (took 10.207876295 seconds)
loading group "simd"... done (took 3.545182667 seconds)
loading group "random"... done (took 13.199947215 seconds)
loading group "problem"... done (took 2.192871175 seconds)
loading group "array"... done (took 23.588190649 seconds)
loading group "misc"... done (took 1.10567929 seconds)
loading group "sort"... done (took 3.755998232 seconds)
loading group "collection"... done (took 20.547295225 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.8965293 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.173994961 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238008688 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.255738736 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.30488954 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.202326986 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200579976 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.180587838 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.816534072 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.227846851 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.189786425 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.401402301 seconds)
done (took 6.908214376 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.341573883 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.556911811 seconds)
    (2/2) benchmarking "String"...
    done (took 0.466765711 seconds)
  done (took 1.702279459 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.091881516 seconds)
    (2/2) benchmarking "String"...
    done (took 0.14254613 seconds)
  done (took 1.035428179 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.130771308 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.198172966 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.145547908 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.130165854 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.146517724 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.147460372 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.130395702 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.14751408 seconds)
  done (took 1.721484555 seconds)
done (took 5.605521066 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.524555671 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.990361414 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.578950577 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.215167445 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.343821236 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.341131369 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.386841161 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.265917475 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128669016 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09568186 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.233962853 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.512950006 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.457571525 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.022530518 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09731007 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.148705711 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.19742301 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.865973809 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.118566893 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.15297476 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527656206 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.243471603 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.1559009 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.134562852 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.243385139 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.166554351 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167900471 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.142163958 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.773387035 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.176707387 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237936333 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.122690741 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167089893 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199945328 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.274955356 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.148982563 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.775040318 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.241162301 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.127449587 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.139148421 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.782223703 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.162737036 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246403541 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144550644 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112561451 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188363059 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.14240512 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116189426 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.148630353 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.140573253 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210458187 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.516733238 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.144514537 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.235699247 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.149269191 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.787741095 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.13667576 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.322584527 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.165626579 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.1467746 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.131103055 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.128461238 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.210874162 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.134417093 seconds)
  done (took 23.153594253 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.246211547 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.247079744 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.118819509 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.201108954 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.164065137 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.138369761 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.127293631 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.1358795 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.16994256 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.220860977 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.181318378 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.253456952 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.137949805 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.130579454 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.221689155 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.291362051 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.148968664 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.163778578 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.128022356 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.152247503 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.164997588 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.151858208 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.149875204 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.135678217 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.211941966 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.246824404 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.161240477 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.164013036 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.128742769 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.152693999 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.181325712 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.188559453 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.131609264 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.128090101 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.234530523 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.162386921 seconds)
  done (took 6.976384148 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.276527553 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.14210138 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.30262305 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.254881644 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231152649 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.166468445 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.235632338 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.218372881 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.330042249 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.402237463 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.222636272 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168481411 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.136102363 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.13352508 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.121666309 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.122799414 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.137448973 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.901151047 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.213701477 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.181662207 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.226331854 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154047522 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.139088707 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.766701827 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.125030146 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.140971348 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.134655042 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109847977 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.261727766 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12209304 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152503891 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.511425021 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124672418 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155749415 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169181849 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.235091557 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.163561163 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.178126911 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.151048049 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.125531954 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.248799515 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161020196 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.118960589 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.136550675 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17165018 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.157968342 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.149013991 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162082064 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173741088 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.127686279 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166248865 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.156892088 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.235233196 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.221283028 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.125967975 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.318233205 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.1644728 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.138960409 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.147983902 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.884967216 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.161470045 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.139622434 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.120816761 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152681916 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.136680928 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.858225546 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160246425 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.472971528 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.123902698 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.199586064 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150899217 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.142500803 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.143102835 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126257606 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.164200071 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.12555158 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140260574 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.126153822 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.138643049 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.12916894 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.160364457 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126273529 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.137663526 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188691803 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.15400485 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.145516828 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167642757 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.145600569 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.12670885 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.16981063 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138536053 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.129251912 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.242687775 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15494156 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.123131021 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.162781943 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155169802 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.183283363 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.128087727 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.364184161 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.124869929 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.178139273 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.139943424 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15310278 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.154565675 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121064976 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.143111215 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.118856316 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.140420999 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189338812 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.143246987 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.120916563 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.147043489 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.133011327 seconds)
  done (took 33.238675673 seconds)
done (took 64.044451744 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.430987907 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109760606 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129346616 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110940504 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108866987 seconds)
  done (took 1.651308591 seconds)
done (took 2.394570777 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/21) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.224047415 seconds)
    (2/21) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32540402 seconds)
    (3/21) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.240351165 seconds)
    (4/21) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.148928436 seconds)
    (5/21) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.207521432 seconds)
    (6/21) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.211014124 seconds)
    (7/21) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.191370844 seconds)
    (8/21) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.207455921 seconds)
    (9/21) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.207956123 seconds)
    (10/21) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.225060324 seconds)
    (11/21) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.1289928 seconds)
    (12/21) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.232983188 seconds)
    (13/21) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.223602736 seconds)
    (14/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.215920684 seconds)
    (15/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.130378661 seconds)
    (16/21) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.246608036 seconds)
    (17/21) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.205744459 seconds)
    (18/21) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.206996854 seconds)
    (19/21) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.217429465 seconds)
    (20/21) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.161414171 seconds)
    (21/21) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.14642253 seconds)
  done (took 5.064825073 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.147759083 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143303907 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.16374715 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144404117 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146640016 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144774136 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162718737 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146974765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16252807 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137783094 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146665369 seconds)
  done (took 2.392943475 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.144712537 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.139163925 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.153959871 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.141466663 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146188143 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.140698339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160197467 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.148264106 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163545308 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.13670195 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147212855 seconds)
  done (took 2.370795826 seconds)
done (took 10.568858722 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238144669 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.994149885 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.197504864 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.306877013 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.376317128 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.319314628 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.670480583 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.2487053 seconds)
  done (took 16.216541992 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.156940558 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.157673472 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.134910382 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.24437954 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.157976793 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.133864509 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.154175193 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.133853613 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.136606198 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.150952646 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.132860261 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.155695497 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.137410001 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.150709738 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.135260147 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.155058126 seconds)
  done (took 3.241456333 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.180046149 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.177645914 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.140342917 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.159764171 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.137943729 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.160998476 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.144742568 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.159485085 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.136277385 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.155818418 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144053514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.15811026 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139172935 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.154634329 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.141394587 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.177651641 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.137023849 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.158499625 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.160473479 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.159789384 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.140876434 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.156787326 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.138702275 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.158146996 seconds)
  done (took 4.500052766 seconds)
done (took 24.708986248 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.196552229 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.146512626 seconds)
  done (took 1.102882008 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.210071197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.226800838 seconds)
  done (took 1.202379786 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.156969751 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.150010626 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.164576235 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.16398035 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.135038471 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.151951026 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157799746 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.153254265 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.133931486 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.153040341 seconds)
  done (took 2.292389486 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139655748 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.136702929 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.168078078 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.221784697 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.159990038 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.139073411 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.156012926 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.137795176 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.156804996 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.13531197 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.155587383 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.153438018 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.155539123 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155320031 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.155911447 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.14093517 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.160382406 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.137374383 seconds)
  done (took 3.536240956 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.136445214 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.135180388 seconds)
  done (took 1.044821761 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.138866612 seconds)
    (2/7) benchmarking "second"...
    done (took 0.133937982 seconds)
    (3/7) benchmarking "month"...
    done (took 0.154342323 seconds)
    (4/7) benchmarking "year"...
    done (took 0.135263499 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.151453687 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.13399602 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.151221115 seconds)
  done (took 1.771364222 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.55777463 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27128827 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.405307756 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.1048215 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.157201904 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.37900944 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.157266437 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106617678 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104471316 seconds)
  done (took 3.043751513 seconds)
done (took 14.760505927 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.138344827 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.248870474 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.664313109 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.158712431 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.154288405 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.196554604 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.393586363 seconds)
done (took 2.735487313 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.379187884 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.210151794 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.122284474 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.139463895 seconds)
  done (took 1.626276358 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.127666374 seconds)
    (2/2) benchmarking "read"...
    done (took 0.142829127 seconds)
  done (took 1.056169922 seconds)
done (took 3.464719082 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.158981459 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.152718722 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.139624599 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.154016373 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.139829374 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.155458665 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.137854123 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.15145236 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139774548 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.151629059 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138925487 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.154829675 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.136611017 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.153990602 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136062973 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.278068112 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.138057221 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151536239 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136076242 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.155336443 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.138186985 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152048804 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.139031158 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155239085 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.138841329 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.153509256 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.135479099 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.151277896 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139530453 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.154278069 seconds)
  done (took 5.297775716 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.142850428 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.128718185 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.152196868 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.141089101 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.148934302 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.133546452 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149597236 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.13472663 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.152418405 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.13468249 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.154715554 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.134328395 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.151369947 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.136249519 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.134269728 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.154974945 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.141081977 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.153794068 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.13340635 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.153667377 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.136803779 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.15411925 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.134599099 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.151926024 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.134862401 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.148294905 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.134819867 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.150886925 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.135740446 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.150331966 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.13815877 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.136355049 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.153781846 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.143920257 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.155664907 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.134206591 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.158932921 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.131708997 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.156079554 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.130404991 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.150522632 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.134933011 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.153131903 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.141319158 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.152110195 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.136591042 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.151699528 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.13775823 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.13385515 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.154745725 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.131110947 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.155071815 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.136956313 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.153989973 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.13833917 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.150028297 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.135138623 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.149934359 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.136061506 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.151668659 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.132271778 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.131831988 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.158008571 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.136032452 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.169068008 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.158039859 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135838294 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.136598167 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.154940304 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.139368351 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.156851301 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.144423044 seconds)
  done (took 11.165300699 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.138264231 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134172998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15517071 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133931906 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154724075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134355214 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154446805 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135777461 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15332697 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136045163 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153021903 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136460649 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133752204 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.154445617 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134877347 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.154508336 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.134662097 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154058906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.136561151 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.153851059 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135944801 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.153462322 seconds)
  done (took 3.965117561 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.28296657 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.142676244 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.204207323 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.14824909 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.173377564 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.168911563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.140160631 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.160480323 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141104047 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164190712 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.145648549 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159286806 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.153151529 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163822159 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.144104359 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.165865506 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.159947434 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.146934956 seconds)
  done (took 3.764848728 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.139593031 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.134424706 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155525295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135489506 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.15476123 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136752096 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154604716 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.136095449 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.154843644 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.135900522 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.154388069 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137420966 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.135290948 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154961466 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135243315 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.15678132 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.136640002 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15544784 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136243513 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154309776 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.136065976 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.15555763 seconds)
  done (took 3.99280097 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153758519 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.158320063 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156233485 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159786451 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138845449 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.156825879 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.146734232 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.15709379 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.144538352 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.157012425 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.138487722 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.156269942 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.154908595 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15913106 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145402847 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.157488393 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13878399 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.138543736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.159429422 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.13616117 seconds)
  done (took 3.820092556 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.235506415 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175859165 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174784936 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161698915 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.173988536 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.155067275 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180652302 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.155942247 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173906263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.164205029 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.174848352 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.174823908 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164978731 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.178543165 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.154397497 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181812226 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.161070203 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181662976 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.17199317 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155187262 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.184483516 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.154893859 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.181319566 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.153942202 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174115088 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.15648226 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.17356865 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.159035517 seconds)
  done (took 5.60129001 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.154140062 seconds)
    (2/2) benchmarking "in"...
    done (took 0.165958325 seconds)
  done (took 1.136558147 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.142411336 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13966392 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.160451479 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139533037 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.159163676 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.13887164 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.159533345 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139268828 seconds)
  done (took 1.991771091 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.253599149 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.256212888 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.144899781 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.169826414 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.254797136 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.234644014 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174700079 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.168080243 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.136160821 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.15154476 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.249732665 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.129141422 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.157404165 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.134301296 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.159227999 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143173165 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.160385759 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.147982505 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.164535029 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.13947856 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.162570952 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143073082 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.170471049 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.148278492 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.152887459 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.141448713 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.161629003 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.149760385 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.156343904 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.139784046 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.156111542 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.138643888 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.161797181 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.142639787 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.159665555 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.258245968 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.144508041 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.156695765 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.139739278 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167089334 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169919233 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.159749364 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.139597221 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.158141758 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142154669 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.163838362 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.143699628 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.159216127 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.132367741 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.153842818 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.139995666 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.153848754 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.139054205 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.158893949 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.138614415 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.165301677 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.140354301 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.155364241 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.135678357 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.155683974 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.138850059 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.154548284 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141398288 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.16195188 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.140771114 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.158601803 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.13803145 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.160422425 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.141325094 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.159206348 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.138829735 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.174195127 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.139442313 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.164124432 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145392651 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.160053593 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136335004 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.163358413 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.138541082 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.158486634 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.145119851 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.186493617 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.142358187 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.153767598 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.135291925 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.166011753 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.143470898 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.142647051 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.151999078 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.166425214 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.143130282 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.141071431 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.154193072 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.137982561 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.156511104 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.142950581 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.153431242 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139023196 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.161876521 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.144246904 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165604229 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.137927246 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.160870807 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.143943584 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.167253182 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.138611342 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.210942677 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.157640018 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.136288071 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.162296756 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.145655254 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.13281703 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.161361651 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.138423189 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.158333543 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.134736967 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.165863829 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.14025785 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.163907017 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.145045191 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16233007 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.140561031 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.163441455 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.149455528 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.158347231 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.143640054 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169588815 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.140090021 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.163020381 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.141506472 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.161389168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.139651139 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.165992408 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.137896586 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167093455 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.137288617 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.161535765 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.14207037 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.16647962 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.140419044 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.15565443 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.138825266 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.161240825 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.140073608 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.163974134 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.141637565 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.157137999 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.132485283 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.161239429 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.136163893 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.161467321 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150466551 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.156280488 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.143402244 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.157061942 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150346213 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.157776 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.14615434 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.143092079 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.167742002 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.144289648 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.155086621 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137628605 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.164870128 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.141557317 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.157750787 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.142236104 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.162443911 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.147223051 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.155103383 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.14427107 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.154385275 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.138816465 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.16738616 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.143991564 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.164297359 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.136201818 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.198177366 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153335071 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167181036 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.140415622 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.162113283 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.145957108 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.159699219 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.145258346 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.167586325 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.145781457 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.159118209 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.141310638 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168458992 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.137506732 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.162925816 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.139702751 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161622578 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.135398783 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.16278781 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.134890477 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.14482952 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.164403797 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.145566974 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.167883779 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.143363692 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161118742 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.149215833 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.15898139 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.145255622 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.156204501 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.145390975 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.173626478 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.147109629 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.168527157 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.142838555 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.159855034 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.142200974 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.171450852 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.143979273 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.163181226 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.144271768 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.155916684 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.134232922 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.167990706 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.144402162 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.158127929 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.142400441 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163233188 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143854327 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.158530006 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.135068503 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.165672674 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147216555 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.157330762 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142739939 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.158442634 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.139237539 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.168911354 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.135558719 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.15748937 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.143149628 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.165345468 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.141837659 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.160529282 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.145429876 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.146451445 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.165376198 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.142623305 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1604072 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.147965534 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.162584223 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.141324675 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.159202717 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.144337559 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.156773428 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.144391686 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.161965708 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.138447214 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.158658234 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145401101 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168989366 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.14758022 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.160610438 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.146191635 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.168768319 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.147518201 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.161592407 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.148246924 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.158755593 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.135869722 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.159597809 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.135438173 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.163841784 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139943773 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.167407182 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.141133659 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.140302967 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.166055055 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.163489994 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.140082269 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.146148194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.174119628 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.156516342 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.137248878 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160510635 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.142118841 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.158502908 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.139613354 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.142871031 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.16525635 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.145979527 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.166042623 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.1375163 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.164554165 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.149816747 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.160557708 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.147764111 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.169348071 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.147918391 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.160396863 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.146866162 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.16190299 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144541216 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.158053618 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.141093641 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164279689 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.14181545 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.161631518 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.140056218 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.160035015 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.135406185 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.159531111 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.147969515 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.162024864 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.147617864 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.162796121 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.140192059 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.160618819 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.13883197 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.169014998 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.142091603 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.169668294 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.144542682 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.156023123 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.137191189 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.167856402 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143800688 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.168667608 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.139274973 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.144228467 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.171530681 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.146548594 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.165279048 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.151152322 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.173412346 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.147726816 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.169788141 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.135903944 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.162347251 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146827331 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.164722972 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.146233819 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.167475767 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.136677925 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.166930865 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.148481382 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.166050865 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.141443895 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.157610685 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.144588079 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.16969218 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.148128823 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.165813753 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.146285572 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.163705314 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.139499513 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.16678301 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.149904956 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.163381042 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149719528 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163451721 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.148586422 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.138578377 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.171377519 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.143869831 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.15925866 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.135955487 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.161401181 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.148874658 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.158724863 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.147937388 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.170168148 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.140075913 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.163680522 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.14859201 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.161795715 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.14587253 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169272433 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.142586358 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.172826377 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.145149603 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.162975404 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.148148868 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.169521906 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.138565665 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.162519549 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143484518 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170547666 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.143477742 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.167968566 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143759063 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.148494302 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.169316992 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.14699935 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.171245171 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.150039191 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.159690558 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.148971947 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.17021976 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.145850251 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.163070947 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141306377 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.160527048 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.142710676 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.172558116 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.141033717 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174511786 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.148800277 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.163405975 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.142069672 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.171347558 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.142726041 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.172394478 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.140863653 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.16697689 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.139160504 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.16753541 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.143492339 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.171251107 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.140681577 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.160532495 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.151436925 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.170627284 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.149357471 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.166661557 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.151271541 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.158094615 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.138962434 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.166713659 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.143424523 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.174931184 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147556473 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.163659638 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143735457 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.144886371 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.168795348 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.150198988 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.160926819 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.140767062 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.16760183 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.145716016 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.165049271 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.138480389 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.170304129 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.143092289 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167942516 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.1429818 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.162235435 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.143673647 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.173140733 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.143859565 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.162436159 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.141907431 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173421983 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.144230911 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.162504743 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.1394611 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.17200693 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.147216905 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.173816307 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.142603539 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.169508497 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.144188937 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.166713239 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.152515065 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.163440267 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145454949 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.164824172 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151322734 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.170304198 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.139124745 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.163339207 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.155800608 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172121399 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.146227533 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.167222382 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.14536206 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.171758783 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.15298796 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.168185494 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.140927908 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.13918439 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.166974376 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.138247189 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.169790376 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.148261172 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.166232452 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.142227444 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172601488 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.148984169 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.169230249 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.147636163 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.161262057 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.151626474 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.16399341 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.14797587 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.161431004 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.139884129 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.168888935 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151318125 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165371588 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.146525197 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.167694999 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.149202004 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.161804723 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.145367439 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.16892658 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150865274 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.149742156 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167151074 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.142767457 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.171780224 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.154978576 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.169267125 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.144346009 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175153908 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.152134849 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.169030922 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.144006441 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171475926 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.151935731 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.171404758 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.151914849 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.165539487 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.145457533 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.174887672 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.152440335 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.178057559 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.144428282 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.163723264 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.149653738 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.165728407 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.140463043 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.171454135 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152637706 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.173466053 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.145206873 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.166084598 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154232742 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.172731952 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146285991 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.166610153 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.144491 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.171888548 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.143044657 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.172099608 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.143032365 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.176044873 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.154494297 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173575424 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.15512657 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.163006483 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151976519 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.169053272 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.1550297 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.168136604 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.14134926 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.162257575 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.149230499 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.152709713 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.175415952 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.1494109 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.172110853 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.149837839 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.170411615 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146384467 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.166702833 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.152978881 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.173920441 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.148089013 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.168879506 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.145250593 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168130039 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.148523426 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.17378453 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.153857554 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.169429786 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159664857 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.17308437 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.145583877 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.165469715 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147615629 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.17095512 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.147527699 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17401773 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.145182778 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.163613543 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153228563 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.175223679 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147165083 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.174541958 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.155075376 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.167261772 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.150504963 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.15415403 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.174902898 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.147999756 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.170287087 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.150046734 seconds)
  done (took 93.409440337 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.201656439 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178340416 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.150141509 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171046471 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166909773 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173706656 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149776658 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.17211211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.151208194 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180510175 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.150449509 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170333393 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.164636229 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191949619 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.187120164 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160625873 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171511196 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151588551 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.14898354 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.172866046 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186544323 seconds)
  done (took 4.46569253 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.157027231 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.148230861 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172119723 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149446658 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.172188167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.149392392 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.171445196 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.150097299 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.170224719 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149409781 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.170329831 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150021312 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.149061343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.173739412 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149478645 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.172728111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.149310119 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.171341202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.150122931 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.171328281 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.150911998 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.170530484 seconds)
  done (took 4.428676649 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.183312905 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.153675687 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.171448199 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.15018928 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.17686425 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149593953 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.176893654 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.1506253 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.181780239 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.145317362 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.164373207 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.145009851 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.171676161 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.151504043 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.166043182 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.150697446 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.180774175 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.155029072 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.177876809 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.151247026 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.140849685 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.173709869 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.151031148 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.166547785 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.155067554 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.178520607 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.155074189 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.176121069 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.142200206 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.175965323 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.151175021 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.167027525 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.143146485 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.162687518 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.142936054 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.152375662 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.176711927 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.149968442 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.173923025 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.142116746 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.174744079 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.154179732 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.164897924 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.150903408 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.172858504 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144675381 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.17603719 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.151524227 seconds)
  done (took 8.634958887 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.185780957 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.211030537 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.153879624 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.205309279 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.188141662 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.1600156 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.178131521 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.180832423 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.177209337 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.154278348 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190706794 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.164087975 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.179541128 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.157611383 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.179167965 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.154952107 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.178991197 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.15458544 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.18152001 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.154924939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.181479363 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.155525713 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.186338989 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.186458069 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.15766991 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.176403927 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154112265 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.179295915 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.16360628 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.183095629 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.158809022 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.182917116 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.16388753 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.181400232 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.154596894 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.181539985 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.166895036 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.179995585 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155283434 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.177570765 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.156168463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.181559471 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.155297193 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.189826024 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.177840562 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.158218374 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.177400143 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.153776678 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.187402462 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.155648774 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.18321876 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.164366013 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.180117109 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.15641172 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.18189415 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.165960978 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.180018841 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.155058545 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.180369655 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.162440209 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.17928921 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.157958984 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.188561408 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.179812042 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.161422203 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.189246691 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.158277809 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.179119635 seconds)
  done (took 12.726575915 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190977708 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.182711782 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166563918 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.19031254 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158533079 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.183674264 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158460234 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.182445268 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.158855885 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.446283148 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.158639517 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.315325294 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162436369 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.187273536 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159622044 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.18372022 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159257263 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182667713 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.160267936 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181901483 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.159287644 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190847523 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158692596 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.190317009 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.193020565 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158042863 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183390989 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.160581314 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.189557555 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.160683841 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.193756273 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.159653054 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.182385833 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.166943716 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.193477397 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.182785325 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.156353123 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181070931 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.160454762 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.182304677 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157561656 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18981024 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160509098 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.180127515 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.160306349 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.182245801 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.166892732 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.194173644 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.164701321 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.187229955 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.182313826 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166823798 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183337909 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.161237822 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.190546927 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.17464246 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.191980069 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.190957733 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16073727 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.191068641 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.169344091 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.198326407 seconds)
  done (took 12.216552747 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.162054336 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.15492857 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.178937489 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.154452393 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.179067045 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.154231065 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.177913895 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155076634 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.179609852 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156547841 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.177452873 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157080869 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177143616 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1552541 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.154795802 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.179701483 seconds)
  done (took 3.597780207 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.176710321 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.19512188 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.258079467 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.158231644 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.178915629 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.16203066 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.180229414 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.158257206 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.152997948 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.184830696 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.159156273 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.181384588 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.195007829 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.157648539 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.154898399 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.182189858 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.154685593 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.184336918 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.155370317 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.259574489 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.185086734 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.156523117 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.182999738 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.159665136 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.18311777 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.16159953 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.185206862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.155666233 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.18189429 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.156804368 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.181103826 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.162270426 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.179890194 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.159625536 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.180885013 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.157689116 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.179185216 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.156967936 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.18203502 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.156341808 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.183687674 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.156871066 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.180948778 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.159234705 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.178195426 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.156850184 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.177919692 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.162842495 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.180128143 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.15984847 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.156636678 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.186047751 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.160850203 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.189833428 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.186704678 seconds)
  done (took 10.517277162 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174397526 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.18131754 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.168102731 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.179591832 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158451853 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.157942221 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.182886455 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.158301415 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.182313896 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.1539429 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.182182315 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.158448361 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.183505877 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157887396 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.182320741 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.15774471 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.17961495 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157446419 seconds)
  done (took 4.008104662 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.162144501 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154278348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.181113744 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15440085 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.179513819 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.153869148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.177513845 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.155986386 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.17968095 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.156001751 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.178345724 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.156130119 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153415948 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.179660695 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.154341484 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179000277 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154547936 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.178901381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155114138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.178773712 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15704993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.178905153 seconds)
  done (took 4.617868376 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.174144561 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.284003084 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.187043059 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.294145226 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.153431173 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.179111604 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.162069632 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.180046429 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.168316237 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.176629165 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.152228507 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.17707154 seconds)
  done (took 3.245516626 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189756393 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217210861 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.15666252 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182237839 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166873595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186174443 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161305917 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186209014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16848644 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197400242 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160046399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192974749 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193835543 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17030399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190306323 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164968394 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187495979 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161227974 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.183024322 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17712846 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188338964 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192394088 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163444737 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184076551 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163678216 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193808933 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169938091 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197311195 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161083194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193777993 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18914165 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1638524 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193286939 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173934479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.184162176 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169408554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186654811 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175138403 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191283612 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194152343 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159550737 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189834056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170417412 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191048317 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171997989 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187926831 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166595836 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186770259 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162350045 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.207739964 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190593371 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17105171 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191565911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17057183 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194625727 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207659507 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172539608 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195955366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166122941 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197464287 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195278394 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168101195 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19554819 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17361726 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191630374 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194843493 seconds)
  done (took 12.96376739 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202373221 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.183924436 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164346597 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19847936 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170462948 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187954557 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164432991 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187299376 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163046851 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184143528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.22974821 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163131848 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196053702 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170850078 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188727631 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162763505 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188050589 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169799735 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185162582 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.207571018 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164039435 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194281829 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171764301 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197162572 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198667722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168074585 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187787986 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16375574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187602069 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164774794 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192733936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163257702 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195850185 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159632101 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196091556 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162986368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187726945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167437773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188523136 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191770196 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171647107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.202615221 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163383067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189085987 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173874555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188937644 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163382229 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185099586 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16400242 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.185292138 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198494655 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177070353 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200733767 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17071724 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187807262 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163863994 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188806342 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164278013 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189431142 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190994609 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173854231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190467168 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.183460829 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192416997 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163578902 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196907792 seconds)
  done (took 12.965063435 seconds)
done (took 229.317858583 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.260307054 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.248787502 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.256536323 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.240645965 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.15004883 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.224500057 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.189756952 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.258718724 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.176142999 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.150493229 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.176463642 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.15547864 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.240975546 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.151135909 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.174193171 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.153650405 seconds)
  done (took 4.180100556 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.254770177 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.423169804 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.167796827 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.177723158 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.157670958 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.179833762 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.155811015 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.156135706 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.181008563 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.184307935 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.157248767 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.150800531 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.187325776 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.175188758 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.156431555 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.154142786 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.186620309 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.177699343 seconds)
  done (took 4.374009782 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.180685756 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.231497665 seconds)
  done (took 1.398311895 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.190750094 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.273652606 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.379121325 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.230187512 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.176386466 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.198206699 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.204325704 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.193631118 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.270093843 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.167463474 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.192890521 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.177755076 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.182913483 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.186333821 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.172645208 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.177654645 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.18431429 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.195177403 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.168850732 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.182710595 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.179305832 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.184343204 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.159882064 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.196390617 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.261073073 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.167724611 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.185760005 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.158678418 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.182651788 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.172427025 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.187325637 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.171362853 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.193240146 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238585438 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.158111028 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.232992757 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.188838608 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.155835948 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.194735657 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.157109015 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.184704424 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.158956178 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.19386774 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.177648918 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.160482419 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.185992437 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.161435613 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.182466779 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.164110255 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.188149904 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.163483289 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.190125993 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.231566597 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.162524438 seconds)
  done (took 11.323802838 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.980495076 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.202748199 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182991426 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.131339467 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.203240789 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169419309 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.966012927 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.180957509 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312740049 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.0148382 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.173458999 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.190114749 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.300750815 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.343466861 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.339912847 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.44332963 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.829559192 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.169624014 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.214223261 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.224775022 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16243588 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199562877 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.172254377 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516474407 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.181782962 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157101821 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.186005427 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.166904674 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.237206631 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.181542639 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.162538476 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.260552407 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.356099752 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.272435482 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.183402303 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.155564614 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182028595 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.247706569 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331717741 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279901725 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.252702107 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1533929 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.18087775 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.186328094 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.172239501 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.178078372 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.242908264 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.229203309 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.254586564 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.187476844 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.189023688 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.166185588 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.185584564 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.238429133 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.156258627 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420553061 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.448877891 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157302545 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187979351 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.168769087 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.356340985 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.159208863 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.320487124 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.178916397 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27665194 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.184241516 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.910856681 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.248502411 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.181481807 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.163400108 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.188194044 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.164211385 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.186173954 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.218115446 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.492763221 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190350743 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.161352432 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.182125394 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.290490501 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.157925111 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182372772 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.241384676 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.15873478 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.188775892 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166021112 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189571174 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.252068647 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.336060962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.164239321 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189359974 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.162099454 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193750895 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.158040768 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.292535454 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.315492145 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.239597019 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.291450051 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162265956 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.246881255 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.248961687 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188244399 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.252402418 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.163151404 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194506159 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161920102 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.312052112 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.19400386 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186907078 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160917111 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.189746336 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.221854119 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.16230353 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189236146 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.24867464 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555415881 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.246455991 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.174933489 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187952951 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164543271 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242726466 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.188555192 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324112305 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166889798 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.248713122 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188682094 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.154919211 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.190745555 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.244949165 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.165917328 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191397384 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161056863 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19376207 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.341054055 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.282118068 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1928776 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310990455 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.257678159 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.164739524 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.254784843 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191422317 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248251332 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168132205 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188329885 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.158923352 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.897433745 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170452122 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.189391053 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.163811963 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.268078364 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.156729358 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.187160951 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157772717 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.184059789 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862225078 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.186831021 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.157947529 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.159934025 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.188383872 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.188568882 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16540183 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.187978514 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244316404 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309645801 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.192373137 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163701194 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.183050722 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.214618982 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.185653427 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.158356101 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.184958088 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.158783251 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.192093073 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.162321619 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.188222469 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.252064107 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.241152174 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.293283595 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.642553638 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.18597735 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158045097 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.329521722 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15806591 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.411714996 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16709555 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.321704108 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.219789472 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183136976 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.420416451 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.246399839 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.268500625 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.186924748 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.228804655 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184374424 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.163549639 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.241933628 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.185421134 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.164960922 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.239237965 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.193966495 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165395264 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.345021389 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159196781 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.308313369 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.182618474 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.250848589 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.160066933 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19122264 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.392286547 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184105674 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.172734047 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.241735907 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.189805561 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.160647943 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.043424307 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.185462761 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1685083 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.191527358 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.297398922 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.246112232 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.191279003 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16610583 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.194005956 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.245242848 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.290323162 seconds)
  done (took 61.329314644 seconds)
done (took 83.590570773 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31923878 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.225676813 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.42022306 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234686617 seconds)
  done (took 2.287375022 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.346994474 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.199304465 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.301772663 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184308214 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.31043829 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.15897699 seconds)
  done (took 2.541019776 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.233198859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229095334 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.226394991 seconds)
  done (took 1.732321198 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267676567 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.269345285 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.409493973 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32271059 seconds)
  done (took 2.373705623 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.337683933 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.174154688 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.216083693 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.286966869 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.304974956 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.270633647 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.181573439 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.235234174 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.215875845 seconds)
  done (took 3.300055195 seconds)
done (took 13.276100404 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.408783757 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.487191074 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.332368104 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.489607373 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.319818882 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.315882837 seconds)
    (7/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.497859191 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.173716644 seconds)
    (9/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.295142699 seconds)
    (10/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.354068768 seconds)
    (11/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.385911644 seconds)
    (12/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.379885459 seconds)
    (13/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.372535153 seconds)
    (14/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.359333404 seconds)
    (15/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.271875565 seconds)
    (16/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.19840442 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.163246667 seconds)
    (18/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.251371142 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.223603504 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.232764097 seconds)
    (21/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.201133259 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.133881132 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.213509483 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.286142882 seconds)
    (25/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.26149275 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.274533515 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.451370387 seconds)
    (28/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.133014959 seconds)
    (29/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.275471901 seconds)
    (30/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.189116996 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.216712614 seconds)
    (32/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.169997246 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.208104607 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.178296905 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.197108794 seconds)
    (36/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.188181751 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.157308133 seconds)
    (38/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.221115898 seconds)
    (39/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.22995948 seconds)
    (40/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.138977869 seconds)
    (41/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.205055545 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.269530085 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.223852209 seconds)
    (44/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.251492316 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.290427644 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.192251752 seconds)
    (47/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.166880928 seconds)
    (48/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.127230425 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.189838806 seconds)
    (50/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.169223404 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.204421735 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.181989833 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.190313657 seconds)
    (54/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.220891637 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.186819218 seconds)
    (56/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.223546095 seconds)
    (57/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.303986213 seconds)
    (58/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.185951579 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.194634807 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.243557928 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.254652076 seconds)
    (62/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.162305765 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.20188957 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.179294588 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.189676774 seconds)
    (66/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185059217 seconds)
    (67/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.130054248 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.211141025 seconds)
    (69/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.12820988 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.161162743 seconds)
    (71/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.171497996 seconds)
    (72/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.130232133 seconds)
    (73/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.225193231 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.219137573 seconds)
    (75/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.134932382 seconds)
    (76/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.254248812 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.134050496 seconds)
    (78/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.251670761 seconds)
    (79/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.130785346 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.170252307 seconds)
    (81/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.1549197 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.183132366 seconds)
    (83/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.128675301 seconds)
    (84/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.277800131 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.19513913 seconds)
    (86/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.193828349 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.209873337 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.129546082 seconds)
    (89/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.171706192 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.271647254 seconds)
    (91/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.166345874 seconds)
    (92/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.230611728 seconds)
    (93/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.27988657 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.164304623 seconds)
    (95/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.135175988 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.16728035 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.16848183 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.188626641 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.172221062 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.160898953 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.157647352 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.18666452 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.190286349 seconds)
    (104/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.191745612 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.130705168 seconds)
    (106/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.21727763 seconds)
    (107/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.179038201 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.21642836 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.12976287 seconds)
    (110/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.129932584 seconds)
    (111/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.200205557 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.197935436 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.20779912 seconds)
    (114/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.163979023 seconds)
    (115/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.196132064 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.171860402 seconds)
    (117/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.135331804 seconds)
    (118/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158584901 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.137372636 seconds)
    (120/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.130425734 seconds)
    (121/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.223685568 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.16445108 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.196140445 seconds)
    (124/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.137323399 seconds)
    (125/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.136592649 seconds)
    (126/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.135217055 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.162288095 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.129478826 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.16726317 seconds)
    (130/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.155110227 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.138648288 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.160964952 seconds)
    (133/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158632044 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.137605487 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.164618141 seconds)
    (136/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.22309939 seconds)
    (137/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.170960917 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.211451051 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.183640811 seconds)
    (140/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.202152662 seconds)
    (141/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.131248673 seconds)
    (142/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.184561249 seconds)
    (143/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.217965218 seconds)
    (144/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.172806682 seconds)
    (145/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.201027309 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.163237099 seconds)
    (147/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159573155 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.172246066 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.230045524 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.165888903 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.190508374 seconds)
    (152/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.138656878 seconds)
    (153/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.131136648 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.131735188 seconds)
    (155/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.160234971 seconds)
    (156/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.131653823 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.140408986 seconds)
    (158/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.13130301 seconds)
    (159/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15935546 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.162450546 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.196385238 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.137659964 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.161158761 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.190559987 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.185139884 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.191827466 seconds)
    (167/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.136545367 seconds)
    (168/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.136688262 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.193171632 seconds)
    (170/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.163254768 seconds)
    (171/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.156754361 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.144694028 seconds)
    (173/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.134380985 seconds)
    (174/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.137004433 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.19439099 seconds)
    (176/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.136547601 seconds)
    (177/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.19727334 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161402158 seconds)
    (179/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.133796972 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.137549404 seconds)
    (181/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.165307265 seconds)
    (182/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.131427747 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.183940151 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.161750388 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.167679982 seconds)
    (186/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.198190496 seconds)
    (187/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.132085791 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.17109131 seconds)
    (189/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160043955 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.173320504 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.136049074 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.159595574 seconds)
  done (took 38.873489709 seconds)
done (took 39.919833941 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.32055005 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.156929104 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171666663 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.202600066 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.299175475 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179257572 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.218065231 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173589323 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.212439305 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.171638097 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.190111466 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.185175642 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.201418979 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.310388423 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.174652307 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.195492947 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.163330057 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.212272525 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.187370894 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.217233281 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.300823241 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164319499 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.213147287 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.165163461 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.298066465 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.196536585 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.172659735 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.203443678 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.185802399 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.202961773 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.173114542 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.191525193 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.188593326 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.215955884 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163313714 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.2016607 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.164165569 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.163838502 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.174934746 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.200409703 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.187198665 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.199631671 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.174869933 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.191596362 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.176081609 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.172736561 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.191263917 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.175772702 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.191753225 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.173746326 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195022426 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.187343726 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.200748364 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.162753029 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.191438241 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.164078267 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.211119305 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163620737 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.214409528 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163185137 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.192369923 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164634553 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.202850097 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165128331 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.201681163 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.164656414 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.199881913 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175553609 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.19954877 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166912985 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.191292692 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.173813723 seconds)
done (took 15.071693265 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.174840321 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.233690821 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.317748787 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.317561053 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.19249494 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.21159674 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.204934092 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.189378481 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.20332851 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.183809687 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.227947353 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.196574368 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.319032329 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.212762392 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.181086855 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.206187882 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.175041812 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.200869957 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.317557631 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.215482709 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.189576552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210771146 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.191250856 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.211350131 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168750929 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.229439233 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.171734618 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.205120847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.167938884 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.205184611 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.189662038 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.198012261 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.171085583 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.21356382 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.184589534 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.207351717 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.20670771 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.178242009 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.168172713 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.198503734 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.202139113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.186733312 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.195401035 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.18291048 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.204898263 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.18471036 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.2045207 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.182692645 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.197847436 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.177034384 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.196894661 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.194679784 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.209300638 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.184702887 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.209030143 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.182131959 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.208750219 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.1818813 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.200365493 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182214372 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.196546362 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.177552187 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.196848007 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.189468647 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.20123348 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.181279617 seconds)
  done (took 14.461439406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.191743028 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.227718832 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180712087 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.208722701 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.174457031 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.192423702 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163459333 seconds)
  done (took 2.462844053 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.17201971 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.333114916 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.322649968 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.356046883 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.315015269 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.335467031 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187573922 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.197048242 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.200253468 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.206384625 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.333059044 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.421442001 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.176390028 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.210767236 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.33169197 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.164638394 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.326587061 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.197676465 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.179191223 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.355456654 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.183317446 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.22910581 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.180133521 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.195410883 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.330709443 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.16700329 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.403336835 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.185876291 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.203507863 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.181958194 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209439832 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.242449058 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.326975518 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.211091788 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.174202529 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.355769613 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.320616819 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.180872512 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.40207585 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.170820186 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.31477697 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.210914321 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.181709629 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.212259743 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.181213198 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.312150309 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.217573338 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.181454499 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.213112156 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.340480937 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.20581465 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.331305748 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.178607489 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.211183838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.178424714 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213448232 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.18804158 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.211382817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.339753889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.182027477 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.353032812 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.32833889 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.321584819 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.328423677 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190480437 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.360700547 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.309650759 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.182928569 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.205701228 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.184606507 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.32788583 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.210834283 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.179198975 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.317464882 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216957687 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.33304752 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.330844377 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.208562136 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.181426633 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.201175094 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181011775 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.19493268 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.320901072 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.181548156 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.20734152 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185863929 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.210928708 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.182783439 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.200727062 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.191320768 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.211064479 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.178574874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.216839516 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.180806512 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212404664 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.333072383 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.209231006 seconds)
  done (took 24.786016924 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.175551444 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167335664 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.2024395 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.169405411 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.198676522 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168104338 seconds)
  done (took 2.238841545 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.211148498 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.211774277 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1915136 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.211705553 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231969512 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.318105396 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.327065194 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209602702 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.199808439 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.227416629 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.322006311 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.325257772 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.322774844 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.215236728 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.326522109 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.185289624 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.328740687 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.210422499 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.191741841 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210665896 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.181866493 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.21777937 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.180155172 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.311648919 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.215942334 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184074316 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.208218657 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.192913009 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.221982977 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.205255431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.189129846 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.211802213 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.1764158 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.205058618 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.330178579 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.175993121 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20921592 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.186322926 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.21626584 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.183570481 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.325041334 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.212559921 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.189310037 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.217897262 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.177248867 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.207192688 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.185286341 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.205375907 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.332966644 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.217247738 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.187523986 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.216094868 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.185032259 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.215308385 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.176341489 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206909762 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.186804132 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.328520896 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.2192049 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.175613044 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.215193147 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.18360561 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.210678118 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.188057783 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.214581756 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.185614316 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.206585767 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.184784392 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212682772 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.184689129 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.217000569 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.182878143 seconds)
  done (took 17.098833169 seconds)
done (took 62.16444731 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.800874329 seconds)
  done (took 2.957596912 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.17621312 seconds)
  done (took 2.335965419 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.916439095 seconds)
  done (took 21.113822715 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.508162596 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.422235817 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.094668044 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.243669953 seconds)
  done (took 3.432330885 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.19235379 seconds)
  done (took 2.375510391 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.48355346 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.346405713 seconds)
  done (took 2.001750292 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.855143661 seconds)
  done (took 2.039720484 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.985898277 seconds)
  done (took 3.155078241 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368634726 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.284637313 seconds)
  done (took 1.83685579 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.729913909 seconds)
  done (took 1.91876872 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.578504082 seconds)
  done (took 17.768528596 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.326098242 seconds)
  done (took 1.513564399 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359948916 seconds)
  done (took 1.551940159 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.956978329 seconds)
  done (took 5.149101712 seconds)
done (took 70.32928594 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.190565295 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.2151833 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.187964754 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.212938461 seconds)
  done (took 1.980183723 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.194150038 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.18104048 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.218630735 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.180865249 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.220165707 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.182082861 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.212785718 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.184228106 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.212759038 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.183871636 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.215814106 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.182620639 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.217417592 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.180811051 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.212950893 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.185452982 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.219161389 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.182577268 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.215479007 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.182045077 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.215933535 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.184635211 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.21747123 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.186365529 seconds)
  done (took 5.954166588 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185907929 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.172763729 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.207041691 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.172952441 seconds)
  done (took 1.934672908 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196685905 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224766432 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.195721747 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.220563523 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.196127175 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224505574 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.184548608 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.211105966 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183509859 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.220253567 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.197579664 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.227084603 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.193455606 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.217570824 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.193034813 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.211020619 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.183304735 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.225903168 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.190353606 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.225588323 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.185240525 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.222171758 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.188648221 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.223654069 seconds)
  done (took 6.141037977 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.264827462 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.227784134 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.211255286 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.262289778 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.242995076 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.185156227 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.240672434 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190459066 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.218896482 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.193868578 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.214156562 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.231648871 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.220176043 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.185902551 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.216477598 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.190124806 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.224533441 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.188179586 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.258363651 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.186913574 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.223399708 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.224255263 seconds)
  done (took 6.001679963 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.191722146 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.203452409 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.174747431 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.201406548 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.189586888 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.206771824 seconds)
  done (took 2.365449056 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.179879998 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168024788 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.201619843 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169902052 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204170726 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.171040815 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.199536477 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169419449 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.199743696 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.171462167 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198249232 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169889341 seconds)
  done (took 3.404807483 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276139794 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220011078 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.349240291 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.467958391 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261450077 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256261847 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.356116375 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254239243 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.275590422 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233009728 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247781998 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260266616 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251237465 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253170532 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241490207 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245840341 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23768239 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306798442 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239696472 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310122886 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250947135 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241996696 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.286114805 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246947534 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203170808 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261272121 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.215429979 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195352007 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26550143 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259847988 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271469368 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216561757 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241502429 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284298513 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328137887 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27347493 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.362267645 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200449233 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.265827239 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.287744901 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.325524706 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238376821 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28783325 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219027922 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227206686 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28965052 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217306614 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.285962831 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.230403252 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211138022 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279018163 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277584042 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.266786859 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202717887 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.405401064 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233297474 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.236440612 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245254651 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2859541 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300646332 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277701934 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.188967955 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271235958 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288957206 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312779299 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.239413964 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.229452293 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223023472 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262644083 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.303390326 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247325725 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257827759 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.289642279 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230044896 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236934878 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263508719 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25415725 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306253331 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266941138 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.188285745 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247797363 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200720148 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223889644 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.255617352 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221607092 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313952214 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198340306 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.272214435 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274873012 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218235992 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260026363 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258526661 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259786038 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213837947 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.188960342 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211138791 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.258446762 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25440358 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196238432 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249125046 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20581011 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.225605994 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247934043 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.191137155 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267877221 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.191205879 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257865263 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267741519 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.199347557 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279476112 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244699413 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.229677042 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267796904 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293113391 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196757144 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231459182 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317851733 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269674936 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.203272427 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269328453 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296546579 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.23895825 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202975881 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263582471 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292956598 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212497762 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298681836 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23884364 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200634452 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.228256889 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270954219 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224759308 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.258071854 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226065899 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.232333176 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285674805 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.225971892 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205868009 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282344773 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232661779 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191946964 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235980427 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2016519 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.244025165 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.24837481 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.206455374 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25405158 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264146929 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232545353 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257485187 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233227075 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240966746 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230998439 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.267298167 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213611451 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.218185636 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273657984 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263406262 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230351011 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281378309 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.226291067 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279359408 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272609457 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230337462 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2482213 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229585131 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.188168481 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261955449 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268921558 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26452044 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.285240811 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273386581 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.230132616 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.264251621 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249252925 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268420028 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.251700164 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256875124 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.239399717 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238743278 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270532167 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.21990471 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.19184318 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.226327035 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204373476 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229560407 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204466085 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280103077 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265787989 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272985063 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266032014 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204700612 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.291002019 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.22485492 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226556534 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.276374251 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239423672 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.254676869 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290613143 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278704506 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239513418 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229777613 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.221481097 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192594324 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233738592 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259840864 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204941215 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238164434 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207092047 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.290690737 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269742542 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250683693 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285991047 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265115138 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267681874 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.22122457 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.227692222 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265732186 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269809241 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.2590108 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231016039 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.259347854 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.292127232 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210566372 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29188593 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269845557 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278753674 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258424413 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.26621849 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230318046 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213465064 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260083772 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236496974 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22699786 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.24393954 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197659772 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249104861 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.235716497 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207577444 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287107459 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244997426 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27373041 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.222766456 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268857443 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2244416 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211206677 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275282702 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244901883 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.165333664 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264114662 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288160177 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218790392 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252846189 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266628179 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200070973 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.418069155 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280699591 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238434441 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236974199 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238374446 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24149719 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.260251601 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259068489 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252261129 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242413927 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311366061 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270477063 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.207331533 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231641398 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213667673 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25065876 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.228318489 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.220944926 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.264315455 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.243310899 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287786037 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204918586 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271155781 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276654384 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.21405697 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.2505709 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207886491 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325678915 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27166625 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275326422 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.265199645 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.231608224 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283361313 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192290165 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228549454 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.232255862 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253853719 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23199256 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280481966 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.234006922 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.311583059 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24485488 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263381957 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242473432 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.197277391 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.267223786 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216522017 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28319118 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236609558 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.204865716 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285238646 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.219269364 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199460071 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260885131 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394076998 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245198639 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237577697 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.197773683 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.356007563 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22808529 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232782255 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226451632 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271351615 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.232759836 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.256026622 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277001705 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208552847 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.261255568 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235895919 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274527089 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249940373 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268585341 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277967331 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.246845496 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231025816 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258928458 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273309057 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213749807 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.249362436 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259024699 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263142401 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.27552568 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.234411374 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237288135 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272752981 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273705755 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274732912 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208075063 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285046653 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196100147 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268515222 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241785077 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192405962 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26158089 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.265467138 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232185601 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241836829 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274069838 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232210814 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19858021 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248924951 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234788447 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242412042 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.232996249 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28667605 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.198907767 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285882863 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312624602 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198482573 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268901095 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210979902 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234932878 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241107965 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213010048 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233749068 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.247453953 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279717903 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.230801836 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242977896 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268463259 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267180275 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255112818 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211964734 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.369175368 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.197425455 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294146483 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252003834 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299428789 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219022755 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27780481 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271927666 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219318392 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268306885 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249860754 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.290957181 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269968968 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.270517641 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200609938 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246387896 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240165108 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.204307196 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254644253 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239951813 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246984551 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.237723037 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.236582459 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24840142 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.248198531 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212210226 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303079254 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253424755 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290184597 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256011815 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242156771 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27818349 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242298689 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232237145 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.269544472 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273609584 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215069598 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256444622 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.204559532 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.240074105 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319499777 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.195463264 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263507531 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278006791 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239057844 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277604435 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.237060383 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248644118 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245661407 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281767884 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198688045 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.254608146 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.273213235 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205683139 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.229677042 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.242899883 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263224953 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.269421551 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211711839 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.284753459 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298559055 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.194523759 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238968797 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395306484 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231246446 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299654516 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.226805797 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209856296 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250363681 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228254445 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.267283361 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277784905 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.200404115 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23354122 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.248052423 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.22420826 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.230463874 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242053127 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286859663 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261771975 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253876139 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.23888785 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.360071976 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211581236 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276496194 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.177251102 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.234872605 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211048416 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239749412 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246873642 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279417725 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322016648 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.235313792 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.251405294 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205312212 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.230607538 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200440992 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264834027 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25381866 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243211584 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252047834 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.164575467 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247084423 seconds)
  done (took 121.695825778 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25489198 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.244647871 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.264379359 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.314555713 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290472203 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.389442331 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.322063162 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.341084575 seconds)
  done (took 3.74657748 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.197111868 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.237543545 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.24531255 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.188275409 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.215095579 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.597729711 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.239245647 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.226151105 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.233057011 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.227770654 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.213733604 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.650988929 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.222117771 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.190385663 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.255895041 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.181437946 seconds)
  done (took 5.637974494 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.46003357 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.661579451 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.64761741 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.378197674 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.34460681 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.291070324 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.944803246 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.272631177 seconds)
  done (took 14.333598079 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.2496337 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278005744 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.546060291 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.419609365 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.29332501 seconds)
  done (took 3.124914838 seconds)
done (took 177.497594915 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.203339754 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196468838 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.231500109 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.198488509 seconds)
  done (took 2.146729134 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.263836065 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154591166 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.192247003 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.153966647 seconds)
  done (took 2.105799558 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.466136092 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153575675 seconds)
  done (took 1.981864873 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.22127311 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.241227812 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209800701 seconds)
  done (took 2.017405216 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.211810664 seconds)
  done (took 1.548090229 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.723316003 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190929238 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.388910769 seconds)
  done (took 2.642302418 seconds)
done (took 13.780356357 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.217224062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.041950795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.659130955 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.206055673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.826842086 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470844302 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.536400264 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.25481739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.277356499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.218158887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.214951077 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.800510246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.520931398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.959630132 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.50240006 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.959026703 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.782410459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.217843624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.220808666 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186789256 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.513171193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183003509 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.183723363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.218749116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.766051954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.522972509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.183071674 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.002306299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213634988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193760464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.47229749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.217630888 seconds)
  done (took 24.069129113 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.189984076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.276597115 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240444054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.220339961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191810775 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.219596989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19406532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.231963645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.319209587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184619147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.240716365 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.18372476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222684672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.18547589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.241909743 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.184157217 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219965193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18697238 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225227803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186786741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239212263 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182786861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218791859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185965897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.217745986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.203140706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.21774403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198777093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217861014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19585675 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.22228092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185638202 seconds)
  done (took 8.18388756 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.231359518 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.286946685 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239380161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.257812254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.272752492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187500589 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.308355901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.22283071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.32467369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.219273135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.205840492 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219581764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223806533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.221936603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.20926041 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.219281027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.187010793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.22080259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.192135676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.220762291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239258568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185388729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.186511846 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.219211605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.184447547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.2396934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.183865491 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.230234725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218754144 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196602026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.224121238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185974277 seconds)
  done (took 8.522322357 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.20398432 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.198757188 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.243949458 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.2076454 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.232184554 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.198444719 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.233961386 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.195905429 seconds)
  done (took 3.077940987 seconds)
done (took 45.189729365 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.212487286 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.200245507 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.243047946 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.19973769 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.387811467 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.192910565 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.203564853 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.230193937 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.199379195 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.243551572 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.184306677 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.22880661 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.205094866 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.230910649 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.357927918 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.199670852 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.358391874 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.395165265 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.195374984 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.236355195 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.194322616 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.360305665 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.233837627 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.194561892 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.341845985 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.188849224 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.382498431 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.197779899 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.195112591 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.222664349 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.3591287 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.195957531 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.231691055 seconds)
  done (took 9.545363835 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.306380301 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232633773 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.195063702 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.230986636 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.195555105 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.229362966 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.342175635 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.193604578 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.230343817 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.194361797 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228456217 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.288256558 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.236033577 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189785447 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.232550033 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.17503867 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.345725039 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.194198927 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.223894882 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.158597123 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225962603 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.194900413 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.354959873 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.190550419 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.232370192 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.194059524 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.232918236 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.198838065 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.233867449 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.195977017 seconds)
  done (took 8.256024247 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.205657227 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.207628009 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.249687129 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.29672209 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.225251688 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.24202938 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.211434569 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.242335285 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.215890442 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.224869308 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.204772199 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.26062595 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.205029146 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.235361005 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.188369624 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.239671399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204359856 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.223026266 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196693588 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.241794924 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.208522955 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.239718543 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.211159255 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.23171515 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.18797146 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.231601658 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.19933736 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.233746694 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.198744617 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.239751996 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.190564736 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.225615562 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.191338228 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.258294438 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.191295066 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237106339 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.209857972 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.236753989 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.203122758 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.257320851 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.191735625 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.225172978 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.215721776 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.281048728 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.191139251 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.235978123 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.190909542 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.239043038 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.186323903 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242145108 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232475442 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.225346603 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.210165343 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.22339433 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.188892596 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232293436 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190505441 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.227892039 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.204463012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.224612781 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.210857819 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.231461976 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201704211 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.226845117 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201950332 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.18772052 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.224410591 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.193761791 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.251110145 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.197123181 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.262027175 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.188283441 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.23743578 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.202038891 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.236044332 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201582477 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.224210914 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.200004484 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.236103138 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.193010718 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.239799908 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.19153567 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.225846527 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.205837418 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.24624521 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.20303357 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.236319437 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.201095544 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.226306292 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.191479447 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.242664867 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.192041529 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.228254305 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.203225424 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.225782064 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.193660521 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.235326923 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.198714585 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.222451472 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.216989255 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.227606388 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.192280247 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.250225395 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.194381283 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.193535924 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.235642396 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.265824585 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.190808692 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.198284293 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.2370967 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189994622 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.233926186 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.190920927 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.224197434 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.206584161 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.241812593 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.196941664 seconds)
  done (took 26.954682925 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.458291798 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.445687891 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.295370312 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.532592168 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.2025319 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.403640156 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.447005167 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.44869372 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.228136692 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.2247936 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.284400761 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.409673186 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.230463175 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.217313877 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.491724821 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.534744188 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220652501 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.266303557 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.261531861 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.20424385 seconds)
  done (took 8.213734932 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.203410643 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260243499 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214336823 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.243721356 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.202662713 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242184429 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.191410653 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.246553 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202272231 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.232644458 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195318972 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.197873836 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.23918286 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.204908738 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.24225001 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.214121293 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.234923869 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.195156521 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.248728068 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.196391873 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.20398453 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.215918239 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.236032598 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.212779433 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.243539349 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.201921487 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.227546115 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.1954032 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.233433945 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.20075011 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.22920282 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.199038509 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.233929887 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.172462922 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.201366458 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.242989 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.198355461 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.229790394 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.195642197 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.230123258 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.206755412 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.239338885 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.199680979 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.166612737 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.246712379 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177965997 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.241802746 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.202656777 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.208196796 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.211919756 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.238671342 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.205686771 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.234272738 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.213607401 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.197543068 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.245175242 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.237301755 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.205926117 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.231021417 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.190534983 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.188482697 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.230330687 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.200010071 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.241894378 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.203267678 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.236224383 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.200450001 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.228233563 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.195783207 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.232531246 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.195018165 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.239708625 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.211332671 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.238897489 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.198951836 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.237144263 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.200109037 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.161248159 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.236480072 seconds)
  done (took 18.508767072 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.221663174 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.236945145 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209848822 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.26037061 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204399247 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.197041327 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.239734467 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.211855642 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.24298879 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.210253902 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.242860841 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.204968663 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.249627484 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.238445545 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.204564701 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.207301431 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.242118568 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.265915938 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.204849374 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.25650699 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207365685 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.233063088 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205222047 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.239943361 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.222261993 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.240457184 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.218786691 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.240139615 seconds)
  done (took 7.778975036 seconds)
done (took 80.621378671 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.597685082 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.843915626 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.517910134 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.513914933 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.52351336 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.529721482 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.512188177 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.518556166 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.155643326 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.491547005 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.516606477 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.51522725 seconds)
done (took 32.695720874 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.645614572 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.282630355 seconds)
    (2/2) benchmarking "String"...
    done (took 2.333944072 seconds)
  done (took 6.038075163 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.306342937 seconds)
    (2/2) benchmarking "String"...
    done (took 2.295956001 seconds)
  done (took 6.006686954 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.507403141 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.506662754 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.835730717 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.504573801 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.504026804 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.506512944 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.52299842 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.513114552 seconds)
  done (took 18.297794922 seconds)
done (took 36.902631265 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.545777085 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.787932111 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.782913595 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.491200731 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.503511096 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.516139238 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.505408824 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.568042486 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.510992145 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.507320659 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.073817906 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.796740144 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.512694317 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.930817669 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.49609011 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.515000197 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.504324607 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.853735521 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.505319496 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.495409088 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.491607836 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.506089217 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.511853707 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.535611477 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.546742292 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.504740791 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.497441539 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.514329999 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.795389344 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.53456721 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.513565377 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.507544639 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.496570689 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.506695369 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.521152376 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.518778052 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.803662323 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.527898904 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.499940041 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.525025633 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.806479442 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.537832989 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.50757111 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.525230548 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.508512151 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.542519618 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.494266205 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.706270889 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.535323731 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.519937346 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.606475587 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.919968175 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.510839193 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.519622712 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.523717366 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.830491154 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.519951245 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.652993862 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.521578547 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.540992748 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.508954875 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.508581853 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.601264449 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.519185296 seconds)
  done (took 164.634710117 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.510763694 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.511738888 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.510132189 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.519061537 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.511756069 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.511092367 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.510544532 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.511257053 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.510609904 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.541566983 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.511086361 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.510413091 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.513509993 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.518758147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.519540578 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.534666734 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.511807333 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.513608539 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.519541836 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.513219104 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.519273365 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.512330304 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.511499682 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.509923084 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.539482081 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.616318179 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.548321473 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.549243308 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.521218445 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.512575936 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.536693668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.524346986 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.362817925 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.468699826 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.522398693 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.528954416 seconds)
  done (took 92.006807922 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.512103459 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.512740133 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.51534654 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.513297467 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.553061601 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.513628095 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.221636634 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.225707962 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.593602231 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.143946448 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.299361672 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911491608 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.513984914 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.61396313 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.526040636 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.514366806 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.515361486 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.616359106 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.540200259 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.515762724 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.51414946 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.227245657 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.528845184 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.614121181 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.711143156 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.513765403 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.557459786 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.921531432 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.512295523 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.514362965 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.555638326 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.873778503 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.554203018 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.515771105 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.998496387 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.211906906 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.634115134 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.514780686 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.557867519 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.518039201 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.818719546 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.5152188 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.519231601 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.519681937 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.293398274 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.515058025 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.227977385 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.517020006 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.59125745 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.514093727 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.516907353 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.621588403 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.585245861 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.517458959 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.516843587 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.519815893 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.517677562 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.51770955 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.558081583 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.490912288 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.512619797 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.514834323 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.52105362 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.55901131 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.517221988 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.837814013 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.518013289 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 23.39664206 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.578726247 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.776894953 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.226369778 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.51716828 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.619908928 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.645118908 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.519228527 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.518722667 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.518186706 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.516801822 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.638563675 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.518229308 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.392779068 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.7147103 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.518799213 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.324789766 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.624655133 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.516396115 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.057133802 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.518802915 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.518982966 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.466564079 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.621572687 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.517002057 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.518526343 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.518618254 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.518296007 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.397602936 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.229603359 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.99541925 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.520375741 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 23.026100736 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.517877029 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.539650538 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.232971176 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.365544529 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.522971112 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.638012558 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717822706 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.520610896 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.520352344 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.337192041 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.520784661 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.578119117 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.521783322 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.931545695 seconds)
  done (took 423.184002251 seconds)
done (took 681.232356381 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.503677388 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.505189731 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.505004582 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.506184271 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.507361935 seconds)
  done (took 13.94099103 seconds)
done (took 15.357682077 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/21) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.842974794 seconds)
    (2/21) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.831266393 seconds)
    (3/21) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.83005276 seconds)
    (4/21) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.627649019 seconds)
    (5/21) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.843925265 seconds)
    (6/21) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.848903063 seconds)
    (7/21) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.743139613 seconds)
    (8/21) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.837112806 seconds)
    (9/21) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.844078496 seconds)
    (10/21) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.829904767 seconds)
    (11/21) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.590877304 seconds)
    (12/21) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.849417094 seconds)
    (13/21) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.811435797 seconds)
    (14/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.853089349 seconds)
    (15/21) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.620771747 seconds)
    (16/21) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.727522194 seconds)
    (17/21) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.763781344 seconds)
    (18/21) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.758041369 seconds)
    (19/21) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.743243397 seconds)
    (20/21) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.61404687 seconds)
    (21/21) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.590800688 seconds)
  done (took 38.418793271 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.957660538 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.533563451 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.651985633 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.909799982 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.596444422 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.926979961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.969792667 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.531831806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.804910108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.59479945 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.574951186 seconds)
  done (took 22.470866722 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.929806856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.530914022 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.654767481 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.909584033 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.595570428 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.931711358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.956272163 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.533152714 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.777338306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.576856596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.571034836 seconds)
  done (took 22.384497848 seconds)
done (took 84.694911625 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.585772395 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.667268373 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.564535337 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.562842594 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.562151444 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.562634885 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.565274536 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.562271501 seconds)
  done (took 14.048962791 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.562185037 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.561471818 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.561560238 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.562944282 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.562606949 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.565151476 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.562513431 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.560855958 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.567353502 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.561526993 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.561734352 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.562015184 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.564784251 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.562569095 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.563101914 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.564588346 seconds)
  done (took 26.426962536 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.56492959 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.561620581 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.562063514 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.562943723 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.562842314 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.561472448 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.564314498 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.55995298 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.563102054 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.562500791 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.561395761 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.561067368 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.564956968 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.561673799 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.561203628 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.565187724 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.562535222 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.563039406 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.565368403 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.563227908 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.562129444 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.564638352 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.562566511 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.562485774 seconds)
  done (took 38.928015987 seconds)
done (took 80.823448361 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.527836815 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.526972738 seconds)
  done (took 6.474243129 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.661735965 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.680586128 seconds)
  done (took 4.767155167 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.563598207 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.564588416 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.568280576 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.563087108 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.564217349 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.565672422 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.565406048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.56458653 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.565403953 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.56514547 seconds)
  done (took 17.071339868 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.56467935 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.566518759 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.564029057 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.565383489 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.563566289 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.564444822 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.565790454 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.567960912 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.565099933 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.564085838 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.565793318 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.566112074 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.565330479 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.562495273 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.564965419 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.565998931 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.564207711 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.565201902 seconds)
  done (took 29.59450507 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.588261328 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.591369754 seconds)
  done (took 4.603174677 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.746239588 seconds)
    (2/7) benchmarking "second"...
    done (took 1.647811848 seconds)
    (3/7) benchmarking "month"...
    done (took 1.731807864 seconds)
    (4/7) benchmarking "year"...
    done (took 1.718729386 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.64700553 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.59403406 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.646411182 seconds)
  done (took 13.15562859 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.569034093 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.924342823 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.127303129 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.783417779 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.557292028 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.587782287 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.517928991 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.587721036 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.59247157 seconds)
  done (took 17.669947625 seconds)
done (took 94.75868007 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.532764886 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.541282519 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.545415167 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.552739004 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.932779022 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.56411133 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.53522749 seconds)
done (took 18.632947179 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.535050372 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.535729439 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.516919785 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.541927084 seconds)
  done (took 11.553842147 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.530891952 seconds)
    (2/2) benchmarking "read"...
    done (took 1.942598637 seconds)
  done (took 5.900135346 seconds)
done (took 18.882731386 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.569982607 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.568099198 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.569960817 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.567502963 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.56755681 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.567796994 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.568651433 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.570286766 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.568463909 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.570679344 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.568789369 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.568992189 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.570287255 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.569708062 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.569177268 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.569247039 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.570263299 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.568900626 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.568853693 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.568077337 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.570520735 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.571068151 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.569110708 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.571533364 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.569736487 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.570029611 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.569103306 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.569148702 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.569401737 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.569902849 seconds)
  done (took 48.506542418 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.578215847 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.579613511 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.568203191 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.569982607 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.570349275 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.572700621 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.571828443 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.569226435 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.571594684 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.5709541 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.570401725 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.569995389 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.572176812 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.573098227 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.571687782 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.575710011 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.571620735 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.570625496 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.570733052 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.573832748 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.570249471 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.574122659 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.571558716 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.570567179 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.571739395 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.571705732 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.572315167 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.571015629 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.572534677 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.572570227 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.572712633 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.572658506 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.571423294 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.572483414 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.573437377 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.571985865 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.579748933 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.582486083 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.571567096 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.57236685 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.574458316 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.572390735 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.572958754 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.572968741 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.572181491 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.572375928 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.573820316 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.574605821 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.575552031 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.572711376 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.574193199 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.571762652 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.573542766 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.575123625 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.573639707 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.573388348 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.573880729 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.573397288 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.573685732 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.57575059 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.574538983 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.574609243 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.573855097 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.581019556 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.574841117 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.573841199 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.574759891 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.575478279 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.574545409 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.57500238 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.575416888 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.573868227 seconds)
  done (took 114.705071576 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.574109529 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.575494133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.57688586 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.574583611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.57464584 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.575470177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.576270838 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.574771904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.576945085 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.575685218 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.577929498 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.576918056 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.575575288 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.57696471 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.575817497 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.577475879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.575611326 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.576106919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.574900271 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.575007618 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.577791492 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.576744221 seconds)
  done (took 36.103755793 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.579403149 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.577951847 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.584591309 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.578785543 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.578627282 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.579486959 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.575036462 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.577976571 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.577394374 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.576392151 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.577539783 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.576891866 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.578531599 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.577519739 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.576961567 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.579364597 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.577186946 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.579926051 seconds)
  done (took 29.843603228 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.57739179 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.584052064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.578382768 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.577148673 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.577936551 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.577667523 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.57874706 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.577950729 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.577662286 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.578715212 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.578946038 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.58041026 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.578155504 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.578473631 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.578916914 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.578095511 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.577525815 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.58049414 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.579153187 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.580705131 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.579238603 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.578367892 seconds)
  done (took 36.169842549 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.580462362 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.578873333 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.578665765 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.581320921 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.57905932 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.580572222 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.581498038 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.579570699 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.580703804 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.579752844 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.580820089 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.578799441 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.582329638 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.579751587 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.580725244 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.579751307 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.580110642 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.580886927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.581361778 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.582611309 seconds)
  done (took 33.04420248 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.581756102 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.580722521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.583135677 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.581651131 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.582385442 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.583324388 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.58305494 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.583158096 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.583209569 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.582325797 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.58432242 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.585390223 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.582608514 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.583269213 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.582476025 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.585854249 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.588170465 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.583180864 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.585545759 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.587359398 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.583404985 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.585003372 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.582722356 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.585451893 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.58625388 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.58223689 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.582779696 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.583422026 seconds)
  done (took 45.780979831 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.610216984 seconds)
    (2/2) benchmarking "in"...
    done (took 1.611192248 seconds)
  done (took 4.659068867 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.58330595 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.584263963 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.585134255 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.585410757 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.583293518 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.584812985 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.584464267 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.584938978 seconds)
  done (took 14.113204899 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.578866209 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.583718851 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.584547867 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.585003232 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.586440566 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.57921325 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.596082365 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.591759469 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.580717772 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.582904013 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.58679082 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.587001601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.583880673 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.581248007 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.581823569 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.584462731 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.587729557 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.586506776 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.588644687 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.586762046 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.586305982 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.586464452 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.589002415 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.589063875 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.582378946 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.600742874 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.596329184 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.591275818 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.581957244 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.593886625 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.58533847 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.587784871 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.588122973 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.589438154 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.587993696 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.58884611 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.602698639 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.591661202 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.599632816 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.594450872 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.588877677 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.588580853 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.588856795 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.593027786 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.592891108 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.592141152 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.588802249 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.589000598 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.581395931 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.591262269 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.597777553 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.58323122 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.590618123 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.596498479 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.594698809 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.60380276 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.596478016 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.588237373 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.595599832 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.604263852 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.610278025 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.599423363 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.596518384 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.594945349 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.598126689 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.603799198 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.60497777 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.596651781 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.591635011 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.591953907 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.600909376 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.611760267 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.610117669 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.595341419 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.592060904 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.590119106 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.586235582 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.595934232 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.601979762 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.601224011 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.598673197 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.591533184 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.601002334 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.598009286 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.590460491 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.595847349 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.592823989 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.59291206 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.585613924 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.607271288 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.599611864 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.592982878 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.587856319 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.592117335 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.592229571 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.596812136 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.587198274 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.596431501 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.59601853 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.59399886 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.594114936 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.594442771 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.60526824 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.597773991 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.593606492 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.604060055 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.601675953 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.588651392 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.607690894 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.600855109 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.594717597 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.590771075 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.599140645 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.596959502 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.59307933 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.601896442 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.599149026 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.596966626 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.600311884 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.595783095 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.603056437 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.611221301 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.60036175 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.593872587 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.597916467 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.602558468 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.595501286 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.597787401 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.601339458 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.59564488 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.592964371 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.598867356 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.601319553 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.592855139 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.602459084 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.595355108 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.60172582 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.597258213 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.596673222 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.59913813 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.600313699 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.595513927 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.604605376 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.608058609 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.602246417 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.602171478 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.614444058 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.59786667 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.60359624 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.603277973 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.603129351 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.597431908 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.5936162 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.6023201 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.5921019 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.600459179 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.595760327 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.601856912 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.597279305 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.597521375 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.59820533 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.593216498 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.597099604 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.60257474 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.607618888 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.600502201 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.601616449 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.598920924 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.598235641 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.593373361 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.602286715 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.592992587 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.599490899 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.608019218 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.598659858 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.601662893 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.606465459 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.605934665 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.600506461 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.601443312 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.598785572 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.606658919 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.605448151 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.612419568 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.610153778 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.600457014 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.60130356 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.595823603 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.597275115 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.603061116 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.600467281 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.608883923 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.618983182 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.616472178 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.601007293 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.603241446 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.595495488 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.605697624 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.610061587 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.606792386 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.602554487 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.601956017 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.597172029 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.604670957 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.602017757 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.606717377 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.597365978 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.604684577 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.603652322 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.600767108 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.601578874 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.599312106 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.603793052 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.606987104 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.601901261 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.603293617 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.597367025 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.605436976 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.595035514 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.600749439 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.6052901 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.603700094 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.614139409 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.612861454 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.607221561 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.613631943 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.605853091 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.600877388 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.605231085 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.606787498 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.604120748 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.616072826 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.609885517 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.60199003 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.623256421 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.607646685 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.599515483 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.612853073 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.611831714 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.603112799 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.601719115 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.612183714 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.604528272 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.605518062 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.602976678 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.602287344 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.611404564 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.616047892 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.614308286 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.600787712 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.609490774 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.602273586 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.610169841 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.610648183 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.615407378 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.612495346 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.617568547 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.614066565 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.604524011 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.603329446 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.609881326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.606196919 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.607337916 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.60400977 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.613598978 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.617526363 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.609279155 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.614406623 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.606147891 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.610213142 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.603323579 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.609656786 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.603182639 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.628817045 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.629397495 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.623772199 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.620120967 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.610919377 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.622392344 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.611591111 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.607072101 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.607752355 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.609935593 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.606485085 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.606480126 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.611038107 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.606503243 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.613825543 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.613364731 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.612060584 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.614059092 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.608131453 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.604863509 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.61341299 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.616761392 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.610128914 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.604597624 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.609508025 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.611112419 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.618317734 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.612419568 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.607339802 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.624908586 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.616922236 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.610768381 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.610555155 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.60865233 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.60602937 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.614319461 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.616505144 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.612564 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.618090751 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.610947314 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.618338058 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.611093841 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.624478155 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.620627875 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.612469155 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.61712729 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.610354152 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.604136951 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.607273383 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.614581854 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.624590529 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.62271103 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.605871599 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.616737925 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.614951315 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.610875866 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.613242159 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.612334991 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.612755435 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.611350927 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.625655679 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.618627131 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.611403727 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.622089583 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.620648059 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.613864375 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.615317493 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.607193484 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.623981653 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.622527836 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.61691609 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.614727404 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.609897669 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.615021296 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.612496743 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.613995537 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.614376381 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.614852978 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.625543723 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.619747456 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.61773854 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.614326445 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.62681693 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.624705628 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.62653058 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.624698573 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.614639892 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.624615323 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.615596718 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.611575327 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.61039012 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.612010438 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.619895729 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.608580952 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.617542496 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.61412621 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.620182916 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.62604239 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.624553793 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.608823301 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.624296987 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.627334383 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.60925506 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.617896731 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.613487721 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.609586876 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.619208699 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.616234648 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.607575167 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.6137872 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.61970129 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.62184863 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.613354673 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.621582605 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.611727301 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.619507411 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.614473111 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.61409541 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.616296179 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.614151911 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.610270762 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.619201297 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.626153717 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.624970815 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.616847924 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.623281494 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.614881473 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.631766092 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.628080219 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.619095418 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.622031754 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.618543671 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.612619943 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.621749875 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.622893037 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.613675314 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.621141138 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.612972152 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.619375969 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.619686204 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.628501501 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.622140288 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.622824453 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.61243633 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.614234953 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.620666636 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.617624071 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.619952091 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.626927209 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.63404655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.614957042 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.614738438 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.619114833 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.619309062 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.624890009 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.615439925 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.620324763 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.619629284 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.622216624 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.619902433 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.620729145 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.614555384 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.617972928 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.636286291 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.62849815 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.624566853 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.62241204 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.623222897 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.616186807 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.62466051 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.625722028 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.619580116 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.618918718 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.627971406 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.625249622 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.626610968 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.626800936 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.632550131 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.641216317 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.635123433 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.625639196 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.646353144 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.64782833 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.638171027 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.619633404 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.626832644 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.625007412 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.631234321 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.626949139 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.624481298 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.64616527 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.63053549 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.626240948 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.627750359 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.622824383 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.617042502 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.627266428 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.622508281 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.630798093 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.630518797 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.628357977 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.632076747 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.623483266 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.622747138 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.617488928 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.619185512 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.623919214 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.622985368 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.624208986 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.62663639 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.625753876 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.629014975 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.630015241 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.624616301 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.624699203 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.623795805 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.614721607 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.624805292 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.617121772 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.629378289 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.625044358 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.618840147 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.626852688 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.624723088 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.622112142 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.628190219 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.631144435 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.623707107 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.618391347 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.631041419 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.64050638 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.631207292 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.625036396 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.621978745 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.627598523 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.629150676 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.62660154 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.625631932 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.623433748 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.645505828 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.63767292 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.621523729 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.625101558 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.637722577 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.635144665 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.626611317 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.626032682 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.630505457 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.630434987 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.632981331 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.630012588 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.63744384 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.631854233 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.623546472 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.629635584 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.625780555 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.626022625 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.640142926 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.638579879 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.628829127 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.629691737 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.646810464 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.637511237 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.637908424 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.65071096 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.637816723 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.635712964 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.632874753 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.625950619 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.635691662 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.63392349 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.635179375 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.628302314 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.627698187 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.628505063 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.622890452 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.639026164 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.646386388 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.639438996 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.629004988 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.658924015 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.62632811 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.629068683 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.626600911 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.630627819 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.629419914 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.630387355 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.629788118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.625617895 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.650514007 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.654688771 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.634654868 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.628908956 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.62855947 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.636837408 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.63731205 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.63539777 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.636983027 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.628177927 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.630067274 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.636781116 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.638507733 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.629997363 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.626587152 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.625724682 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.62516211 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.633803223 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.646707238 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.650276338 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.642947542 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.632120049 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.632638341 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.629606111 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.627345837 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.636199547 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.633370906 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.628826333 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.629920397 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.634690906 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.630307597 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.632705039 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.629412511 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.637147364 seconds)
  done (took 962.396689785 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.631248149 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.632182207 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.634357832 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.631761763 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.632353598 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.632790734 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.630903273 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.632530366 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.632001388 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.631122994 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.631013902 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.633004938 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.632331737 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.630731882 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.632545521 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.631819522 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.632049997 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.631320575 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.633921953 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.633801617 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.635259065 seconds)
  done (took 35.758363268 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.630615876 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.633196442 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.633131629 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.634882061 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.634707109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.632233261 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.632598112 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.634207185 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.632859807 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.632746595 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.633547465 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.632997953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.633665706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.632327687 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.634045084 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.635072938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.634113249 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.633621147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.635937992 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.634976696 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.633497667 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.634839319 seconds)
  done (took 37.420728573 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.638287802 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.634376969 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.630919826 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.638373847 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.634010303 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.634330665 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.636214843 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.634607934 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.636908786 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.628522594 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.632993204 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.632387889 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.63927885 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.643588826 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.641898317 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.643212101 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.637962761 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.637055662 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.638489992 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.635022652 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.647914515 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.647567403 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.637031706 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.630445952 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.63857925 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.636718049 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.639583148 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.638731992 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.630792575 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.644019396 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.637924557 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.633787579 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.651581042 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.641320171 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.637376512 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.640137478 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.637801497 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.63793224 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.6383677 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.648539315 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.649547613 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.63761097 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.652429545 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.648515848 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.638824532 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.640851466 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.645590337 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.639523434 seconds)
  done (took 80.160481653 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.639286183 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.639354907 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.638093783 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.636233769 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.638723263 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.638268945 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.645849727 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.638025967 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.638478189 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.639181491 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.640562183 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.63794977 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.639417554 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.640261028 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.639269491 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.63859245 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.639351205 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.641492259 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.639125897 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.639186938 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.639825218 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.640475092 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.642152051 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.641565942 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.641779307 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.640181758 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.641420392 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.641299707 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.639385916 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.641516495 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.641906558 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.645912235 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.641930025 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.641103803 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.641178253 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.642508939 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.64038758 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.641172316 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.642913181 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.641878412 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.639848196 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.641011961 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.642089961 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.642280209 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.640221847 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.643337397 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.64078379 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.642408298 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.641736285 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.643445161 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.643065225 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.642124952 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.643209378 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.643448444 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.641184259 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.641839441 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.642572425 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.643335092 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.641942946 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.644023028 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.642478209 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.642806114 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.644601524 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.644162571 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.643728927 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.647227207 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.643588546 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.643868889 seconds)
  done (took 113.101343826 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.644951848 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.644221657 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.64511828 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.645926133 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.643063479 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.646229524 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.64526341 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.645010095 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.644921536 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.645333391 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.645811803 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.644370768 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.646455531 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.645026438 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.644660539 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.644389486 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.646484444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.64508308 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.646145855 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.64594527 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.646968445 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.64644715 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.64863367 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.647968712 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.647251162 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.647510483 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.653322047 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.644487543 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.647237613 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.647083333 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.64855475 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.647493721 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.649467855 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.648331467 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.64813654 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.646881842 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.647253607 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.6483483 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.649453817 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.648016902 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.647368915 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.646842381 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.647710439 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.647251372 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.647806471 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.648375747 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.64923661 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.647484712 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.64767908 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.646990305 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.647076559 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.646381709 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.648265886 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.647459918 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.649183881 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.649878172 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.648539594 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.648931823 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.649089804 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.649061658 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.649651049 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.647372826 seconds)
  done (took 103.612911184 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.648597842 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.649515277 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.648683467 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.650870407 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.649155385 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.648986089 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.648442724 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.648630807 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.64748974 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.649595874 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.648590718 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.650683582 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.647737537 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.650914059 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.64884068 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.649624998 seconds)
  done (took 27.879413786 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.648656159 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.649003829 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.650575677 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.649593359 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.64840529 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.648194578 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.650026795 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.651063938 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.649293671 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.649262731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.64932482 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.655949057 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.650154255 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.65196503 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.65084736 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.651321513 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.650093843 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.651149843 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.6504339 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.65025364 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.650414065 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.649682756 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.64960223 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.652471239 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.650731703 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.651085379 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.650877042 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.652218065 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.652192154 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.65187249 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.65213209 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.652645144 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.652866262 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.650891569 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.651920262 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.653202059 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.652158002 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.65228602 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.653705684 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.653530033 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.651435843 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.652786853 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.652569506 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.654832574 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.651813334 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.6532059 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.652816325 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.653477234 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.652430592 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.653476954 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.654474707 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.654460948 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.652255709 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.653735507 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.654300592 seconds)
  done (took 92.337680863 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.652482694 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.65597846 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.655634212 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.65444705 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.654416878 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.654555932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.653532198 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.656269 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.655208738 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.658185584 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.655335012 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.654009005 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.65512849 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.655263145 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.65356684 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.655578408 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.656194618 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.655578478 seconds)
  done (took 31.289131671 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.656630009 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.65513778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.655820199 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.655287171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.654285297 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.655150002 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.656466231 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.656508834 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.656314326 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.656281571 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.656470002 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.657068402 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655601456 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.65676606 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.657994218 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.656417831 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.656290301 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.657121133 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.657429412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.657717018 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.658261432 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.656970206 seconds)
  done (took 37.941516866 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.652124757 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.64939543 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.650842122 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.671433008 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.658610917 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.650838001 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.651658636 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.647272254 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.675343352 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.682669982 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.681983163 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.659649457 seconds)
  done (took 21.430072219 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.660877336 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.657995476 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.656764732 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.658477241 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.656816275 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.658220994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.658150803 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.657979412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.65825284 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.659483654 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.658845723 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.658709533 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.659171882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.660335159 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.659844244 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.659966047 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.659633743 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.660473584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.660500123 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.6600046 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.659996918 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.659351653 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.658451609 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.66017159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.660893749 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.659446289 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.659628644 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.65840279 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.660075489 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.65814738 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.658287482 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.657493387 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.660283686 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.66029032 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.661723045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.660847654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.661226263 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.659879933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.660145819 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.659123412 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.66119707 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.661865451 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.66173422 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.660119349 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.663686633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.659140663 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.662735045 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.665045464 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.663756404 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.662015959 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.662285476 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.662970131 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.663487724 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.662832543 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.661844848 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.664036956 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.663125877 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.664839991 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.662662479 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.663013153 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.663400633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.66325187 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.661868663 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.663371229 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.664337623 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.664121394 seconds)
  done (took 111.10936817 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.664657984 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.664521515 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.662553387 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.671648259 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.664361439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.662403717 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.663466004 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.664872956 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.663458671 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.661848131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.664098556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.664389375 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.662637895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.663482765 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.664304169 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.664593172 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.664750105 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.666007878 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.665420791 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.663808994 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.665355769 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.663374651 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.663812486 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.665265813 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.664209884 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.664659032 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.663607572 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.665867357 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.665450404 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.666481122 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.666143649 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.665470728 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.665919738 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.666438729 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.6673577 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.665267838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.666651813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.666486709 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.667360843 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.66630114 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.665277267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.665087579 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.666239611 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.665717268 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.664917026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.666598943 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.665545109 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.665092397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.665369039 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.664310454 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.667731141 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.665490493 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.668308798 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.66744563 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.664769032 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.666479445 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.667450519 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.667558773 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.666858544 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.666828023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.665557331 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.66774043 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.66458982 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.666171445 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.664833217 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.664881128 seconds)
  done (took 111.423882048 seconds)
done (took 2130.214461545 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.8869718 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.842988623 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.657830021 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.661558079 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.656181837 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.646479416 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.644524768 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.657849018 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.658978911 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.669055541 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.658801305 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.937116235 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.65865373 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.655314479 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.658852009 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.818090206 seconds)
  done (took 32.879107114 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.705991384 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.678339473 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.834477765 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.665456481 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.705778577 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.95131399 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.746516648 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.670023681 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.906311061 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.674534869 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.640701796 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.703145071 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.666389979 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.652385474 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.695556537 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.955500346 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.066030464 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.643689955 seconds)
  done (took 36.072494555 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.326497245 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.691101083 seconds)
  done (took 6.529123361 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.69519888 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.67009925 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.671035821 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.66818902 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.63664737 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.636897332 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.664751572 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.64851082 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.634455681 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.84122569 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.67318344 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.68821999 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.67050817 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.668482563 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.67494819 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.731705548 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.865688227 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.675024876 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.67133998 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.680817651 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.682942643 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.827448518 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.727745127 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.675297676 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.842163169 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.642798571 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.671804634 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.6846115 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.861505643 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.673538164 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.667802169 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.671092881 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.672165434 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.659349559 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.331858193 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.639672964 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.704584361 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.684956097 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.672301834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.884774803 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.669892031 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.681538484 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.643087016 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.327488154 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.858038722 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.84673889 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.640929549 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.667129458 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.672301136 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.755277051 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.67163897 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.67247511 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.782362967 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.64027332 seconds)
  done (took 104.699860299 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.645788965 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.641203955 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.916304092 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.664293064 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.638496209 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.637611668 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.639055009 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.089204221 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.710827124 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.644061231 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085075414 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.47647344 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.652046954 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.691642212 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.692280841 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.674953498 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.649476585 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.646139638 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.642437771 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.643985803 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.369376511 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.643104406 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.641974653 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.839940121 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.71778157 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.395994979 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.642726146 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.643983149 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.647174197 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.638529942 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.441242982 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.650539639 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.7114844 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.641948603 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069712916 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.237975932 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.197664382 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.64985722 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.651894001 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.640398685 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.64154066 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.392647627 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.217923941 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.646595003 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.64294433 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.394246293 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.645071556 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.648587086 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.650141823 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012072415 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.641383098 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.644296946 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.642126837 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.642749891 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.64255685 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.706655016 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.687061671 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.39755698 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.645313346 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.659493152 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.681001823 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.646255645 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.653825532 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.646026705 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.64543927 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.217829097 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.875991703 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.643897105 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.218973936 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.43819441 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.646584039 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.50960377 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.647411588 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.697557908 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.764964036 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.645435917 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.645031397 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.392677169 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.682599233 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.643291022 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.199574332 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.647222038 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089646805 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.667711167 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.64679866 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.391628642 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.651852306 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.712726597 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.649777671 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.645490813 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.645452679 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.666827605 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.07488564 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.678846731 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.647214496 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.64811475 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.69038458 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.647470045 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.648841239 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.647810452 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.514545251 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.658381139 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.649590077 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.652898459 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.648470103 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.649982655 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.647764426 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.652966903 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024928519 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.647852007 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.649391519 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.650682395 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.645804121 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.65609258 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.859123496 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.658505107 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.156063701 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.652174833 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.649719423 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.648665518 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.650467005 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.66024667 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.648691359 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.654387964 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.650191341 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.061740183 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.672628621 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.651252299 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.650180236 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.652192224 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.648251639 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.652845728 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.68627044 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.656589501 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.645445276 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.662006601 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.669246907 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.650435366 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.658765406 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.652897969 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.661145178 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.649477284 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.08791942 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081590473 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.905692826 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.650984179 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.650324528 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.648956686 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.692473813 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.921134455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.671166564 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.650466376 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.044994269 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.853680066 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.653153729 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.648972331 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.653789145 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.036870611 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.64871343 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.079245064 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.465741419 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.653624878 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.663321921 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.644481956 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.544022183 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.654172643 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.651914185 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.092721777 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.675684876 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.651673093 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.651970338 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.654555443 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.649165931 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.658109456 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.658449863 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.653592332 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.650778078 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.769224075 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.940650135 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.673859854 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.657036485 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.402608251 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.662191889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.66488895 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.658126707 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.651858661 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.653886573 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.679426972 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.657073571 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.681766864 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.654130528 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.659151418 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.438413572 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.653796688 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.672731637 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.941014776 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.600614017 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.656063526 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.65529618 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.652879601 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.689061507 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.433126727 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.721466117 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.162702603 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.663732029 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.73203911 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.655738554 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.687124948 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.428697671 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.666968824 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.65442945 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.593821184 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.657557781 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.43940462 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.655611443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.677089804 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.529602054 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.658512511 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.65737298 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.652728814 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.655825856 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.056173065 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.653812402 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.694509616 seconds)
  done (took 578.211305447 seconds)
done (took 759.901439512 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.654469818 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.658786288 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.656733513 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.656783589 seconds)
  done (took 12.154419637 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.694626042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.685191602 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.692447203 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.686038008 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.6934342 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.685658839 seconds)
  done (took 11.668379897 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.65759766 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.65967446 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.654593856 seconds)
  done (took 9.503342919 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.006911912 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.65942813 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.20118103 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.674987929 seconds)
  done (took 11.075309926 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.692023825 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.694736809 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.695447794 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.692541349 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.696528448 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.693572695 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.695867401 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.69436253 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.696533826 seconds)
  done (took 16.779366846 seconds)
done (took 62.712388637 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.868260413 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.6453732 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.911419811 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.655781926 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.802420825 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.033589816 seconds)
    (7/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.93883482 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.721165519 seconds)
    (9/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.800560811 seconds)
    (10/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.183585008 seconds)
    (11/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.557248655 seconds)
    (12/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.996375237 seconds)
    (13/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.648441048 seconds)
    (14/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.217027668 seconds)
    (15/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.647893911 seconds)
    (16/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.726152466 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.039631576 seconds)
    (18/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.77672901 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.648288166 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.611982222 seconds)
    (21/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.842411106 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.644690571 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.819604644 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.646419772 seconds)
    (25/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.651697119 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.646777709 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.902512044 seconds)
    (28/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.483683644 seconds)
    (29/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.045867704 seconds)
    (30/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.773603962 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.816224745 seconds)
    (32/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.724907127 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.665404099 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.870104082 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.814047722 seconds)
    (36/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.64678567 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.644889619 seconds)
    (38/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.891074905 seconds)
    (39/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.624990301 seconds)
    (40/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.6492327 seconds)
    (41/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.69335074 seconds)
    (42/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.64519699 seconds)
    (43/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.644839333 seconds)
    (44/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.647056724 seconds)
    (45/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.66642036 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.66388533 seconds)
    (47/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.97392783 seconds)
    (48/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.661583153 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.859658062 seconds)
    (50/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.728589788 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.914303348 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.994194792 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.030871872 seconds)
    (54/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.649820204 seconds)
    (55/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.761175077 seconds)
    (56/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.651592427 seconds)
    (57/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.650335144 seconds)
    (58/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.959187757 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.863003389 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.649805328 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.648756871 seconds)
    (62/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.668119109 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.851381101 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.854374428 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.840834927 seconds)
    (66/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.437337598 seconds)
    (67/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.995714609 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.822300238 seconds)
    (69/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.820640251 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.65142816 seconds)
    (71/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.726799755 seconds)
    (72/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.648615721 seconds)
    (73/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.664442734 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.648355562 seconds)
    (75/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.644666895 seconds)
    (76/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.007441309 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.648679976 seconds)
    (78/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.66909158 seconds)
    (79/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.647635219 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.726064746 seconds)
    (81/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.842065601 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.822774531 seconds)
    (83/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.651609049 seconds)
    (84/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.815244802 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.871880914 seconds)
    (86/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.84413395 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.826759045 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.65080748 seconds)
    (89/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.845496833 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.102068008 seconds)
    (91/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.828237795 seconds)
    (92/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.654279012 seconds)
    (93/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.694323489 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.847134262 seconds)
    (95/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.647448952 seconds)
    (96/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.666384741 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.863050951 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.87751955 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.72886629 seconds)
    (100/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.979765094 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.661964137 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.820396365 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.924954004 seconds)
    (104/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.824462245 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.650287582 seconds)
    (106/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.830391142 seconds)
    (107/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.674654507 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.663108556 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.666988099 seconds)
    (110/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.649942496 seconds)
    (111/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.730684468 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.652811227 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.670594214 seconds)
    (114/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.699824049 seconds)
    (115/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.729418804 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.726541483 seconds)
    (117/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.650555563 seconds)
    (118/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.951117457 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.15051516 seconds)
    (120/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.659500974 seconds)
    (121/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.845473856 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.856882149 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.733723681 seconds)
    (124/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.568371089 seconds)
    (125/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.634570499 seconds)
    (126/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.648848503 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.489186579 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.655076389 seconds)
    (129/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.875642915 seconds)
    (130/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.68024174 seconds)
    (131/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.241282289 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.832339643 seconds)
    (133/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.654350948 seconds)
    (134/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.654230821 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.676840749 seconds)
    (136/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.783444389 seconds)
    (137/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.731494975 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.891173731 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.825925419 seconds)
    (140/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.930142234 seconds)
    (141/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.656949882 seconds)
    (142/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.655694624 seconds)
    (143/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.835351549 seconds)
    (144/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.806190159 seconds)
    (145/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.799137167 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.92559361 seconds)
    (147/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.904809055 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.798629909 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.922624309 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.858758715 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.880523913 seconds)
    (152/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.634352735 seconds)
    (153/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.656285132 seconds)
    (154/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.433201038 seconds)
    (155/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.120450094 seconds)
    (156/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.652241531 seconds)
    (157/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.652340776 seconds)
    (158/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.673482711 seconds)
    (159/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.012519329 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.807571899 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.737611117 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.63950751 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.875564973 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.886876467 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.857134207 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.926359909 seconds)
    (167/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.496868002 seconds)
    (168/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.341314562 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.925046963 seconds)
    (170/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.892405871 seconds)
    (171/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.886571261 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.655889412 seconds)
    (173/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.657156752 seconds)
    (174/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.655446338 seconds)
    (175/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.67515541 seconds)
    (176/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.65692439 seconds)
    (177/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.500375572 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.621007741 seconds)
    (179/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.078592396 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.670855631 seconds)
    (181/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.686861227 seconds)
    (182/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.654835717 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.967078495 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.66671097 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.672450316 seconds)
    (186/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.743269867 seconds)
    (187/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.791095292 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.736983453 seconds)
    (189/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.971227556 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.734913357 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.656764453 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.060009796 seconds)
  done (took 429.635852098 seconds)
done (took 431.169407098 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.736098773 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.860823433 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.706897364 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.705549358 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.716574643 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.677294647 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.732532328 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.708057148 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.728444169 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.729125331 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.68498969 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.714913607 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.730492683 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.717286046 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.749983989 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.712450375 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.708110508 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.716877545 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.729670302 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.730984785 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.716180947 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.716613963 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.742570965 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.706856159 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.723303711 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.724307889 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.722332428 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.687008453 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.711438724 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.730016785 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.689284859 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.718834986 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.732028005 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.715740877 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.71646562 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.71918964 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.718753342 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.860367788 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.735550101 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.718224224 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.715707144 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.73601664 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.722281723 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.721190453 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.720006923 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.744652585 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.727546988 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.734410151 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.681512852 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.677702311 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.742557137 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.731327147 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.718319278 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.682012775 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.702325135 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.736310253 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.719511259 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.742241315 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.719073075 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.722273971 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.754723208 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.741066514 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.728167877 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.727358346 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.715456972 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.735947218 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.718163043 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.734523852 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.72059806 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.72099371 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.720564815 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.718055418 seconds)
done (took 133.686354253 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.889543775 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.680433943 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.924629452 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.714265131 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.942737481 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.890506677 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.715286979 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.716970503 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.713358102 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.574188729 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.715378261 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.71543616 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.682687582 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.714894541 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.889756233 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.715723277 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.71634298 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.475702252 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.718261729 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.902371873 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.684319284 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.716838503 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.717690776 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.581157562 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.682135138 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.689940041 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.901283606 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.717393462 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.48383541 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.689810346 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.682894941 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.483833942 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.901680095 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.736835878 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.727630169 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.726482047 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.944549025 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.723977679 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.891334715 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.889836759 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.92577443 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.756676181 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.688538745 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.68484917 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.721750929 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.71872743 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.717818097 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.747306483 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.682416597 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.719671266 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.477426983 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.728745814 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.719195576 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.719470681 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.723040898 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.749048325 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.72068145 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.72176392 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.906191353 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.719478713 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.89401704 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.584912858 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.577271663 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.720182504 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.684967411 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.723056682 seconds)
  done (took 134.864039488 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.836762762 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.84889985 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.896925929 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.715846198 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.806960508 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.900285085 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.715263652 seconds)
  done (took 14.275267686 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.727397038 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.718719539 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.805491746 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.805719708 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.721344244 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.948377025 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.720866809 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.733391935 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.721736822 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.80914682 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.720673838 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.723135952 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.728395 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.686202205 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.806486285 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.734515681 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.885400441 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.717623659 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.722338574 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.925777992 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.72080898 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.730935268 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.808591232 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.734647192 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.722011019 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.729405534 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.536898303 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.722440821 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.721346338 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.719569717 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.72253399 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.836755009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.722041259 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.688058237 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.722471761 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.88558573 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.722634073 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.723470911 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.724436327 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.692212397 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.721936428 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.723068276 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.728839261 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.721863724 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.72251157 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.748861779 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.724255508 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.723379139 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.723380048 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.724702491 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.808039207 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.723833456 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.721518428 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.723149152 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.811165163 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.734101103 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.724317596 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.725114765 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.724861521 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.722847088 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.928832152 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.808540737 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.724008828 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.808135657 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.725057355 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.724100948 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.725570409 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.725700175 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.869771987 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.7251742 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811995576 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.72838627 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.960117414 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.751412383 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.724290219 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.725908092 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.724635025 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.727378461 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.692271203 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.732625985 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.724337641 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.721450053 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.733650138 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.724705355 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.724558549 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.936984166 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891162976 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.72595307 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.742664763 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.735297973 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.729145585 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.811876776 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.728118709 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.726591908 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.812942624 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.891516023 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.811799252 seconds)
  done (took 176.70589347 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.739634977 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.741628388 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.726733057 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.756271032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.721419463 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.722680307 seconds)
  done (took 11.967599162 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.724179171 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.732807922 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.727480778 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.729718982 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.728154746 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.726498111 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.728095102 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.72305326 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.733619617 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.72882215 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.727835153 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.729141674 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.726777616 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.731308499 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.729113807 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.728089445 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.728882004 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.729614918 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.729830099 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.730889312 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.696045147 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.731516976 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.729162696 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.725507972 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.733599852 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.731035839 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.753377367 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.727851706 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.729202227 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.739435999 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.735363764 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.730477807 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.727368403 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.728382987 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.734931935 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.727040079 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.732952423 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.73168648 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.728846245 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.731788169 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.735081954 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.732954239 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.733286754 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.732589878 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.726632696 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.732362894 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.736185656 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.757983261 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.730956359 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.73420824 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.7323425 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.732717617 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.732388455 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.735795173 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.730900417 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.732645611 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.73693191 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.732516614 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.73359224 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.728329 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.737160989 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.732941598 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.731029344 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.734629173 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.732862607 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.734494869 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.729036283 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.737764767 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.734788621 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.731399154 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.7337065 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.732199046 seconds)
  done (took 127.225600969 seconds)
done (took 466.588981474 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.162335378 seconds)
  done (took 4.725476962 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.954501826 seconds)
  done (took 4.52196435 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 27.709919188 seconds)
  done (took 29.284297815 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.735303351 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.701483338 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.704440069 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.706561288 seconds)
  done (took 12.411560297 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.373093394 seconds)
  done (took 4.940443963 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.708048418 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.702819612 seconds)
  done (took 6.978548459 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.167133265 seconds)
  done (took 4.733781021 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.544985295 seconds)
  done (took 5.120100049 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.711050337 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.710099448 seconds)
  done (took 6.997494025 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.683337734 seconds)
  done (took 4.250425141 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.714009164 seconds)
  done (took 20.28083257 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.713614769 seconds)
  done (took 4.284824348 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.733740513 seconds)
  done (took 4.300825126 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.300665469 seconds)
  done (took 7.865343421 seconds)
done (took 122.265059757 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.698118665 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.700531122 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.698540436 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.695855318 seconds)
  done (took 12.358121728 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.850978815 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.854149889 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.856524771 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.842526693 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.84247976 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.854336714 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.769811999 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.768211586 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.832815472 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.828638963 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.861201624 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.839969105 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.857609477 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.768013517 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.830301675 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.860044913 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.831314792 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.858912366 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.784929215 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.844772789 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.739012203 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.840962807 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.828778157 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.736572297 seconds)
  done (took 45.35097515 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.288696698 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.857769414 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.940447455 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.823479019 seconds)
  done (took 9.478094666 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.900694076 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.906698331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.92160735 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.951352334 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.010341399 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.912301976 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.773035733 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.766961428 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.752981926 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.905564737 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.991229122 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.899223498 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.123433574 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.737131168 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.121014202 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.73723586 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.736646399 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.904394756 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.950646168 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.981099901 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.737753034 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.901759156 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.909571462 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.947447787 seconds)
  done (took 47.048327725 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.75648307 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.762514842 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.74026746 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.763817522 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.73984059 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.739973847 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.742163861 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.754055246 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.741236019 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.740294558 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.746689436 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.761218728 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.739567999 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.739469175 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.754529609 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.743696038 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.741786858 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.757065336 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.75738507 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.739557314 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.742436311 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.757522307 seconds)
  done (took 40.031156058 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.708358235 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.704987485 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.145787743 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.048082162 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.706256221 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.705901777 seconds)
  done (took 16.589128967 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.840049632 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.045785431 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.732393064 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.232056605 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.360106826 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.732717548 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.734637065 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.11004018 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.53289933 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.510380545 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.804592889 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.838088419 seconds)
  done (took 26.047284016 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872797791 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716205182 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.729334715 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.804728102 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711787163 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.713619239 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716713907 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34813156 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.739357917 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074742535 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732700576 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876731043 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.053001502 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.734402678 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.716362465 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.694636658 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03177953 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.46783107 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719821354 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720429183 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778527842 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.724139991 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.716819646 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025787287 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716099582 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718270459 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.066695143 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.716426929 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163714744 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114437178 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120592151 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718989126 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08198368 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336389495 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894573116 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015745857 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732344874 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.71531296 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.699705738 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.740360419 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.741297689 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.716442223 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112938663 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719119868 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.715835652 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717303437 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361081112 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.745709214 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.717962878 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.719012173 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12492252 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88100505 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.747043042 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.720854377 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.761716626 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714104915 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.749767411 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926825611 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.447802754 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71971317 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764360189 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.720560554 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.717118706 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727327896 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.618010014 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.752150466 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.748507963 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7465031 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719375488 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.716111246 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771672152 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719869964 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.768379624 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722030085 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716550478 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.71878463 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.743933639 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.513902781 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742358718 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.718855031 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034383493 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719787971 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72157891 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.721131018 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.722185762 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.733124024 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752475647 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.6993089 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790005139 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360125125 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026245656 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771602101 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779944642 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029898215 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.697860252 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724760949 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.744775016 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724188949 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76918245 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363900605 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718712694 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.747529556 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063347372 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.022909547 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730594512 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.721703996 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372735528 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.741322972 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.777411569 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.731949293 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024916436 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.586845436 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137946034 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725942454 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790683857 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.724109261 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.72462874 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.742268762 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.750158593 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.723190707 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147490194 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.703259122 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725995254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873595867 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.727712721 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.728200493 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.728055642 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725114974 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.725953489 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.024942418 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.735327237 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1196949 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.726673203 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724841546 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.735021751 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727329782 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.726985044 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030390597 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72275825 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083531503 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725217083 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728971261 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723373761 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.029915606 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.725142352 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.752877514 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157822584 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.736365637 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.737901727 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129703016 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794047484 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92100008 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789717743 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.735441008 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.067059854 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.753753463 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.754591139 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.736874431 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.73226728 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737791866 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.760494054 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720195005 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593905622 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73203862 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.731873306 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.727480709 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.771604616 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878169493 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757597597 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031973339 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.723863488 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72799914 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.753649748 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.740463505 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035082045 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122936094 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.731894608 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97885199 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.373745991 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.597682917 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.77557174 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.727905273 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.730142429 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.728616049 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73035328 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.730250962 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.732466818 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033489943 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138965157 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.729347915 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.599006619 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.731495395 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.732273776 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.761826137 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129700642 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.764339725 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.730732938 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.730862005 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.736175948 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.742553645 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132545836 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035039721 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.779090065 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.730188035 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.336678638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761319369 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.732148411 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.730356074 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789540765 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.72969768 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461220662 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15954494 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.725697241 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136386268 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.732049376 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.778149442 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.729531807 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731312341 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.786720225 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.748447132 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760410595 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.034040013 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.729351477 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.735235745 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453126267 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.731469345 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.538607738 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.746736719 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.738737028 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.733813916 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384369758 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730424589 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.732644354 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128765816 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38264007 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729765846 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379374081 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.729808099 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.751455336 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139237958 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048449737 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.737529612 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.734714799 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142522384 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029377898 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789898911 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.752282186 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73697165 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.709651695 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465136803 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.740445486 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98859869 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381720748 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.746952248 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.73817732 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.812538452 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.740376412 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.309577147 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.73044142 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735947847 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.733192329 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.752116173 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471239604 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.73928214 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.734715706 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.607687682 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.735784487 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.389126299 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733216354 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043261995 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132940788 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.120527407 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.734934868 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.755503336 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.07160303 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144595063 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738528063 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.740983194 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.545219194 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.688437265 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.767645452 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73740278 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.738834456 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736336025 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189026551 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.753575437 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.736902996 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.766338792 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.738701618 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739667384 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.742431981 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.749670751 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741072241 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.467898047 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.737707568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.74935898 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.75302439 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740435708 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.076215348 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.78465865 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.612526984 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055933929 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.73771525 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801932564 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.764367871 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738208888 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.737748773 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.742306686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.739588812 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.773920063 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042562885 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.738646723 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.712562471 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.835194336 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034330692 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.738615714 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.75965987 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093094869 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.740051651 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.761997179 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736708627 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803423815 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.760894873 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.740987733 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.743829505 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801686583 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893708271 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051760353 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.148250486 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145435324 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.3409018 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.765549656 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.745021975 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.790545222 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901239675 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740884019 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.753960473 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.737155612 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61648475 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.74523122 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.622467075 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156976945 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.743604756 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.745890731 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743522553 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069026235 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.741963765 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100136826 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.741709962 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.756753006 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790156137 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741148159 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743134235 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042389259 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09834456 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.744705944 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.74665228 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.746308312 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.743777823 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161840622 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.042823882 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.499686448 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.552145353 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.745272845 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.762364334 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400561971 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094178177 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747126433 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.745309721 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.746041658 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.774567283 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.764532976 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.774251949 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.742911163 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055842786 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148732461 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374253109 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.143303698 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.767434951 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.705644831 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.7652529 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084437413 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664137039 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058893802 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632529737 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.724099273 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079594759 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89784085 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059386044 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.746535296 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068557391 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.749942223 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.748199823 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.745227797 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749248979 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.748226853 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143490733 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62400512 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091881237 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.775185029 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.749821957 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805725714 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.060087879 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05287516 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.76911219 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054007706 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164938572 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.759273578 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.749308833 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.629369349 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16314847 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749125849 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.770643739 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099578934 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.747410338 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817531685 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.701554088 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.746770521 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.554251627 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.048928639 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799660487 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747835322 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.757982981 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633407433 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.752205989 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.487518699 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.752972568 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.757221641 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105511811 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.779860414 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.755547267 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122358716 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.77724814 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.75352166 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071310744 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.625381132 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.75183171 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.756364619 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.763404829 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.752868434 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.751907488 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.829160607 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.744926572 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.750944097 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.342189394 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.75239051 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.751670935 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788866447 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.758693547 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.753985056 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.751166612 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.752544719 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.779493747 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.753698149 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.750672973 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.757703965 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950720479 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491017259 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.754804504 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.451397905 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.181026582 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088649122 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.75313006 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.729916842 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.781938053 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.754970168 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.752391138 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.748247385 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.743459486 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.56234246 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.756301832 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.170042922 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78361585 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.053371103 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051672353 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.753594504 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070581811 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.75772394 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806474273 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.727479242 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756230873 seconds)
  done (took 1178.678935179 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.8424924 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.810250521 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.814844821 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.813182109 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.761875795 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.941678407 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.800234443 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.762906442 seconds)
  done (took 24.153781218 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.748691227 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.779692585 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.769392882 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.779229957 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.757067152 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.430403894 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.763694391 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.780860681 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.802060583 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.767861681 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.747305645 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.623351964 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.783312809 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.750921398 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.758045559 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.783622694 seconds)
  done (took 39.442978958 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.272178745 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.030667099 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.93443 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.822027298 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.797848735 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.745599633 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.286856031 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.774621619 seconds)
  done (took 32.27245001 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.792136836 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.791449947 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.795099642 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.795966862 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.795409109 seconds)
  done (took 10.575183618 seconds)
done (took 1483.594713304 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.785404345 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.786007774 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.78548152 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.785374872 seconds)
  done (took 8.748399709 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.735733015 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.735945123 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.735890996 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.770535905 seconds)
  done (took 11.588416167 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.320445149 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.543576317 seconds)
  done (took 6.472054861 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.759840619 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.606285269 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.590662123 seconds)
  done (took 9.56644375 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.149176092 seconds)
  done (took 3.757660524 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.262237747 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.3533288 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.751238478 seconds)
  done (took 8.975884852 seconds)
done (took 50.719137331 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.750811818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.533717242 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.912717043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.757312015 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.912715367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.913838625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.030285136 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.75423872 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.760875598 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.753277495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.75158063 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.911287672 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.018005293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.524242573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.017646098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.525842706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.91623467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.749726833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.759829724 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.764645211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.025883738 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.76418342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.749105455 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.760276079 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.913465253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.902478869 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.753303894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.522207468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.761073458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.755988733 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.893633541 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.760130182 seconds)
  done (took 95.189030116 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.749845634 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.748062236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.748941049 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.751181558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.748639964 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.769822266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.751175551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.748760649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.771626825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.747857671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.749105805 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.751612129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.749731373 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.748753107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.750672904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.751564567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.748500281 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.750693088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.750163271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.750549424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.750084839 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.755549851 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.748569284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.763936671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.755529736 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.752559316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.770747523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.750035602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.772112501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.749206166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.749863442 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.761773687 seconds)
  done (took 89.729966432 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.768816901 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.750793729 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.773463092 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.750736808 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.77435294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.751481526 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.755041406 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.752454625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.773263625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.761113337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.768714653 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.750827602 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.75400538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.751983406 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.753671958 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.750928383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.755037495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.750499487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.753196199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.771337473 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.778079182 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.759117273 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.75062625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.754693108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.756530771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.755896752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.768998628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.752272687 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.753443647 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.765240329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.759147305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.75613121 seconds)
  done (took 89.896719201 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.083685433 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.791915927 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.798080329 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.76380942 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.797368716 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.793231109 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.765355776 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.090293325 seconds)
  done (took 18.499277597 seconds)
done (took 294.927003853 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.765673065 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.770291599 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.816525133 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.76394617 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.810472966 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.823668848 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.08866337 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.817709221 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.091957784 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.78468044 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.809045689 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.779686998 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.763252157 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.997351828 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.762593274 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.76298655 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.771791581 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.76058876 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.787542815 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.123789136 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.825328766 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.773726743 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.772930971 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.781351176 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.746684757 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.879884377 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.884654187 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.012471558 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.980805031 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.876704014 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.776540019 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.763481167 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.784118707 seconds)
  done (took 80.326526092 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.790055216 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.795322995 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.795827947 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.798480519 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.797631668 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.798615243 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.791030898 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.797449103 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.797227427 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.799472685 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.796962379 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.79858109 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.799461579 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.797511052 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.800089103 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.78081675 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.80046471 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.800017865 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.792672867 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.777379582 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.796798322 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.803016012 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.796811243 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.796620576 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.799829643 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.806982229 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.8001697 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.800193936 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.798279237 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.799233129 seconds)
  done (took 55.522557095 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.79994984 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.766219084 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.759832379 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.825734823 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.794411077 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.799651269 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.226040896 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.794950042 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.799376583 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.800403249 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.776257023 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.797931916 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.865491764 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.765443427 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.793685077 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.801410151 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.800672698 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.794248836 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.768266342 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.812746369 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.242315451 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.797415858 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.241641273 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.820411171 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.801496894 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.796617224 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.807322984 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.784247983 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.794961077 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.787418637 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.774023708 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.218832647 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.763022099 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.768677008 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.773719409 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.80122151 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.801884443 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.767982577 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.815749964 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.79643396 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.226106337 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.79381589 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.767552005 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.76524417 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.800049574 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.803854247 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.774151727 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.773329276 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.136902884 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.807767454 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.769999943 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.797713801 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.804695765 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.799277618 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.135743379 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.797316334 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.799168944 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.768095301 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.808821638 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.218006983 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.800907783 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.798755763 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.771356679 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.795552144 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.768798532 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.798782513 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.821617679 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.801185541 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.768230723 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.799354653 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.769780361 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.796716678 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.802326329 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.790602702 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.765532824 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.768308596 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.798158062 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.771586247 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.766143097 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.22499586 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.809489601 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.77061692 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.25518685 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.8055472 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.808911943 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.807849098 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.805365683 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.924677223 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.228346705 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.771755682 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.798045827 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.766382513 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.24151514 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.820256752 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.802357688 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.777823143 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.802159269 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.807917403 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.77175247 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.768271301 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.801102989 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.822367845 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.773087485 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.806757759 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.24615756 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.813658497 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.772351707 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.822297724 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.929091542 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.808732521 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.82140173 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.807317048 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.253824875 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.803696894 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.809385956 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.774996736 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.776022287 seconds)
  done (took 255.636533535 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.78846926 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.76974132 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.785820599 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.770813663 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.775858368 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.805107269 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.778108585 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.778734153 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.804298857 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.775360121 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.776521233 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.807424464 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.806722 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.778638192 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.778954852 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.793221959 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.775065251 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.775863956 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.795751401 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.774454768 seconds)
  done (took 53.32358689 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.811378947 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.609894107 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.57372631 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.806419028 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.8107524 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.802151796 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.89187843 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.81158896 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.811182902 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.251012157 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 2.05504876 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.814486675 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.811506198 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.809783283 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.572302805 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.791601642 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.2508393 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.602901109 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.807340165 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.611842121 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.787719234 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.810927354 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.805398788 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.613838394 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.258167327 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.233511049 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.893718538 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.613616927 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.809748572 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.813002338 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.609560475 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.811195474 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.807667371 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.604070462 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.80976708 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.837980514 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.814591995 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.896293306 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.898413339 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.260328217 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.619569081 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.244426823 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.8384268 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.063914064 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.812649849 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.794490765 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.663582988 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.815332453 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.793017883 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.815850186 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.825475502 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.611159841 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.810148414 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.612946032 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.815441754 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.815625786 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.660933209 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.612753758 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.608813383 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 2.062149174 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.801416367 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.245006645 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.815806325 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.666335992 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.81684731 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.813899729 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.814390294 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.059294622 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.65987225 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.249537948 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.284446228 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.285121592 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.818432847 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.906963029 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.816259595 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.281928729 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.901001866 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.328570135 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.282822347 seconds)
  done (took 166.674213045 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.209229819 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.93867209 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.411632233 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.630634245 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.559575209 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.021986805 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.939909747 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.162295219 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.792621325 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.969346102 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.810794306 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.943713932 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.747411246 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.908508826 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.946717177 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.00888451 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.446523123 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.78329437 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.689812301 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.783407583 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.790015755 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.99751798 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.683894998 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.298625754 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.781977303 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.705831098 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.804367022 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.568593954 seconds)
  done (took 68.971821907 seconds)
done (took 682.072838889 seconds)
SAVING RESULT...
DONE!
