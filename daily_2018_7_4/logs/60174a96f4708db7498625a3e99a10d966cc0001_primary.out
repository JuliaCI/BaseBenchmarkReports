cset: moving following pidspec: 31256
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.952020297 seconds)
loading group "string"... done (took 0.528654048 seconds)
loading group "linalg"... done (took 8.616224779 seconds)
loading group "parallel"... done (took 0.164774766 seconds)
loading group "find"... done (took 1.389707242 seconds)
loading group "tuple"... done (took 2.020322018 seconds)
loading group "dates"... done (took 1.333306534 seconds)
loading group "micro"... done (took 0.212723094 seconds)
loading group "io"... done (took 0.603916832 seconds)
loading group "scalar"... done (took 41.231140812 seconds)
loading group "sparse"... done (took 13.238204797 seconds)
loading group "broadcast"... done (took 1.054329229 seconds)
loading group "union"... done (took 14.169034933 seconds)
loading group "simd"... done (took 4.878837856 seconds)
loading group "random"... done (took 9.863891155 seconds)
loading group "problem"... done (took 2.136221903 seconds)
loading group "array"... done (took 25.248603573 seconds)
loading group "misc"... done (took 1.071311004 seconds)
loading group "sort"... done (took 3.638875137 seconds)
loading group "collection"... done (took 21.136084738 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.654589616 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14330149 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.172508004 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.18414934 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.21231032 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.153880588 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.170540407 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.566728256 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.977483947 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.259433827 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.150502091 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.547128391 seconds)
done (took 5.935979676 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.290417095 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082841164 seconds)
    (2/2) benchmarking "String"...
    done (took 0.134924657 seconds)
  done (took 0.893479328 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082798859 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.183043459 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.117415941 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.103781616 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.120451039 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.118711889 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.119224429 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.119044867 seconds)
  done (took 1.553683433 seconds)
done (took 3.498662164 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.832308062 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.90761882 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.535830954 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.136111101 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.183139612 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.138422563 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.326901976 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.170645148 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.127328233 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.118284685 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.180833041 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.397154144 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.50247378 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.004492208 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.102489748 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.142050066 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.107496142 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.740071338 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.091003495 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.139577758 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.546756926 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.121140159 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.10884768 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149779558 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.213095476 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139814513 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.185409737 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105851778 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.694296511 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113268793 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.200128499 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.110274276 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.183669923 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.271957881 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09202892 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.117099294 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682713124 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205407374 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.138303369 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.086862403 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684101436 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.090417338 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.197603565 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.114948041 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.119127632 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.20741002 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.13158677 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.10693094 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109141582 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.097014816 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.182579947 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.482437279 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.116021716 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.153383269 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.119641408 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.735957978 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.105237102 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.167028647 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.149450915 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.123507771 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091396722 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.117447739 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166269704 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.118961756 seconds)
  done (took 20.750796923 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.124916591 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.147826147 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.102617896 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.16426575 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.148861118 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08876762 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.107892301 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085946981 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133582833 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.192450267 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144581102 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151113205 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.100304269 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087895392 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126356776 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.256683363 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111892671 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12896742 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.107048901 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097934429 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14831273 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.119610718 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11695131 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101403224 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.178518255 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.229683497 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117551957 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.132567451 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101933375 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.122525068 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.152531212 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154094847 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.101097326 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085425626 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187405284 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.1319667 seconds)
  done (took 5.482261677 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.204576558 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124516822 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197897782 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.184556756 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153358017 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.189192196 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126054921 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255882444 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.177898744 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188458086 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137740916 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.137910813 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103688264 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105343928 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.136563766 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088859988 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.102921861 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.67059359 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.18553277 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156560638 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.132796497 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110832245 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089790634 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.381270719 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109528953 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087870655 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112072908 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.097189065 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.182719736 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109069042 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.231825442 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107656171 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118036439 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139688772 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204994314 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134658369 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147218675 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109786025 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090413965 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.235837806 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09993856 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.103437383 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.1300169 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139788219 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121600994 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108786494 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.118063621 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.246537663 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090507128 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128140529 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.038725113 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.220853213 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102956371 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.106030551 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.351729918 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124780359 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093095892 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107300664 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.29805413 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140815838 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08997272 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.105975497 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086029171 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110526233 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.103713509 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40639644 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098015674 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.994101309 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.090203308 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163315961 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111149832 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.113208658 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110859203 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092937844 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127536579 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.104529694 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087263503 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104648591 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08736054 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.109221418 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12181184 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092896985 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.104950217 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155614499 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.122625464 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.124943276 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134069689 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092435538 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.104494322 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137016748 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089604288 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.108016104 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.152291958 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094829366 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123794951 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108963687 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.151198061 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104920295 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.172778682 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.104016928 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089227802 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.133243054 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.108784259 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13737071 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.128222443 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104681418 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091965363 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.103471764 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.087176533 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.171996906 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088859883 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.105537389 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108153571 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101877073 seconds)
  done (took 24.506230964 seconds)
done (took 51.409388283 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.478775104 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.120644946 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.121301388 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102440134 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.119403433 seconds)
  done (took 1.696501358 seconds)
done (took 2.427602384 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.357379457 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182653995 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.127373163 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186237173 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.112843543 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193286062 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189477326 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.109109097 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220557186 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.108728967 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183065346 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10826195 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096130373 seconds)
  done (took 2.929774373 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10305084 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.127314645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08854913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118585721 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082993216 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118723727 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115632299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122431054 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119216258 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09307955 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101810926 seconds)
  done (took 1.916869904 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098432242 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122711229 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089787942 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115104885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083221625 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115063141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097634016 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.125801733 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116190888 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094738936 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101926423 seconds)
  done (took 1.887716154 seconds)
done (took 7.456836261 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.037536731 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.378642627 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.127434963 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.173413397 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.362230261 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.199466394 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.53094375 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.141122894 seconds)
  done (took 11.859449332 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.152324949 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088759917 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.105244025 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088697767 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.106435457 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091111903 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.108019086 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.089113763 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104807615 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104492629 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090715149 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106229126 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091553343 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106653956 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089645338 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.110077921 seconds)
  done (took 2.422049533 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.123708329 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122200274 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111619164 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.116747351 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092569533 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110098282 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111516473 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.094932121 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108111622 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108378799 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099253499 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113568771 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.113234641 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091410725 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111232673 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11753833 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092483025 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111014413 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111955458 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095956681 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115343066 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.109588946 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.097009915 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115004782 seconds)
  done (took 3.430074606 seconds)
done (took 18.438587316 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.176661175 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109835467 seconds)
  done (took 1.020271333 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.108832219 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127336454 seconds)
  done (took 0.97262692 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113999743 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.106778699 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143376291 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.122564107 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089948513 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106438658 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.139712144 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106966935 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090246407 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.106814565 seconds)
  done (took 1.86608797 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094474963 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110374823 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.09783244 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.1276908 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118277611 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108669533 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095334291 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110836374 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095929432 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.104678818 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114805297 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10849227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.11438482 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127742108 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.112168424 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095930189 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116278303 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.110839557 seconds)
  done (took 2.700773386 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089933725 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.107821603 seconds)
  done (took 0.939957655 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091680803 seconds)
    (2/7) benchmarking "second"...
    done (took 0.105013632 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092271662 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109379484 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.105393666 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088902079 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105285747 seconds)
  done (took 1.439161092 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524727042 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.244501214 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.342493609 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124277728 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144401962 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.388328206 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146640644 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.123120749 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.122026304 seconds)
  done (took 2.942980304 seconds)
done (took 12.623117 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.101082258 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.143489522 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.534611701 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.231412582 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.106117881 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154945089 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.279746506 seconds)
done (took 2.296351945 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.373368938 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117550432 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.099283859 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089187202 seconds)
  done (took 1.422815332 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.088901996 seconds)
    (2/2) benchmarking "read"...
    done (took 0.113405375 seconds)
  done (took 0.952173045 seconds)
done (took 3.129845155 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088118126 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.107402927 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.118571349 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.104947554 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087464284 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106807664 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.085350475 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.103968086 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.104821878 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088130447 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.10491912 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08609783 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.105266389 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087636369 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102597042 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086049632 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104532692 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085631132 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102528967 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085797319 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105349171 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08804952 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.103050046 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085095458 seconds)
  done (took 3.11022338 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108569412 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.106361155 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111942862 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094894926 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.110606068 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.094242078 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.110964045 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.106001407 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.094336961 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10766135 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109220573 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092219574 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108170701 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091240308 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108010996 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109335972 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093693439 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106362475 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090913762 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.109569254 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.111697229 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087763102 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.109034653 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111830494 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.091082442 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109611055 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090355857 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107280905 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11106579 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091764579 seconds)
  done (took 3.839873699 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096716134 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.10287028 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086221831 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114055188 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085726515 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.107400502 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.084988968 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.104412439 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.086327703 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.102926252 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08674209 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.103987667 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085621641 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10484662 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.104963621 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093391841 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.121884407 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086331647 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.103102216 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.086297665 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109784193 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084705453 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.107238172 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085020742 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104371032 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08532628 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.104952633 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084874827 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.104017841 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.102447286 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091182431 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110071518 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085787819 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116816381 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092531286 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.103602888 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094153053 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104363471 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.087400252 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.103379658 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085013924 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104281004 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.103613145 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097230885 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.10595177 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086632707 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.103502043 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08691872 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103480267 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.089081404 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103304613 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0859342 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.106130636 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086790976 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109803789 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103790097 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.086877786 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.102734551 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087443085 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.103195508 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086198342 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.102417936 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.092280053 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.104432617 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110338058 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115548747 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.103727918 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.088762029 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107280382 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094452583 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.105854418 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.104612457 seconds)
  done (took 7.825917755 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091259169 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115049789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088118209 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106075023 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084248405 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105445699 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111430584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086993559 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10599706 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104268418 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104015149 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088667636 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105999618 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107664407 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086453446 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10582981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096779185 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102539958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.086273216 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109598337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086848733 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111163005 seconds)
  done (took 2.954666576 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.228186925 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11413732 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150434898 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121631235 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123834321 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103652956 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112224521 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113252221 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09366535 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114667846 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114366822 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094156041 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.12461615 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115195598 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114733927 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098588981 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111685576 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118995373 seconds)
  done (took 2.933322618 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101955267 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.108209911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131063823 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.089727269 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.108263959 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09152665 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113571207 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123739623 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.092204387 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.108014315 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117955559 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092226696 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.109753262 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089854354 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109703042 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.089591704 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.111066867 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108232328 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100102562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113176301 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114974126 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100700231 seconds)
  done (took 3.091216499 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105750322 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109962725 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.137280177 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092356367 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.103892512 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088130839 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114264743 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.108098007 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09768822 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109595389 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08937498 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10577701 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.114000423 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089682341 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.113811968 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089635353 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108986953 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.1077276 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092004001 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103397798 seconds)
  done (took 2.851943519 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13008602 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123133439 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123291272 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115775882 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124212732 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.123094816 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133154256 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105905182 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122684043 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13681657 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105252792 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123060533 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134374895 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111347259 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123438127 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133356956 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134703986 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115044786 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123402275 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12312771 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135957974 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104887661 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134060717 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122956531 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10687645 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123000243 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105397942 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130750266 seconds)
  done (took 4.199934057 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089857685 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107719701 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087529452 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105823699 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.087228299 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.106106604 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088133416 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105909962 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090719189 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105378293 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.089837768 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.108546175 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089948813 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.108576663 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090096053 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.108071919 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090411304 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106500654 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087354041 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105734255 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089263559 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108879006 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089790219 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105755771 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086521111 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108259531 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08747849 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105633647 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089696535 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105969231 seconds)
  done (took 3.713724004 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097939219 seconds)
    (2/2) benchmarking "in"...
    done (took 0.113797446 seconds)
  done (took 0.988875105 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.087963479 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124582261 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087263367 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112197503 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114404938 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090773203 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118490262 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095247132 seconds)
  done (took 1.607696014 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.114327182 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.128895551 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095106615 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121518462 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.127583902 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.109038746 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174859683 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115365472 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.117191893 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090895831 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.128113577 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.091324081 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.118623364 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11437388 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.100683034 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12542139 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08915755 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.119473704 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.116443563 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094347545 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115428632 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107297081 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121515391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.116680908 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0936689 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.12168131 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.123315203 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103143846 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115090417 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103855259 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.11820869 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.102829406 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0959752 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.11503174 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089714852 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.127636047 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127412292 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096842135 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.119805587 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09641813 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119252663 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.10499599 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102361593 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.11794983 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104364025 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116297546 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.116384423 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.087215772 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.110327391 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.095163849 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.105842127 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095251374 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.104424114 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100840724 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.120762772 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.129365123 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094163179 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.115455442 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.115362319 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.095564863 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.117793297 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.095387437 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121493654 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.113730481 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101051888 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.119377188 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098925636 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.105880125 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.084911063 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.10846227 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.120362169 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115552699 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.122662971 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115446847 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097161842 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.107387532 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097737375 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116125517 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118171608 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.103625201 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.114626183 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099546533 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121877629 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11411409 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.095503878 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117509817 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094381885 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.114179303 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091798466 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.131922434 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.11283565 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.089526455 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.111297196 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.121560431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.095901776 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114197463 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.092705603 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.121538426 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08549383 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115383193 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11789452 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098952986 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.123379796 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097520172 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117593479 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.119585448 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.103688315 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.116197341 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.09587295 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.107977256 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096960041 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.113255301 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.119302916 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.086074614 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116770389 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09616299 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.115897669 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.120936756 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093417841 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.115009384 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102478901 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.121924752 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.113366424 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.088514957 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.124614363 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096607761 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11996453 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.122828082 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094566276 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.106218806 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087161859 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.119475393 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09538915 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.117327209 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116192878 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097903748 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.104933174 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.089792999 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11608054 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10262873 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.114507943 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.117845089 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.101463105 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.117563877 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11352194 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.102800918 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.113183301 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.091951841 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.121354025 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.114940384 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087541773 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119948352 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.096936349 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113676719 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09679416 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120921868 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.115373383 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097648826 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113629894 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096912491 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116476825 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.091710441 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.117494035 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.113211037 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.104549875 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.11557354 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096576058 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.107952503 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09796056 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.11283955 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.115285361 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093058102 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.115683994 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098439368 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109439332 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094981346 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.114869274 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126805884 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10509364 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116573923 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.099096611 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.123049636 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115465094 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099304683 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115212925 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098166449 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.116510673 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.120754309 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.099793714 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116274582 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.096239806 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.108044206 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098504626 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.121868293 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.11059633 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09001024 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.111448752 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096838253 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.123615962 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.115694402 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09764616 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113030607 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099919456 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120271176 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.096350645 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.11598059 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.111324484 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096909413 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.12083856 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097781111 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118020566 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.123273564 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098963381 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.106735787 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101210373 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113427972 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.101210297 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.107782787 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.092588704 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.11270459 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.117621903 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095563728 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.114967379 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.086854474 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.121798379 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122569185 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098712722 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.112137997 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097028151 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126334001 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.094676995 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.120967833 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.116147746 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.099734254 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.131438105 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.112087134 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.097620894 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.124258953 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096697707 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.107230958 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.119082675 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094834635 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.110929322 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095876892 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.113838219 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09892889 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119433718 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.098429659 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.106272314 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.115877331 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095109828 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.11312487 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.089038696 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.12275598 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.097323093 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.117746707 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126067215 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098628416 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.117612469 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117881461 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096700583 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.117306193 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098658142 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120552853 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097419785 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.115051749 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.112035837 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.097975061 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.112119886 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.091207303 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.115777472 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098316051 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.119036907 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.119094944 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096948818 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122175022 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.097423086 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.11906159 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.136421428 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.113969699 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.09440889 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118871802 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100678908 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.115930865 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.096800965 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.108769933 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.122634004 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097499812 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.123717742 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.097379798 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.109742516 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09817456 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.117744042 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.118933217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099569329 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118540252 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.096451045 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.117356175 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098077016 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127681636 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.113784999 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.105191146 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119825569 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.12037781 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098821021 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.118680007 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097124356 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.113687686 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.097554698 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.120641636 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.117954774 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097441344 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.120366731 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098116031 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.117983619 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.116058359 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099717625 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.118385135 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100265225 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.107480472 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.093978251 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.115518044 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116792991 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10260864 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.118308124 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.096865794 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.116351086 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09979763 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117517735 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.089607052 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122363977 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120454742 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099747616 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.127030289 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.093843718 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.119627428 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128713256 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089226824 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11674485 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.091531331 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.114584469 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124047023 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099582563 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.12393515 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100241101 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.113867871 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091291637 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120858862 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115643813 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.088493288 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.111284938 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102139352 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.115782788 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096905901 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119762763 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.100843492 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120455491 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121906053 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097336814 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.118681297 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099453777 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.111369158 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.11431444 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.094855639 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.118104082 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09940782 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.114769353 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.091518191 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.118325874 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09778062 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.119677436 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118051194 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097683173 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.124348008 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098683388 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.119666478 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123093772 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.088734213 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.119027467 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098349825 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118338614 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09451654 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.12017178 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120036243 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100879796 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.123826059 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098028622 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1214168 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097809761 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.112675653 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.117621105 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098900522 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118779042 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.094151561 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.119992646 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105607193 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.113908119 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.118948471 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100145946 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.11566694 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.100219113 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.12103917 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.119010486 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10259529 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.118929183 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.099211986 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.122740148 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09845326 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.12049698 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120586643 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097838453 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.124871354 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094531714 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.127640392 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.120467347 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099949476 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.118693014 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095413428 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118918751 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117745901 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097710938 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.124523808 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100574932 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.115009968 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094804075 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113315853 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.119308329 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104258824 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.125416085 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.098992929 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.12139575 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.109695654 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.091738027 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119449459 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096353731 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.117692263 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.101514802 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.124309952 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.119613962 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.096729449 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.117883454 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.104216781 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.124233774 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.121983698 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.096624389 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.1217595 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100489256 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.119625325 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.096567447 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.120154678 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120787024 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.102095465 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.118444341 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09609122 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.129133113 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.124116913 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10056016 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.119248416 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100806981 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.119438002 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.109786622 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100881063 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.118861779 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102454686 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.12092192 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118919813 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110922506 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.115904427 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098272132 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124957235 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118465348 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105482028 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111005511 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.099590967 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121629902 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120830174 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.091069095 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.115276397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.096289533 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.1201956 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.095527365 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.111245221 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130253301 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.105110602 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.120597298 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098900164 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118772723 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090351565 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.111737173 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.095146149 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122107942 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.118158677 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.107674177 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.115763488 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.095212481 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.11243496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098971552 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.122413288 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.122158006 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09292597 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.111636161 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096750479 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.121128748 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.127434356 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098722928 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.11953733 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101689203 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.120000769 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093168778 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125969189 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.11195405 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.100975917 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131668509 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099917284 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.124821475 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.123927608 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106185003 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.121576451 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090414938 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.121941889 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.120253488 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101295339 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121203276 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101902526 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.136970042 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.121473549 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09690125 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.119156163 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09896358 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.117535768 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.128298834 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101525195 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121863309 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101129087 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.120169405 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123099959 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107626084 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121994295 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.099927612 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.121893288 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.119074876 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099630269 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.118191499 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.098491412 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123024763 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101106256 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120765549 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123130064 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.096719347 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.131674329 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.127674458 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102462782 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.112428173 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.097262972 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.116037946 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.091128547 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121257524 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.093847991 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.119488556 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097447816 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119703534 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.122270252 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102239497 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.120423797 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10100292 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.120850452 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.089368308 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.125526604 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.12102497 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103788938 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.115241791 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100531221 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.123101937 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.125505228 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106744121 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.118609482 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.100027833 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.121250193 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123872646 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.092705105 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.124073414 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09942844 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.119559769 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.09645391 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121525464 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102066118 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123762571 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122581546 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103212331 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.121196401 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.104186489 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123944986 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.113089995 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.094412418 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.123348236 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094582249 seconds)
  done (took 66.329614188 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.162062972 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097909048 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112008676 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091626738 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138393946 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112918345 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091301043 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113853351 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091873925 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126929157 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111513861 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091579011 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133143049 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139730468 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137594484 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126073117 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091498817 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1130111 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090874943 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113706679 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13357121 seconds)
  done (took 3.27484724 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116485769 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.132058564 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129284063 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.13497816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101110736 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131834035 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.129153158 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130880933 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.134924117 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104711591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134567768 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.130789695 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125619326 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104580936 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124997225 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127425382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135116287 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103014821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.13148156 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.128501106 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127726791 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108053717 seconds)
  done (took 3.576682985 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.10566052 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.120501938 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105566188 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115286564 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100103984 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.114894014 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.103942545 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.117479047 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.125552323 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.100519229 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.118665795 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10083655 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.125529123 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.093661762 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.119229531 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096267989 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125071555 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.120688516 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101460097 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114016277 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.140664948 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09437121 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.115136577 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.098230139 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.129411689 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100962486 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.121352271 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098944694 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.119901303 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.1206572 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.0975839 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.122582867 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103860505 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.118832382 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.097118389 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.122629783 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099425047 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.116692528 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.117525776 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104414646 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.11599751 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.101036179 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.128241615 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096163139 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118552883 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.123334623 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100414361 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115034141 seconds)
  done (took 6.221095892 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.118952509 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.175892163 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099294037 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134340541 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136535743 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.130933417 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099246877 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.156012791 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094639825 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117850557 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.138499169 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112794538 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119516462 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.123340505 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103506943 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119652412 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.11988893 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09611215 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12666079 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1201762 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105265993 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124326949 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.13539936 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134448186 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105378488 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11742688 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09640757 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.124230915 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133090477 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126912451 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103352298 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125891687 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135078914 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.123640477 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100187867 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121140715 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.137939256 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097706668 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.121226967 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.094736481 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.121277297 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123031658 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103427054 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138918205 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12250713 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.12367711 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.097095146 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.114191988 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.133536554 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.100810709 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.131544018 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1358705 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102103337 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.119991124 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124230932 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.136901668 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.097641001 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.116962365 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.101160489 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132583196 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.116042586 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104358017 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135681467 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120688547 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130292297 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135681867 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102548676 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12546059 seconds)
  done (took 9.203999652 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108683125 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.145332647 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138327729 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138289594 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106310035 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127230623 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.127782616 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105869835 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128202469 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.134552098 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105849381 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.175949701 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122104084 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132111111 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10623617 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129199301 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.126900424 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105841941 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128307902 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126587676 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10574761 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.139588913 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.12699302 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138218398 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139856563 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099834979 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128516756 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127435888 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116080484 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128276448 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139721094 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.12775477 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106729721 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.140687426 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140902495 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.127655226 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097561187 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128190494 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.12731552 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106496867 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122517364 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138477054 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105489041 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.121927051 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127724487 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106267753 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.140030275 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140911352 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133392894 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134799167 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106116819 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.139029524 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127366233 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128157076 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116909761 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146973396 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139884771 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138444554 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127668482 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.139642752 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115839472 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.1463243 seconds)
  done (took 8.725395229 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097817243 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119366027 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095429204 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117256962 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097677944 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117543839 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097758157 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119266413 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097915573 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.119006294 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098450823 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11703158 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095624259 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119163032 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095610159 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116636106 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095584082 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117117829 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098136516 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117061156 seconds)
  done (took 3.027219634 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106614878 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.139421502 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.098263601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.128868235 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.123249466 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105041038 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.122837445 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122576001 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099187324 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122640621 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.132627956 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111176612 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120282453 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.127281976 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11103084 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.127355834 seconds)
  done (took 2.775150396 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119416649 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.134368235 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.14531023 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102850964 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.119301676 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.128572193 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.098492993 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.116465597 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.094071306 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128948996 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103307933 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.132362757 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.120283218 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.096062946 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121788913 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10420511 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.116346983 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123796442 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.098793536 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.144575474 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.102886873 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.124596572 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.120716379 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.100611946 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.12390921 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128060188 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105572839 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.11879921 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.096514353 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121457611 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.123088813 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106637132 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11710964 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103086944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.118744819 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095634464 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.121354585 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.120774127 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105288399 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120398359 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.09721162 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123880135 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.120414296 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100043652 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.115544748 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.099033923 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.11691039 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104840856 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122555942 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.122824044 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098382605 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128216547 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106083044 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131751134 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129967951 seconds)
  done (took 7.221103972 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113862754 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12494734 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102385181 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11922929 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123956578 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106736954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12444261 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101505601 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.12275322 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095228432 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123124703 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124399349 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101454973 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.124640789 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101262016 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125323238 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.115725997 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100248541 seconds)
  done (took 2.936159337 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104325482 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121003679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106355118 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121115059 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098419182 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124132469 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093701418 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.120332524 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118937568 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099157367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120935963 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101018123 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119196564 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101188804 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1217866 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098314742 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123472759 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119170631 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098957303 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116461725 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101838001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119455387 seconds)
  done (took 3.340184249 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116459886 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.153599199 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.136739284 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.163352759 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.103977062 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.125454258 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.113242503 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.126216797 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.142981824 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.102359865 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.12525138 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.102014596 seconds)
  done (took 2.400383531 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12353931 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158415727 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118722001 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101458498 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135712433 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126410705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104279084 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125666969 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138673186 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139977832 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104832194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138324975 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138190397 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137037426 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111572487 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135017762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12591048 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126998782 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100872046 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148096441 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126647905 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137989979 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104535494 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126126226 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103644288 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136856222 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138159857 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139834638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127191778 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137974227 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113262758 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126418922 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139555027 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139874724 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102856781 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138338817 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126798697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148435055 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112510469 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137699204 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12397898 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134445005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116910373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132950297 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138492931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126876497 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110675507 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127129046 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127036925 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155962241 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111796143 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138604199 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134304826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138846439 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138395874 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154705402 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140279708 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137466183 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111846629 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139649086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137853377 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134182723 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137788629 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117347593 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136075493 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137847932 seconds)
  done (took 9.442552427 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138431434 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121707207 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127484388 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142387115 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114468111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128521668 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126524037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103970055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127603482 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123603254 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173432237 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103936946 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139034083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137257884 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128039593 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104197305 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127792936 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137683822 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100474181 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176993297 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104495213 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138812723 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138098873 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138448104 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140522925 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112239775 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129288356 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127532856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105459282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127482843 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134957894 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104425875 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139355192 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.120306853 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13904254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105716379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127547506 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134414707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104698308 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135753283 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137858808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148749535 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127641228 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104903298 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139679709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127647648 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127724886 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1022037 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127978286 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100981081 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141108623 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140821713 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142162158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138666757 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128502376 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105430002 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128612215 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126716449 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105867751 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135298403 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139805899 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105115871 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15570454 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129194045 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128134695 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13935978 seconds)
  done (took 9.329062521 seconds)
done (took 175.669584812 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.118424584 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.159355024 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.138354103 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.197367183 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.124097758 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.147114817 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.166577777 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.114561385 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.124116667 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.123016069 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.100701022 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.126842591 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.204734476 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.123713126 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100267451 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.127025179 seconds)
  done (took 3.096938911 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.216718576 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283680575 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.143560178 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105328396 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.131139238 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102703446 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.129743686 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.129988131 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102566253 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.137135913 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102279364 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.127717075 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.137557665 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.102867608 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.1264543 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102217326 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.139053729 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.126355256 seconds)
  done (took 3.355642601 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.131909831 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.180364135 seconds)
  done (took 1.223871216 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.136982066 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.20229104 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.326773785 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.180132511 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.154571554 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.147041447 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.179795515 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120529861 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.210192621 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.146558655 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.146876665 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.130896795 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.15443318 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.112598535 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134111767 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.130501509 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.133330357 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133093448 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.132629905 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10890374 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.155737965 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.132088221 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112490984 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133635444 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.201328065 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.39530398 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.132651165 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108262462 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.131978593 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.108550511 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.137516984 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.146418504 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.146178542 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.19023066 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.137228563 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.206463197 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.115583727 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.130668755 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109019671 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.130141229 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.134998458 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11116316 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.146590564 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.131008578 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108273027 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.139776253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.132212367 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108646537 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.139563371 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.14078588 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.138322372 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114307325 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.209543548 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.139201768 seconds)
  done (took 8.989202055 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.851474554 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.145761197 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131185339 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.94474927 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.161063849 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142367254 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.82218072 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127085675 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280598105 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.839048641 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144599769 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118737553 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252121097 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.296559503 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140552803 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355329082 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.722552328 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.144678934 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.134514169 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.195169536 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11304321 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156511803 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148005371 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.458426743 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.129659399 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104868105 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.146134913 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.140716864 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181336566 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.129460121 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108687737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.223896263 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.284562833 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22379575 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129850937 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104556908 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127896753 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189793653 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290843219 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.238871175 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191840783 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101399319 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.127823909 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140788602 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125289258 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126199973 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184951135 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.218051153 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195042814 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132843002 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.140683121 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114426047 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14005197 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181618172 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126395789 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362857732 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361305941 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104230455 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137017559 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.147207252 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29070511 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105213765 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.246292155 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.155194349 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.235521437 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104168632 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83787747 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.210767323 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105113182 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.137647007 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.135158901 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111132609 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140624847 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189417708 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.422693678 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144059738 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132006823 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104803759 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.262000368 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104926974 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12806051 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184074728 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130456179 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114121771 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14557482 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14218233 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.192415995 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.294640355 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11945601 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139267236 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133218037 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141309254 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.107208185 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233735473 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.240527513 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.203358553 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23330901 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142454033 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185733354 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.211455502 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117436635 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.218057186 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.136360827 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122954447 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141744902 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.237073592 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.162535575 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.129101412 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110234583 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136210226 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.166882526 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108849351 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136783468 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.213636458 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479503304 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186391527 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.127528435 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109346986 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138177887 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184121757 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135941893 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.284766437 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138172405 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189047179 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.136592041 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103017535 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.137750118 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18501326 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.14407234 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138482389 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140651084 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114294098 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.29537254 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243143034 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121377314 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25885579 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.202879079 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.139559191 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195686389 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138762529 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19081812 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139222666 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141219502 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107461957 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835233635 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142288547 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.136669312 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110777664 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.222140382 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128061315 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106755104 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128265382 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102708529 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827889917 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.132377643 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103063894 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.130499433 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115120967 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.136449225 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135253405 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.134343342 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184416378 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254734587 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.142233942 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11278262 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.128973082 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183379205 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.131790592 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105878911 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.129773349 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105508842 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.140136248 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.13414315 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106977728 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.219643083 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179826624 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.243710977 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.562786303 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10560166 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.130303668 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252196941 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105132782 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32941308 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136600055 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.248309693 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190249465 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.127645899 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36005339 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191696933 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.223994433 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.133412109 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193635607 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126644427 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112099171 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.206001612 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105221853 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1372125 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180663519 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.147056662 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144632539 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.172317932 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105291533 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.274280364 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.103647629 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190502797 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132605291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142483048 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33014959 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105360432 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149498824 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183858835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133728927 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.130524592 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.836878446 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.130296906 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139196584 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116254799 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.246145952 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.211617914 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113648028 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137270328 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.14317846 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184066679 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231638296 seconds)
  done (took 49.076555132 seconds)
done (took 66.651429192 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320658382 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28652704 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.328448282 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239085621 seconds)
  done (took 2.202143462 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.199110744 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.173041733 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.167846834 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10420562 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.173971377 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.127913263 seconds)
  done (took 1.89887881 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.503907002 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.421776508 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.365201261 seconds)
  done (took 2.247114138 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.278042142 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.300010473 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.378220622 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.457022118 seconds)
  done (took 2.475520087 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.221845925 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.14587395 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117011059 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.159726277 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.191535494 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.220359352 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137853211 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198821171 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.125501631 seconds)
  done (took 2.522952751 seconds)
done (took 12.306922795 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.269979465 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.184579985 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.25311979 seconds)
    (4/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.291043716 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.319608075 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.176972705 seconds)
    (7/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.264726672 seconds)
    (8/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.246384975 seconds)
    (9/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.243135431 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.170055496 seconds)
    (11/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.236478276 seconds)
    (12/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.137392654 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.146728679 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112080271 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.179434689 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.179740523 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.215828898 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.150271363 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.279285071 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.12430849 seconds)
    (21/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.217589831 seconds)
    (22/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.212656676 seconds)
    (23/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.161444646 seconds)
    (24/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.244302906 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.245648367 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.220679991 seconds)
    (27/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.185226024 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.26180394 seconds)
    (29/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.142968423 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.243059042 seconds)
    (31/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.171620057 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.18892608 seconds)
    (33/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.217572913 seconds)
    (34/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.200069318 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115955114 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166490462 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.165660028 seconds)
    (38/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.266625134 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.136920763 seconds)
    (40/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.17029309 seconds)
    (41/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099274793 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.158836249 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.136376303 seconds)
    (44/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118007378 seconds)
    (45/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.14526398 seconds)
    (46/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.254299028 seconds)
    (47/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.144066922 seconds)
    (48/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.244855022 seconds)
    (49/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.115342145 seconds)
    (50/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135316817 seconds)
    (51/286) benchmarking ("sort", Float64, true)...
    done (took 0.249654551 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.138389312 seconds)
    (53/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.128723404 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.161220049 seconds)
    (55/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.169481131 seconds)
    (56/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.135212788 seconds)
    (57/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.120748135 seconds)
    (58/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.142139384 seconds)
    (59/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.137495214 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.141589222 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.137798644 seconds)
    (62/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.209033706 seconds)
    (63/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.172287656 seconds)
    (64/286) benchmarking ("sort", Int8, true)...
    done (took 0.241510208 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.091019216 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.133731848 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.136674217 seconds)
    (68/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.225577127 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112345625 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.219622595 seconds)
    (71/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.143931328 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.157147886 seconds)
    (73/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091536973 seconds)
    (74/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.14161715 seconds)
    (75/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119114879 seconds)
    (76/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.162798643 seconds)
    (77/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.128548924 seconds)
    (78/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.150611088 seconds)
    (79/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.128295477 seconds)
    (80/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.169458834 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.104489976 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.217368826 seconds)
    (83/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.213161775 seconds)
    (84/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.13492351 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105409054 seconds)
    (86/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.146780775 seconds)
    (87/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.146154971 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121973595 seconds)
    (89/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.135896172 seconds)
    (90/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.172405027 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.128883287 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.219397316 seconds)
    (93/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170392913 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.156885933 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117462435 seconds)
    (96/286) benchmarking ("sort", Int8, false)...
    done (took 0.24121224 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110969161 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.231807966 seconds)
    (99/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.126370368 seconds)
    (100/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.099656515 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.144124845 seconds)
    (102/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.107873593 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137738506 seconds)
    (104/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.175874871 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.242715186 seconds)
    (106/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.247519986 seconds)
    (107/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.176447569 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.135624494 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.139619216 seconds)
    (110/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.203422164 seconds)
    (111/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.103926784 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.14323589 seconds)
    (113/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.126980251 seconds)
    (114/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113128769 seconds)
    (115/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.117199764 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.137158069 seconds)
    (117/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.136496987 seconds)
    (118/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093042498 seconds)
    (119/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.220910585 seconds)
    (120/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.134602654 seconds)
    (121/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.147525734 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.208301464 seconds)
    (123/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.092211848 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.143156321 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117467734 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137254587 seconds)
    (127/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.134062617 seconds)
    (128/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.15856484 seconds)
    (129/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.119395456 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.145933907 seconds)
    (131/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.108106756 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.136990312 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111844433 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.143849643 seconds)
    (135/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.118502426 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110308995 seconds)
    (137/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.145262626 seconds)
    (138/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.092622793 seconds)
    (139/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.139923521 seconds)
    (140/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.117983732 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.143501443 seconds)
    (142/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.221323422 seconds)
    (143/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.140441505 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105426723 seconds)
    (145/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.213423959 seconds)
    (146/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.13959545 seconds)
    (147/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.156798489 seconds)
    (148/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.137810525 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.131922074 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11366183 seconds)
    (151/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.141961464 seconds)
    (152/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.109687287 seconds)
    (153/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.131818978 seconds)
    (154/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.143505665 seconds)
    (155/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.117544846 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.143886054 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.093012178 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.134476587 seconds)
    (159/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.105951691 seconds)
    (160/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.118494375 seconds)
    (161/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108130981 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.14778177 seconds)
    (163/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.149886734 seconds)
    (164/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093608138 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.119205308 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.140015489 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.120726472 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.137275342 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112692392 seconds)
    (170/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.11964263 seconds)
    (171/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114034681 seconds)
    (172/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.146164699 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185366721 seconds)
    (174/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.093491865 seconds)
    (175/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.119773253 seconds)
    (176/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.093430985 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.13842047 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11276619 seconds)
    (179/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.119293515 seconds)
    (180/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.092569093 seconds)
    (181/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.147745651 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.146760796 seconds)
    (183/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120792737 seconds)
    (184/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.160191183 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160815959 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119190893 seconds)
    (187/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.119014731 seconds)
    (188/286) benchmarking ("sort", Float32, false)...
    done (took 0.196035671 seconds)
    (189/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.093442154 seconds)
    (190/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.120196218 seconds)
    (191/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.100709647 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.242377577 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.136536757 seconds)
    (194/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.093644367 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.119926581 seconds)
    (196/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.093948645 seconds)
    (197/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.120927763 seconds)
    (198/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.092981045 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.119436057 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093710858 seconds)
    (201/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.118285332 seconds)
    (202/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.099897337 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147028126 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.144841326 seconds)
    (205/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.206421315 seconds)
    (206/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094861863 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.119323108 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.112011789 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.157489078 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111702367 seconds)
    (211/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.139597997 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165775175 seconds)
    (213/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111420109 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134610173 seconds)
    (215/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.132824374 seconds)
    (216/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113385817 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.135255498 seconds)
    (218/286) benchmarking ("sort", BigInt, false)...
    done (took 0.250562183 seconds)
    (219/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.120418344 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.1124469 seconds)
    (221/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.139896858 seconds)
    (222/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112887489 seconds)
    (223/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.120176752 seconds)
    (224/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.15618544 seconds)
    (225/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.094269352 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.12023488 seconds)
    (227/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.120251874 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.14958592 seconds)
    (229/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.094381525 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.14809738 seconds)
    (231/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.165833105 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.123219466 seconds)
    (233/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.137416262 seconds)
    (234/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.136959744 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.106571454 seconds)
    (236/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.12110026 seconds)
    (237/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.093154858 seconds)
    (238/286) benchmarking ("sort", Float64, false)...
    done (took 0.195452068 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.13311258 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114362195 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.139587717 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119793978 seconds)
    (243/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.120341395 seconds)
    (244/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172439613 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.094172545 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.132069822 seconds)
    (247/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.121149211 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.211781155 seconds)
    (249/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.120678708 seconds)
    (250/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.208253962 seconds)
    (251/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.094530485 seconds)
    (252/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.173567552 seconds)
    (253/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.092920078 seconds)
    (254/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.121486786 seconds)
    (255/286) benchmarking ("sort", Float32, true)...
    done (took 0.252702183 seconds)
    (256/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.093795013 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.122971396 seconds)
    (258/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.11999358 seconds)
    (259/286) benchmarking ("sort", BigInt, true)...
    done (took 0.272267366 seconds)
    (260/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106951296 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.142134811 seconds)
    (262/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111319424 seconds)
    (263/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.121854553 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.133490422 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107614185 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139954448 seconds)
    (267/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.109038573 seconds)
    (268/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128686751 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112214053 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147004077 seconds)
    (271/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.137510311 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113309266 seconds)
    (273/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.119833249 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112748954 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.13642791 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.176816528 seconds)
    (277/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120919889 seconds)
    (278/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.128796007 seconds)
    (279/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.101232525 seconds)
    (280/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.135580994 seconds)
    (281/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.137233732 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.108939371 seconds)
    (283/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136238766 seconds)
    (284/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110089278 seconds)
    (285/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13712071 seconds)
    (286/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112223496 seconds)
  done (took 43.66433667 seconds)
done (took 44.634847237 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.117981501 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174624549 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.144847382 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136382174 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.146385436 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.149987257 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.115714715 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.144412154 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.145600987 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.121222277 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.147653687 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101028634 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.144852885 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.143547701 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.118623041 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163388099 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.147362331 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.112982757 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.137119956 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109632389 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.136566303 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.136520072 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111930784 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.128254424 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.118282933 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.142867708 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.1388155 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.117474668 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.136987349 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107119593 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13518402 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.139542029 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10797281 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.14500167 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.111741752 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.136138178 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.117318391 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.144023319 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.138211231 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110906534 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.141480393 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11038878 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.140383663 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.141719869 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.110624101 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136117429 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.109126742 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.146509555 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163574585 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110972939 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.142035455 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.116626194 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.145957808 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.1404196 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10819382 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.136251863 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.10988494 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.164792179 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.136210019 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.110665686 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.141930143 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113740233 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.158241018 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.135718336 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110578233 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.144131171 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.115653871 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136305312 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.143818492 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.112913585 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.132180856 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.110509721 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.135682898 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.106749622 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.143229039 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.14362746 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.10476532 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.137612873 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.113931885 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.13905999 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110330673 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135474743 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.138379752 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111491036 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135004184 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.101048606 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.135361517 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.112163115 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.138246377 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.136256353 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113027661 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.139780979 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112909003 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.144177744 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136597171 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.111136705 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137809001 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110249212 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.140542995 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134968784 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105939235 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136137556 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114907759 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.134427607 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.111109776 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.147227668 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.134929715 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113209293 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.13773205 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109402132 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.149373527 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.143147425 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111530751 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138318149 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.106981004 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.141573507 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.135395809 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108670055 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.135267713 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111048251 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.138574298 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110552775 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136666878 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.140262622 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.118681627 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.133459773 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.108677644 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136909092 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.137321012 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.113411718 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.138539582 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108154987 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.137679244 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105419856 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135643238 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.107599551 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142655017 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135812754 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.109783322 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.138468727 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.110546736 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.139473132 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138023383 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.111880296 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134885251 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.102951295 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138260909 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108245822 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.139747764 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.137992283 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110993665 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.13327345 seconds)
done (took 20.621338725 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.118056402 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.207623935 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.170846884 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.173880336 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.171560739 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.155626801 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12009207 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.168632242 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.147642875 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.167812986 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.169159862 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159284742 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146448087 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.14678888 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.155479024 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144893469 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116793228 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.154684385 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.178367223 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.16359538 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141910758 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.147604082 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.165912513 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.164688292 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117835725 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164972234 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.148749617 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.144494003 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120766644 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.161337836 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.160455743 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.120153282 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.147875028 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.156056629 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123844316 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.144477761 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.155112059 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140120002 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118396071 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.145487075 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.157838649 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127537584 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.14286492 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.152117918 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11814257 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148756812 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.144151161 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116662585 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.14564942 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139859458 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.122435415 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.164825954 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143706508 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.119132608 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.146356865 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.145374846 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.146699408 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.1220073 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.148284507 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.148295771 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.1179696 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.149575519 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.149612784 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.161883367 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116946483 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.147698082 seconds)
  done (took 10.701311818 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132563813 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.174318125 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.152771484 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.152059799 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120300561 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.135527801 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106527115 seconds)
  done (took 2.020081599 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108933894 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.166370205 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.169040221 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140720265 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.158503976 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.172858474 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152699784 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10960123 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.159593155 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117728989 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.165048345 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.192234137 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.137883086 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120863493 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.171957541 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.136532092 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.172054274 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109351185 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14477531 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140997284 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144271592 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158635399 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122256236 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.138434301 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.159087735 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110386379 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.203892964 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149470792 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107560418 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.144121606 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142846834 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20779167 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.159766998 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119834799 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135971448 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136592688 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.158517328 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141813025 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.161814568 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114127389 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.159255958 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115829912 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.145561258 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14285292 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117019373 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.153474883 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148401164 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118337405 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143811186 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.165347055 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120374879 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.16013794 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.109920113 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.141923629 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.147589774 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116066416 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152327932 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.141319393 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137326193 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146135846 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.164256883 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135615415 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.159942823 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.163874106 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155496018 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.131831879 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.159373761 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142524083 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117272908 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145465678 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.16353029 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113511183 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.147673287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123586542 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147708073 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.165280107 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13566406 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14385977 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.149700505 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113954916 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141432208 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.109325082 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.155336819 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141151599 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111921016 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.155094482 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14999321 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11462959 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.141982635 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.159865705 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113721217 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.149752676 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.149688654 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114102621 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153378551 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.16622818 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.120277241 seconds)
  done (took 14.932388741 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111999827 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.139016128 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.116485396 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.140726497 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110859382 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.141083179 seconds)
  done (took 1.826791894 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141569677 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.143155804 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154333613 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11694506 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.183162073 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.162535832 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.133892905 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.149007968 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159160748 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124298544 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.163747266 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.163868193 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.167675151 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118029961 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.162888813 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.145659854 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135402114 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143456758 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124242425 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144327705 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.15502185 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.117378582 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143461708 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.161267924 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117781436 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148379907 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144724561 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126342977 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154161488 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.148368841 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118517345 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146215407 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.117396209 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.149984741 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.163088289 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117570972 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142028502 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.147630564 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11875041 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147926766 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.166247596 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114893656 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.152263608 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119979749 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.149074901 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.146146438 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.1190845 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.147539889 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.162663948 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119211931 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14933723 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146657999 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119302139 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148660543 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118171636 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.149303115 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.148557242 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.134536227 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.149094528 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.145965689 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.114607126 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.1477834 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.149114399 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118654215 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146495593 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119208342 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.14849128 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14201275 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114698576 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146333819 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119210357 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.144859978 seconds)
  done (took 11.206982176 seconds)
done (took 41.727158785 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.72566606 seconds)
  done (took 1.790813077 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.918456816 seconds)
  done (took 1.98529505 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.986874375 seconds)
  done (took 20.087351239 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.574348258 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.665033328 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.985761773 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.188439402 seconds)
  done (took 3.479644219 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.020835343 seconds)
  done (took 2.108749006 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.331857761 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.288228259 seconds)
  done (took 1.690322627 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.913675843 seconds)
  done (took 1.994423585 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.589446024 seconds)
  done (took 2.67032854 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.3770983 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.224536157 seconds)
  done (took 1.689715855 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.6025733 seconds)
  done (took 1.682454282 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.271293412 seconds)
  done (took 16.355074945 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25537587 seconds)
  done (took 1.348402737 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.325539976 seconds)
  done (took 1.409495605 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.982297382 seconds)
  done (took 5.073436087 seconds)
done (took 64.444362049 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122709878 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.152467518 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.12374269 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.150022122 seconds)
  done (took 1.63065274 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125450032 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.147759926 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122098098 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.148413716 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.155667255 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118631595 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146432382 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.152510852 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118598366 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149867256 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.146900005 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118963811 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14913649 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116487386 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.147075402 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148643164 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122775906 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.14897588 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146037468 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120658407 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.146717648 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119344174 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.150986939 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.147335711 seconds)
  done (took 4.408782382 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.12148807 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.143983849 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117856378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.143078764 seconds)
  done (took 1.62292824 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125726826 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.160635749 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.160487674 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12510041 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.161934137 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.159782251 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114965125 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.143755583 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.116582661 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.155661677 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.143452569 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.134951957 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.161536679 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.138765807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126522039 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.137091865 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.110859647 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.160985774 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.15336416 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125867151 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144141977 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.152433709 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122816005 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.157592519 seconds)
  done (took 4.492176498 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.229807827 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127614633 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.167588907 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.15063652 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.195375439 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139860189 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.142473107 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.168638724 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.114625786 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.160988248 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.146946583 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.194989655 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126809401 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.147448865 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114799559 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150834217 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.160224638 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154307777 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.117214502 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.156828091 seconds)
  done (took 4.167886607 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121850069 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.143126132 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110828054 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.14370481 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12050165 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.147327301 seconds)
  done (took 1.88833201 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111664893 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.13830517 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111552878 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.137358159 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115323861 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.138656863 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.109743399 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.138298768 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.110908292 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.138425646 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.109903223 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.137525425 seconds)
  done (took 2.601657486 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.578523639 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114683958 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.149093972 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.143478412 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.119589212 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.145152295 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.157612625 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120912868 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.198337273 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.146412032 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.159059082 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.198162684 seconds)
  done (took 3.333050241 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236111884 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118804561 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302600884 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.454733391 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180554741 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192151312 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.376852901 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194420575 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210479441 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165380548 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228989313 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184953329 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181610545 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205593812 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167908225 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.211844174 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202395794 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257516646 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145894608 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272645758 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191719537 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194017457 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215924847 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17932173 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165483179 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185587538 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114384013 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154795468 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199963518 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196297544 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231510629 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17555596 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134809062 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258052343 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238152936 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236404328 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.416388631 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131676436 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.223255604 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.248023424 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306724828 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138056644 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253264644 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18293571 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12790608 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235551823 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183420934 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206522956 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.127702965 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169209381 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239409023 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203571293 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.208287647 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16486587 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.406598488 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145391844 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17243044 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210563364 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246441289 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227614275 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19466543 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150910814 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271885531 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245683081 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207121049 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172843313 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196033358 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120974085 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235313339 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231635398 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206400163 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194746826 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.249934322 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161276905 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191128797 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206795048 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181189695 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205670109 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187682395 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117693444 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17746494 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16525503 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155292328 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.215365682 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12056078 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269292158 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133019446 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343093961 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243008754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185353561 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188901163 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191990962 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194346599 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173761659 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.146240185 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173186298 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.198282923 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183569495 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128235198 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184315071 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173511734 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.154006485 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18024034 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120656049 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186349712 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.161967352 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195011904 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191377144 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156223714 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192944905 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177464764 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153563447 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228519843 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221960879 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158969221 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12893028 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25829317 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155003266 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.163652853 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211324404 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.251786416 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.199923458 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163811339 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195008522 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222450874 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170195444 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223174008 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169910733 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161284095 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.177395483 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185045173 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184090248 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151061031 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156864933 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178801753 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228565453 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.156047689 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163911487 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202222713 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121870644 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156458303 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171973625 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163284754 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138158799 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.177239487 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16706712 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183202334 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187090291 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181325911 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186056586 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169897689 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215724919 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161030604 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.187659391 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17495814 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.114101396 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.236241179 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220426393 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155816488 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21404558 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.195950138 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293028728 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191275709 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125745814 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238294066 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126779805 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.147002601 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193180083 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187441495 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189972346 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219842576 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2881456 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194709355 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18031725 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176635464 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194563449 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211208512 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183010972 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.173228187 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18993592 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194201634 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150653728 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118736093 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154803052 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167327357 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157741773 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129017618 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238721803 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191585025 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253340377 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185358551 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168012005 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216872145 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154064041 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192518263 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199933238 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165789741 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219377432 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247453833 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193560356 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139055118 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228229136 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117130232 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1527046 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.128474493 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224734446 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129112572 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16243597 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170775216 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218060493 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202417889 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178351264 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302252187 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194883003 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22673628 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150445373 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190486186 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206922365 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185281031 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.218006183 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132147883 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185937561 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214441187 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171032428 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252123554 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188672404 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196428016 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227078452 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.184676079 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158620701 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177363791 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195743511 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168398182 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198764706 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172915986 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13127601 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18089831 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164920693 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153419047 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2083163 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171525442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206520196 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.193816887 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23262925 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123187135 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172296515 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187920417 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172944651 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112975841 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228219971 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224090781 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171643059 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186477519 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211486458 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158390179 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.38999003 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256094198 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212910899 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165404684 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169740415 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187725302 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196523973 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191309378 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211781815 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171094095 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207486235 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18514802 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138789934 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163895418 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176382515 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178634354 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.179718621 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.160312839 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178256317 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139247066 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241266708 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141234146 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186203473 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190983513 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174982084 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.183590601 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168380709 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2366098 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18510505 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204891476 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.184632657 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.202242023 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214549133 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15252519 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15558025 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.122681467 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209964255 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160632348 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186419573 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.286168179 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265866106 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183129486 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228401616 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134230957 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.151851693 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187825705 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177392707 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.31489671 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139228081 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165034769 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258637798 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.14687604 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160393044 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192100841 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394314372 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142296668 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243627424 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.117923684 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.377925783 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124353015 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159554854 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196807708 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198172083 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160045366 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.214056378 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193327509 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140985135 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197333779 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165845994 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286766165 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239222433 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227246013 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203751795 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138504528 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186205519 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222367391 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214247197 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171289421 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141393514 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191732706 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218586037 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.252967576 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.159868494 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158223039 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189858664 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187280024 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234312566 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129816434 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248175267 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126608651 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193003018 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168432429 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152998343 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18611353 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.283105103 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130403385 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211595839 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185672308 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159998473 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154745219 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17901053 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186553071 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138754804 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157012048 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205800027 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.156778403 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191455109 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208632903 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15779822 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150485677 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174002192 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159325471 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170959151 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172351876 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131144367 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.203775043 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218681698 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.159574408 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213084641 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199593528 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194083288 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218189458 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140382622 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690361819 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.156168134 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218739848 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176792965 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215819829 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178033137 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194410352 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190420971 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177626385 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196226366 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177453353 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.216176956 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224922786 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185235585 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128161298 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173390906 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17450058 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158642412 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179790205 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15839098 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168287828 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165349705 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.18375063 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174210336 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173318914 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134119888 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252494056 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143975471 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243623307 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213389997 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134492697 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226482408 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204747389 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158013192 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188367689 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200483075 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137843889 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178530663 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.158532436 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163900784 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208212854 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119873952 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189306014 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188830203 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189810672 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191553697 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163832422 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186990443 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171576627 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189445631 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121706758 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.183180316 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187189104 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159174231 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.15601491 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182022917 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187829695 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.185717227 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12351708 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.205982274 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219848852 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.154012532 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129931348 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391058133 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187532755 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221658493 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.182374166 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163572525 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138487379 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183821156 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18136732 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186915879 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.157199104 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160509565 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128006182 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.213986599 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.190144212 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187427145 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222859469 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189594176 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249854544 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.1324206 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.29518762 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168376121 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1835842 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.126233407 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158108572 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171173387 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161972466 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142780743 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.289528572 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207721683 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.181764969 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.173978283 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155449455 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124991925 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161985049 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200315391 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184572025 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186735875 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171099203 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115075558 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174011291 seconds)
  done (took 92.709092519 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19176537 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.194544182 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.250727845 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.247680645 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214446563 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288937645 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.322109078 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281017049 seconds)
  done (took 3.20424363 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.154647939 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.133980361 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.170091804 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.153647447 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.144939124 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.376045452 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.1634123 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121503286 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.179861556 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.164926216 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.146626863 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.623127736 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118094607 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.153636413 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.143296008 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.144593213 seconds)
  done (took 4.305045493 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.599851289 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.60613368 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.546133345 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.292088243 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.265992634 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.186460228 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.847788399 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.219270324 seconds)
  done (took 13.782005777 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.14894258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.169840961 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.196421201 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.162442843 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.180852339 seconds)
  done (took 2.083556895 seconds)
done (took 141.315551652 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120024494 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.153858899 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119785089 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155997998 seconds)
  done (took 1.756324438 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.133868934 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.136907286 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108895009 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.136640173 seconds)
  done (took 1.734934947 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.494593945 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.105177132 seconds)
  done (took 1.850566149 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.140765853 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.161836597 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163501995 seconds)
  done (took 1.69591119 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.128838849 seconds)
  done (took 1.351940911 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122525989 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.156762196 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138144603 seconds)
  done (took 1.646531244 seconds)
done (took 11.261296746 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.135231558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.467386122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.442640628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134355641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.753180002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.435852568 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.071957003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.186948573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194953998 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.148569838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134087355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.730028745 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.052609688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.368685254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.040301301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370086782 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.732374978 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14924606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123353762 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.149508717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.049610163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.147306402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.149050352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117885508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.728606976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420110765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.148875795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414605614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115038157 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1531867 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.404296828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.148854401 seconds)
  done (took 18.030152188 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119144154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.210728748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.155847101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118155739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.15360361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117633369 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.159491896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161505962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210158681 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114661219 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.169043726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.1150845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154087993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.148573478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138400769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.148961723 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119037912 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.151544978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.155153338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119204709 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.168900522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114773874 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.15123865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11817446 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.14885486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161798232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116853788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162498821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11579195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.155214986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.153824092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116899351 seconds)
  done (took 5.854064426 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164222559 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.221306841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.158644829 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.186112527 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.200706362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118881242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.235072612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.189547155 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.213415888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.149133469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13572474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.148778199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.185914699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116552872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.17227859 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115994238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.152048036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.150323638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123930549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.151176655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136389961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.150278759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.149746175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119505263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.149031069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130437072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.150533132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162416355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11709148 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.154287919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122702594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.149533993 seconds)
  done (took 6.219453297 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12511822 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.158778841 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13349892 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166549084 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.151598378 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124386209 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15802252 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118659616 seconds)
  done (took 2.373750494 seconds)
done (took 33.707068342 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.134746316 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.153989798 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130718281 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.163449495 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.125966669 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.174499841 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114699168 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.161164021 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.162000846 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126620835 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.165799622 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11577055 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.151108255 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115303431 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.163833906 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121836753 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.165506537 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.125655487 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.171133719 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.165655582 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.117310064 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.162685996 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.1260462 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.17181139 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.171422205 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.170386247 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133103361 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156147528 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116914232 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.15211884 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.133596345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.176738989 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.153328803 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.133930182 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.155671349 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120650303 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.151612995 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117859603 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.166458307 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.160633502 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122438886 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.161392229 seconds)
  done (took 7.366620953 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.144672278 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.19566592 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.147784298 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.115395231 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.148374621 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.155653324 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.187520363 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.14831261 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.113881445 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.175599915 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.177445496 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.115564671 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.149193825 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.115009209 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.148802227 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.114461389 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.174750023 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.174507618 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148347515 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.181800041 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.19691327 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.182620126 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.153257731 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.174884862 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.192845945 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.186937453 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.139038364 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.187899969 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.179183527 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.11420538 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.181813532 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.183931032 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.113807707 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.148510918 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.191691898 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.154329633 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.1784939 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.192328718 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.182571413 seconds)
  done (took 7.5077125 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127413203 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.165665035 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139838389 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217419008 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.193150474 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162983767 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129010146 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.170393899 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135280921 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.151015196 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127991759 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184396946 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.16964043 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124365852 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.157739172 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132726568 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.172209372 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.154105639 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12250751 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.172889219 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13625001 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.165288828 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.164606389 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128783864 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.152068616 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126923651 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156571492 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.166351877 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124646 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.160713808 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122470274 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.157552836 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.159238417 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130516604 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.177548378 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15935897 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140690907 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.161079626 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127558428 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.187290764 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.165338937 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122927407 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.175157012 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.192731862 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.118584715 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.159561753 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124680857 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.161372527 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.1505544 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138293471 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.162951004 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118162871 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.168438404 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.151533904 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.118450789 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167913452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119458082 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.155396511 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12671412 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.159643114 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.173346748 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123567134 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.167126255 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119056538 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.159074508 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117377294 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.152120764 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.156861057 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141283656 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156002916 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.193943029 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118666834 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.159191689 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126253535 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.158840004 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12652115 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.152625223 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165957975 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128498773 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.157248849 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127309834 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.156271216 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122092637 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.171738339 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.167908871 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126293496 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.158176819 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158403396 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122275901 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.154174645 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132440452 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.156454818 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122946288 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.1715696 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.15268997 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121430698 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.160263118 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123125133 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.15274471 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165891465 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123638405 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.153300981 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128009198 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.15438064 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122383924 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.163485826 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122595081 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.153545313 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157700759 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12586165 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.15331888 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121894823 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.156859094 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12043828 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.166472531 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.158526135 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121873439 seconds)
  done (took 18.607475398 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.271738792 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.251397061 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.261789344 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.305728958 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.175752647 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.181208154 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.247542019 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.205624011 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.118823482 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.192978595 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.245015538 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.221176782 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.208662703 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.22109168 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.212840914 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118862101 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.175793988 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.207702752 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.252707797 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.339491558 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.174558387 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133362024 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.196063726 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.194710485 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.172418298 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.171748113 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.179049428 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.142342581 seconds)
  done (took 7.052191473 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135357015 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.194243781 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.162574533 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148099098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.180700361 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.155140234 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124144385 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.154688537 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.166788994 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136136191 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155582272 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126315171 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.159404119 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.163871425 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119009266 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.163870923 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128191967 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163424293 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.155612502 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.123355297 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.171783875 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.171016305 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126568652 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.160724349 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169877973 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126585903 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.155415608 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.174905361 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129327702 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.183442791 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.151432662 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128206905 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.169652994 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119352706 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.16053118 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.15601549 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122794707 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.154869806 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12386503 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.150925456 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.118619984 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.144235084 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124686584 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.168362683 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.160629561 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.120460397 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.160117743 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123892185 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.154883568 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.115373534 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.157268998 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121925302 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.158197425 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.171864908 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.122831669 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.156006337 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.123095653 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.155121474 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.127616345 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.157364161 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116103471 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.160072686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.160681651 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.124789865 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163051014 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126797434 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.158775814 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.156263193 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.124765071 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.162258126 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122056792 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.166647867 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116146603 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.157738809 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.165724086 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132835502 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.159177836 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124708477 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.162718394 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.153812552 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.109705992 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.153419766 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106858287 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.158613624 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.119057474 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.160217532 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.122068177 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.159780959 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.171444071 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127933083 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.161464292 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120279557 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.161093115 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.158490907 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.116472442 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.158548729 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137625266 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.173860138 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.153524675 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.11667146 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.175359702 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.121579575 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.153843498 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107835141 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.165117493 seconds)
  done (took 16.63465688 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148950816 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.194401483 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.155004983 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138936253 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.189464229 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.183995973 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.135122188 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.164076398 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.119595692 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.175237807 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.160619393 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129019516 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.162189297 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13445871 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.184292274 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.165209243 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120646838 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.170292944 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124634871 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.195294051 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.175061203 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.17984198 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.151907928 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.167231656 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.124682108 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.180346235 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.187441703 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.168003976 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133383607 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.188405894 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.132898811 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.187058591 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.190927984 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.159132081 seconds)
  done (took 6.767206207 seconds)
done (took 65.178905255 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.391777884 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.611324318 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.347696521 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.347606933 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.374521447 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.354170911 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.348980778 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.541913724 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.161636212 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.338047097 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.346169264 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.347085654 seconds)
done (took 29.82271906 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.533412327 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.510816006 seconds)
    (2/2) benchmarking "String"...
    done (took 1.645932639 seconds)
  done (took 4.444269218 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.349618197 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.347212608 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.593161893 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.346602287 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.367718869 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.368728099 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.347855449 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.3695325 seconds)
  done (took 17.01137698 seconds)
done (took 27.611435978 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.386449398 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.781125753 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.669521142 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.372679834 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.349813206 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.366806733 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.36803159 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.425322436 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.35689839 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.363383917 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.349192337 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.725983517 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.392951499 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.87374027 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.348817129 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.36048718 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.369493941 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.868566014 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.352668242 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.341843174 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.356565817 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.336608642 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.35345874 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.375420016 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.388856028 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.353527743 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.407869995 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.348970253 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.709505926 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.375483962 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.345584434 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.375627341 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.403116392 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.355170655 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.476797178 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.384023924 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.68998928 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.368232303 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.34034476 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.365968601 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.679692691 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.802734374 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.350818874 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.359221112 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.350429856 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.416157251 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.337383103 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.159323497 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.3525629 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.386067301 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.432083612 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.774382095 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.37668032 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.355417378 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.351336065 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.726891737 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.370356231 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.438129195 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.392852696 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.354706705 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.352412505 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.361685822 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.400835714 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.356307681 seconds)
  done (took 155.046653424 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.351122897 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.354885822 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.355686939 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.374974403 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.355195598 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.356241474 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.351845933 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.351689574 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.356624186 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.35878786 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.355474014 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.357090411 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.3574805 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.354975447 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.353772492 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.374187659 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.356894583 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.363202217 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.356336632 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.35255338 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.357266018 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.357840371 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.373835191 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.35715545 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.359898625 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.454273628 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.400255432 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.369068412 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.351997203 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.354647798 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.365994393 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.354786729 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.082549168 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.210016173 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.374809069 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.364425991 seconds)
  done (took 85.91377684 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.353883124 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.354471255 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.353827619 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.391908077 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.353601005 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.004615268 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.005854036 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.159243012 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.570577601 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.104891821 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.737128793 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.353969187 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.353858712 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.454634288 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.35548443 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.368092042 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.359595918 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.370338187 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.38000012 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.356008787 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.355304994 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.006217248 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.369808719 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.34459558 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.549040667 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.37367278 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393272409 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.759657509 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.357021083 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.394783599 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.707555335 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.416266149 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.356544046 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.81339727 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.118614814 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.475934206 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.357677219 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.392933912 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.356886753 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.65138268 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.357066718 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.356924239 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.359085743 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.108312498 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.356917303 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.010156861 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.355969371 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.417644104 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.35730309 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.357665563 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.749806129 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.339634451 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.380601248 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.357803886 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.35918711 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.357431742 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.357720395 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.39737691 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.877274598 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.486794921 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.358950175 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.358063243 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.362535046 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.39641641 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.358531148 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.844237148 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.358533432 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.705833296 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.423317998 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.468030566 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.012990837 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.359122619 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.464316503 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.485493216 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.35913071 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.359609745 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.359073553 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.359332064 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.475491171 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.359503367 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.846604121 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.552764526 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.378480263 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.99960276 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.462719162 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.359852864 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.8754207 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.360280899 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.359050243 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.238705776 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.462188436 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.358498166 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.359297269 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.357876501 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.847845779 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.014809628 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.709595494 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.359939922 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.878471571 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.364059427 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.361501884 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.857677289 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.01367612 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.123320583 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.361224283 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.47924189 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.553362649 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.380241027 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.360942166 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.991505682 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.360850333 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.420128671 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.36608539 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.764089298 seconds)
  done (took 388.043358263 seconds)
done (took 630.276295616 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.0884313 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.031008109 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.183428286 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.065858116 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.026036587 seconds)
  done (took 11.677723314 seconds)
done (took 12.960654356 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.573097952 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.573635935 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.434033906 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.575021252 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.398378943 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.596189264 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.556582307 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.383660311 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.476495895 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.457813777 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.479652737 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.42296601 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.401116517 seconds)
  done (took 20.611362313 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.652650536 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.364056875 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.427126014 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.637220499 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.404154792 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.64770394 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.680109099 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.364598525 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.510579147 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.377156638 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.377862583 seconds)
  done (took 19.727822181 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.642375245 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.365037996 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.430746421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.66438864 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.405775624 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.650747775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.681809172 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.365270729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.507821232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.378060354 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.377198899 seconds)
  done (took 19.753213949 seconds)
done (took 61.376949122 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.408517082 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.549538024 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.396259692 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.379635103 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.37356904 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.37478196 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.38030703 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.373908794 seconds)
  done (took 12.522239084 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.372870743 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.370484602 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.370202987 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.371014553 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.371111979 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.372376217 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.372588098 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.371207603 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.371597446 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.370757333 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.373351014 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.373794477 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.373777983 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.372863296 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.37224886 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.374429901 seconds)
  done (took 23.240171979 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.374269413 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.371158689 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.371431615 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.371679387 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.37190466 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.372827701 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.373254302 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.370499185 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.371638098 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.371413564 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.372987545 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.371643113 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.371864274 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.372286558 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.372694042 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.372319813 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.371495984 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.37240622 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.374878056 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.371726731 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.372802187 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.372254048 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.371540781 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.371948134 seconds)
  done (took 34.221759278 seconds)
done (took 71.268816266 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.366010311 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.388432634 seconds)
  done (took 6.041775829 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.431839689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.433754104 seconds)
  done (took 4.154394786 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.37489339 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.374048942 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.376561173 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.374669551 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.37568376 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.374703516 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.376465692 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.375103582 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.376492052 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.375842434 seconds)
  done (took 15.042293653 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.375778576 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.37581411 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.372831751 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.375461946 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.375756458 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.372082266 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.376201266 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.376581655 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.376658993 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.374214952 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.375788145 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.374910043 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.376273598 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.374558321 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.377236731 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.373703111 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.374708465 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.374775573 seconds)
  done (took 26.042299325 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.389243127 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.396995186 seconds)
  done (took 4.07455966 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.504450581 seconds)
    (2/7) benchmarking "second"...
    done (took 1.41550282 seconds)
    (3/7) benchmarking "month"...
    done (took 1.485037871 seconds)
    (4/7) benchmarking "year"...
    done (took 1.47260953 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.416911137 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.395184044 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.415329841 seconds)
  done (took 11.393601331 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.376926094 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.574706048 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.69152239 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.956134038 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.37804995 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.379655776 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.240491796 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.380629913 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.382941393 seconds)
  done (took 15.650676701 seconds)
done (took 83.687763068 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.371203147 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.390781726 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.378201527 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.404744917 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.714330268 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.389862509 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.37562427 seconds)
done (took 17.316315315 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.368225961 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.374773365 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.37463445 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.370037768 seconds)
  done (took 10.777700067 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.36945882 seconds)
    (2/2) benchmarking "read"...
    done (took 1.749021466 seconds)
  done (took 5.408637627 seconds)
done (took 17.478018369 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378638446 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.379381558 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.37615359 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.377514521 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.379713586 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.381462614 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.376762283 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.375366676 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.378261679 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.378655363 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.379435257 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.377241837 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.38147121 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.38000155 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378001096 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.377808105 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38064731 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.377338741 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377149513 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.377586544 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.380039197 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.381276226 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.376974801 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.377804586 seconds)
  done (took 34.376206459 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.381544116 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.377317976 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.380270881 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.380358585 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.377683455 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.381595795 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.379349021 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.378298317 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.381211949 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.380495358 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.378043482 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.37939971 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.381046732 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.376898073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.38054573 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.377686473 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.380931635 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378621139 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380374354 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.378968155 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.381034308 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378688974 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.378234794 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.381903947 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.378845072 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.377872458 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.381755572 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.379825071 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.381556372 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.379425587 seconds)
  done (took 42.683605844 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.387519358 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.389517872 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.382754253 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.380819748 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.381521501 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.381930148 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.382060808 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.381403478 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.381602258 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.382500061 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.382636047 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.383111707 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.382407168 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.381752477 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.382316583 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.927421963 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.38378506 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.382329978 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.381624038 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.382660512 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.382693277 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.382568518 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.382469938 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.382257899 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.382593373 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.381000441 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.382436982 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.383074089 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.381426172 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.382080501 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.383562551 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.383722238 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.383571175 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.384029094 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.383733669 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.384032703 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.389165629 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.391371255 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.383475033 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.383405518 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.384186286 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.38454176 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.385076177 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.384575291 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.383910058 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.384151588 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.385160119 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.384685008 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.385353862 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.384768741 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.385382112 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.384175922 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.384202308 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.386163825 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.385851271 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.385104265 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.384986799 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.384429564 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.384834515 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.383645071 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.385217383 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.383760952 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.385027015 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.38530534 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.385367494 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.385459691 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.385400201 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.385770508 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.385444234 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.385933311 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.385231642 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.3875169 seconds)
  done (took 101.491038053 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.387030858 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.384097341 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.383752124 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.382901983 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383507614 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.386218723 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.384898865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.38693555 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384458492 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.386639386 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38533183 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.384881402 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.383629356 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.385238057 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38652474 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.383357231 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.386532306 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.382829757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.386456498 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.385711102 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.386864901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.384131443 seconds)
  done (took 31.770848604 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.388405593 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.388139158 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.384288874 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.387398254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.385729046 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.390152889 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.388066547 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.388031231 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387666806 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.385470511 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383537466 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.387894221 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.387312478 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384739668 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384807794 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.387412765 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38754138 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.388198171 seconds)
  done (took 26.264789739 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.386002549 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.386909569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.389217657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.385762105 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.386514972 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.388409905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.385523684 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.38885527 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.389832513 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.38685335 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.389373688 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.388783608 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.389853143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.387149183 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390976593 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.386482543 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.389352321 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385731457 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.389497362 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.38655092 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.3878109 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.389258259 seconds)
  done (took 31.835587584 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.389564701 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.38842789 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.387658651 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.386671791 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.387429421 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.389109757 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.389315023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.386209741 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.391309567 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.388332794 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.387143453 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.390036638 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.389049241 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.387476953 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.386925132 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.388099353 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.390781514 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.387650707 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.391235984 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.389235698 seconds)
  done (took 29.073122677 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.393481441 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392364374 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.392322242 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39223714 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392459972 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.392477133 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391998455 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.391133777 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.393306263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392820839 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.392171999 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.393426066 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392731996 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.392845035 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.393036541 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3927414 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.393618001 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.392836688 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393419176 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394149512 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.392559446 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.393956517 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.394701366 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.394348597 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.394854578 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.393453085 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394406436 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.393526129 seconds)
  done (took 40.310162067 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.392647838 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.392624594 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.391339526 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.391183812 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.39047194 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.391507384 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.389895913 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.390474951 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.39284455 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.391018371 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.394593012 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.394149384 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.394277147 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.394252921 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39326525 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.393866277 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394262033 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.391835369 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.392272183 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.391799638 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.393310064 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393230263 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.394167915 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.392666174 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390752661 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.394455073 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.391789675 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.390164779 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.394616792 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.391315736 seconds)
  done (took 43.081309502 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.432696634 seconds)
    (2/2) benchmarking "in"...
    done (took 1.433236441 seconds)
  done (took 4.171677997 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.392954895 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.395436372 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.395447619 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.392681384 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.393604308 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.395821921 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.394756483 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.393715 seconds)
  done (took 12.461473335 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.395178628 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.395984758 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.394670769 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.39510193 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.396314768 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.395864061 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.401756994 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.418871948 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.397603154 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.398355669 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.404886883 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.404966528 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.39830281 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.39608082 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.396523488 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.398882113 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.397786391 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.397532785 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.397252012 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.398194519 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397234507 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.399686544 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.398650322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.394685681 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.399218218 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.408192276 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.401027685 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.39825344 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.397710554 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.400422075 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.397435102 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.395807395 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.399459714 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.398387111 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.399416785 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.398304684 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.406799138 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.423071412 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.404409383 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.397716604 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.399012282 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.395726506 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.400325368 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.398681004 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.39976871 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.397004255 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.398646939 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.394477328 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.398569615 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.403666908 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.404580387 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.398306224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.396362841 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.401579849 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.399560208 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.405411594 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.422157134 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.403474473 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.409927435 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.410590107 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.412134395 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.427437704 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.400007695 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.39901503 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.411179843 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.426400676 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.406591975 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.420082468 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.397597353 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.401038163 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.405675829 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.414235327 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.429163349 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.40099312 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.400326592 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.401917461 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.400561627 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.400955855 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.40676358 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.426264852 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.400808696 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.402709027 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.412009628 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.425569372 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.400257941 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.400363643 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.401940422 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.401968568 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.402719896 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.41235909 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.42498142 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.400261695 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.39995939 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.401219947 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.40187432 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.400799746 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.399778514 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.401978008 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.399068395 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.401544038 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.402376707 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.405497646 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.41153042 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.403129129 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.402845974 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.407822412 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.402788034 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.402871744 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.408417213 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.402144613 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.402220212 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.405062342 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.409294109 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.400612782 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.408039781 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.412333602 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.404713121 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.404175492 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.402961364 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.404547725 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.413823655 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.430521495 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.403345438 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.403035697 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.409269621 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.415555113 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.403955638 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.406004189 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.40336694 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.401920604 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.401594926 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.405786632 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.405234793 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.404552117 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.404356023 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.403972733 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.400910235 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.405042683 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.40361706 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.405501262 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.406180439 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.404794947 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.407085605 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.407470519 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.405210342 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.406297505 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.410343967 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.403941656 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.405327662 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.40571007 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.402590156 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.404924805 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.405580783 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.404740347 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.405204489 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.405296363 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.404959945 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.405277686 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.406895272 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.406110823 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.406501055 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.406596316 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.409747555 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.406558941 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.409585376 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.405847917 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.403280713 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.406364206 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.407027656 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.40726697 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.407089649 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.406659536 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.411458688 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.417322513 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.406900911 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.407448981 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.410123947 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.408741427 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.408604288 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.407326042 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.411192545 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.417041987 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.406878121 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.41478322 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.40884468 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.406828429 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.407531513 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.408441277 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.407597382 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.408309545 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.412307015 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.417391199 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.420623739 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.436585912 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.410358078 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.412331312 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.409822756 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.413317585 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.412458608 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.408251413 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.40897635 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.408758314 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.40865774 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.407302616 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.409660622 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.408676609 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.408045201 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.410651508 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.411196567 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.408965172 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.409376258 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.409796535 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.408968518 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.406470272 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.409643113 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.409907207 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.410335398 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.406529112 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.40826468 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.409265392 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.409504191 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.411467386 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.415778419 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.406373465 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.411647121 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.412404451 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.4090814 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.410260327 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.410763725 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.412970491 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.410354785 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.416859153 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.432210973 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.411951689 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.418254027 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.434401798 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.409933666 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.412229647 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.411570538 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.409408592 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.414614165 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.420220664 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.411987013 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.411154857 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.411283369 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.411541981 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.411830334 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.418407755 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.408112901 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.410135803 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.411664638 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.412425817 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.409679829 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.412265924 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.411910437 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.411517288 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.413259084 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.41107933 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.411699298 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.41239252 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.411898242 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.412937604 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.412271146 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.415469402 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.421743504 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.416483547 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.413013788 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.412433041 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.41326955 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.417524086 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.411435194 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.413679745 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.412106386 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.425695601 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.4420936 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.419672699 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.436606671 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.415032258 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.419662249 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.437801351 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.418028515 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.414223885 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.413855961 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.413716384 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.415238686 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.410458704 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.41360994 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.415108951 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.414845583 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.416524769 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.419471199 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.414292074 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.414628457 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.416313917 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.414313682 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.415390341 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.413541037 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.414651279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.415109461 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.416369795 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.413499359 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.414330685 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.421006051 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.438176421 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.416273543 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.415285237 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.415260995 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.414788562 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.415562172 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.415235655 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.419254618 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.423856724 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.419332527 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.426295513 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.419127707 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.425525094 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.416483132 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.419318359 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.425807748 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.413333801 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.415687785 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.416638314 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.417272039 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.424106257 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.438902793 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.419755715 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.422439752 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.417087135 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.417338658 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.417584809 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.417656717 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.418057103 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.417762433 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.42456435 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.443657927 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.42115334 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.418701434 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.414243263 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.417384552 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.418720133 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.416873319 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.420084078 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.41895172 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.417571657 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.419402297 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.41719616 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.417575914 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.418254681 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.418761656 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.414497414 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.41812943 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.424588904 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.44571331 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.421913617 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.419336857 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.425025966 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.418472222 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.425564958 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.44201796 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.417967125 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.419024746 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.419221087 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.419967742 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.418284374 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.419442992 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.419230954 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.420152352 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.423441371 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.419415683 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.419970106 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.418425658 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.418585468 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.418725719 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.430867605 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.444598491 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.420953772 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.42430149 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.4168329 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.420849687 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.424344082 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.419983393 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.419046495 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.423653085 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.433408773 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.429128355 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.419750356 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.420919877 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.420152137 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.420720834 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.419990096 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.41951601 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.419016205 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.420673258 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.420306818 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.420484685 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.422501182 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.421603401 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.419782738 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.421699015 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.422186571 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.43098901 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.420699297 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.421519808 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.421079984 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.423031967 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.420617296 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.42180192 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.421803889 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.421453903 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.421931667 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.42411616 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.43065906 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.428799065 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.42366486 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.421253573 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.422673763 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.422073745 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.422854827 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.423590429 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.422099283 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.422513687 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.42404829 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.421880376 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.423796811 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.421977942 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.423484096 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.424047466 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.423516779 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.426646941 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.431707921 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.422970474 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.421403118 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.423206087 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.424223208 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.421614616 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.424229866 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.429226389 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.427690865 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.435932242 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.433867052 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.427213106 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.423175535 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.427799383 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.432179295 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.422830682 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.425029584 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.425213031 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.425701508 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.425561217 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.429304301 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.424537503 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.430709839 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.42510321 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.423745886 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.434141761 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.453001961 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.426787031 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.427719575 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.430413827 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.425834912 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.423279154 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.424571247 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.424477957 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.431032468 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.449827051 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.426107225 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.427250827 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.424498771 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.426845641 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.431364279 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.426017307 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.426533099 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.423251284 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.426493661 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.425582153 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.426463942 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.422676512 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.425107442 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.425681806 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.43128028 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.434391155 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.425432924 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.427216382 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.427177384 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.427293456 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.426327333 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.428212365 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.423082413 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.424408303 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.426778489 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.427785273 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.426325706 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.429738607 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.426363224 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.428914688 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.429198684 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.428070358 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.431290831 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.439532088 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.43599378 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.425754364 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.426652455 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.427768192 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.429459145 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.427297513 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.429070201 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.428240915 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.429465706 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.42837375 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.428288636 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.428840662 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.433238965 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.444800509 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.454482801 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.428456195 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.428839306 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.430068214 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.428615035 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.425998956 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.428792009 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.429676536 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.432036151 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.436529247 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.43054273 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.435166547 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.452603154 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.431545513 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.433762791 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.434302669 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.439031081 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.432468059 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.429582542 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.430384069 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.4366087 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.448366332 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.431298014 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.441077346 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.462568186 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.454653431 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.430817287 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.430583151 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.429500451 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.431438075 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.432755923 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.430889414 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.430543977 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.432325042 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.4323241 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.432765581 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.437018216 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.432502827 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.43241767 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.430781708 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.430808171 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.432266349 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.4291678 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.43109688 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.430724832 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.432069548 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.431287792 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.432217331 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.433292396 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.444888273 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.461749687 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.432713413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.433949454 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.429850565 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.435668125 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.435943381 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.445129218 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.441078972 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.433013645 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.432666238 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.433386564 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.433729901 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.432614515 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.433110309 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.432197596 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.432339802 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.430131715 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.445698366 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.461749565 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.436699461 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.432373251 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.433636076 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.43438585 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.435180068 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.433785971 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.432639701 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.433409075 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.438534614 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.437665 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.434226694 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.434034896 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.436933014 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.444501327 seconds)
  done (took 846.290123517 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.432720945 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.431384089 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.431596293 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.431688876 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.432136692 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.43253847 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.431720898 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.432063601 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.431393191 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.43207394 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.432925288 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.432264096 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.432590253 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.431499573 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.432169144 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.432413098 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.432345499 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.432479173 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.432649088 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.431981833 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.432673694 seconds)
  done (took 31.416761818 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.434130651 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.433224632 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.432348532 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.436124464 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.432180105 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.435303432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.432628444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.435594002 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.43590808 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.433585764 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.436306217 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.436680925 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.433128134 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.432828275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.4328027 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.436941279 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.437725407 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.434013075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.43520837 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.434351802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.436389039 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.433930473 seconds)
  done (took 32.904112007 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.437503535 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.436774954 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.435702793 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.432821258 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.438140654 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.434579999 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.43660538 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.436751833 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.43793537 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.438356951 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.436752688 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.438967749 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.446180194 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.443612955 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.438943369 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.439204529 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.437713737 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.438518596 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.437782024 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.435658053 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.443506852 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.45915485 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.433843014 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.43554894 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.438511335 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.439963509 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.438992431 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.438753893 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.438932425 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.44360943 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.438236838 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.437834085 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.439701879 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.438904117 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.440708255 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.443336201 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.44013647 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.436192613 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.441051668 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.450793946 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.466295996 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.439444299 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.445388966 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.464291457 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.44077915 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.44538194 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.448363171 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.437236807 seconds)
  done (took 70.508388774 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.44063839 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.439044102 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.437229797 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.438515041 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.439823222 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.44127807 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.439201752 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.439340433 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.438041323 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.437467301 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.440031274 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.43861921 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.439303303 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.441493034 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.441314467 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.438452778 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.437327702 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.438330748 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.437836886 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.438567939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.437872413 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.441966415 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.439049728 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.437928418 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.440341454 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.440510497 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.439562375 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.440671013 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.440489674 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.437348275 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.441786486 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.4415825 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.441798087 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.439554989 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.440361783 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.442062616 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.443792779 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.43971958 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.441637311 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.440047094 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.442754856 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.442652256 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.44174253 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.442766538 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.440302634 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.440052132 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.441558317 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.440422172 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.44017316 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.44308431 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.441848601 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.439839168 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.442458904 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.44051555 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.442272474 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.443627152 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.439916327 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.440388386 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.443207228 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.440707062 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.442283051 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.443989401 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.440789643 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.443195457 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.44294185 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.441446152 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.440844781 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.444275524 seconds)
  done (took 99.308409874 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.443023794 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.443712974 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.443403005 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.443645859 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.443549814 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.442485741 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.444081563 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.443842599 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.443627102 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.444916793 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.444264101 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.444355558 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.443790923 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.444455077 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.444824904 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.444372446 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.443842602 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.443706067 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.44459265 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.44413779 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.444455692 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.444658418 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.445703342 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.445027803 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.446069791 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.445540948 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.444968813 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.444690889 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.445422644 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.443923537 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.446433199 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.445740225 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.445219764 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.444913895 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.446226559 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.446374375 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.446255048 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.446035873 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.446171742 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.44599832 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.445944793 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.446351029 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.446264059 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.446631704 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.446599986 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.447855781 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.446197691 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.446616787 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.446820104 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.44632744 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.446656759 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.446532818 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.446508948 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.447148944 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.446454029 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.447107396 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.448129907 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.44698115 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.44701357 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.446266036 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.447424994 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.44716037 seconds)
  done (took 90.968919626 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.447428628 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.448346791 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.447070816 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.445512993 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.447285647 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.44429029 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.446556918 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.448505027 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.447221289 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.448949273 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.448549877 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.444384337 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.446393996 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.449756244 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.444677643 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.446109963 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.445132434 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.445997524 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.448451094 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.447086947 seconds)
  done (took 30.290883348 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.446284988 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.447808845 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.446195589 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.446228367 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.449601271 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.44534182 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.449695016 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.449451559 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.446077115 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.449088028 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.450749553 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.450014809 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.446641596 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.447237789 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.450145559 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.447724516 seconds)
  done (took 24.52290485 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.446970389 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.449637432 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.449362032 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.449320973 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.447586814 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.446729349 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.45011016 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.448766533 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.44657106 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.450489531 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.449958835 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.450644316 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.45074047 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.450456836 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.448070017 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.451379489 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.448480663 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.447649677 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.450182841 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.450062322 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.448892811 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.449391512 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.451792017 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.450868651 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.448636196 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.451799858 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.449341982 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.449323397 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.448260431 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.452450463 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.449222731 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.449788148 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.449296139 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.449935927 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.451733159 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.450007518 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.453019883 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.452700236 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.452514975 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.452993349 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.454160449 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.449957198 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.452761462 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.454202945 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.450561833 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.453617938 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.449895002 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.451309694 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.450036121 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.449796412 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.453997539 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.453023454 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.452399898 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.453915642 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.453837747 seconds)
  done (took 81.135308591 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.454709144 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.453231888 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.452404321 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.453029116 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.453710407 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.451476865 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.454222884 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.452008317 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.451769362 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.453180188 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.451405117 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.454817588 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.451669772 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.453799253 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.451465926 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.454031047 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.451255391 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.45090134 seconds)
  done (took 27.507593065 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.453293684 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.453998974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.455767883 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.452358194 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.452815763 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.456115663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.45290298 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.455924614 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.455577795 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.453542741 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.453395863 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.457555927 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.45573737 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.456216842 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.453688175 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.45418457 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.45720166 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.45599615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.453486696 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.457906351 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.455819131 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.455565692 seconds)
  done (took 33.368847347 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.4559287 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.454981245 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.454704508 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.47377945 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.47514864 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.455099495 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.45552907 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.454684266 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.479144385 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.512912421 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.506260778 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.477908432 seconds)
  done (took 19.017614815 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454457871 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456571173 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.454966611 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456721913 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457794516 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453628991 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453266047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455110514 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.456719792 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454236196 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455612943 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457216671 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.456975148 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455594912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.458056084 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457578738 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455438492 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455420664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454906209 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.456664968 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456158127 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.458335377 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455315718 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454711426 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455593006 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455271492 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45885171 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456193141 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.4562781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457616319 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459652085 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456311516 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457480411 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455857822 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459155349 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459858442 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456151742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459868399 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459810716 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457410891 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.459818845 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460441268 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460372749 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457590692 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460171159 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457596633 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457458888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456712777 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.456763972 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459946061 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460533459 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456930853 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460848408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460820065 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460372408 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460200243 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458040742 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457843365 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460765393 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.46064709 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457731688 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461702764 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458298514 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458113608 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462236242 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457587905 seconds)
  done (took 97.566166744 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459513294 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.457773092 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457840081 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460738467 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458140623 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459619938 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458106409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458798515 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459820498 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460116482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461599082 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459959538 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459561458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459339828 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459049976 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459188582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459974697 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.462431938 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464473562 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.467624647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463897985 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463608507 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461614912 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461276194 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.461133505 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462953531 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460667936 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459553123 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460216951 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.46133941 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461225424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463997482 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463518993 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.462178513 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462281647 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461700755 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463746024 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462366487 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.462553445 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463770294 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.46354483 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.468576297 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.465348606 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.462734586 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.466661276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46552515 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462857381 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.463145468 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462074082 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461749026 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.46287212 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.462484083 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.463099127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.465033735 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.46355446 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4625134 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.463939717 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463729958 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.462642897 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.466116646 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.471458369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.463057721 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.467363028 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.468797625 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.471817723 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.469909388 seconds)
  done (took 97.904689305 seconds)
done (took 1981.522726894 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.639278131 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.600044115 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.463954075 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.488725961 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.465143364 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.498523696 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.484126897 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.46430974 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.465292334 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.466571018 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.46812964 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.690919335 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.477711411 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.465075444 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.464501413 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.559637332 seconds)
  done (took 29.532418404 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.496895943 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.471249625 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.614670215 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.49524726 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.49718749 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.69570129 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.53477067 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.470480575 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.690026793 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.524576399 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.464990615 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.499853484 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.467719552 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.465502529 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.496465188 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.697523088 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.784276728 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.468649719 seconds)
  done (took 32.206083807 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.05210504 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.475615724 seconds)
  done (took 5.897773228 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.500131024 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.472951174 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.471858714 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.469479406 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.459395194 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.461077877 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.468645829 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.463814164 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.46129249 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.63585104 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.477455745 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.481063356 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.49583712 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.470988711 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.469236054 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.513280655 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.674454931 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.468556517 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.465233786 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.476100585 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.469364058 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.60691542 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.525690496 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.470294537 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.632430114 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.470318787 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.476805217 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.479064652 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.609529443 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.468674999 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.470346125 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.471155215 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.472043334 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.462927073 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.993109452 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.465989307 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.50050601 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.479998913 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.468783203 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.671016502 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.47217955 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.478430055 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.463615427 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.985845625 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.632170077 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.61183434 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.486555022 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.477840381 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.473935406 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.541503714 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.474025975 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.476975477 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.520928384 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.386080423 seconds)
  done (took 93.389971407 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.507417997 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.464498219 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.668814894 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.470843458 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.465007368 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.476942848 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.469424142 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842086328 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.475514299 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.465564515 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.818837859 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.119105555 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.501459434 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.511741407 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.361133164 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.526859072 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.465954688 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.485458072 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.469202831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.472337319 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.088795438 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.46923903 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.470625473 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.754256405 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.511969931 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.059323832 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.470165572 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.467871227 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.474521502 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.465822111 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.068471089 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.500004585 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.549152538 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.467548765 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.789088962 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959265903 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916327893 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.477133239 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.512030329 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.469358903 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.476949177 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072361359 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935838166 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.471948141 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.466602057 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.080648851 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.471380752 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.477096389 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.47265325 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.730743208 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.467176759 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.471079941 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.492365146 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.496678787 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.466176558 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.567761812 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.538779407 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.091355863 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.472326009 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.472712082 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.482250785 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.468541234 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.471578233 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.472898628 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.493776299 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.935316815 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.679077325 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.472936482 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.933411404 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.067341103 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.491464331 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131147041 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.492156704 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.496382122 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.518954724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.468287991 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.488142056 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109690083 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.493852524 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.46780553 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91767254 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.476114201 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.810397016 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.494064211 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.49302569 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.110907567 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.475312966 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.551267778 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.469089678 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.50297151 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.469009999 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.477046811 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.794978702 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.510966998 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.468007552 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.469934902 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.481649783 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.471340544 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.497443134 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.475025387 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131071047 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.49940266 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.469661233 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.471872997 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.479619161 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.472882008 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.471943714 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.472271409 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.755650899 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.473412913 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.502457755 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.470054103 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.474121407 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.470677565 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.679793191 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.474926598 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.885116596 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.476636298 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.469830699 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.479862268 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.470333474 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.532724905 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.471601942 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.482608182 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.415951757 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.747281418 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.497136212 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.471951994 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.471088923 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.474907361 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.512316861 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.475685898 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.506621312 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.471432877 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.310938567 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.507214897 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.475726236 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.47254983 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.485167944 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.476383003 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.476224189 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.472528913 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793303936 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.799496774 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.697264029 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.476630065 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.484530098 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.296895138 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.536907717 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.684342642 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.477054007 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.472877536 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.727427828 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.68122792 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.474661945 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.472809484 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.474206452 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.743802472 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.47666211 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801614651 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.10030989 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.497276105 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.483217862 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.322107867 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.229295381 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.477650969 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.472499799 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.815526665 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.50018572 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.47281063 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.473666015 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.476013461 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.493554533 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.501211612 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.475575381 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.474306631 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.473475337 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.49988927 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.695446268 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.477937299 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.478158134 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093224334 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.488211329 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.486609038 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.485818458 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.476517045 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.473113435 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.529972039 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.48171176 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.518219055 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.476765155 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.483257407 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109972712 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.489234707 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.480256559 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.697139681 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.234886013 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.499662587 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.475506094 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.494040467 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.358033477 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.120305056 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.504470736 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.889435309 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.488210863 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.521861727 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.478354481 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.527485986 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.12306542 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.486424139 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.497567354 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.216609056 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.502987859 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.10515471 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.477100397 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.474392694 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.173416205 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.501311499 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.481858436 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.495704712 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.490460216 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.783144685 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.479598908 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.478121055 seconds)
  done (took 533.956624792 seconds)
done (took 696.353475784 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.476411979 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.482297338 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.467788347 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.476540885 seconds)
  done (took 11.287820143 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.490349333 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.485596943 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.486582128 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.482677498 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.490727586 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.48618177 seconds)
  done (took 10.309071624 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.476847448 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.479929483 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.482346261 seconds)
  done (took 8.822961345 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.749395993 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.513721376 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.897446033 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.505776637 seconds)
  done (took 10.051790919 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.489804305 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.490763897 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.488851313 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.488636312 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.495052628 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.49305411 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.489580875 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.488985867 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.494350244 seconds)
  done (took 14.804825754 seconds)
done (took 56.662472035 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.628476205 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.508361513 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.491943797 seconds)
    (4/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.672163041 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.632868825 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.540236704 seconds)
    (7/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.572785797 seconds)
    (8/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.564379966 seconds)
    (9/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.616995118 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.547253293 seconds)
    (11/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.281470367 seconds)
    (12/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.573562992 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.498100416 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.492890311 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.64178646 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.699639071 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.284984399 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.615134079 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.65515777 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.522634593 seconds)
    (21/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.631379525 seconds)
    (22/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.416500216 seconds)
    (23/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.523300045 seconds)
    (24/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.469529472 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.163359923 seconds)
    (26/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.669726295 seconds)
    (27/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.560163697 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.492110582 seconds)
    (29/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.500655071 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 1.925344973 seconds)
    (31/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.554101177 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.472758361 seconds)
    (33/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.579857888 seconds)
    (34/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.72397335 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.495377784 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.503238412 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.498359742 seconds)
    (38/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.482141027 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.700090158 seconds)
    (40/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.555483765 seconds)
    (41/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.585268458 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.629448881 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.532596643 seconds)
    (44/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.48346628 seconds)
    (45/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.495277268 seconds)
    (46/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.476393927 seconds)
    (47/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.505007819 seconds)
    (48/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.510522844 seconds)
    (49/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.502026651 seconds)
    (50/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.493803798 seconds)
    (51/286) benchmarking ("sort", Float64, true)...
    done (took 2.12989978 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.500849945 seconds)
    (53/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.493479969 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.512483625 seconds)
    (55/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.484584253 seconds)
    (56/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.516435182 seconds)
    (57/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.482755166 seconds)
    (58/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.501756256 seconds)
    (59/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.494640451 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.49181058 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.497324163 seconds)
    (62/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.339600796 seconds)
    (63/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.576234153 seconds)
    (64/286) benchmarking ("sort", Int8, true)...
    done (took 1.876824361 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.626609664 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.514533449 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.498568568 seconds)
    (68/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.494395889 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.585381002 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.469822864 seconds)
    (71/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.486815564 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.72499008 seconds)
    (73/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.689807601 seconds)
    (74/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.507729331 seconds)
    (75/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.603066962 seconds)
    (76/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.504731287 seconds)
    (77/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.48971174 seconds)
    (78/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.667902489 seconds)
    (79/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.481620055 seconds)
    (80/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.546091603 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 1.688508468 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.612251408 seconds)
    (83/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.551816402 seconds)
    (84/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.492413422 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.58838288 seconds)
    (86/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.497951565 seconds)
    (87/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.502835636 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.705833862 seconds)
    (89/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.49878181 seconds)
    (90/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.499851549 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.503488825 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.28422779 seconds)
    (93/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.605866422 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.74929246 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.496434004 seconds)
    (96/286) benchmarking ("sort", Int8, false)...
    done (took 1.614207617 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.546852378 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.147665969 seconds)
    (99/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.712362415 seconds)
    (100/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.53549075 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.489109716 seconds)
    (102/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.607486925 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.50431454 seconds)
    (104/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.530578278 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.4457385 seconds)
    (106/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.539913142 seconds)
    (107/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.529708624 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.517049544 seconds)
    (109/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.499194989 seconds)
    (110/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.164891095 seconds)
    (111/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.565975313 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.584517939 seconds)
    (113/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.676440906 seconds)
    (114/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.496850415 seconds)
    (115/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.563046598 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.631043501 seconds)
    (117/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.666696854 seconds)
    (118/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.674271762 seconds)
    (119/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.500948949 seconds)
    (120/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.482373449 seconds)
    (121/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.764912039 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.52329755 seconds)
    (123/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.503137106 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.50042705 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.524562467 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.550372344 seconds)
    (127/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.514818591 seconds)
    (128/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.491633001 seconds)
    (129/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.500046849 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.555205831 seconds)
    (131/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.507161674 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.602820291 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.617696515 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.525406743 seconds)
    (135/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.160372988 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.498666949 seconds)
    (137/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.526588386 seconds)
    (138/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.596046198 seconds)
    (139/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.514633667 seconds)
    (140/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.877533855 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.507938344 seconds)
    (142/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.233849222 seconds)
    (143/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.509813993 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.538392354 seconds)
    (145/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.434268891 seconds)
    (146/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.529104662 seconds)
    (147/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.496811921 seconds)
    (148/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.523832728 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.608226379 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.509247413 seconds)
    (151/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.582837137 seconds)
    (152/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.514299589 seconds)
    (153/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.68043043 seconds)
    (154/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.515460426 seconds)
    (155/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.739491597 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.505913997 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.660488826 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.874005277 seconds)
    (159/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.534166163 seconds)
    (160/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.28716174 seconds)
    (161/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.53732144 seconds)
    (162/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.588462223 seconds)
    (163/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.514965746 seconds)
    (164/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.483915247 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.85726118 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.641183173 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.576623403 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.62501035 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.501797169 seconds)
    (170/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.61536858 seconds)
    (171/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.528284056 seconds)
    (172/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.515662447 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.813691593 seconds)
    (174/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.190384244 seconds)
    (175/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.520249271 seconds)
    (176/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.24072676 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.632910613 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.508845486 seconds)
    (179/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.684801429 seconds)
    (180/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.509593253 seconds)
    (181/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.642450659 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.613234373 seconds)
    (183/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.51867789 seconds)
    (184/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.895334199 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.521866585 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.508241532 seconds)
    (187/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.305026081 seconds)
    (188/286) benchmarking ("sort", Float32, false)...
    done (took 1.687688436 seconds)
    (189/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.278418927 seconds)
    (190/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.489729287 seconds)
    (191/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.649712832 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 1.70985561 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.512578563 seconds)
    (194/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.524222068 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.650689873 seconds)
    (196/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.531014695 seconds)
    (197/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.562857036 seconds)
    (198/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.582185211 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.669198788 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.507103019 seconds)
    (201/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.659210652 seconds)
    (202/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.54231099 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.604701484 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.521915003 seconds)
    (205/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.647018408 seconds)
    (206/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.182036012 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.308694244 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.541928016 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.743626445 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.560109238 seconds)
    (211/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.509910068 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.501725398 seconds)
    (213/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.519935106 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.509735221 seconds)
    (215/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.502777166 seconds)
    (216/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.511703785 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.512005524 seconds)
    (218/286) benchmarking ("sort", BigInt, false)...
    done (took 2.502175528 seconds)
    (219/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.306382232 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.604652097 seconds)
    (221/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.600195057 seconds)
    (222/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.527232611 seconds)
    (223/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.73322996 seconds)
    (224/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.524336119 seconds)
    (225/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.464940966 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.529822354 seconds)
    (227/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.524546743 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.51729988 seconds)
    (229/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.771886668 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.72426368 seconds)
    (231/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.521940283 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.508825611 seconds)
    (233/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.501471945 seconds)
    (234/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.514691311 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.543086036 seconds)
    (236/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.186436002 seconds)
    (237/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.490157492 seconds)
    (238/286) benchmarking ("sort", Float64, false)...
    done (took 1.750541031 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.634522024 seconds)
    (240/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.522817168 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.50981189 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.543102841 seconds)
    (243/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.164115147 seconds)
    (244/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.529247858 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.304647045 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.622293634 seconds)
    (247/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.536095291 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.378252179 seconds)
    (249/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.580475667 seconds)
    (250/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.249325737 seconds)
    (251/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.605006226 seconds)
    (252/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.618691691 seconds)
    (253/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.512764482 seconds)
    (254/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.568085551 seconds)
    (255/286) benchmarking ("sort", Float32, true)...
    done (took 2.09770058 seconds)
    (256/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.675421954 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.637591518 seconds)
    (258/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.631586747 seconds)
    (259/286) benchmarking ("sort", BigInt, true)...
    done (took 2.50480143 seconds)
    (260/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.606757681 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.54009789 seconds)
    (262/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.516355031 seconds)
    (263/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.63943922 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.522199994 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.526012708 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.715959061 seconds)
    (267/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.517626806 seconds)
    (268/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.701607186 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.631850707 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.686023457 seconds)
    (271/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.520005767 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.558857505 seconds)
    (273/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.668374186 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.61065175 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.51812354 seconds)
    (276/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.517272897 seconds)
    (277/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.518771903 seconds)
    (278/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.667532651 seconds)
    (279/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.674366405 seconds)
    (280/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.54015622 seconds)
    (281/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.517883418 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.512890529 seconds)
    (283/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.514487346 seconds)
    (284/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.524619241 seconds)
    (285/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.517098711 seconds)
    (286/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.520999884 seconds)
  done (took 520.128908393 seconds)
done (took 521.51961034 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.551986232 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.562489233 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.518597748 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.548715675 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.627528446 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.69197458 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.527357999 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.556697766 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.566725178 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.569337762 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.524774503 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.695109503 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.519334024 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.519306116 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.51913649 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.558502668 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.518204961 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.523115037 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.533096841 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.555634566 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.533967379 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.52682786 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.568113337 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.691925365 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.523154761 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.522356695 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.523843505 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.540092186 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.63254858 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.52227027 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.521429777 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.532275236 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.516824623 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.525478995 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.513345502 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.539798991 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.533656814 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.528490241 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.553607452 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.631524219 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.50952387 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.530165554 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.520053432 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.521066086 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.519725164 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.559576612 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.521247308 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.578859734 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.562744539 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.564216091 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.51380558 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.538568255 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.529542365 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.523189777 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.529910806 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.520506146 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.578168938 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.569252584 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.541779422 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.568232495 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.516846966 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.529743947 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.559338391 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.537600285 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.530584525 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.508462991 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.523529143 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.561651432 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.512303295 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.53111466 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.509170006 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.533385441 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.52550849 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.539362285 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.554706428 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.514145831 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.516029456 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.521215102 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.529001269 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.522906239 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.569882099 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.566554632 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.574936755 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.524319286 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.566337519 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.699636938 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.533792945 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.525603083 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.560088692 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.542327539 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.532307601 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.53638132 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.560079552 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.526955145 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.572267031 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.579853418 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.533586157 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.538329499 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.573798478 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.533208221 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.51612651 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.574606087 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.521488917 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.518583882 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.523365441 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.647848664 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.51788934 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.528754916 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.559361177 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.572524534 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.583001264 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.519470036 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.537356307 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.57242364 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.533301785 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.586007663 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.525746764 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.52136974 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.522757568 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.652876302 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.528986112 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.532834959 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.57110961 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.585476949 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.531504089 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.522459516 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.527287367 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.569022768 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.648190463 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.538387338 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.636626295 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.52512527 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.532696374 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.559771936 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.57174999 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.560156678 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.586602474 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.574212319 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.54353274 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.52628655 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.539331165 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.538359232 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.528772678 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.585425153 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.523138075 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.560424823 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.570257465 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.571109194 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.559436567 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.64937994 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.530854172 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.513739284 seconds)
done (took 252.98871341 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.584898935 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.519583735 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.632118953 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.520475091 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.630172502 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.630710504 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.52059021 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.518903939 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.520245067 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.910218892 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.520862287 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.518692776 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.520627905 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.519734524 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.606295154 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.524144024 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.52218001 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.870409164 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.525198014 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.593518135 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.522535768 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.520157827 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.52256972 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.912111684 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.521600373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.516694422 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.593538884 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.520816786 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.872603488 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.514714611 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.51700065 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.871649973 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.616723959 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.53942239 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.533743488 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.529987443 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.632840963 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.549286852 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.608717199 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.606624156 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.638157983 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.563870836 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.516784627 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.523213001 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.526278349 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.522904 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.52179012 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.550259423 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.521760208 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.51988019 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.874859768 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.534460526 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.532455738 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.521971882 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.520998471 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.544246857 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.522619745 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.525106551 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.615281615 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.526659929 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.588494709 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.910018456 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.903689474 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.525973185 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.519162714 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.522207801 seconds)
  done (took 117.244245736 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.592251619 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.600593168 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.656636929 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.545755587 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.577243802 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.659897481 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.547080921 seconds)
  done (took 12.601017083 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.531453415 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.527243392 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.57367494 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.575570527 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.526308157 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.737770283 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.524672025 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.537127568 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.524446813 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.603900584 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.528638755 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528043421 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.532882266 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.520712704 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.57515469 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.540637959 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.64202316 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.530360785 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.528136601 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.684626005 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.524445339 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.534224421 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.605147712 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.540095353 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.528939971 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.531462888 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.472917167 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.526995759 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.526030641 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.529268053 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.524713762 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.634707326 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.530412619 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.524489015 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.525363025 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.686755872 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.528374396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.525368966 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.529148867 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.528307516 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.525778844 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.528788221 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.528055104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.527029827 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.527963529 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.551129455 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.528364577 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.528517085 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.52760774 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.528652306 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.60901167 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.530981389 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.525583489 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.525997836 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.606314428 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.537156762 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.530311895 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.525618583 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.526958283 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.528349638 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.68114927 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.578793119 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.529555889 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.577883483 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.530751105 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.532417029 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.529301932 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.532806904 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.623229587 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.532407157 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.580129283 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.526566828 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.759560734 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.553995524 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.533038095 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.53342277 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.534597102 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.53089624 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.527336072 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.538210236 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.527563187 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.531698041 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.535879665 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.527883409 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.528226261 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.715845487 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.690942795 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.527236577 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.545391078 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.537031488 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.527877654 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.612745776 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.533471168 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.526657124 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.588376331 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.647897487 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.611668319 seconds)
  done (took 157.287183383 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.533607233 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.542910309 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.536119702 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.555511643 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.532987338 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.533313629 seconds)
  done (took 10.661276545 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.535726026 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.536254145 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.53293188 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.529966497 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.530195265 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.530084934 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.530902521 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.531483013 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.538703791 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.530757941 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.530002136 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.532592273 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.529429607 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.53025809 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.532185049 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.531616772 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.530930271 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.528119345 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.529894919 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.533199927 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.530358294 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.531465649 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.532764612 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.533063031 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.539188361 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.531482741 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.539905239 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.533978695 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.531036657 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.540036965 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.554397515 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.532823533 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.534684333 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.541555392 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.541863998 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.535230537 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.534125382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.537100729 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.531434392 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.53371296 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.536071718 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.53725918 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.536704723 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.536795143 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.534657267 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.542076557 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.538292687 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.539652488 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.534340607 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.53383912 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.537025082 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.531804201 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.5329201 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.536569372 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.535976857 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.559385078 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.539580899 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.533762603 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.535762446 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.536606695 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.535602463 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.534936953 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.537349002 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.541640337 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.535513302 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.537418052 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.537561476 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.543108375 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.535733204 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.538241289 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.535874936 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.534441422 seconds)
  done (took 112.980977943 seconds)
done (took 412.194424634 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.574580087 seconds)
  done (took 4.004438512 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.761939181 seconds)
  done (took 4.194649095 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.280802361 seconds)
  done (took 27.721022435 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.610708109 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.592388835 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.552669514 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.53481032 seconds)
  done (took 11.722743792 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.004230198 seconds)
  done (took 4.434914433 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.526234868 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.550358658 seconds)
  done (took 6.509677405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.02532562 seconds)
  done (took 4.454583658 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.982190485 seconds)
  done (took 4.421633908 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.529512066 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.543474969 seconds)
  done (took 6.514919382 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.52099972 seconds)
  done (took 3.952783294 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.390339141 seconds)
  done (took 18.820779473 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.543108609 seconds)
  done (took 3.977796748 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.551875663 seconds)
  done (took 3.980902821 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.003430404 seconds)
  done (took 7.433878526 seconds)
done (took 113.574025582 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.5270306 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.528546927 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.531016635 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.528849763 seconds)
  done (took 11.544641506 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.570280088 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.571328744 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.573327542 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.586845136 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.573511796 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.570166961 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.562049597 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.56380909 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.582016072 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.572927893 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.573011243 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.574103257 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.571100089 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.563237164 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.573473919 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.571726768 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.582657267 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.590552385 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.579805021 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.576400231 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.541731674 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.583760313 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.580099581 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.53895985 seconds)
  done (took 39.159230456 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.05600348 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.611636262 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.694528937 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.59200303 seconds)
  done (took 8.386519933 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.610510798 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.607671295 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.619061176 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.660993278 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.681453664 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.617595606 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.561831413 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.563102485 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.548170214 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.612698392 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.667663514 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.605335935 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.685275663 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.541693647 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.73169418 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.538904879 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.5405906 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.618215298 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.657606841 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.671892368 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.540202032 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.619742419 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.621813777 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.605843056 seconds)
  done (took 40.163721475 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.537036704 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.561765749 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.545141934 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.541580526 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.553583365 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.542231937 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.54087648 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.539195832 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.536135634 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 2.147862928 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.561067276 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.553874858 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 2.136299943 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.560399937 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.543386035 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.539074432 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 2.143746233 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 2.155900579 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.5623681 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.549371741 seconds)
  done (took 34.786467311 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.53324027 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.533566444 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.889995475 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.792552628 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.536627991 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.532882163 seconds)
  done (took 15.253169327 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.636980869 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.818988192 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.542793621 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.003592142 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.083180115 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.542742014 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.542178472 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.852779981 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.271125424 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.284426915 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.626544821 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.637142443 seconds)
  done (took 23.279343007 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.537798152 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.541359179 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.562968609 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.55851635 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.622797279 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.569945462 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.556210178 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.539748007 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.626407695 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.646706095 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.567453853 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.623538397 seconds)
  done (took 24.393211476 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635505463 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.539376228 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.562729426 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686995672 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537813132 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42119277 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.684530049 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336305238 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.566502471 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815421965 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55750083 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641304538 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.802742212 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540221057 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.544051425 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.546819482 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774652271 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163151083 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540693198 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540877202 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600741087 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.550079635 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.545096587 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.833337603 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.541898711 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541914762 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.804189892 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.540833041 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919303257 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562609678 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555000798 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541156833 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.817034388 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294151479 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666593153 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80825285 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567217733 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.542491818 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.553699257 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.543521168 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5799329 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.548129268 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557201322 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54249251 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544125099 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544344059 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352857996 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.57048226 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.541377518 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544464564 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894020019 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645529815 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.547852512 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.542631234 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586440084 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542245609 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.552024423 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542476403 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121086562 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550469864 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548261398 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.547908729 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.563289148 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546928954 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303009888 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.548909407 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.550047168 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54969693 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543357823 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.541831877 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59153309 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542979937 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.568461447 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544397594 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520316647 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.56206187 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549124488 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224246905 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566173835 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.546759615 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780324613 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545160722 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545457556 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.545973671 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.545668114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.423625134 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553753709 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.536730917 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.543646463 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3437744 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.832096287 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567266278 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577245368 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.773035311 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.530253914 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545467117 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.56426567 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5510109 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571182248 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349687585 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566838233 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.549795778 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809938977 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.76050077 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557619315 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.555171763 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110285621 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.578022726 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.562524307 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.549465193 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.838648756 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.295242048 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568744525 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561082536 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56436749 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.546332378 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.466872231 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545577404 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.673534871 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.560858626 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874855546 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.515116103 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544150978 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615718598 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549403877 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.547927816 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549078224 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553697184 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.548098834 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.809313862 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.58096072 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562557157 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.548069986 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547813535 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.562177683 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546828868 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.577107465 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.774855938 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55801531 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824227597 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5490023 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547679723 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546752913 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.773363604 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.550586796 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.88936104 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815405843 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.559944574 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.557430847 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565633316 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568697293 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656787158 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571696765 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.548893405 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.834112126 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.554696966 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.557196198 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549787082 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.553906023 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553915517 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.555921095 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561437777 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283764627 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541468105 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.556090258 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446355773 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.565981033 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621773709 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557148663 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.820904861 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.546162568 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.568799301 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.553273744 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.562440642 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775665824 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562660615 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.549364135 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639169453 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.116473985 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.323760657 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567189415 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.549447775 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.548032767 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.546592004 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551758416 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550954084 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.551107135 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820765778 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564487148 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.583342677 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.309216338 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553898826 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.549354855 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.560352296 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566176979 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.557930211 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55176885 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.551744883 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548075831 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555574256 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587002932 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697224247 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.566085874 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.552625487 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.06640829 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559660355 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.552886563 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.553026193 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591105234 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.554180636 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474356845 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840090766 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.569687089 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907479353 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.55839971 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.573969266 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.551819685 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551932872 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57797852 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.558357932 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566452403 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.567808851 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.553840674 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.559574031 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126888078 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472237778 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229808096 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.568000678 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.550576504 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.576487314 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364639224 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572669742 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.553121132 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847060829 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37820935 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575018005 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118136402 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.581950671 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.51009163 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908666961 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7954495 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5699588 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.552613262 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915108534 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.776034037 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593904681 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.556015163 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557298371 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.538517729 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20959808 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.592910653 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640029723 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364402837 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576398551 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.559504089 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.616537029 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55517707 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051062177 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.576919618 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55511411 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.553529847 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.559871167 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503785838 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.58400572 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.556198154 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320021247 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.576206375 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.12306076 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575190059 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.828940766 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.56676546 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.564703303 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.572628036 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.550079279 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.840810741 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913447727 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562850307 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.564120566 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241168818 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.434034443 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.566171158 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556785019 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475658706 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577613787 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94679506 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.573759899 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.567138816 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560893494 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.558969989 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556964962 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.555283491 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.562069844 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555745101 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17972232 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.589304796 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595287524 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.580802785 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562293021 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.819582131 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.574041861 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31345348 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793079784 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.58857851 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585391172 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.565634789 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5644108 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.550326498 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.55816681 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.559255842 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598438726 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.786660138 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.559748908 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.543895969 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.564589034 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.774008055 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.561580081 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.558821922 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881432729 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.555223855 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.56492127 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473375628 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591648898 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.58400959 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565854392 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.576372611 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.564946185 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630923337 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831176996 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.575303408 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575672143 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057465818 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582659845 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.586224261 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.57916113 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661819019 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56045757 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.57159407 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.333129636 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328205107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563144911 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331619169 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924952355 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.568465545 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566373823 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565463596 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723686657 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.564845014 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836802607 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564589856 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.577984617 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587706407 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566214595 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579584983 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779764539 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839350393 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.564044348 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562586583 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56647134 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.563328413 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575801896 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.77704884 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192574013 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252374972 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56349843 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.578214549 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375839652 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859051333 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56375942 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.565885485 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566904381 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.578603758 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571333198 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.574322758 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567763565 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713669897 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923639422 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328230996 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59550402 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.593722889 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.337140053 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563778578 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.827127298 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.559418214 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.836635622 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298813855 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482150325 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83638552 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635740507 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838376531 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.562617538 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72811497 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.569323001 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.563274065 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.564565602 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564595292 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.562433631 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.575598762 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334141536 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83869401 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.570707859 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.565142164 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594741183 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.578099922 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.793821276 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.464726779 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.791674635 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580245423 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.574616627 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.565676626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311081704 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923946017 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572128751 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.569729306 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86530218 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.56435275 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591882544 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.021778904 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.565613334 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259441924 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.542903623 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59100395 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583526193 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448262081 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335589212 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.580969521 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203778003 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566018632 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569512915 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848820544 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.575742816 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.578618464 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848932312 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.575257429 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.57204501 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857863988 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.313336209 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.533178849 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.580054445 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576358279 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.575729968 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566892729 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614859862 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566685225 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.576723289 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.086298162 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.590105294 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569139601 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582052613 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.574820314 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591469084 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.569502015 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56886891 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.575703278 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.594283749 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.555185474 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.574750195 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.57285116 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22798586 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591968354 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.242828902 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.896051077 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.82885966 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.584049413 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.557729716 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.573638316 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571397257 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.568302463 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567824939 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.590378022 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262080504 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.584743125 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.58520539 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575143138 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.790359706 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785259451 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.570349616 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848273814 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579436699 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588691218 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.558439891 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569749271 seconds)
  done (took 1078.272237007 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.586615318 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.622840323 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.59539786 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.651656461 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.586470722 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.675644495 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.628173569 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.59218178 seconds)
  done (took 22.404470617 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.583842551 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.580822738 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.574066038 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.587120592 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.589702159 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.189019186 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.598975949 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.581323095 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.585624796 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.576198572 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.576273529 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.4722979 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.585931871 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.593989806 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.567311297 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.586441717 seconds)
  done (took 36.30807868 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.120569587 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.962841224 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.659095233 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.592850775 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.607465401 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.572815823 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.119034141 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.591037914 seconds)
  done (took 30.696015524 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.588287494 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.587469052 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.588459941 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.589601453 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.587650996 seconds)
  done (took 9.410393087 seconds)
done (took 1375.490727834 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.579661625 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.583942043 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.580478293 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.582715363 seconds)
  done (took 7.794258896 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.56180748 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.565149004 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.56535672 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.577941048 seconds)
  done (took 10.739655699 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.543641464 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.403346071 seconds)
  done (took 6.41753363 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.575951032 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.342851813 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.324611964 seconds)
  done (took 8.715099627 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.909037647 seconds)
  done (took 3.380156773 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.990029588 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.966072939 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.774666323 seconds)
  done (took 7.203552207 seconds)
done (took 45.719583329 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.594287129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.826434404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.733935964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.575524578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.733765577 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.826380536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.404951314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.589243585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.580744371 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.578920508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.574082792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.735671969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.314006553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.831211403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.315819896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.831252244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.734821967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.578145978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.574602501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.593183917 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.402190361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.587728291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.585363741 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.591180168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.734506062 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.7202409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.580950231 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.828219545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.578562274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.603719842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.720894905 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.579039752 seconds)
  done (took 89.509498561 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.588094675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.576226347 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.575834353 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.597575242 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.582457735 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.576827784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.59751684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.597455219 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.576239431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.576110858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.579714533 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.580472848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.577359518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.613576603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.57727619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.614143526 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.575687954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.617628799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.576238535 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.594051866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.579801324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.597833511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.577141924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.576248164 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.588463188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.577701309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.595599569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.585769134 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.591314548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.577766744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.578327357 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.596851141 seconds)
  done (took 84.247519183 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.594795525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.592567927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.577017838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.599303983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.606700413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578468512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.600695229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.577599351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.598959947 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.620136789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.579461924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.608569646 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.579035768 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.579554594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.578219976 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.578771302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.576613065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.59916493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.577127731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.581927599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.581625567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.594994566 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.584034657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.597883423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.578104687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.581758269 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.604878386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.578980928 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.579048601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.587195967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.57963284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.613401116 seconds)
  done (took 84.321851749 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.864079561 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.590833186 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.591153036 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.582889288 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.594134535 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.592150458 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.583224389 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.869379475 seconds)
  done (took 16.744319349 seconds)
done (took 276.293418644 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.582865003 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.588516235 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.82798419 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.615819639 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.597486381 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.60949799 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.612211555 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.862014916 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.605750034 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.859581773 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.607395784 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.606734514 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.583675123 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.629664838 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.915299858 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.754539062 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.594485387 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.601327996 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.008923848 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.60738074 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.900842651 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.586435864 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.942467345 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.605742999 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.582033645 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.612383527 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.581293217 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.604819901 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.610626599 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.014743355 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.616190047 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.56921756 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.71868304 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.721818677 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.838734453 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.779183829 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.58733497 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.691694322 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.848814864 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.587287631 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.591422359 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.445597028 seconds)
  done (took 93.184386422 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.592738389 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.715223899 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.593761036 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.594693055 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.594291285 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.713296274 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.691054533 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.593830438 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.594344207 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.594080972 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.594673685 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.595824469 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.593851613 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.594971054 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.595764953 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.595944054 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.594046144 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.597598923 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.598125381 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.64079603 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.72088034 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.62551735 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.588094526 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.595514753 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.699750984 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.736964169 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.59295491 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.588737117 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.638502049 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.598383148 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.598834403 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.642633543 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.59789109 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.597530657 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.716210722 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.697912599 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.619892317 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.595190133 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.715451668 seconds)
  done (took 64.92748792 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.598229346 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.89458337 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.129033081 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.606375062 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.597900749 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.602681359 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.704843433 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.600868392 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.60224483 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.599880713 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.786983419 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.603893636 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.642357569 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.185090428 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.602414275 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.598400889 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.597822062 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.59942499 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.89365416 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.604785166 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.727925999 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.602940901 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.70589149 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.612469325 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.622818838 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.599559203 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.603065462 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.187304571 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.59656292 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.790418796 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.606767911 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.704528411 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.14901127 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.148645643 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.614015798 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.604720671 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.601986106 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.786822175 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.605392298 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.60085771 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.707583472 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.60433391 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.144537134 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.347234133 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.621362566 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.601453649 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.218591852 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.783908259 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.93920473 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.612449996 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.177679704 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.606654817 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.601949516 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.602209813 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.942165287 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.612062257 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.602347427 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.245811923 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.629192246 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.707999429 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.604723917 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.602483513 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.911813853 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.604769669 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.894363843 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.605919934 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.610063774 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.625348247 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.155453673 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.60821608 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.332693565 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.622665569 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.603520767 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.785596137 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.889473175 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.260457791 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.624384212 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.90422354 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.156964262 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.704570535 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.60918195 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.185996828 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.712684244 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.610799663 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.603105208 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.606158914 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.603519362 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.651100056 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.707541723 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.275850635 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.342954857 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.268169987 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.731798323 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.621038486 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.604560832 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.24936643 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.624840359 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.60587151 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.146598891 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.351663986 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.630620743 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.610479132 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.372084755 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.631325457 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.712561529 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.613072678 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.144142942 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.606889235 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.650804081 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.605185007 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.61099227 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.631701899 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.713121349 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.610548004 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.604833581 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.325717065 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.816881902 seconds)
  done (took 211.431208258 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.597344406 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.595053405 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.599031823 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.593531867 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.597994699 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.607439677 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.598004607 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.597125315 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.602650771 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.596494557 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.598667317 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.599430967 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.598190322 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.607924876 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.608561477 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.606596865 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.597093321 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.5985958 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.614873998 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.596179501 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.597569819 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.602429268 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.614254777 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.596418518 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.599635529 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.599497852 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.610890829 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.598525726 seconds)
  done (took 70.321395625 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.606983622 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.339015164 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.606357732 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.788122284 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.636242218 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.605259008 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.780734985 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.682805104 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.611076333 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.604638641 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.604962442 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.003042432 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.605519015 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.283714478 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.866451353 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.797433321 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.32246571 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.630184899 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.60319813 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.606851081 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.78874381 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.625424693 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.002186158 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.33909693 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.607197977 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.341287336 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.59545836 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.609060629 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.608382546 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.341274006 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.604853267 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.003437809 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.710007009 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.691159118 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.345750683 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.278376559 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.296437162 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.796133109 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.60386128 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.607162881 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.605908602 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.598781378 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.342102325 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.608817343 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.609964355 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.338226322 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.627941475 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.611213761 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.613572431 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.607936499 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.689669202 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.695163828 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.004048627 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.418842324 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.711159301 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.623096989 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.790731662 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.992083755 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.613831033 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.27775916 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.597359577 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.347049453 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.630143749 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.601593865 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.611782768 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.616718242 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.816535165 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.794646874 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.285676623 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.629737165 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.280268103 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.834455427 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.611377254 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.610155161 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.61358978 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.347998993 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.277626926 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.833174973 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.796957326 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.87910592 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.60401593 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.610883104 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.602358332 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.71623844 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.613328966 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.349332658 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.298088939 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.628438797 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.611261403 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.613153706 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.613670986 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.855436446 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.367358846 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.715519439 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.283600575 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.023881437 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.003184652 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.610915817 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.693742443 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.632001001 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.077020223 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.610964926 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.691194756 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.055777427 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.010831198 seconds)
  done (took 194.163838016 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.928268563 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.645244596 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.722660408 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.793701204 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.305160531 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.293090298 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.608631768 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.755493926 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.746110969 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.925528976 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.608150301 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.700450208 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.889559833 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.714894288 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.438673875 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.71456303 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.72821667 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.790479018 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.783970263 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.610575676 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.365770166 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.97618295 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.857539904 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.636772955 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.771397772 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.547251726 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.279800143 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.206761911 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.821451268 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.612060056 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.198084131 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.606713682 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.609763501 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.409109828 seconds)
  done (took 74.100217358 seconds)
done (took 709.608087185 seconds)
SAVING RESULT...
DONE!
