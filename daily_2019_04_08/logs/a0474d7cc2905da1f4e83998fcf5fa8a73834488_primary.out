cset: moving following pidspec: 27200
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.318982922 seconds)
loading group "string"... done (took 0.593288178 seconds)
loading group "linalg"... done (took 7.246571517 seconds)
loading group "parallel"... done (took 0.173908024 seconds)
loading group "find"... done (took 1.156078439 seconds)
loading group "tuple"... done (took 1.794302751 seconds)
loading group "dates"... done (took 1.238461197 seconds)
loading group "micro"... done (took 0.230500851 seconds)
loading group "io"... done (took 1.033209544 seconds)
loading group "scalar"... done (took 41.104598289 seconds)
loading group "sparse"... done (took 13.482840342 seconds)
loading group "broadcast"... done (took 0.992839267 seconds)
loading group "union"... done (took 14.291911323 seconds)
loading group "simd"... done (took 4.78266753 seconds)
loading group "random"... done (took 9.264365646 seconds)
loading group "problem"... done (took 1.97021663 seconds)
loading group "array"... done (took 21.708141653 seconds)
loading group "misc"... done (took 1.981769842 seconds)
loading group "sort"... done (took 3.28592486 seconds)
loading group "collection"... done (took 18.734774284 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.553718641 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14765609 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121214174 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146192507 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.194632746 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138036412 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152657765 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088542632 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.142161971 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17268602 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144352661 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.490993278 seconds)
done (took 5.368729077 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.261756239 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090435045 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099306712 seconds)
  done (took 1.010890731 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067923222 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130636808 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.085131929 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070530622 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069716664 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.085760892 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069817598 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068598723 seconds)
  done (took 1.406041973 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077384514 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071342811 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.089239984 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071037349 seconds)
  done (took 1.133799089 seconds)
done (took 4.716840965 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.917813817 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.250828547 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189942683 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45577426 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152829204 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.1896276 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.734458313 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343393645 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216537279 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104772679 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108773718 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389151308 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110278165 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.727200684 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079216324 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.112350815 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174744992 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447435434 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084056482 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08401049 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105673104 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147743053 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.106107115 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079405121 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.172111584 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071065439 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148321893 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097808449 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06979022 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244858067 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191857002 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.707810761 seconds)
  done (took 10.880793435 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104030736 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121393072 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071237853 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143626005 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101923494 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088056387 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072416759 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.087375954 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093015157 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162103408 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117415562 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107103456 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086922126 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073468391 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106138172 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.216874858 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112784867 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087775441 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092870519 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0784429 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126915266 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083446563 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096766034 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079441898 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.157620606 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200881689 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116834008 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116006314 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072963105 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08350833 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134411421 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146507233 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067046609 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084267958 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141569341 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113579184 seconds)
  done (took 4.783793295 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.051416387 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.167420169 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095361576 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090187085 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158139128 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070870466 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.134182081 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.087765646 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105023903 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242899836 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.159024487 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.4910907 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132597063 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.087737412 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068794908 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08939703 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068526334 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.529933971 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148049125 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.12256141 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086772406 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092849295 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071929371 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.724284123 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071981637 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069305463 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089597372 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062607001 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151048977 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071330721 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.255502405 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090043385 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090174107 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120513954 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180713785 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096452516 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124270826 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08441481 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06898782 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17181167 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074678037 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086409915 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089385495 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122574925 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122630514 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07007564 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085965588 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184126883 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068931125 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102187939 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.89694238 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17044499 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081995635 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068871122 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302141462 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105615937 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070612484 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06735055 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276984534 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155536389 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068420399 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085433478 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06788745 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070363321 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.388631847 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071651775 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.741253107 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072479447 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081237268 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089890231 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071410554 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094225241 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075861395 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105356231 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069604903 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070673083 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087150579 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068860046 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08873064 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090222233 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209490056 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.088218458 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070790825 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067501577 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107839696 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115097209 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.074191296 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068012575 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121252566 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071919093 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087682893 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105447508 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08881693 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106179221 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073989441 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.113943491 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131455621 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071984835 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138869879 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084269087 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105901144 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.092362717 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11964012 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083289444 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088265048 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159087246 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067530414 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066996952 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085872685 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069665184 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084852097 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071484087 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070958279 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084647572 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08474695 seconds)
  done (took 21.934394229 seconds)
done (took 39.47424469 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.305973125 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098869991 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098820002 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078869306 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099426629 seconds)
  done (took 1.587078835 seconds)
done (took 2.463637805 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124093893 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124689362 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067245849 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120494762 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067076875 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.124599818 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120660745 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085307994 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124768278 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067706367 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119107004 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067689535 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066832661 seconds)
  done (took 2.182721097 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087212275 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088303002 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091048492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086085519 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084497606 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086822696 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083740877 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112117492 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083331927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094042314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067973918 seconds)
  done (took 1.832984708 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086572972 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087310456 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09079192 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084703169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083917439 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08530277 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082971709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108802665 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084054504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094983666 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068791468 seconds)
  done (took 1.830072574 seconds)
done (took 6.707765712 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082098087 seconds)
  done (took 0.947768236 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.720964149 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.771427653 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084867622 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135462136 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224659925 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.156549013 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.451632605 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11141927 seconds)
  done (took 10.710440552 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093058422 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092790489 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086270284 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095349006 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072160168 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088207092 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071840202 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072634012 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087487755 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072991877 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087757602 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073005715 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089338293 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075355715 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071285499 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091676509 seconds)
  done (took 2.253484316 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096386667 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097371919 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097214511 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07896721 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096194976 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07646949 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098408727 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078660036 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092388497 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075879201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.096675464 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078427364 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091728383 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067961956 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094680946 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07870067 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090722785 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076519765 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094931847 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078267629 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09498793 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067015782 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091084847 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076613978 seconds)
  done (took 3.050918988 seconds)
done (took 17.835188736 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137460711 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080411601 seconds)
  done (took 1.088075336 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086303006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104067834 seconds)
  done (took 1.068564576 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08775035 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.085571613 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091593819 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09745716 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067441774 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086033603 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105832246 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068695316 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067260169 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086627513 seconds)
  done (took 1.72197881 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07356408 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099041901 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074775582 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.1027327 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077782864 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084213175 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075370372 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086769408 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080380611 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081940179 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07390988 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101932888 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072987279 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103678088 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074206932 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08812638 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090056077 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07103145 seconds)
  done (took 2.390477864 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.071256163 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069054534 seconds)
  done (took 1.022618076 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071985469 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064956531 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086958655 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068752789 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082581467 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064442563 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081952161 seconds)
  done (took 1.402267918 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.4083395 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109908015 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.247868017 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.094719207 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10974367 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.269958078 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.090204768 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074281567 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093425163 seconds)
  done (took 2.420902197 seconds)
done (took 11.992326318 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083831401 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089661518 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117658681 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.429978043 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111988391 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068518477 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145776688 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.212581533 seconds)
done (took 2.143248156 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130103025 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.630964259 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.408811457 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215724918 seconds)
  done (took 2.140290021 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.389489136 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094580544 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079150899 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071860043 seconds)
  done (took 1.524077365 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071278503 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073258418 seconds)
  done (took 1.024591012 seconds)
done (took 5.705572346 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071652369 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069678547 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.085385964 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089828995 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090316843 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067449967 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066398821 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090066195 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069689825 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068367478 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.089817484 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.072307769 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086848334 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06818687 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06800572 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084727765 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06984895 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067044369 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085540877 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067489741 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066456485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088350903 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067093034 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066354939 seconds)
  done (took 2.742023055 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089278034 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085842436 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073865813 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090538933 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072684201 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090200964 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074978365 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067549575 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09135174 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070468131 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089633402 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071734322 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087496387 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072478743 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087881596 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07589931 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090543515 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070239539 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070015218 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090150802 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072577549 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086717003 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07156732 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090681962 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071726457 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089533694 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07030513 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086141148 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074491217 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088187361 seconds)
  done (took 3.304840596 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075818132 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066831642 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086379059 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074817688 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066421453 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088096846 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066763322 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085362696 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069355016 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066873771 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.087333948 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068260753 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067330201 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.087328184 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068543429 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08830504 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085871631 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067130185 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08675821 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068681622 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06940985 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087215431 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067657112 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085667987 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06843256 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066884347 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08633874 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067455038 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067916825 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087224147 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07052802 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070440774 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.086671321 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072499557 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086341081 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066264318 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069490052 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08289459 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066998121 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065423288 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083963747 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065724739 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065657747 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090445806 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065782631 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085366384 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066581835 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066065602 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083972623 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068743848 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082168109 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06714278 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066675104 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084527334 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07012853 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065225545 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084163465 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065361403 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083987633 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066618877 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064893663 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083396789 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068250255 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065856241 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098806356 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072952733 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082889173 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068062869 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066507033 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08569943 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067845122 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079647084 seconds)
  done (took 6.289255573 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.123923131 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094032115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0866361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067527444 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081805418 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066851492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069128126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085636444 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06814871 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0893479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06639498 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066347421 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085788732 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078350087 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084456771 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068754296 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089719413 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065791207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067046501 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090130632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068054504 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089309169 seconds)
  done (took 2.648652739 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.19414468 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092203295 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111523952 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09529792 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069716629 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09527473 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071206693 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091640179 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071619412 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090372525 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069639098 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090422556 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070647438 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088069221 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070299279 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088939082 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07210906 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088010742 seconds)
  done (took 2.518491472 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082766094 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068061974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110661484 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067829651 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088120977 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070145659 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092603075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076695152 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089632659 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06883741 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095296236 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070967507 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088120311 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069256848 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070512645 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087183123 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07102229 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086038405 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077421876 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092403067 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073020937 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09466376 seconds)
  done (took 2.686859205 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085985745 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06928818 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105511228 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088755143 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065625602 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066089852 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093358842 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068145805 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0916565 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070645302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068049653 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085471206 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073042964 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086317599 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072651316 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086583144 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070672718 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067273906 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089525864 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064664573 seconds)
  done (took 2.463674301 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090216704 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087337139 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070729046 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095569321 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070065283 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088336077 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078696645 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087189309 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07057458 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112096501 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069910729 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087747474 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079237349 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09507234 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071905292 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097603212 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07931362 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098079538 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071174698 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091058433 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.225314516 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071963434 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097405017 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072158467 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070120647 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09142253 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070789861 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095469916 seconds)
  done (took 3.386746204 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071309748 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068991619 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086316708 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067751345 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066839527 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086986277 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067960119 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06704694 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089361267 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067797693 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068942358 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088990809 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070076578 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087642113 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070661112 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069618647 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088744398 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068006527 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067052671 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086992915 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070477725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068994955 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089188719 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06759556 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084772858 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071894778 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067637807 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085873161 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070771675 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067267886 seconds)
  done (took 3.150773795 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.081480587 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094437804 seconds)
  done (took 1.078491584 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069738768 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083774137 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084972739 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072074965 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091401577 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069938069 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094346826 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07285506 seconds)
  done (took 1.542269614 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087387676 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080851673 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091911601 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081197558 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100061981 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085640135 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161649826 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09197428 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077068419 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086780047 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085184298 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068410017 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09617523 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070493327 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095078565 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077521442 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068104166 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095927186 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072237038 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088663105 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072515069 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097422455 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07396178 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066114008 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.091528702 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078988302 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100594125 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071292871 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092190823 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078306164 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075301786 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085146299 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070883371 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.090133644 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068948522 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098416256 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087985473 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090594586 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.081233813 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07079116 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100670745 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064827915 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093994412 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076795118 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099686208 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071638137 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.07030797 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.086066803 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068193531 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091503623 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066198075 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069302891 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08461275 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077134057 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092507769 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08150941 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070982798 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091869182 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072071381 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092650082 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077684401 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089800993 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074056447 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069669591 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099088514 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075053791 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098561104 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06595794 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063912283 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.088094403 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07876026 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112815862 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075989662 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090263932 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071495468 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066806947 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094123979 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069958566 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093754264 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074675604 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086704154 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074253871 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093603546 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068667598 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070046477 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094807212 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067094612 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089708945 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066245591 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103103466 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068036713 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065815041 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085693008 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077848638 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090439175 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068600992 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065787603 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094227017 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062570227 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087821486 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069311736 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067834298 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098014095 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091388906 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074690996 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094481742 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077056251 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067393646 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089872086 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066323795 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087759122 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068177159 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074646062 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081771495 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072059291 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086445043 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069905036 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076098646 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085748178 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068842248 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094191512 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074481242 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066281174 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085080126 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071230138 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087391153 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071526596 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094103161 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067683122 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063713361 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082747522 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071283307 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086605029 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072370122 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072993106 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090409361 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062685257 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086386435 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073441973 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095841534 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068652503 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068602866 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094601377 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069956283 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087020914 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074596005 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088149441 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069012859 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072604015 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08780807 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064196143 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08941122 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071382964 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066782315 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090591656 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071881157 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088730455 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070358544 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06661055 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092429204 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068918283 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086395233 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068236626 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066320578 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097421127 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069606125 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083106805 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066190513 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093565063 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066674908 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067288341 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086213916 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07083624 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087231235 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067416323 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067555626 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088895811 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078300721 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09158251 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069151895 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093130099 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079043823 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085560129 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07166176 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067272378 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088368815 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069330917 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094858996 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074871367 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091905508 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071836275 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065676518 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093758316 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076178376 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086122076 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067782205 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067650238 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091154151 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074100828 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09118791 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070448275 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067291324 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089047911 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071595158 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090931432 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06877541 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085825756 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073645575 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067674967 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093727302 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069064491 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097712035 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071317302 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08253979 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072380202 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065957519 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093955395 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063860973 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084597604 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068770761 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068874366 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087741713 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070773814 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081219648 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076257358 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075303759 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087822893 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067434035 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087187443 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075094646 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069015485 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091490468 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072021973 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09350909 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078107485 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085896112 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071641534 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076870898 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088057549 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062568661 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092652874 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06776276 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06662141 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087683135 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066234509 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09026961 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076576533 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094260469 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064005642 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069992345 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.087126853 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067587849 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081926054 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074092935 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070076728 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08825883 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074359731 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088271458 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069605761 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0715748 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088105814 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068975667 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089198571 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071221399 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087363289 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071159018 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067885855 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091160027 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067260897 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085056661 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070611066 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068247625 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08814403 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07377141 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086335226 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06928788 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070453686 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08836282 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069170109 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087590756 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068733681 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070971023 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088448451 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068630815 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088296338 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064957117 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075096124 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088166807 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076274311 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086463272 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066544716 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07306317 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090263429 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072882898 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088619177 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06960582 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08789722 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069763858 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070608782 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094195788 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065746242 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097479442 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07587733 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087205599 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071941489 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067734058 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089144029 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067899302 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08723577 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070361448 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067628767 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08743853 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073209147 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089191891 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0692201 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069630797 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088444835 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069017371 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088155731 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064160657 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067097304 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087550118 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06874859 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096366702 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069330981 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067209398 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087017559 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069237574 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086236967 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065783031 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093105758 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078808205 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068198145 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09508791 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067421357 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089299406 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077835362 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082414936 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067613351 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065790512 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086007741 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075411118 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087324788 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07916996 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067826367 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08779178 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066558757 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088077856 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068870091 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063786473 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085812695 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072735001 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06713786 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088158702 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069096844 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090850866 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069740149 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0968414 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068688712 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068527448 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088151452 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066554041 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086486439 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068775221 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070635938 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089460117 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066023452 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065110531 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088418253 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068166363 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088626145 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069554605 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068602348 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094941978 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068270278 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090750864 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071320409 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085758649 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072120133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067809795 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08780084 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067323193 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09022517 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071872134 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069020638 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096417022 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067903059 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087819894 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069079398 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065996782 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088933808 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068548173 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087653178 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.0677804 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068760589 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09611795 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065877408 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090577166 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068399289 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086091315 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075713161 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068442048 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090286851 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074906382 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088478682 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070190534 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095121459 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072597593 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07098698 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089842785 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068941561 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093056162 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067963486 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092343289 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069848715 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069043381 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089411521 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066460807 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068596229 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088637494 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067492198 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094099154 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069490981 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085832538 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068353922 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06583967 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088966341 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071923914 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094008705 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071375374 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070904824 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083325308 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066285346 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088848353 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067394209 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069368821 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.090250789 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074260829 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09015007 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069128819 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067304198 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097604943 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074309844 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09135333 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067121991 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071856373 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090308214 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069936997 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088965976 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06943357 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088070583 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074131415 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06999033 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087467338 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075811747 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090043075 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070517037 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068914527 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089282788 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069264006 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082685725 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070695798 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070332877 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094071963 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070720518 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087607529 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079555372 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065892878 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089197034 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071075302 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087807815 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073092822 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08267496 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070572541 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069128941 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089114346 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064315881 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086536143 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067395845 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070224995 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087024664 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064509505 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097400711 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078042909 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070657286 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087968174 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06746159 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083891356 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065195769 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067167792 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089579308 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070097641 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098419968 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068291863 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066523162 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084123353 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069150636 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091099703 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07284387 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065718342 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083619702 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067890789 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090786044 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075395139 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066689595 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087979091 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07125423 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090565669 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067462985 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070439515 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085471259 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071731696 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100814336 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069526751 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088412753 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07504088 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093803212 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071063002 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063659558 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089027339 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072282079 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086743296 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071749926 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068791278 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103297634 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070887962 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087528007 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068605096 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089752561 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068699888 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07585602 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089590846 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06903063 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092162528 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071357351 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095681217 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071609266 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074957137 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091851065 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071223819 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087784157 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068986895 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066198382 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088446331 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068889833 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088824517 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073484923 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095748044 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068562626 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097327121 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078312906 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069453802 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08535235 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067686888 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086389533 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065666157 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068948651 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086875976 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067777189 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067698548 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088057742 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069308757 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093367582 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070906147 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06886995 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088834709 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063027954 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089742974 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071212033 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068773455 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085653875 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068727479 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08817701 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07240035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071602122 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086450324 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069213607 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08908597 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069832902 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064057148 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094850669 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067791306 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089386944 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06842021 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068459742 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08963464 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071713437 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093466161 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069603368 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090112643 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07767285 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070270486 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086352146 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066277981 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092960681 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06785791 seconds)
  done (took 47.828274334 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113447285 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089342073 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064588599 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083937974 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077050638 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085624213 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064276447 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064420026 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085359951 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066960858 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084322342 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064174501 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093356873 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087754109 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096105585 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068220599 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085704115 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065048865 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083645873 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065828975 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092673059 seconds)
  done (took 2.637056223 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080776744 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.094955403 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076390454 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100610297 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069775691 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092910694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073991189 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092931821 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097390527 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070426523 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098074581 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074079778 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088977946 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070730683 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089099515 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074033351 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098599594 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069990608 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092820354 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075458554 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092931583 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07525766 seconds)
  done (took 2.800295043 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072212521 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069166162 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092015423 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06571491 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067863693 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.085826001 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072236202 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.094181633 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072259809 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066246274 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086942765 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067280316 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0882867 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06392424 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067428678 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085828203 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133689608 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072931416 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066564279 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089774099 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063291903 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091034219 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064518668 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063855079 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.087610811 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071693919 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089072155 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066388049 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066561672 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.087287627 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06841857 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065548309 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090181315 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067993801 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086717922 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067729058 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066975882 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088121347 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063476676 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085680628 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06986981 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063550109 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089048249 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069305517 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064946039 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08689392 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069798465 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087407228 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064141046 seconds)
  done (took 4.702668298 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088783788 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13243779 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090450172 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08987663 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.10520321 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095705901 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071738417 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115084159 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065097706 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088473443 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08438283 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10624141 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088254631 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072917633 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070189387 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088836535 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068810209 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08756679 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071919696 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087902389 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071871082 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094955227 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101058818 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082075162 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092135217 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067371046 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08675201 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073370233 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100753871 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073048928 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092484016 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073237519 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103638433 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069752761 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087527435 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069775854 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104239053 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067738479 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091063003 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065575482 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089784294 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072607021 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094742685 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08460624 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089789188 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073506838 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087859701 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065872643 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101205535 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070316495 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096427613 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08232398 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092921552 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067589552 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093707529 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102026531 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068720419 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06505186 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092097213 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099334676 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0665316 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071480607 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103702023 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089876546 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075648209 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102117404 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072886085 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091712858 seconds)
  done (took 6.880893517 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079756078 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095110435 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083202835 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103585852 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094313369 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076587154 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094394451 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07468913 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094422255 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079755388 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095167022 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116069086 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070319921 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097988869 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076518068 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095884562 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073969846 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095851107 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074306123 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096013322 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094125998 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082592144 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095476117 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101392763 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10489532 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089972344 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075245328 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09462198 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082925898 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095904152 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10607583 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075133782 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095541016 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081958219 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106973865 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0949123 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067358587 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09500857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075083133 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09540796 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069315606 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103646062 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073939346 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090094929 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074414596 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094897112 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102164728 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085999325 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098087957 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099171098 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076210528 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102418102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073802738 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09605316 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102443282 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1076169 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103601274 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102859877 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074610184 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102950901 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102614809 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089509821 seconds)
  done (took 6.568135233 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091673814 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100616739 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09763369 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064990813 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06561624 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093517389 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066669095 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085400185 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078526697 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097552349 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0794351 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093109032 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074673976 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100261575 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091739422 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07684724 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092414116 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072016488 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096860853 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071816963 seconds)
  done (took 2.659220092 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079967963 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106892573 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070626742 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073938488 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092543125 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072832563 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092074111 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071176777 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089500318 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07170255 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098935736 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0789009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089729822 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074416193 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09800747 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073347589 seconds)
  done (took 2.30361398 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083492891 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.103012504 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082038007 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089925436 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06633017 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085848679 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068542593 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064203964 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085721372 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081650167 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0903679 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070367444 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08940724 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06782127 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06402784 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092447258 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064243764 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086846342 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068751241 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103053417 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079276051 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087987059 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069855003 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068961779 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08963323 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073265321 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090661986 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065429046 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087396192 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069349295 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089178531 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075695991 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085092151 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068109518 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06619501 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086554844 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068459032 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088068012 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072068996 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067084505 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088481937 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06807112 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089310604 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069619758 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083980751 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070192753 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064612947 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094597372 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06575128 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089734026 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06829777 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089906432 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069812376 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077688518 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092307833 seconds)
  done (took 5.310805316 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084889255 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073136398 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087218216 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066363905 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091924049 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07020499 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071074489 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091620293 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069797104 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087075828 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070496917 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090421424 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070653562 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071743115 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091285748 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071001814 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084346584 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070336628 seconds)
  done (took 2.387298691 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077434351 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069611239 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.099008198 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068911836 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088845129 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07126779 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064445131 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088499163 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067039705 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088236601 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069540068 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070163996 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087964504 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071003844 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088836716 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069665262 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070256078 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088056069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068831293 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084210874 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072032374 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066566961 seconds)
  done (took 2.665961345 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076682695 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.097662659 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.168564667 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110714079 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084752352 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103066461 seconds)
  done (took 1.618014342 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096720425 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104976226 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07036958 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11107605 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077671585 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090734306 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071104927 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090672574 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079864986 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104649455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071182254 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100081173 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098810159 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079899974 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097859443 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076060477 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091497391 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070634238 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090473252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107827945 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072264027 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098817271 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071124505 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090454851 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07170094 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099389337 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078872414 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104865825 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090308532 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079922672 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096251106 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070961925 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101145684 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104008612 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073432375 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09966758 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071987706 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109707498 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0762225 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099320955 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071741116 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09789824 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100191486 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075578443 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099173764 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070836751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096615242 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069857689 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092531676 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115980583 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077101739 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09990894 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096386918 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080475935 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099725731 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115664374 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083746816 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099574842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096265353 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08453163 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09918358 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07545269 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100018626 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104522999 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075691525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09990511 seconds)
  done (took 6.898658556 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089825389 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112726334 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071093804 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105292317 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099148827 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071189541 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09081043 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072038014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091158321 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071370689 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132246307 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07133606 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099980685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098878931 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071904423 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090833935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070601316 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099187566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070311587 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116335188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090154926 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079584004 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10042497 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09872536 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084495627 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097719187 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069892774 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091464448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07014005 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091502231 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07487916 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092703016 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099101108 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070818142 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099201126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070572941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091609952 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075206487 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092117364 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076811683 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100783902 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108413145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070489468 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091536877 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084475351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09238008 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070136235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091743701 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070752155 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090968051 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083512611 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105367839 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104432404 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09883749 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071714339 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091098451 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071407991 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090701494 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071987032 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09682695 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07904592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091670831 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115646133 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072152699 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09121453 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078488199 seconds)
  done (took 6.77967401 seconds)
done (took 134.739398322 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221687568 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.195505856 seconds)
  done (took 1.394887678 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073302696 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099389938 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103907258 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131001261 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090403637 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102608962 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121706226 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082374744 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068316734 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089919175 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068606972 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09022159 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134229007 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068900839 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090462728 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070851765 seconds)
  done (took 2.471032881 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107005225 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.199717433 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112298422 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067326286 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102732848 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08015507 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088540346 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079742529 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094229274 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068166732 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078746168 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098869785 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066459485 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098347662 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073556798 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100788775 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06635748 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102008184 seconds)
  done (took 2.673032373 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108730094 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148024403 seconds)
  done (took 1.243039579 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205875913 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127312978 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209258144 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.428283158 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.211096011 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.286327143 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180626896 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180463075 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163837715 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.177419872 seconds)
  done (took 3.1542692 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103739488 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172645177 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315857424 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140620106 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088433974 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118281293 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140538573 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.110807682 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084187179 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103705995 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081791344 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100982866 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119742165 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078331655 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097109912 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080526916 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123692222 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076616244 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099347754 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077601773 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120811882 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068701269 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097556112 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076350838 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100567593 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080981675 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067558069 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089967733 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076404293 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098210951 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079544427 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115822174 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099931554 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132868464 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083090677 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153904905 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079808567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093743456 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.0774979 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073926528 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10065552 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098525153 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.086768193 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098624566 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06836503 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078229442 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089365929 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068029197 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102160231 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078543942 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.102182105 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080599484 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152653514 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.079805421 seconds)
  done (took 6.449337653 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.769290718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110287479 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096725057 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.812708506 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089449502 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107522851 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.709322052 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118924013 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.214350342 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765054005 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090599363 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099900612 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.17941152 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.217049526 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.938990266 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287061399 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.634710644 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104742448 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109971684 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13370631 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13847438 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174712959 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148749927 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434233749 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076779056 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093821973 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13827237 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075549209 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160506589 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085347902 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09423437 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154074452 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.228844238 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155031274 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09835539 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070927155 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09286788 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147413967 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223869412 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188948575 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15788932 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069509589 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092330352 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140460269 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130520008 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069693801 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139613677 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151801919 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168906103 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074951314 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097430663 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142864311 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139591137 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14187815 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102395136 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.268646242 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288128368 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070829071 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120773833 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10490405 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218562963 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104846673 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197213923 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137682963 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165811596 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092876357 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778233099 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146370663 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092998931 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075132415 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120278152 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095921507 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139523905 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143970449 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.347760667 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164629327 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07433885 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091755564 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206922098 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083518865 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093035118 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140861385 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075856594 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121912583 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165523211 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142964129 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147311118 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21005061 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14168923 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160545437 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074732648 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125447469 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075673557 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217501643 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.16875135 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138928878 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211275726 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14044642 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141130158 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146406164 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096796875 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151094806 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120288547 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081306661 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137917463 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19012041 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122889592 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081532855 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096543206 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141216217 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126395749 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085310829 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160711382 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148860506 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45366897 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146274134 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089879391 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087671889 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138175815 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162574469 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078103908 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238604706 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102075627 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169251269 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120845188 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06992152 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120756718 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140884282 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078784709 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122905362 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.159871928 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077560117 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216060365 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190247148 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077124204 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214216063 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161422906 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076205607 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147747451 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120236057 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145970033 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099444995 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138602064 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075027601 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807473621 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142604776 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121947867 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095931469 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154642982 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09380756 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082748947 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105820119 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06883445 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827971915 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08534146 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10256865 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10424687 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075937835 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122422891 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138545993 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094998407 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13871173 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.178092387 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098137641 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120266348 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082830938 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160470203 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077078135 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105389649 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083751158 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105284979 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123796742 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074564945 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105917043 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148858271 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141303876 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191023692 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541375741 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070577289 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10468356 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198392988 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070961667 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.264590243 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136900266 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198311818 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142105599 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079215668 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289184756 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143583182 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.175883491 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107245428 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152382603 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069319009 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137420684 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.140855584 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09414887 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074729199 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139010954 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165052109 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144060102 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964304614 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072814037 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207852438 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069058377 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171189911 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077293402 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098700518 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.241396665 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09397835 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147580259 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143051519 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09488826 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084558702 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.710100391 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106032015 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13897618 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097390016 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.169044045 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164007401 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137068718 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138697924 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075845321 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138751368 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212292599 seconds)
  done (took 40.881660698 seconds)
done (took 59.252934107 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.264497816 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180059201 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.245809707 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146394493 seconds)
  done (took 1.923059604 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150452229 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106069172 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120424686 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088523182 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105031482 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089495278 seconds)
  done (took 1.66955956 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.411260478 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265541866 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231861419 seconds)
  done (took 1.9186794 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288328474 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214821788 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451051556 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300414692 seconds)
  done (took 2.377088855 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.178319526 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117018419 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068436988 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110118286 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160381141 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.256571535 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129014575 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187966851 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081495486 seconds)
  done (took 2.352302641 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198113939 seconds)
done (took 11.453996103 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.330850467 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.238719528 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.152425435 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.224979467 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104551683 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105083465 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082805726 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.13226684 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079333191 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.243537079 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097048748 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214418186 seconds)
    (13/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.149049379 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.089513025 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.279393894 seconds)
    (16/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091733695 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.181792059 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108903242 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.129355754 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.282747774 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118709372 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.163986937 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.201787586 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077604333 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115930478 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.074857124 seconds)
    (27/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.216199854 seconds)
    (28/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101606901 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198196715 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.253860451 seconds)
    (31/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095393493 seconds)
    (32/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100683769 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.282838125 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06456685 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074477175 seconds)
    (36/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.20655171 seconds)
    (37/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102513739 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103787068 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098065894 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127917422 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074347459 seconds)
    (42/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.173775263 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091961296 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090269127 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116514791 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075203311 seconds)
    (47/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.257630733 seconds)
    (48/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.189033577 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099981786 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.253016021 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.0985603 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070517735 seconds)
    (53/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07546584 seconds)
    (54/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.240563747 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100154879 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174646221 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.087739633 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096079322 seconds)
    (59/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074346742 seconds)
    (60/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.259707838 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.25420345 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122425413 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085179265 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073565376 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.100596649 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079522886 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.100679277 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.216586286 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125445936 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.133446271 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075475945 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075363997 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089718081 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073475405 seconds)
    (75/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074944313 seconds)
    (76/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.124486871 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093782503 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126718465 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.168425319 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.215689229 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.067814615 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098375644 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.134229963 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.198397419 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.241537643 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092423901 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.256218149 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088859355 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.242257946 seconds)
    (90/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095622774 seconds)
    (91/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073965755 seconds)
    (92/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096770203 seconds)
    (93/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05544168 seconds)
    (94/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101060825 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.077682591 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099453931 seconds)
    (97/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078192308 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114733296 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091734402 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121325868 seconds)
    (101/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068629929 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09511942 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.240206422 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.214924817 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095271249 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072811944 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117501089 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053976051 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170127162 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.266364549 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054616391 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068372235 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090654287 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06824362 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05315963 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111994917 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078271527 seconds)
    (118/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.132281548 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055524666 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073869926 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.094215244 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.228258805 seconds)
    (123/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078296775 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067961667 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.16081906 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076256812 seconds)
    (127/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.131333085 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079352609 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166275557 seconds)
    (130/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070170634 seconds)
    (131/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.077320301 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093616707 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10185764 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078401403 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.242422601 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055595833 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072552101 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.242654435 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117178065 seconds)
    (140/309) benchmarking ("sort", Float32, false)...
    done (took 0.129257952 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097962841 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.246684901 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076506366 seconds)
    (144/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080236871 seconds)
    (145/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125988274 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055168685 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 0.150846856 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068240064 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074912957 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09323711 seconds)
    (151/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092801708 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116915821 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075467438 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097522347 seconds)
    (155/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070527559 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.174743616 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077660468 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.118140392 seconds)
    (159/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211899725 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076430718 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102829333 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.160805455 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072135769 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.076645302 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141412797 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163034618 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078634445 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.261210493 seconds)
    (169/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110195963 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.11826563 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070329539 seconds)
    (172/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113960922 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055757881 seconds)
    (174/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065111335 seconds)
    (175/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.119828433 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204887099 seconds)
    (177/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055851375 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05569727 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.082114128 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.312584883 seconds)
    (181/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063913324 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094172693 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076089784 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.099911514 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.077575896 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154639536 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138713292 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150361783 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053782369 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098033773 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068540547 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076430885 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07725665 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068187258 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116813267 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071378308 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054147828 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076765774 seconds)
    (199/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.158268334 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082290455 seconds)
    (201/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067823749 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069141196 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.082196687 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069541779 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.203035478 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.079954436 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115188436 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054933247 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06979417 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09118155 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076727889 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07094259 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.10366981 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075546546 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103962869 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069907425 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081456085 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124583621 seconds)
    (219/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054357825 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079260862 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056196373 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074175458 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091895831 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076370957 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073173846 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.100860101 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13703169 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.077636 seconds)
    (229/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082810202 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 0.166802901 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066801322 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.078347372 seconds)
    (233/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.098801526 seconds)
    (234/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053003889 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.092112124 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202799315 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141475949 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103071816 seconds)
    (239/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062763271 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053083011 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.078317516 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070362666 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053268997 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.089561866 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06576983 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090615669 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092531616 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07346081 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120467286 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111875814 seconds)
    (251/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053769833 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093121953 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067336459 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05297234 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080986165 seconds)
    (256/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054528511 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067071959 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08012818 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091069741 seconds)
    (260/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062799853 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100177737 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057744381 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091952736 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079155691 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074434189 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194866639 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067243229 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130057018 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06767446 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.167825181 seconds)
    (271/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053500837 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.10643883 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095519636 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092290871 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07087918 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069984487 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095080698 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055982686 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05477871 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080410137 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146716018 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080387812 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093001975 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.13475858 seconds)
    (285/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057278776 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077602584 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.094312211 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117469437 seconds)
    (289/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109107519 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06784214 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.102163788 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067991333 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054338127 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.119407257 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082637151 seconds)
    (296/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079035512 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054793827 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073132367 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077226931 seconds)
    (300/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075060371 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070326858 seconds)
    (302/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092111145 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074103381 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053341255 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092559955 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074990695 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173829247 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055762349 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066923149 seconds)
  done (took 35.720496252 seconds)
done (took 36.74308388 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086593642 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117507079 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07769472 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117649876 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083032531 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103546339 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075534728 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079021507 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106940801 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083943506 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104976922 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056207841 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101799807 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077496595 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100953903 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093962135 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104507368 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074754451 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075384146 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091517002 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075256064 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091173177 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069960006 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056515192 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103773842 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075151382 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07340886 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.101264038 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067639242 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.0915096 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07194566 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07397238 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091384377 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080373644 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097380557 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076427823 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076419344 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102585028 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06886955 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090917927 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.0760134 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066413942 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098236109 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075343326 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072778711 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097537749 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075052157 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105216593 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093394623 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093962716 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076429362 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101523862 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079731479 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073537087 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09603348 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07570388 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09609026 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094795692 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098823736 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071111829 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075777085 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101060502 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073558341 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075441369 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.100590359 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077125569 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.102483117 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073500464 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100712674 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074188815 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067798039 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100014279 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071458635 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067023111 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.101968298 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078239428 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089815203 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074004753 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073686052 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097568222 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068024684 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068268624 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.093692861 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07450002 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092342478 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057991446 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071159145 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097794846 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068553315 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076192733 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097955091 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074224065 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069617083 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103776626 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067324518 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096780537 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068326481 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06667981 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094252466 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071923001 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067396095 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094705932 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076847023 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092749582 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07488732 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079972618 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092079562 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074091465 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066333706 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.092273729 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082784751 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101225167 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06738448 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092032044 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068731196 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074484695 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.09040732 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068255727 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067306178 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091733743 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074220394 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067271792 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094340729 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074855764 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104291073 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068115965 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070630364 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093992653 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068060991 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072718226 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091932093 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067416513 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068454557 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089117329 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069954373 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090706746 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075746052 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068993271 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099948591 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069779123 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074804755 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097233414 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072971398 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096507351 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068107734 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060597675 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093484766 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070697471 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069335172 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09189525 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069861422 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067067266 seconds)
done (took 13.631215482 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071713376 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172218211 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128470893 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097012459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113212195 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067931575 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103404739 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105081698 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.094594039 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12883655 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090448577 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109878304 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115906851 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091379602 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068589626 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071108249 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.094096991 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089306675 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128518758 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110519114 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118139396 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092119162 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121777495 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092705364 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114272683 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094878846 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093285386 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072248661 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070551017 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128291003 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110998241 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072242211 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067444807 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126038955 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120228969 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08679571 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092116333 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086789886 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091509062 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068922022 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115987592 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101851633 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108571873 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082207935 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.099362566 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070317163 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092566242 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087650828 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.116886361 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081821907 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114692381 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136996588 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070540602 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108597945 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067028584 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114025377 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106949756 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072614386 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067696865 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094326652 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068242366 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070903492 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115173747 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11799767 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072262001 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.107848281 seconds)
  done (took 7.507427454 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089980051 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119236276 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085895907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110098222 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068657707 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06765536 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093196334 seconds)
  done (took 1.715797607 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072349215 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091236758 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115974347 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09058267 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112614142 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088058272 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103159501 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068208192 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110441535 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070164102 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088986371 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131229933 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069877928 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.10091909 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092236546 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093810159 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091948496 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093774554 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072913421 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11558096 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072997994 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087768859 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096253092 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068535729 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108207268 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069440864 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140295434 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074126656 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069708524 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098090371 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066323672 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14268365 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106897018 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080201985 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068212076 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107713806 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083910781 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091183035 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085469316 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096996729 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084749799 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069513791 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095291176 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067524397 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072665757 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105249752 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07019109 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094886871 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073082765 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088381027 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095288771 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083757515 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09388232 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073948008 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06999465 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099444871 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079015001 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09398562 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090464817 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069863881 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111258184 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084315314 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.108408984 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085073501 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097086717 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083476472 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107928342 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072559989 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070226052 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.098286049 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086472939 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090472652 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071057728 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078876693 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095706082 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091869121 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.116828524 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071041732 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102812678 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069943065 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069267517 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093906828 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092127685 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096562943 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070267572 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073032814 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096439441 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067425289 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067808408 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.097390921 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06805424 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069718294 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09783587 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06979775 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095679564 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08686761 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068919919 seconds)
  done (took 9.620999568 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073618422 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071913385 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097946358 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070256212 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069606503 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094731024 seconds)
  done (took 1.576549374 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101321231 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095862831 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083850125 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098849879 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108989701 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108529086 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084904318 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108857441 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086608087 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106749294 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084662014 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109090193 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089048355 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100015081 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084173138 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098957798 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084281146 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103001481 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08183087 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099363602 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090768252 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099203973 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076679863 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084391077 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.098883651 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074310789 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103581683 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081021624 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10596897 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085158887 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.100219885 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073411603 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09790473 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084139088 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109305809 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073783103 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099390523 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074002071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102423245 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073824955 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108367354 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07729941 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078871744 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099358312 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10683712 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075271578 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073052599 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103563429 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082977025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099411329 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073550901 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099059095 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072879807 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097163457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075194772 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107621033 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074580338 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107989541 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076603245 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073739215 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097812419 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072563751 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.109510937 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073193586 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106945095 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073471831 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098684369 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076029043 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099263305 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076024296 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073773507 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097181253 seconds)
  done (took 7.619198248 seconds)
done (took 29.122029788 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668352493 seconds)
  done (took 1.758231086 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.790776998 seconds)
  done (took 1.883064825 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.165722665 seconds)
  done (took 17.26553605 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.629404535 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.78074259 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.822514032 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135423132 seconds)
  done (took 3.459283785 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.921149308 seconds)
  done (took 2.039491392 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24059688 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226066973 seconds)
  done (took 1.562443813 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.778613833 seconds)
  done (took 1.882773741 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.335618327 seconds)
  done (took 2.430889228 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328340002 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182592695 seconds)
  done (took 1.618334554 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.535049366 seconds)
  done (took 1.642297666 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.912730178 seconds)
  done (took 8.024913066 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234519569 seconds)
  done (took 1.354475745 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272268845 seconds)
  done (took 1.380956114 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.392708615 seconds)
  done (took 4.50257021 seconds)
done (took 51.905137568 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083901207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082527937 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108076608 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080594272 seconds)
  done (took 1.459064209 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082821442 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07482976 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104826782 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075211021 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104787709 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076052664 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.10172169 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080045922 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073948332 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102028071 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075045422 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09949261 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077799195 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100022751 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074662733 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077207086 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103765501 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074619773 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103505455 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075508948 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073199308 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102316223 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07702481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09943688 seconds)
  done (took 3.206944084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082697383 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074842925 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102015788 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073766493 seconds)
  done (took 1.445929389 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083142203 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11806519 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092484073 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078586764 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119996469 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11352085 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072572505 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071571296 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100295238 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079324686 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093719972 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101213649 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114208533 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080033808 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105382301 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068981115 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070467131 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114402002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079598968 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105691698 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073045259 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080663656 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096956126 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090594578 seconds)
  done (took 3.323893712 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083371234 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104365928 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.106931407 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089797885 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.119793152 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067317792 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104410161 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092708629 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.152991565 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06664729 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098390267 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068448704 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098565739 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068611526 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078719115 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135862111 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112414513 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09720657 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097565601 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.094198563 seconds)
  done (took 3.060031265 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079297959 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071267099 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092282767 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07083622 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078064791 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099949323 seconds)
  done (took 1.611873683 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073941883 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068633114 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09350976 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069311149 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07375358 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094253082 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068448719 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067957172 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095026559 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068958577 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067732091 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094027379 seconds)
  done (took 2.054854393 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.442994808 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070745176 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094425901 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069860746 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073058421 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093463166 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083443567 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069469712 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118644299 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068245319 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094092841 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071267149 seconds)
  done (took 2.473699096 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267170915 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079820412 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327005885 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169814443 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14187379 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158291144 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105610142 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142584564 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19981013 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140315071 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202374815 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22750325 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135164347 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168693309 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118132607 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107274766 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215193651 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223296077 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107153462 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227602169 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208421855 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158444355 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182424079 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130868927 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136713104 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152210082 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072611666 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108784468 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236775447 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162277939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204480488 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14024012 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098766336 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23403326 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231031085 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200676611 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164393664 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088640839 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158994319 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168568627 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26018621 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117538602 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196636864 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136562384 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108958948 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175070224 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148104233 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.149655661 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138522112 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117521273 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176147437 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243282472 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167062867 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115585408 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138674019 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143459627 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145679407 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105055101 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273689243 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202035924 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163116108 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101039598 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097999006 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214459789 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160864959 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142616427 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153958041 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121893654 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168764578 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213622838 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147762704 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174214759 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186616628 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090993446 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14847602 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197577427 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158440083 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202806583 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181334553 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076913981 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154018166 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132137284 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08288807 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171239841 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102020827 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21028544 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127843256 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141686474 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140846022 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137013928 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113145833 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223672421 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204965014 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105017418 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094907674 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132098169 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151547642 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177940272 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116029734 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136606538 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149310402 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081135124 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194657666 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078129833 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15481103 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105323056 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154437005 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164200022 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077284281 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157707531 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131994135 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130501641 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166050851 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222283743 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091868924 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111023351 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201102445 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182173093 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133112915 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179092213 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188955957 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.13011994 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131848139 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207236277 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243637254 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092687009 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225367294 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136133474 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085736268 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11617409 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15686052 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142182554 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151166934 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084101223 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181580552 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202103385 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10394828 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098731248 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193461107 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084100485 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109994018 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141924871 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12975549 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098068117 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129565535 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136404108 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171208543 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154683917 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136473096 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153284297 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127351334 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227077024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117517649 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130875666 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10701902 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098090171 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16731426 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216080993 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083184083 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2275221 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157055335 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132689611 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149929093 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08632773 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170571262 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108341186 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073061083 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203094202 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140284913 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112922988 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212969254 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131640427 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157189378 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154185512 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164528848 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160334006 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.19012927 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108400069 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1166933 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142849478 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156326236 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101567192 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096865886 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111692811 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131880192 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123893343 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087676381 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172563678 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183656801 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100168952 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142721575 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125612355 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180702923 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105802302 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160343059 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148792463 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124087443 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186007889 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215481143 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166691339 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12976745 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177331262 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099874665 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07628812 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119401531 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157391198 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111652419 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086701043 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146708965 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208251757 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160322772 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168672322 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140439092 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151381804 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188668978 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101286781 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117456496 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20903459 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155862977 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161206226 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093421064 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128227564 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176255525 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137749558 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245545683 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144751269 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153359763 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211875373 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133548081 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08277092 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135599309 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16868825 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13599024 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209818928 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128696701 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090817173 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139296898 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110530867 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132405855 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158729543 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149238722 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165355116 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146566623 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195082234 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080706899 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147004895 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154486816 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152328277 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093067077 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150560448 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219729464 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099028151 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147458402 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21440789 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080888328 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155031919 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237789199 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202495365 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087698252 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139596757 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151558934 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159362875 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148440693 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198242501 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141115503 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167639199 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138437072 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089657946 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116303338 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100793893 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137276589 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124493525 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14055459 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146976723 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123420052 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161495318 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141454615 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139721069 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149967274 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100558376 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120370034 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126462116 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209403669 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15181912 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235656031 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130485473 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20945583 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201935016 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105912611 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079997797 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.11013431 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171999016 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114149244 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164621386 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124761599 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107385309 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157099214 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20197617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098080644 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098483851 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139321874 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16475474 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140994674 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12693858 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108706979 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2252285 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133053102 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080794864 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155638729 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135009928 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131773628 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237066961 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064025347 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1261373 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078401753 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109771291 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161381723 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215054431 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086610944 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157831439 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150703598 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151149648 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160267789 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131317449 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098898969 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143601181 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208789183 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15991641 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118331214 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114648636 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189111627 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188328188 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135285968 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125624724 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234488231 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187005351 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225008646 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118114107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146560832 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146240734 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111382424 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20138943 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111840798 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202032603 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111947837 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168764221 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134585019 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12222879 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159939937 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126876663 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107503645 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210651403 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150167564 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111952036 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083053229 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148572661 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152984721 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136574263 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10462659 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171890378 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073652893 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198018104 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202347593 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110971432 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135947191 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097640428 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112803353 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13744789 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132920045 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11582062 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125308648 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235732699 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1205755 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183910861 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20144199 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145584854 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169798524 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130214009 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666536978 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080869584 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216727486 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151372309 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239154731 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128402946 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149391501 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140793306 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154605764 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176526873 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13546959 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206464178 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162554512 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151508973 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109177279 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13269838 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141711343 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093967203 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137410986 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145438669 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147417531 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132672519 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150907474 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156742152 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111591497 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097852919 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219395753 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148231126 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202517258 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174032622 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087927456 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150110645 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202136213 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082688295 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179719486 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189636565 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138689146 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128901508 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083166081 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136771658 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234585227 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101560692 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197262546 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154212549 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141421251 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145578479 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.175816197 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165930449 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13747694 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156212845 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124730195 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142879449 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147673175 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08686775 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107646552 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134948323 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143794374 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10236276 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132378652 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.150431029 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190026333 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100171842 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098716229 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132868686 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175436862 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238962056 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120208679 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111989584 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150961368 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14422737 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148275076 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156863772 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084740034 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113038312 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083896541 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.144458498 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143352678 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147449769 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105526943 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140834696 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229881711 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115594708 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227311784 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125927249 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136843025 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071489614 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109527232 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125192183 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100783138 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138434133 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128689783 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235387921 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100211359 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121205146 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122263951 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076079662 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112403357 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162745245 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140761506 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152769502 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128166903 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066405517 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14071255 seconds)
  done (took 72.456022165 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143839318 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111089396 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.123253317 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.178664622 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151912906 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242616502 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185945915 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228781654 seconds)
  done (took 2.569001811 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074122524 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.12318853 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103710128 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118653619 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094942847 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070918083 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.302167171 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112430449 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068719839 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119971506 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120325394 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097534736 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.482031526 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067319797 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096613113 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090425844 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070988706 seconds)
  done (took 3.408899551 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.436793446 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.661373649 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.463939674 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076130371 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.030850281 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113201835 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.611467328 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170846825 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097023375 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.450275979 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72682719 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165061595 seconds)
  done (took 18.208311941 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080456427 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071206367 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112533299 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085333277 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101321137 seconds)
  done (took 1.654985367 seconds)
done (took 118.039557396 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086160931 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.355580854 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.0552818 seconds)
  done (took 1.652281921 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087947851 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085596288 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114184276 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084009088 seconds)
  done (took 1.585832436 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.080268973 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080224523 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117183143 seconds)
  done (took 1.488040549 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285366783 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167870628 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091212492 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088459697 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081931131 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.110832574 seconds)
  done (took 1.493170252 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078194176 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07762443 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102272206 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078382694 seconds)
  done (took 1.542728521 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082045617 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056356475 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058858495 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08864601 seconds)
  done (took 1.49734216 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095261986 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108205388 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083575078 seconds)
  done (took 1.494191316 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111798634 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.115318739 seconds)
  done (took 1.439585133 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087341641 seconds)
  done (took 1.292761413 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09717689 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145742778 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.161309084 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139641938 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168326856 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138819789 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087311371 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118029386 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106919927 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088731222 seconds)
  done (took 2.465250292 seconds)
done (took 17.784650786 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08440982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392787991 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362738748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118360515 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671207384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357324475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.012987318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120714617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122578057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097265692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084948461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678324544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.011826973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351691635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.998862281 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325355379 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678437053 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069548557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068035156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09829208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969984936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096691769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069980351 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069549039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679107805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372069801 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097077238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325373275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068337818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099544648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357135998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096812454 seconds)
  done (took 16.208132043 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075735284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146964244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075439214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083716421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101130649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070792605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100725274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071847128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154832877 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069741367 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113731366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069388845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099465566 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071535769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087929506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097733005 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070801635 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068943103 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097900387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069871711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115426251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06967025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068846807 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097945769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070032975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108369656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070818402 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068307143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097672755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070798289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099273492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070816572 seconds)
  done (took 4.019685174 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121217826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154935908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075755574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132072352 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114397341 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100079862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172267071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094830296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157311683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069291285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115111959 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069279792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130801014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070981317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116769766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071059203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069426036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098643623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069725385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097247581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089099032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068816198 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098088448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070916679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098053796 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082952562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095999295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071376648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070113077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099214255 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073757972 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069721417 seconds)
  done (took 4.311678906 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077780205 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076737519 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112356614 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085211659 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098278055 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07521672 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074330283 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098758257 seconds)
  done (took 1.924372501 seconds)
done (took 27.676200654 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083925959 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073316704 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103971555 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082803658 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101291725 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081298845 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068367807 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104657729 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078889804 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074289295 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.106458198 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069421571 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100437993 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071209971 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075916955 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098197486 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081311202 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101107767 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082245964 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080311366 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.10033303 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078431248 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10334422 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080959234 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10768262 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082184737 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083416166 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103902619 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071009093 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100222229 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078734779 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084731268 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099017922 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080864684 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098015882 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071153561 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068654971 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097855495 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081168518 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103232052 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073903939 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103230356 seconds)
  done (took 4.881205148 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094949006 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090796538 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115749897 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071209777 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101780377 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064946533 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119093974 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073179829 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.095583812 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092280302 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057547414 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.089162558 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07360513 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063364239 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.097762641 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058866744 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060482435 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.086091185 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062133875 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06105155 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086559335 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057598159 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06222061 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064039382 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.087173833 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064632882 seconds)
  done (took 3.275288491 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081334347 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087969482 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118752919 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130072991 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136948216 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079275305 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108448582 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090431971 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11841473 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069198405 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072003289 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.128822634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089323903 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104971669 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069329409 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.117341684 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084915426 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070395174 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104430856 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092969059 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114400632 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079998999 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122973204 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084986878 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068608126 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100351354 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073772084 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110867 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076299366 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078005354 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102870133 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072582409 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098519619 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081652184 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072959396 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.100165284 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092609864 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107178794 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08131959 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06954834 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102297311 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070029081 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117870406 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113812819 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09717623 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076640997 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075846087 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107145087 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06934824 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115526657 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079657169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067960382 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.101459689 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069306642 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069005779 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111420795 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072004326 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09996678 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078479661 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071168245 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.110848484 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073171625 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113111799 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069428118 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103067597 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06997982 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070719688 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095853604 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094917565 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070593632 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.141255743 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069893592 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.100093882 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078515275 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105255045 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076039906 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069364672 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113805844 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079053338 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100933494 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078131023 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071465693 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.101704956 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090904541 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099353605 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072106736 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070419884 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103834416 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071945725 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096809092 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084077205 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06905145 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101213746 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086341181 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095854617 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071436007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075100215 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102114089 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069229244 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108800134 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07590556 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069627423 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106988424 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069326549 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099921938 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079318035 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073653944 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096723494 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073914602 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102301227 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070632523 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069799006 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100436304 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071467698 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.116581065 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076396187 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073600933 seconds)
  done (took 11.698400508 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.195679068 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.189415724 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072270551 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181985254 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077735928 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110333095 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181883432 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09820729 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09899615 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071210607 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070207054 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133558529 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.096785275 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.139704013 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.109951876 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069300767 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116042325 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106844083 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184477018 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178510364 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116660908 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078978986 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072033973 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.100330973 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072644088 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077863046 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115609836 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077954503 seconds)
  done (took 4.438583882 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087137536 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.139642898 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076692459 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09279488 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.123131054 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069299725 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104786618 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071170469 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110553549 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081737867 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097954098 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075791363 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07617015 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108054836 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070379193 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107323213 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079803695 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070623714 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102335862 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074804249 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.110123993 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082706209 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101795468 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069962518 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076820818 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098214446 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066976066 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115959905 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069862227 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121850609 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068596184 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075615636 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.118800448 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07079937 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097294941 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074393366 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072288145 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101946126 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071624057 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067521766 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097156459 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059627278 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068206675 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.11133114 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074927001 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.090472769 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075931835 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102598365 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076296324 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067802645 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099720306 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072664509 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072336979 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.112328147 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074002113 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101998041 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075132112 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06747143 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106064744 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073354655 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066736534 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09626821 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075266677 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096115728 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078918866 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074279363 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096913627 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072954547 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073882916 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105013816 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07305467 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099745299 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068773985 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071413823 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103705082 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07459377 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074363501 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097580168 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069799739 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069703592 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086827923 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069732113 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055392189 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101872137 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068773058 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09596154 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07457049 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074917958 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111955987 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071036462 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105096936 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071123634 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067949056 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101585512 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065774865 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099493317 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089003439 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11380688 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070599235 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067138247 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115514414 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074294502 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096383466 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059123828 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076223013 seconds)
  done (took 10.202373602 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.101155799 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093479159 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100694507 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085554285 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.127215202 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094708542 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105393825 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075840127 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070574164 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115877662 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069727696 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106005278 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071023075 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078509822 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12815331 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078074111 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099942515 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079443068 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07353026 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139666337 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08487748 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113607634 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083321315 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098063139 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074751676 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081905346 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127866074 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081887442 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110023631 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.088496309 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081701444 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126929897 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088437695 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102616987 seconds)
  done (took 4.492540923 seconds)
done (took 40.205453972 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.321901496 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.522951692 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.296236275 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.284223047 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.337653387 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.31693002 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.305739998 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.309650487 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.742821819 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.295648688 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.561880184 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.043574526 seconds)
done (took 60.5816776 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.299605156 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.438706147 seconds)
    (2/2) benchmarking "String"...
    done (took 1.580866315 seconds)
  done (took 4.260538248 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.660380726 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.310379459 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.589043081 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.298125563 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.312599143 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.744333597 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.033850395 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.154045245 seconds)
  done (took 28.682750913 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.299616841 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.678943014 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.933890558 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.931964581 seconds)
  done (took 19.086955345 seconds)
done (took 62.230517121 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.298123309 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.332072774 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.309134187 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.283681125 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.408078646 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.337284776 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.644035608 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.554022668 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.299237557 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.288708191 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.320010659 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.306857258 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.305021007 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.673126899 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.304311228 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.297691896 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.308133906 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.798529093 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.712440445 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.302870817 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.331554253 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.323893618 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.317524987 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.305008513 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.345662476 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.298028847 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.297107672 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.301437961 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.734508845 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.302355069 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.401641079 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.828544138 seconds)
  done (took 195.110243819 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.298660209 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.506784222 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.5890244 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.32158325 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.011559868 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.497971113 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.435727753 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.057576257 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.315740243 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.301883861 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.641654234 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.29876402 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.703429928 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.305432715 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.310866324 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.305177278 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.621415705 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.691021465 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.316422285 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.56989299 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.307724972 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.556136858 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.501028907 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.588527857 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.327218052 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.363103023 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.304622292 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.325778511 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.492564129 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.567401582 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.305298945 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.326649938 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.902196748 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.160750151 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.328711899 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.306103268 seconds)
  done (took 155.006745535 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.606479264 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.303053845 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.30173486 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.303827353 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.303874375 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.33464563 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.303971335 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.865967347 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865577426 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.811127198 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.749501073 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.363548648 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582748845 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.300931838 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397365619 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.31323151 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.300181772 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.318626365 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.32892637 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300492369 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.304097895 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.84679747 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.312929378 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.49691491 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310871501 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.303625192 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335716122 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.699807889 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300080573 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335935602 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.627337211 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.351055798 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.301335618 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639178188 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.231901112 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.413804422 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.303602516 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336420489 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.303800434 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.577728505 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.30230592 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.305143953 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.306778113 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924376614 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.305066705 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.867604858 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.305692102 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.214462957 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.302229975 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.303995066 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.830917431 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.861773817 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.306058348 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.30453399 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.306449812 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.306700534 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304541579 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.337121386 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.736474948 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.403557848 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.303435167 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.309513203 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334766438 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.305736346 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.477734802 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305624154 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.417483939 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.360273157 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.527751301 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852540314 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304354341 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.399897595 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422710925 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.30370807 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.306669233 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.30726548 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.305659661 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.41392636 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.304240357 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.717652447 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.309919874 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.308232022 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.36663277 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.402007507 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.304245972 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.649897367 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.307424551 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.306725585 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.029625417 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.398721541 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.30437178 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.305682735 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30713542 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.719754674 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869484807 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.304920253 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50083598 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.307688547 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.832338998 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.309383907 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.733587446 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.844263772 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.944991134 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.309161508 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.416229513 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.308514282 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.307696268 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.309549076 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.308276969 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.336283538 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.305475893 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.368794798 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.305417292 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.307503437 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.706750297 seconds)
  done (took 357.705986644 seconds)
done (took 710.672861293 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.994787379 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.979328555 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.099767269 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.976833676 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.954467535 seconds)
  done (took 11.254170733 seconds)
done (took 12.504203611 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501980154 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.499071751 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.366736294 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501187205 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.335367947 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521329065 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48306238 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.324949867 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.415478999 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.384473554 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409852828 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.356026767 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337233658 seconds)
  done (took 19.685435389 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.627945079 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.628858701 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369014325 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.629590568 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344501216 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.629931689 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.503835264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.518078395 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.499824785 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322139261 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321636878 seconds)
  done (took 17.64507787 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.634618131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.625303326 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.372550039 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.639825411 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.347945518 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.637862268 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.503521405 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.517943109 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.503260143 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322478044 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.323104977 seconds)
  done (took 17.678938806 seconds)
done (took 56.260063625 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.318401346 seconds)
  done (took 2.570674456 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.356453803 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.520414799 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.334347939 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.322828242 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.318638542 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.318582765 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.323503528 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.32041053 seconds)
  done (took 12.067774273 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.316985126 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.314145924 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.317116608 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.318854325 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.313519129 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.314397249 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.316479186 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.317176479 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.315918549 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.319449729 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.316876865 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.318203483 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.319359703 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.319060172 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.314793643 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.319145916 seconds)
  done (took 22.322943077 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.31954428 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.314633045 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.316242903 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.316351011 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.317887438 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.315978631 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.317951769 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.316564802 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.317405095 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.316918173 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.317674535 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.317115445 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.318766319 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.317176973 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.318679601 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.318321353 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.318062954 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.317986473 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.321230326 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.317586249 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.317534004 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.31771733 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.316197107 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.318652911 seconds)
  done (took 32.878197336 seconds)
done (took 71.088922365 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.440680577 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.020266846 seconds)
  done (took 9.714738446 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.321816284 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.31874247 seconds)
  done (took 3.894153206 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.321368364 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.319748198 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.320222637 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.321311719 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.319506436 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.320703539 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.320984565 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.319543426 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.321499562 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.320737165 seconds)
  done (took 14.460004519 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.321187754 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.320484312 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.317956318 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.320169043 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.321431893 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.316989077 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.321054205 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.320381503 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.322656889 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.319887953 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.322046273 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.318112684 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.32222408 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.318982755 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.319971364 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.319832661 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.32049728 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.321203809 seconds)
  done (took 25.020319461 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.32152377 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.321253013 seconds)
  done (took 3.897997939 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.31926674 seconds)
    (2/7) benchmarking "second"...
    done (took 1.319677577 seconds)
    (3/7) benchmarking "month"...
    done (took 1.319587854 seconds)
    (4/7) benchmarking "year"...
    done (took 1.320018845 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.319813406 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.319800762 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.320642127 seconds)
  done (took 10.495590185 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.323664352 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.50593647 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.588618592 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.876596023 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.32422987 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.327048969 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.178153598 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.327432187 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.327147407 seconds)
  done (took 15.033618499 seconds)
done (took 83.771330981 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.350643035 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.312804888 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.239517207 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.329355188 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.332752143 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.616764356 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.356943395 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.439010135 seconds)
done (took 38.235138031 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.322184335 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.018481147 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.059706998 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.316941029 seconds)
  done (took 11.65292995 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.311123859 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.257254388 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.31442557 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.367440678 seconds)
  done (took 18.509022659 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.947387537 seconds)
    (2/2) benchmarking "read"...
    done (took 1.647884188 seconds)
  done (took 4.852895276 seconds)
done (took 42.595125302 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324296121 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.323906926 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.321714772 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.323404891 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.323531234 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.320592425 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.321649409 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.324842032 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.32478426 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.323302249 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.324351592 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.323746659 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323842566 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322057135 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321794125 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.322642498 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323732115 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.321521969 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.322485868 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321403148 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322334452 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324294906 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.322717923 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.322635339 seconds)
  done (took 33.009320051 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.324489305 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.323199097 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.325379191 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.324698643 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.320814771 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.325159156 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.325024475 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.322449572 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.325329464 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.324997608 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322039941 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.322919295 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.325772474 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.323417394 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325829701 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.322478479 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.326632833 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322315999 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326717402 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.323212976 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.325031156 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324230878 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.323747903 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326415146 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.324222209 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323501783 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.324909254 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.324088908 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326423104 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.324557001 seconds)
  done (took 40.989256723 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.331874989 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.336290488 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.325978862 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.325650671 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.326084936 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.326939816 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.326233435 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.326621553 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.327061121 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.326197336 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.327547669 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.326339788 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.326244068 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.326382027 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.326895683 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.327037043 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.327261834 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.328346369 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.327786877 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.327124799 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.327919743 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.328426981 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.328837431 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.327515893 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.327964127 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.327243347 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.327961779 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.326995719 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.328334651 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.327645755 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.327661651 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.328886713 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.327263128 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.328549162 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.329223731 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.328084441 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.332723634 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.338702341 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.329381657 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.328269788 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.327767341 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.328198871 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.329240031 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.329009734 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.32894319 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.329147231 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.330218574 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.327178094 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.328878375 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.327994709 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.32866923 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.32838914 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.329467819 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.329755053 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.328703881 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.328959467 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.32896206 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.330535889 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.329576831 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.328984127 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.329022411 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.328865353 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.327883158 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.329558259 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.330925825 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.330028261 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.329329684 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.329367644 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.330289866 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.329597468 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.328811773 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.329563331 seconds)
  done (took 96.920791935 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.331444572 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.327578716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.328297211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.327609428 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327698681 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.329165767 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.326492657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32948528 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327537585 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.329615642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329658814 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328076778 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328989683 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329168886 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330771099 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327375977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.328268878 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.328943473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.331004702 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331143444 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330698236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.327213766 seconds)
  done (took 30.499297409 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330507851 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331069634 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.328584557 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.332085894 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.328598057 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.330941526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.330459634 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.329830312 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331385631 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.329715059 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328068022 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33053782 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.327988963 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329448954 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328636058 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.329914083 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331687764 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.329900563 seconds)
  done (took 25.203745676 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.330758003 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.32952481 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.331839318 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.330080885 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.329662761 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.33327896 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331153788 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.331918082 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.331753437 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.329601544 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.332702271 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333157155 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.333017227 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330480367 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333077357 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.330330353 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.332558611 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330791867 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333240241 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330929177 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.329921787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333211516 seconds)
  done (took 30.559601845 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332107728 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.332243314 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.330853511 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.331356478 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.331162883 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.333657538 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.332866503 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.330507407 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.333700671 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.332418469 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33071779 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.331593681 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.330476847 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.332232215 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.331022636 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329509266 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.333521608 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.330869456 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333976888 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.33097863 seconds)
  done (took 27.901348946 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335373413 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336060825 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.33535271 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.33556342 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336411785 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.336219808 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.336873267 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.336337017 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.335379334 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.337509035 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337624847 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.336312573 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33768993 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.336348378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.338128904 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335707893 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.337761456 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336614652 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.335624939 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334728837 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.337811729 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.337936047 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337119825 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.338217787 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.337924281 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338077733 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.336736433 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.339146045 seconds)
  done (took 38.698647438 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336408864 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.335761556 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.332469438 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.335246561 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.333471167 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.33322702 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.334249208 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.333005793 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.335156433 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.334333552 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.337448533 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.336116516 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337248981 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.336283279 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335952523 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.336319389 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336844449 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.334313196 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33342506 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332932699 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.336486251 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336902748 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.335758607 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.332148278 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334117513 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.336567617 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333956427 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.33487176 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337831869 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.33359375 seconds)
  done (took 41.323107531 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.355149016 seconds)
    (2/2) benchmarking "in"...
    done (took 1.354778206 seconds)
  done (took 3.980861189 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.334154382 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336832029 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.336792383 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.334409501 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.334878276 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.33728274 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.337057474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335520236 seconds)
  done (took 11.957868393 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.33784279 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.337843107 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.337457284 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.33583216 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.337587573 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.339587655 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347348905 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.354968433 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.34049776 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.339415267 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.345435813 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.348602851 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.343423615 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.3391107 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.33829873 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.341894381 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.338240379 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.339052352 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.34084472 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.338254701 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.338153871 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.342555627 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34185823 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.334770734 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.340510677 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.353423213 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.345436047 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.337586239 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.338760294 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.34511628 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.339240379 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.335943764 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.340683934 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.339704211 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.339161304 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.339160829 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.34998324 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358313944 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.34661493 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.34186593 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.340717634 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.33693018 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.340698471 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.343037865 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341155721 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.339960876 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.340811604 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.336712892 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.340187115 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.344145641 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.346715753 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.339711461 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.33776798 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346954232 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.342640825 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.349894285 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.358137022 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.343333452 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.352028477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.353386662 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.355413036 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.350714072 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342548833 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.341751512 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352194768 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.367676469 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349073878 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.354868189 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.336529396 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.341205127 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.350981374 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355645627 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.353722466 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.342103212 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.343314568 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.342477402 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343801621 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.343309088 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350625298 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.36193201 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.342561975 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.34136416 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35170452 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365717869 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.341621279 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.34312708 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.342532616 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.342333466 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.343292121 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353577999 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.360370923 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.341926988 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.341943029 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.341548509 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.347133583 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.342820324 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.341732074 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.344242819 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.34063572 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.343984737 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342501306 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345800778 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.353804094 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.343940736 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.343678362 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.352738332 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.342978145 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.342707195 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.353802371 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.343699386 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343367308 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.344340423 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.353015763 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.341713036 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.346154025 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.354049226 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.345568283 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.348343807 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.344923899 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.345431773 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354868441 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.373791593 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.344732797 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.343634219 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.349730293 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.358237472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344126627 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.347718135 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.344422335 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.342739764 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.340916372 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.347671007 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.343609451 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.346622757 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345348681 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347523479 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.341707661 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.344846323 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.346082854 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.346563292 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.346677932 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.345709206 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.346149867 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.348779548 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.346760417 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.347874145 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.35476073 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.346328458 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.347308713 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.347354917 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.343847043 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346282589 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.348525633 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.346043526 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.349516001 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.34570388 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.345979909 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.346476778 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346278963 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.347101571 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346301953 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.34760273 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352085079 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.348132887 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.351032385 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.346493454 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.343303384 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.34702865 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.346879532 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.347646847 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.346449149 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.344640622 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.350814508 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.356972714 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.34846445 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.347455138 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.352271246 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.348880473 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.347305663 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.348962387 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.349994982 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.35844191 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.348639779 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.356349251 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.348005404 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.346209334 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.347338649 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.349021428 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.346874729 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346599938 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.351443016 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.355348379 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360125269 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360612953 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.349866064 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.35222381 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.349842069 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.352971938 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.354469126 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.348321684 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.347221431 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.347784516 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348789526 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.347999534 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.35320283 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.348596352 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.348002637 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.349356671 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.349218966 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.348440144 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349573223 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.350431721 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35036104 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.346690044 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348382097 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.348718264 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.348518225 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.347321393 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.348648828 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.349340023 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.349583411 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.350736434 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.360209025 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.345268498 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.349460263 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.350482781 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.349578094 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.347568072 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.348921888 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351811312 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.350693684 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.359562087 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.369197114 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.352044376 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.358303051 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.366412624 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.348227177 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.353422162 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.35162617 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.348319784 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.353202746 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.360606616 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.349205091 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.352490293 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.350359576 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351416839 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.351762569 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.358683455 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.346895962 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.349897314 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.35050722 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.355233657 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.347703526 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.352299354 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.352709287 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.352030193 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.353696608 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.351721416 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.351702892 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353906086 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.351256687 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.352139506 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.353202031 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353065206 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.361007841 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.358177605 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.353029911 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.354227751 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.353219677 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.356746062 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.353137461 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.351004928 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.351303447 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36507729 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.362709131 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360885981 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.354220764 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.35290609 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35919967 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.353863403 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.357499642 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.352794149 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354172693 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.352847109 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.351787666 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.351488804 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354027822 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.353650873 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.353645651 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.354638642 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.357851984 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.351994234 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.353949228 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.352758971 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.353515769 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.352556954 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.351315318 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.353701564 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.357235961 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356721822 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.353485255 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.352615058 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.362097329 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.372589884 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.35742157 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.352704205 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.353303314 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.353163207 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.353300013 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.353649423 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.358338766 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.361895628 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.358016881 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.366894359 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.355007125 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366428867 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.354116719 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.356863706 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.363968553 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.351437896 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.3544582 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.35528902 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.355127292 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.363803861 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.372827959 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.355491445 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.360120929 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.355860712 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.355749562 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.355914313 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.355103599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356268448 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.354226507 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.363859244 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.372755886 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.360526487 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.356655311 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.351358316 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.35686299 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.354375792 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.354874404 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362247288 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.354471372 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.357647126 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.355021372 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.356348312 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.35575414 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.355496704 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.356445603 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.352068607 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.355904802 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364556603 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.375445264 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.36149271 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.355566246 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.36818833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.355270064 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.366263072 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.373262028 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.357442365 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.356402138 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.356857175 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.358182481 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.356425138 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.35875568 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.355323615 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.356760224 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.361292632 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.354278441 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.360338053 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.357587132 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.357196434 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.35793278 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366838854 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383544829 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.358494296 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362571522 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.353620907 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.358967807 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.364266052 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.356331445 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.357551303 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.361450996 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.370852095 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.367219962 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.359255514 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.359744369 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360922726 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359614254 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.359825515 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.358840515 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.359664729 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.360191729 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.361917374 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.358275166 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364702164 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.359291155 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.359684404 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.361606283 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.359694678 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.370991064 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.358934129 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.360233134 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.35909639 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.357750297 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.359439343 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.35926665 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.360194505 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361487395 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359074686 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.360462967 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.368308191 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.367623239 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.363113172 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.358862708 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.361600316 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.361703317 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.362792476 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36033115 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.359079971 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360396179 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.361281036 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.360720459 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.363425244 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.358176355 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.359489732 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.360554045 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360783997 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361297063 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.368031195 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.361415582 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.357386639 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.361373369 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.361592493 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.36090642 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.36125185 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.373706328 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36427423 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.37235027 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.371899084 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.366380908 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.36204484 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364626304 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.372401806 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.360186084 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.363157106 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.361321787 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.364076003 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.363014411 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.366945853 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.36271864 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.371522985 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.363120523 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.361112403 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.371955335 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.381497491 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.362443351 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.364284908 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.3674992 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.362068131 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.359798962 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.362210791 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.361403189 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371397967 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.381986161 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363327472 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.365747256 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.360156052 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.36314101 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.367918841 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.363615343 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.365143337 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.360578905 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.363783055 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.364604694 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.364567535 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.362595177 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.364306407 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.363690254 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.366866712 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.372564458 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.362853968 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.365023269 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.365107194 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.365837363 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363841527 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364358403 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.360227777 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.359107093 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.364700848 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36310691 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.365060853 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.365680677 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.364637157 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.366427889 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.36667006 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.36566628 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367141727 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.377437928 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.37362319 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.361451737 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.363138967 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.365163534 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.36894859 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.364355142 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.366009724 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.366809678 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.367037885 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.365094036 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365356453 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.366937987 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.366550346 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.382435213 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.383345036 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364613287 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.366070929 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371146781 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.366470339 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.36010933 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.366128347 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.36908408 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.369058701 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.375538166 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.367414346 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.373137412 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381594372 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.365941815 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.37049679 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.368513929 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.375687731 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.370117853 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.364964145 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.366967412 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.370732806 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.388787009 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36709345 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376316839 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.400209238 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.385423445 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.367561176 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.369527821 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.366680998 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.367793668 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.371424396 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.368134048 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.366261921 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.363806632 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.366937023 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.367838988 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.375593858 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.369187129 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.366103527 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.367759515 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.367786383 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.371160946 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.364790434 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.368091626 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.36569895 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.367469216 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.368316756 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.366947702 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.369543786 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.383153824 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.38057304 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.367571691 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.368116272 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.365680874 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.374707188 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.371730105 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.380094903 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.37660114 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.370122122 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.369815535 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.370455845 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367777893 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.366255401 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.368938972 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.370097735 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.36830903 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.36533557 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.383444081 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379332377 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.37526417 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.370872579 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.372342411 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.369434806 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371427693 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.369610881 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369874996 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.372479079 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.370769718 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37402337 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.370917412 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.368077771 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.37377152 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.377823587 seconds)
  done (took 809.761594197 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.368860957 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366793851 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.366743223 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.369214958 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368485414 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367344601 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367340917 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367477084 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.36898615 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.367192582 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.367017084 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367125103 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.366311578 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368013229 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.365743475 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3683424 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367414425 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.368228037 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.367052729 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368071966 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.368778371 seconds)
  done (took 30.024230009 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.373392176 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.367547125 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.368511163 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.371509818 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368412578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.371038985 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.369524826 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370691438 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.36998842 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.369864906 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.371808943 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371123184 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.366933416 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.369113065 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369012723 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.372121141 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.371163389 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367766927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.370225691 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.368990598 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.370455545 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.369899329 seconds)
  done (took 31.444167519 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.373066008 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.373006125 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.371954339 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.368569908 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.37076577 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.369498114 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.373240965 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.373932174 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.372031006 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.375050569 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.371172786 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.37441851 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.38000202 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.379143293 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.376748951 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.372516259 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.514293445 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.373510638 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.371455089 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.372955823 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.370694367 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.380324371 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.371126714 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.368657808 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.372525085 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.372751469 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.374323836 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.372634479 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.374089406 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.374621887 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.377274095 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.374999782 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.374239647 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.376403341 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.374134919 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.374124395 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.378142422 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.374585373 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.373646002 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.374594007 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.385607885 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.397826089 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.37658851 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.385046002 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.374394474 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.376292186 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.378355029 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.385349022 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.371089132 seconds)
  done (took 68.827763796 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.37646522 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.37597113 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.371952708 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.375915917 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.375966425 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.374779356 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.375571907 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.376718846 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.372664662 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.37183625 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.37752231 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.371444188 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.373072436 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.375958159 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.375615414 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.373879636 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.373155692 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.375119687 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.374315259 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.373672644 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.372000602 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.375520782 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.375878862 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.373792499 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.375616865 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.374319018 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.3751818 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.37446909 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.374497139 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.373297028 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.376808039 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.377257675 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.377464224 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.375037612 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.374693092 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.376522885 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.377036971 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.374247006 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.375542821 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.376280774 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.377210472 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.378698978 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.378376408 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.377313497 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.374247917 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.375491532 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.375068055 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.375919832 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.376538455 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.376390387 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.377058701 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.374912871 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.378237621 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.375950868 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.376772824 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.379542548 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.376722614 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.37513545 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.378889158 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.375841212 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.376968709 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.379410839 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.376998791 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.379391897 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.379355447 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.375783758 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.376361221 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.378349817 seconds)
  done (took 94.864699551 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378751006 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.379631006 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379996687 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379902518 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379178151 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.380436172 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379949138 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.379438298 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.378524608 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.379129668 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.379771748 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.378201432 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.379224303 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.378838096 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.379251528 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.379834411 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.377945596 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.378835578 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.379688488 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379214783 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.380176691 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.377844535 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.378465625 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.378747405 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.381258821 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.3788028 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.380729495 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.380611473 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380956238 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.381115785 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382222987 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.380110764 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.381090801 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.380332911 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.382296556 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.381566713 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380784495 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380446614 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.3813248 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.380670769 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.381273722 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.382120906 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.380212444 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.380702392 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379648938 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.379508994 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.38112459 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.383110961 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.383117764 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.378731184 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.381612234 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.380560869 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382842995 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.382061778 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.383270067 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.381934318 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380847093 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.381230501 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38257856 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.38107423 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.381884582 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.383249333 seconds)
  done (took 86.901540297 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.380132044 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.381001234 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.379347254 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.377562428 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.383169829 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.381521546 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.382968239 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.381596597 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.381930956 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.381635849 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380448067 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.380636327 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379513294 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382923873 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.379870542 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380521082 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.379904405 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.380174055 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.381496225 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.380614107 seconds)
  done (took 28.931949987 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.380104172 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.382080183 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.380612047 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.380613359 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.382557377 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.38035219 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.381783461 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383248985 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38153726 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.385028146 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.384509925 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.384162161 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380013058 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.380142759 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.385180071 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.380416154 seconds)
  done (took 23.427464775 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.381876002 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.38366268 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.382990118 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.383875514 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.381180231 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.380477118 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.383190604 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.382264942 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.38026862 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.383657327 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.383527039 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.385490248 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.385601534 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.383992067 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.382690837 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.383295749 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.382293719 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.381001964 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.384459255 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.384841231 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.384579729 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.383207459 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.385361278 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.383973629 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.382082331 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.38202355 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.380473799 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.383336545 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.384889113 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.386119426 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.384124207 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.383900642 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.383408753 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.383731601 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.384702056 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.382646035 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.387965639 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.384671784 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.384171205 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.386185804 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.386529809 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.384579023 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.387658445 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.38688892 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.385122298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.386993426 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.385337927 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.384280316 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.385282292 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.385258788 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.385780388 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.389164286 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.389007828 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.388499657 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.388074093 seconds)
  done (took 77.458699612 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.387328362 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.386910129 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.384096156 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.38568125 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.386681957 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.382751896 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.387000976 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.383580356 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.386462804 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.386649393 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.385823041 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.387968531 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.383259018 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.386235057 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.384380678 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.386615201 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.384865118 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.383876608 seconds)
  done (took 26.259589875 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.385931242 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.383515287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.384733091 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.383597498 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.383762153 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.389003905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.387359064 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.388410542 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.386919576 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.385549367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384340677 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.386123569 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386334851 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.386646827 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.384817767 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384207436 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.38550104 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.386740731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.384199167 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383585945 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.386753737 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.387835386 seconds)
  done (took 31.805757008 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.386488433 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.386458508 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.403597275 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.432674999 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.41798969 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.38637985 seconds)
  done (took 9.733949391 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386619185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386409006 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.385267949 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387627999 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386624435 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3853914 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386553166 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384066188 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387160834 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383919157 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385164578 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385789573 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387156138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384833383 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385347505 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386335187 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381616165 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381679549 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382515637 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385742864 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3830923 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385742543 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383273765 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384076934 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381513759 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382715593 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385101029 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383925563 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385256677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383440029 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382758416 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380922638 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384492516 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380775246 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384609792 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384097056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378141073 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381303437 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38294943 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380653037 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.381812206 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382695837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382441258 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381603842 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382718798 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380915548 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380864817 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379752682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38128581 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382700243 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383400427 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380760126 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382809314 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381207909 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383476727 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381394048 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379618215 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382504035 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381743246 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381258773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379027878 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38115966 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378747517 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379500033 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384640972 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379395255 seconds)
  done (took 92.605034326 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380161593 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380301933 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379218159 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382001786 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378272975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383055797 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379321224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379723281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380299211 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380890412 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383576443 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379205934 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382877673 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38047499 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379602969 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379437654 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377826299 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38064228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380588345 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382746062 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381532627 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377964305 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379737581 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381158672 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38227052 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381546994 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381469334 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380012436 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381005712 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38169895 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381572502 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379867052 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382355617 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380318099 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38031188 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380832416 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381047593 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38084752 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380855002 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384834791 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380553051 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383253487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38250266 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381021773 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382609855 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381610689 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382546412 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380852479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381055408 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381489041 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383838053 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382997264 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383083013 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382254251 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38241298 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382093297 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381015358 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381274218 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380759877 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384246425 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383142383 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383064284 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385792968 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381206548 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381436123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382742568 seconds)
  done (took 92.486987372 seconds)
done (took 1886.834669544 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.47312359 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.469888666 seconds)
  done (took 14.258044484 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.545877511 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.499402256 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.383779884 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.435710399 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.383226039 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.382818154 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.407407643 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.380883152 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.383271677 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.382422236 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.383523371 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.572297297 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.380525456 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.382494903 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.38248025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.475945592 seconds)
  done (took 44.083239269 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.413782233 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.390558405 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.506775117 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.401952231 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.41224177 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.574799379 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.446268664 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.39281582 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.561733994 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.422311111 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.958288791 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.409082135 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.387687901 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.502767037 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.405305954 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.577689049 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.632365709 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.952409211 seconds)
  done (took 31.665966749 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.840511504 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.416081161 seconds)
  done (took 9.57413873 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.382567022 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.391418678 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.422975811 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.388238151 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.387015481 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.41673244 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.388478638 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.471900705 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.407584445 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.429411155 seconds)
  done (took 65.415333984 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.408544424 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.388708592 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.388270654 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.385887936 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.379269888 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.377564545 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.386262505 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.382325905 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.035908929 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.514054993 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.400382764 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.391707161 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.387244616 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.388871703 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.38468809 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.423777798 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.513647496 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.384590711 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.382529937 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.391744852 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.386479344 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.523683441 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.43127023 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.385176465 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.515646745 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.051756419 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.391451942 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.394465769 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.505689742 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.388426369 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.387624884 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.387971362 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.390697277 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.963646942 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.881833064 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.392238826 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.409689341 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.396275415 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.385728406 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.586562239 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.38728539 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.395813019 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.379223731 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.865441516 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.552879589 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.506025373 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.6874976 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.391935066 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.391375433 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.452607855 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.390933241 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.390522007 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.419354401 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.170761481 seconds)
  done (took 114.553921721 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.440329872 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.868948788 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551303234 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.400461777 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.222096499 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.135757616 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.383627971 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.67605208 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.404364747 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.381269834 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.66271936 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.895817808 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.385608172 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.446733753 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.665010613 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.404413045 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.38335211 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.205874318 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.383539125 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.380805045 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813656215 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.401594467 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.382718161 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.692689989 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.420203628 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.863029902 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.883441951 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.90130611 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.3884734 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.380300524 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858688854 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.391209538 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.401693117 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.382966137 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.665741264 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.741460652 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.718863248 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.386639852 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.404413841 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.380995277 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.412242528 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.849554459 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.742811118 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.386666083 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.384960333 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.866763078 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.383590365 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.389405352 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.389196004 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.599478879 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.401040683 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.384320816 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.890596886 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.386039266 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.728164179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.406752231 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.422519188 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.893469193 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.385510754 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.525605543 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.40507946 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.384713177 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.384180487 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.385833161 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.386470712 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.747066456 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.471079951 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.388116053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.752584603 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.857430209 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.385822352 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916627152 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.241569588 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.402831983 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.416355316 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.395335495 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.019853106 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.894138669 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.428979918 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.384235134 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.735675548 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.389403284 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.667498132 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.39907076 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.383196452 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82108288 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.408202509 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.408373094 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.385947718 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.393815402 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.047959448 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.387061832 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.65996116 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.411538792 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.384762678 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.387402306 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.386988623 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.384542874 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.399937507 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.391537075 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920011543 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.39347084 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.693578455 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.405178365 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.38867388 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.385756383 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.387511967 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.389504305 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.619340599 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.978488971 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.39188443 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.386518955 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.386118218 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.404019425 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.65319362 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.392257529 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.708160579 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.389423627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.385898669 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.389566737 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.17565098 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.416745368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.387371374 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.392604276 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.246118643 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.600750643 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.407788249 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.389495763 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.389652518 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.41583338 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.828581783 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.390983924 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.405002029 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.391049336 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102135732 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.416453764 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.422407883 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.069805964 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.394529815 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.389294265 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.397529652 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.39227732 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70900419 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.668496813 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.017860821 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.386404933 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.387335304 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.079888302 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.44732097 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.536799125 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.409358216 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.377167943 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588199619 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.025570148 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.389046674 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.96232657 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.388420949 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.614851892 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.392042975 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.72458149 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888485633 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.390748647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.392994786 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.105693116 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.068650682 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.996478664 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.391495182 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.672841639 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.379161412 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.841553213 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.390823377 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.391384047 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.87184754 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.39422694 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.389935541 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.390532936 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.391320094 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.444189653 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.567856483 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.794126416 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.390329294 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.857729186 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3989994 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.388638676 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.415200187 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.390304346 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.745233648 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.448503277 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.397545563 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.395483141 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.393558576 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.401327507 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.873345016 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.25310124 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.39247606 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.545971332 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030292331 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.392230697 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.391113477 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.121072113 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824769704 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901178799 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.40764637 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.707046564 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.393466762 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.43394486 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.16791466 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.455719731 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.917724825 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.389936357 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.391626405 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.990445379 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.394487826 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.443562563 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.391487199 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.393895564 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932826933 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.395747567 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.397042199 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.843550446 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.393291994 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.654617468 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.395726108 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.415535241 seconds)
  done (took 1125.762917305 seconds)
done (took 1406.628967247 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.3942661 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.391439218 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.380810165 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.397483641 seconds)
  done (took 26.895203989 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.40471473 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.403799621 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.402420312 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.402028386 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.404586114 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.400294474 seconds)
  done (took 9.750822125 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.456237482 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.396868962 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.39551821 seconds)
  done (took 19.583816939 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.624619155 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.686589779 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.775229114 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.618069702 seconds)
  done (took 11.03988898 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.404204724 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.403682468 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.40389626 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.40518576 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.40400499 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.405511965 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.403039841 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.404572261 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.407625279 seconds)
  done (took 13.973162709 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.406729186 seconds)
done (took 87.980371848 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.691456894 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.312496771 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.276060692 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.9067646 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.41612303 seconds)
    (6/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.505656542 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.658749051 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.968973834 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.4400302 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.989019514 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.425353499 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.475430279 seconds)
    (13/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.800358505 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.266358806 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.81955978 seconds)
    (16/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.409437115 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.397422489 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.742205484 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.383140115 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.73030665 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.924585691 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.330519323 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.416658425 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.481439156 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.397726703 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.593952948 seconds)
    (27/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.697621349 seconds)
    (28/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.50150248 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.407139307 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.629967979 seconds)
    (31/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.414276207 seconds)
    (32/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.396958656 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.797082056 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.038518328 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.424615373 seconds)
    (36/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.384248805 seconds)
    (37/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.478054744 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.447651578 seconds)
    (39/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.453594795 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.478184637 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.510038761 seconds)
    (42/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.39779163 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.003973712 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.908867485 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.678144779 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.408607656 seconds)
    (47/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.396556667 seconds)
    (48/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.765716256 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.658586347 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.074315223 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.20457988 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.457883561 seconds)
    (53/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.408431253 seconds)
    (54/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.56883169 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.439574484 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.398072717 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.290944041 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.445634706 seconds)
    (59/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.482973446 seconds)
    (60/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.956342424 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.089887725 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.399408268 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.556580255 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.426353644 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.482857823 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.482823787 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.45639248 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.006322192 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.399092976 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.222234514 seconds)
    (71/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.52228883 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.426090273 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.498447428 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.419662074 seconds)
    (75/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.721442816 seconds)
    (76/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.04384947 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.26223979 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.281020013 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.507290472 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.49584422 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.579281783 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.406705666 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.576393847 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.273380824 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.214063696 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.821894004 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.384602756 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.252112832 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.384871012 seconds)
    (90/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.477862266 seconds)
    (91/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.241866821 seconds)
    (92/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.512511419 seconds)
    (93/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.405077399 seconds)
    (94/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.78978189 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.380606465 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.097281913 seconds)
    (97/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.383038164 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.331996378 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.397978025 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.421725795 seconds)
    (101/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.495551677 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.525603475 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.746858223 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.784157275 seconds)
    (105/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.464843602 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.526513229 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.639248567 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.674849568 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.399341441 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.684195366 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.791863588 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.397739807 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.015897122 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.147725184 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.903319043 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.840623964 seconds)
    (117/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.469773477 seconds)
    (118/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.203738031 seconds)
    (119/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.37736191 seconds)
    (120/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.678327682 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.037962559 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.597501276 seconds)
    (123/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.944901619 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.619673916 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.927779507 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.428067828 seconds)
    (127/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.773445155 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.42569896 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.508553046 seconds)
    (130/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.463505874 seconds)
    (131/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.592579727 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.679932686 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.327770295 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.76269146 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.239244108 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.501329528 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.171197149 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.731345058 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.681858536 seconds)
    (140/309) benchmarking ("sort", Float32, false)...
    done (took 5.42658023 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.168666286 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.424423396 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.556276995 seconds)
    (144/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.6717551 seconds)
    (145/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.045982032 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.020181498 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 5.68155688 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.173807292 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.427458839 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.399874099 seconds)
    (151/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.486946039 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.419427823 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.428354722 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.876930051 seconds)
    (155/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.529091777 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.98364379 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.40640958 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.485788546 seconds)
    (159/309) benchmarking ("sort", BigInt, false)...
    done (took 6.402898798 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.442452984 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.402746748 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.390986182 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.468910755 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.832864369 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.538101263 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.502144015 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.505132313 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.249044144 seconds)
    (169/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.801259804 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.817083445 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.433149464 seconds)
    (172/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.834833219 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.017876166 seconds)
    (174/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.732055355 seconds)
    (175/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.401852501 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.466532311 seconds)
    (177/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.940970598 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.903661407 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.407763607 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.901477187 seconds)
    (181/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.249685741 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.490859143 seconds)
    (183/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.419760752 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.389987817 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.828888631 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.431842204 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.405858543 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.427803629 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.291328336 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.431272048 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.386190227 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.447030516 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.828383007 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.218564123 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.408187402 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.488632266 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.036810272 seconds)
    (198/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.715274902 seconds)
    (199/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.046163616 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.423038609 seconds)
    (201/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.403677787 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.371714391 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.703401227 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.460543463 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.407317481 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.070704043 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.544369506 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.54594984 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.515213581 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.823523452 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.444770572 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.434897632 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.939175756 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.607393595 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.132449965 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.434039399 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.82553573 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.421789979 seconds)
    (219/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.626324053 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.391848551 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.050519072 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.433527746 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.082512444 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.523462199 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.428655277 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.431569486 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.409705052 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.297662723 seconds)
    (229/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.479927144 seconds)
    (230/309) benchmarking ("sort", Int8, false)...
    done (took 4.428290917 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.448273091 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.728634993 seconds)
    (233/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.601588368 seconds)
    (234/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.66739579 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.490760681 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.408205666 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.422066214 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.533159999 seconds)
    (239/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.780043732 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.908150164 seconds)
    (241/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.430167737 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.450281641 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.803150668 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.806204038 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.937617687 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.437722197 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.284626229 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.43322858 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.459185065 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.408185393 seconds)
    (251/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.603973378 seconds)
    (252/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.416696721 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.625394835 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.021751085 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.420901268 seconds)
    (256/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.802821975 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.040781524 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.039420243 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.914086172 seconds)
    (260/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.872054795 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.451357278 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.407216484 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.40815204 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.847807041 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.494635999 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.409584444 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.303344394 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.48309346 seconds)
    (269/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.937397827 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.411772653 seconds)
    (271/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.7320611 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.514370749 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.600776201 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.820962772 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.425405491 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.417489627 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.774458962 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.822936925 seconds)
    (279/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.811921031 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.276375476 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.674315214 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.579644619 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.427086056 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.482249149 seconds)
    (285/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.395304152 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.4913449 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.491847559 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.40211435 seconds)
    (289/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.149684239 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.536481827 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.582633495 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.842067111 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.350492812 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.818811355 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.833728485 seconds)
    (296/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.329371929 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.828811975 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.451930898 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.019948158 seconds)
    (300/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.43705692 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.495655875 seconds)
    (302/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.415007877 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.432103122 seconds)
    (304/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.974028551 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.118489565 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.436883958 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.409719352 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.39815942 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.82918465 seconds)
  done (took 951.567417379 seconds)
done (took 952.902759805 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.446540724 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.438830639 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.421758615 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.44445614 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.533032903 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.454022338 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.430828718 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.423806476 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.46901053 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.472416127 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.421553121 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.455803423 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.425751981 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.422521013 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.422196246 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.43788829 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.498320557 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.4252954 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.440557354 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.43327271 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.439585548 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.422099495 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.472605969 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.456785754 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.425763406 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.424404384 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.427670197 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.442711017 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.535149917 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.426620511 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.426169332 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.433405267 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.500381244 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.424098075 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.419745888 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.443141849 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.434892584 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.432136 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.427305139 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.456687759 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.929473098 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.425637332 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.426839064 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.425666033 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.42561484 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.42820292 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.425900276 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.431416002 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436123238 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.438620012 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.93926683 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.442483996 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.426185952 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.425337654 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.435803843 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.425780985 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.429032777 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.442101812 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.44615231 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.44075446 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.496622377 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.432629814 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.427246741 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.441760078 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.433458435 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.983783481 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.421485334 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.429054463 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.939654082 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.430025291 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.988989797 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.435551526 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.427741514 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.439795952 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.458574781 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.50546939 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.424049606 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.426405062 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.433616516 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.424714109 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.433314556 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.440029312 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.432815661 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.428016213 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441986435 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.459784498 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.435553565 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.428803391 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.43640321 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.446853076 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.43645368 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.440655736 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.430942532 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.423072425 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.438088596 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.432116293 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.432470832 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.430487541 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.432565667 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.43846724 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.937234729 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.444572774 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.424642314 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.423942138 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.425703196 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.441350368 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.941601802 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.430514452 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.449734503 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.474475856 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.429895283 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.505303866 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.433009361 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.444392291 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.43771156 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.431594247 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.425241775 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.507114885 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.959995267 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.444216836 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.430891648 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.428082635 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.446018826 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.430171445 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.426553745 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.514584855 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.433071975 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.444672424 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.549422889 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.439585657 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.459930817 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.428362476 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.434255437 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.459012973 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.44634913 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.460378999 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.4316454 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.447224884 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.446131093 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.427983007 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.440650336 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.441307676 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.433410964 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.436534285 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.424797698 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.460845246 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441638007 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442427599 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.450662705 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.551974505 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.428144281 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.508383234 seconds)
done (took 240.769111023 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.490124653 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.427736911 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.530554946 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.427155831 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.527178907 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.523736032 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.424774509 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.425527942 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.424976813 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.800710973 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.426389038 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.425766578 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.420872747 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.426340884 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.508562274 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.428267669 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.425311406 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.766191911 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.429179516 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.497356637 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.419961046 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.425990828 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.427018235 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.806658143 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.425404254 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.427950218 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.498707992 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.428182069 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.771533656 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.423255312 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.42528437 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.773895269 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.517118582 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.444598653 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.437950934 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.435970291 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.530920736 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.442840001 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.509173613 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.508575613 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.532473196 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.468514162 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.423783897 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.426372135 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.432098912 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.430298836 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.427933435 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.456889162 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.428331196 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.427160413 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.766070472 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.43954768 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.436792412 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.426108897 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.427369199 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.451331868 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.429710788 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.431098834 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.519755902 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.433035258 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.492259181 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.809881062 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.806328688 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.431881326 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.429525984 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.429705019 seconds)
  done (took 154.810726808 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.496576538 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.506715384 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.5465287 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.433066204 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.480938644 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.552656282 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.431510981 seconds)
  done (took 11.809835301 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.438124812 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.432213128 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.48105009 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.481251821 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.430930689 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.579367439 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432444979 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.441071099 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.429228926 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.484447702 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.433496504 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.433109065 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.438294286 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.428327366 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.480947131 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.443018577 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.545984569 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.432271717 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.432170409 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.583955983 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.428223077 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.438781102 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.484683839 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.443192222 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.432649104 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.438866789 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.005972517 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4325699 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.428564904 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.432854246 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.428688438 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.469317445 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.433368218 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.430196591 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.430234662 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.546537517 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.432484958 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.430816002 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.431196831 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.426520371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.433602664 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.431330155 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.432384495 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.430213598 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.433562173 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.456780841 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.433619094 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.432778731 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.434536939 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.43550538 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.483711291 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.434047704 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.432493305 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.431872456 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.489225767 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.44051479 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.434305107 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.430223552 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.432591327 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.431461363 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.586434728 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.481219353 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.434248781 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.481370723 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.434774818 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.43528334 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.433784603 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.431959212 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.489486713 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.432793993 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.483140348 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.432053658 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.585734141 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.457647561 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.435105043 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.437406649 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.43676895 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.434860824 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.434924406 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.43999133 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.430521065 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.434885593 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.439328176 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.431032805 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.433223264 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.536841669 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.542634673 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.431817066 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.446240433 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.440722361 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.43298042 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.487425382 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.435353342 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.432870178 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.484880198 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.549111466 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.48717631 seconds)
  done (took 162.963473904 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.441076405 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.444085304 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.437480778 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.450801597 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.434255509 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.435925035 seconds)
  done (took 10.008524972 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.437806134 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.436000864 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.436646902 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.435702292 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.435086155 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.437186386 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.436859142 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.439703922 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.441738944 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.437404004 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.437570718 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.437631446 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.438127534 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.436711267 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.438195122 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.437284128 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.436037605 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.433511902 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.435762669 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.437900166 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.534072988 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.436382575 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.437598961 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.437728887 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.440918133 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.43611889 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.444782156 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.437564078 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.437423413 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.444516761 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.440572045 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.438681259 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.437018232 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.444350227 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.443151532 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.438511189 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44076101 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.438798731 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.43371577 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.437511341 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.438011291 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.438420398 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.437475143 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.437311549 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.440468017 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.443671991 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.443805921 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.44781186 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.440225353 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.438921784 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.44001692 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.44008282 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.437644307 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.440555912 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.443948355 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.444404678 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.443316562 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.440677162 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.43989575 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.440675769 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.439707415 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.438721524 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.441222152 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.444481233 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.44561517 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.440079349 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.440354263 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.445365232 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.438687941 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.43789576 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.441162929 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.436899836 seconds)
  done (took 106.097772931 seconds)
done (took 447.045902585 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.923936118 seconds)
  done (took 8.292523548 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.636212541 seconds)
  done (took 8.007739827 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.615989838 seconds)
  done (took 22.990656964 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.53725745 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.449484549 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.433637638 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.442163313 seconds)
  done (took 27.233005661 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.477886913 seconds)
  done (took 7.846977133 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.432332814 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.429131932 seconds)
  done (took 14.231285232 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.706169364 seconds)
  done (took 8.074468836 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.068168608 seconds)
  done (took 8.44068069 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.452519285 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.437707248 seconds)
  done (took 14.53216334 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.437252113 seconds)
  done (took 7.805807372 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.596092194 seconds)
  done (took 8.967089615 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.437094011 seconds)
  done (took 7.807252204 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.495263378 seconds)
  done (took 7.864120619 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.689389374 seconds)
  done (took 10.056350923 seconds)
done (took 163.520202986 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.432320497 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.435239491 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.435830046 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.434286957 seconds)
  done (took 27.10514057 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.474156979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.472127773 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.473888576 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.485417827 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.476300395 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.473278871 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.464446438 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.464866422 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.48373944 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.476096372 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.477148116 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.47651804 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.473608884 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.467167745 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.476833316 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.474136169 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.48548475 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.474299051 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.46527075 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.477921973 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.442192361 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.483441223 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.476419461 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.440398544 seconds)
  done (took 36.70543602 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.637437983 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.513492962 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.597790603 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.494118649 seconds)
  done (took 7.611539904 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.494195892 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.49503322 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.508624348 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.547376191 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.571449396 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.50312001 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.46754693 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.463954397 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.451856667 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.498003421 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.567670907 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.507681864 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.595170411 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.439746866 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.6227696 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.441946311 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.441266184 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.492515672 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.545408503 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.577625433 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.443214324 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.4951984 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.500791015 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.509873667 seconds)
  done (took 37.555258511 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.440489615 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.447709437 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.447729717 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.441516978 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.441278674 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.440919839 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.446285396 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.444126807 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.462685806 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.442044055 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.441275101 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.442759291 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.441510763 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.443022515 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.439439233 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.454690532 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.456406141 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.443958563 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.443829759 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.450087724 seconds)
  done (took 30.284937689 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.436279972 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.33044285 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.787380493 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.691192131 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.435992687 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.436909592 seconds)
  done (took 29.491063298 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.515596576 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.656885124 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.445462913 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.829900653 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.910729525 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.445133359 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.444260392 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.695798068 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.021724715 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.019491644 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.501364928 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.513479715 seconds)
  done (took 21.374986986 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.442175343 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.439399218 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.441891756 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.4516229 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.502367814 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.445005703 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.449878246 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.436994603 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.504576056 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.504676151 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.444896868 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.502619504 seconds)
  done (took 38.94081877 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527326841 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.487569305 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.420629498 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393433536 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822411168 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650445652 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347449733 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.906182185 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.440726612 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713466683 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436318207 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526979258 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.694579459 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438269482 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.441478184 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.497344266 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667715043 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971049161 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441085975 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.647431241 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466736336 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449602175 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.801528051 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.466648922 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650303758 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.571217778 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.699922302 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438635265 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73386884 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45410701 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449288615 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43877356 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713027535 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124816281 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534846147 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449945967 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.387907973 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.150696685 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.441951968 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.658155974 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454191311 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440569128 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451817367 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44137464 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.37360103 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440139037 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92411718 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.443892136 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.151660339 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43995421 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45357431 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535686428 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.444606303 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.257483899 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611592711 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440476475 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.437226802 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447518575 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01451604 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.086664537 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443160061 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.378195165 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.997417809 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.653726068 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108494775 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.54305163 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.443331759 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.445443118 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375623574 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.642067888 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460466541 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579051798 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.461220327 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.10386903 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199595423 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.457072998 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.371010886 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023295296 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442578781 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.378439289 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671903391 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441864044 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383045332 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.404480799 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.375194512 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186700712 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451644628 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.8957747 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451793475 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.911778859 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.451474331 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460348715 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465263498 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66649295 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.324656614 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4401889 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.44801487 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560912908 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46311495 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.920810652 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375668278 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.4472812 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697401812 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.655549118 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44907187 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.969014069 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673725209 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444551053 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.459622409 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.442100502 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.453056504 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.0666244 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453137084 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069624116 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457496761 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443436484 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221857772 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455441299 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.545351321 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.454037417 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702168434 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.252093512 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444116391 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524697509 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445335344 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.445537913 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.672389831 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963030733 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.443930299 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.447279776 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456027676 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.454536174 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.444801338 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405502957 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.44388553 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445667189 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.445158489 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.671050074 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454518038 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721493498 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380494903 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582044027 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.542846774 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.665203933 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.683698139 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.441383826 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704004555 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453101352 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.453219086 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455020144 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463989554 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541869205 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466853026 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.444892826 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.70692175 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.449433268 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.447253304 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.684409121 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447214483 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450995526 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.452011681 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.390875369 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073753927 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414687375 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445984503 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341405603 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.460059071 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508334863 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.449883821 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.45556391 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.345320416 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.503607418 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.447174688 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.447103206 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669200296 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456261452 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.666704658 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523061533 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.674925367 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07557835 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459693229 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.380908599 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.156616586 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.137965598 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445990607 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.382582492 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445880764 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45600954 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457860992 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.181160795 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07833431 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445578816 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.602156802 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.452080006 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457544572 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.45207803 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447302803 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.330783664 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07556974 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45918915 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.460427015 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591296865 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.461818473 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.380170545 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.452307225 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.452342047 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.446950353 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.448225577 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481718355 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.610162603 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957888721 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706110905 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.35551504 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457235094 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.709467751 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.477163436 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.448138834 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453206444 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450199862 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.451360969 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470585235 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.458461673 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.685798462 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114569307 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015847895 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227845434 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02558612 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501355559 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.463722135 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451152384 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923399587 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381471412 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.007951567 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649808236 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927401896 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405247327 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681242889 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.683603398 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235007027 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456795921 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681253207 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497741337 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.460911183 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459532598 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.661111653 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481358378 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.462297945 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.378289642 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.749823812 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733499355 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457245303 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525483167 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928949987 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448817758 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.451065422 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.450042188 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.825842107 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639458494 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.163732339 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630732498 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451756438 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.459658382 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955865516 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451815596 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.681834516 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120185805 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.450418476 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.680603957 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390399148 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.462555651 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.460631286 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.452354317 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.815676529 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.449509349 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.705026127 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4587137 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386200544 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462591863 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031669816 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.308268814 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.458091374 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452289366 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231192259 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453309292 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74674167 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.457332242 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.30111287 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452920929 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.385919058 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385224035 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.14548069 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.455679186 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42269083 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983648879 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.9505597 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602886271 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.480468444 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302916725 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.708518772 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.466812856 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085091821 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675956619 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.462560823 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47206828 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.554293311 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466594026 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.438662866 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.453704813 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.690424528 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403765656 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6765931 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.42707959 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.364351067 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.451157072 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.662425107 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.45401839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.468904315 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711206053 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.164394689 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.463361899 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221160593 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475757194 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.462006953 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37524373 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.010008914 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459459696 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534521725 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465973644 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.466423995 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.465477551 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643062941 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456562926 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455379188 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.467875587 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547554569 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117483513 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.305760747 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.456707968 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091258425 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235181465 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09189117 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464273743 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.455629536 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462089473 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390184536 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602051048 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.685582907 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730214058 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57767448 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.08723951 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475437963 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456721824 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460044379 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671155382 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730991056 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.355647344 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457254666 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471035964 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.45647305 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465992388 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.668781771 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9912813 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053576442 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582092951 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.455588925 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.943479493 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729725135 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45596142 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456627142 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051563564 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.475371536 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.840218178 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.462812127 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467441717 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601816837 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46572053 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14086268 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.467308995 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.614588103 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.230773509 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.646912999 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.713962639 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.979571249 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.467133302 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09356474 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.215866495 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720848308 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524525375 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46638659 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.579056278 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603565167 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.460739868 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.457897582 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458726697 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304419903 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.168516109 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.467837843 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116541655 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720662285 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.454178117 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.460580918 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478611135 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.46657335 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.683120978 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209768554 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.682651369 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466631885 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462634246 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.275870921 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103593126 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468535758 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394051968 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.461251051 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717292725 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.694952051 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475855868 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.911439912 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.1686791 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060497997 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.435314445 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479645745 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467154825 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.223130245 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100029115 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.316600899 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9919199 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.019756608 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461452129 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735510188 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.466613471 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.461683635 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73627576 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.464287534 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.460149681 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.472494043 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.11132583 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257357124 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.472726235 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.714920106 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.397975257 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.805667057 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237703546 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392987143 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459487315 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.660765341 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.461789569 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581497459 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470663019 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.466960935 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466784341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.192214513 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739919342 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.46348215 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.453681109 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.449102152 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.461370996 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466988079 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747868024 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461585021 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.125087156 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.81437771 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.718115687 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.471109852 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.447633862 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.465995721 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462840337 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457889303 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.668469535 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.178790691 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056018101 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.472685369 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.472845604 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.464008293 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.679585492 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673919935 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.47503657 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471209777 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468434827 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47927027 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.367752249 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.977467769 seconds)
  done (took 1660.579707863 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.517490875 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.486418839 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.481730103 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.478349491 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.485732026 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.484204523 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.528958303 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.48711812 seconds)
  done (took 53.348512214 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.461517628 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.715166249 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.495688266 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.47656616 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.473787598 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.464893424 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.937600772 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.480197035 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.473174935 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.472958182 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.472681998 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.460755058 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.133051519 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.470723508 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.475530868 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.449097514 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.470132763 seconds)
  done (took 67.787601897 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.465281382 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.669733147 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.48522111 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.464722908 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.820056861 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.477119056 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.702202887 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.492321629 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.469643239 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.620658874 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.128923682 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.472801863 seconds)
  done (took 81.668441649 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.472735927 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.470857158 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.470248366 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.471583068 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.471333867 seconds)
  done (took 8.757028298 seconds)
done (took 2102.582150606 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.716246883 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.226748136 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.144874713 seconds)
  done (took 5.771149909 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.61173902 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.666776339 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.854526921 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.815151287 seconds)
  done (took 8.349211808 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.745694919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.838508805 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.655482162 seconds)
  done (took 6.641240404 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.94809564 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.477134186 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.59025617 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.463471834 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.464840799 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.464476258 seconds)
  done (took 20.794115058 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.470727923 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.473703594 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.472489451 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.472971501 seconds)
  done (took 7.292466232 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.452408935 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.220367707 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.449782527 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.464002611 seconds)
  done (took 18.988234642 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.216013018 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.230474723 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.212348439 seconds)
  done (took 8.060430278 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.482819503 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.314823023 seconds)
  done (took 10.198711724 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.776603563 seconds)
  done (took 3.177630023 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.605195801 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.740847925 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.635394726 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.503490794 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.649222801 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.475366074 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.21637116 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.766146424 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.494158068 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.78026022 seconds)
  done (took 30.270167704 seconds)
done (took 133.676120486 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.403240381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.489857448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.674328403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.372720444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.704022653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.67273824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.779570948 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.34055892 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.883001096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.869228994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.371685321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.709290499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.947395385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.493976627 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.952310168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.493662918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.722763455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.447686686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.064715913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.295548071 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.77438594 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.011105549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.203644989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.036368735 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.701972442 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.623257301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.593531869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.49080237 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.244410508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.620798733 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.622575297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.472857987 seconds)
  done (took 196.48801092 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.46959088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.466425624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.468116873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.470857886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.467199847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.465926559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.46919622 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.467365751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.468310151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.483107187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.46839389 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.494993631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.468454547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.482027878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.467256073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.468253249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.488129767 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.480569799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.467192432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.468342159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.484704142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.467082938 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.468034056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.47958887 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.470297969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.470279996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.467926843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.468190729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.467174729 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.468936844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.470036777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.468458859 seconds)
  done (took 208.505044997 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.482032998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.467191015 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.468403791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.47921442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.466982376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.469873151 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.471783801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.480958509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.473458709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.473583778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.470236017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.470437427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.485182002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.482484938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.469445766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.470064457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.479164997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.468875798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.467323952 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.496943253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.472462576 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.475273332 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.467645757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.485012562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.470636967 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.472293042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.468930891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.495386297 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.474709305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.468884367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.478667846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.471668254 seconds)
  done (took 208.602338927 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.668614993 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.479857201 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.479224385 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.416867529 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.478792555 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.478080504 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.480355586 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.671080798 seconds)
  done (took 15.562314573 seconds)
done (took 630.561177661 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.87261613 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.570744413 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.678528415 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.500647606 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.320383174 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.500216858 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.500803432 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.680208221 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.434429427 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.68341937 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.776762054 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.495302699 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.90785157 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.496791322 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.766976685 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.601943912 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.369913674 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.479976702 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.831379112 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.072981441 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.756821611 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.009449828 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.679120314 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.424400827 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.90920071 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.002782421 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.206792476 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.386609726 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.499827767 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.828019528 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.208366667 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.454082604 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.561226166 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.543829736 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.597169001 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.579055436 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.442469044 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.539683755 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.687480095 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.762443002 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.065672318 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.239444965 seconds)
  done (took 98.333354731 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.471743591 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.473248275 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.469622198 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.472080871 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.471901432 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.47241756 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.470098318 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.471803257 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.471121135 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.470238491 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.470309259 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.4698872 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.471954889 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.470185665 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.471597685 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.470246315 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.472474088 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.472416134 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.473174218 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.471592444 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.471388654 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.470878071 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.472974895 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.472000454 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.471053154 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.470186203 seconds)
  done (took 39.667625975 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.483586469 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.73727567 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.917441186 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.488724699 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.483027065 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.488528963 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.565239553 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.485084654 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.487593405 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.488046577 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.643251008 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.487377586 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.519586039 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.922736645 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.487879453 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.484575864 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.485785011 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.484076959 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.740825569 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.490737325 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.569448554 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.487640545 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.566767233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.494639841 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.486701592 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.48458552 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.489209095 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.984740202 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.484970222 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.642271117 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.313345071 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.565762497 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.941495017 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.932260264 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.319145383 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.488176136 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.486776062 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.648766517 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.488166044 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.486537303 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.568801944 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.487419963 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.930007862 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.126136625 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.498472263 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.488938588 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.005584925 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.643138758 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.743145466 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.492662343 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952179796 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.489976081 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.489354431 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.487915844 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.7463027 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.491830227 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.48595816 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.027068513 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.490514195 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.568697073 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.490685074 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.487826314 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.754365514 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.488055101 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.739740286 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.489294487 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.495823568 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.487934971 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.935438806 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.490679282 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.146636388 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.500860424 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.48888202 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.6462485 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.742185867 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045405883 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.492072873 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.755407201 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.952842735 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.5698769 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.494001374 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.977450943 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.573507115 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.49380505 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.489467584 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.491299544 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.489894819 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.531131431 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.567736722 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.081005175 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.136531122 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.040265079 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.569315841 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.499814752 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.488559893 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.028549384 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.487969328 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.488938249 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.918190184 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.141582175 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.501241466 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.496939933 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.12737823 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.505312288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.571970437 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.495175148 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.932576143 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.487652353 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.536081541 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.488636515 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.496121598 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.493071941 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.571124113 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.490710371 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.500734538 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.114784137 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.664501964 seconds)
  done (took 194.025770652 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.499469268 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.479238252 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.486195726 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.499961693 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.484466782 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.488088977 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.482967674 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.484430576 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.489323556 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.48201704 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.482465992 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.482705926 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.483703639 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.500378369 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.49055246 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.491457404 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.098586629 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.486363017 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.486199199 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.496751286 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.294753846 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.484255365 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.501845742 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.481590795 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.484301168 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.485878427 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.496847526 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.483144078 seconds)
  done (took 156.506174136 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.492812009 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.074283041 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.490621555 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.629461063 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.509222168 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.488397524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.630490054 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.551250158 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.494703249 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.490532868 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.488118854 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.805341796 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.491944937 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.025573234 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.689442781 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.635332752 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.026392497 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.491365088 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.488462459 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.491368184 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.627796882 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.498210999 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.806960094 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.075847981 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.489645958 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.078467665 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.478010835 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.493118885 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.491029895 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.08087372 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.489922383 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.808585946 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.57099592 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.55670163 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.081836764 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.028376821 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.026999686 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.644001955 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.494206617 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.490363319 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.490089365 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.481522674 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.080723496 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.491420485 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.49413353 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.074686545 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.505350442 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.494088079 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.501673808 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.490764899 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.555868148 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.556733255 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.809410309 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.08549789 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.571360655 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.513005451 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.635027609 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.896181544 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.49553384 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.030743731 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.478095071 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.083561657 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.494314521 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.483284836 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.494902897 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.497832203 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.650334804 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.63355473 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.034758682 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.492709449 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.031865139 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.649668335 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.491231766 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.492565988 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.496196267 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.085075394 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.027983636 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.648538312 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.631977121 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.695217702 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.482119514 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.494915251 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.484941498 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.577106924 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.492539841 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.116979063 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.034533464 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.49353089 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.49661908 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.495968911 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.496600273 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.681259962 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.092875608 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.575169675 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.027717579 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.835468187 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.824909039 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.497764279 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.557512005 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.494131569 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.8307657 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.496048425 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.555197262 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.966381972 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.825056638 seconds)
  done (took 176.99575523 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.747469732 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.720682109 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.593715051 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.612387233 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.067162469 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.083427557 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.737323968 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.618669859 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.608215603 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.74365713 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.716746831 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.592911416 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.688322489 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.573276949 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.23247185 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.564224385 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.593051736 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.628940388 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.611539606 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.534303213 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.140391115 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.79707174 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.671882328 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.668907436 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.595614814 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.267172781 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.053023094 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.005143891 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.664489045 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.814164712 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.028223481 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.6440567 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.473567228 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.180765275 seconds)
  done (took 70.698153371 seconds)
done (took 737.63289994 seconds)
SAVING RESULT...
DONE!
