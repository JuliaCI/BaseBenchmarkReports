cset: moving following pidspec: 4179
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.636881572 seconds)
loading group "shootout"... done (took 1.219020775 seconds)
loading group "string"... done (took 0.429147466 seconds)
loading group "linalg"... done (took 7.988296716 seconds)
loading group "parallel"... done (took 0.155807705 seconds)
loading group "find"... done (took 1.323848884 seconds)
loading group "tuple"... done (took 2.026679618 seconds)
loading group "union"... done (took 12.724624936 seconds)
loading group "dates"... done (took 1.364504699 seconds)
loading group "micro"... done (took 0.203412438 seconds)
loading group "simd"... done (took 4.420642909 seconds)
loading group "io"... done (took 1.026716871 seconds)
loading group "random"... done (took 8.835878321 seconds)
loading group "problem"... done (took 1.553575971 seconds)
loading group "array"... done (took 19.677601767 seconds)
loading group "misc"... done (took 1.51591538 seconds)
loading group "scalar"... done (took 40.246746074 seconds)
loading group "sort"... done (took 3.075155281 seconds)
loading group "sparse"... done (took 11.992107747 seconds)
loading group "collection"... done (took 17.455416333 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.499347527 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124265808 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.129030208 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118868424 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148634088 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122123653 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126542609 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085057411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.916756114 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141669717 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115030621 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419560116 seconds)
done (took 5.284469745 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.166396411 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088716752 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079790168 seconds)
  done (took 1.290559569 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064364543 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131737463 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065098862 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0656598 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066148188 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064836483 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065265133 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065029599 seconds)
  done (took 1.646960135 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069779178 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067528954 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064801634 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067161463 seconds)
  done (took 1.395222739 seconds)
done (took 5.70493858 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.239703709 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101809389 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.285728187 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.391553573 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.462407625 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.09212633 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073814342 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069117841 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127334679 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317248789 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10584642 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.185411221 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091277645 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.173904944 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.989603443 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.120556878 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084915695 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121158668 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090860364 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132951342 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.392774026 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078024232 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071749706 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069741566 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067182874 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646715844 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658610172 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13163044 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082675587 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099315159 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116710891 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.639597572 seconds)
  done (took 10.469849597 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092110012 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.092214466 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068540862 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124163564 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091294538 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069234298 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073808641 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066828749 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088818365 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125145694 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089821174 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099070142 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065734731 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068156829 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074306995 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197214362 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078561526 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08032996 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067057133 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079793877 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106346896 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078014517 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077979717 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078460927 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129300395 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170164689 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100801958 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097128972 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065422265 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080034432 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118933966 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126232428 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064249338 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064872555 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120789888 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094842184 seconds)
  done (took 4.543425978 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.963186074 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092920238 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.10298891 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.635726038 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.0654259 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.152652687 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241999846 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072271411 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.332447721 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.147008157 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139096833 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084046375 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147381233 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.116807818 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069002468 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.207135136 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115382649 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.500525977 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067523827 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066138303 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064934984 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.067819113 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067049943 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06208527 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068601205 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093738495 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086840495 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.161804807 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.927225947 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.244627368 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066547843 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.15983988 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085686575 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.356883873 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.069506199 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082518484 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.4129681 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123698498 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064809743 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064033106 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166594135 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.116890797 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064539479 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.117459993 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077706698 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06868461 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068605189 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067692541 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071337268 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078077887 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101224862 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067564717 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064857833 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16537983 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065632848 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063446961 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066080148 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066528085 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149310345 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064279874 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.141070077 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063801177 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.0677899 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.100079152 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067730316 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.092701749 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.100970021 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.338114145 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.036236451 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066849258 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.268099397 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074596137 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065313388 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07036221 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065352506 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067470405 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066472608 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073261096 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069487964 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063886251 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067278787 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108393251 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065346076 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069332293 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066377182 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071096696 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096698057 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063184056 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.484059149 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097230882 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066302594 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076450101 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104849567 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065313316 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072003712 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06667809 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066516671 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065671325 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.177526964 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069679573 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095677313 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069089768 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112414478 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.053767355 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067668883 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066878706 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071226324 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069671225 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068525199 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066341089 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069332061 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067803033 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063828922 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.11077175 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066775686 seconds)
  done (took 21.882353679 seconds)
done (took 38.984319958 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.258355097 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080826746 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080954297 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081040991 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080336317 seconds)
  done (took 1.801963881 seconds)
done (took 3.011398422 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108346005 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063590218 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.0997854 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098702758 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063190348 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063398288 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.09721599 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06316417 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097621999 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098980549 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.100876409 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099868375 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063590434 seconds)
  done (took 2.338022871 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067888985 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081117562 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082441033 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06127038 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071205874 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08121409 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061159458 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080043992 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.090072628 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083218651 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080225787 seconds)
  done (took 2.046203981 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067515651 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080905387 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08243904 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061111027 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072190797 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080760195 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061180583 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080558051 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083798449 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08047543 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080418891 seconds)
  done (took 2.029294517 seconds)
done (took 7.613256005 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065202346 seconds)
  done (took 1.246593786 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.526696007 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.554778484 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.068406104 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.087780389 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190856141 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.097358396 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.222261762 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072920447 seconds)
  done (took 8.187154103 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095414607 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072205137 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067345249 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069153639 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068180565 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068838455 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068142849 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068690871 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067538407 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066933318 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067126616 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067671479 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066945317 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067408751 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067894737 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068067503 seconds)
  done (took 2.407109511 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098051515 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096492741 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072075873 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072903637 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070791593 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069951202 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072733299 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072154635 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068907038 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070644541 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072991123 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071262202 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07080043 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062484812 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072680483 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07360305 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069009303 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072106074 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073210657 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073868906 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073695279 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062314832 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071693754 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072079118 seconds)
  done (took 3.06995245 seconds)
done (took 16.109158943 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113104351 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076108978 seconds)
  done (took 1.382764899 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068154336 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070219837 seconds)
  done (took 1.345719632 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074550724 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060428213 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081602338 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071968886 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060995941 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060481828 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079912546 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060995607 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060919407 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060945198 seconds)
  done (took 1.880934228 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06137741 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070812448 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068350803 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.069477607 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067731572 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062257499 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065469202 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062148646 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069719942 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061123035 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066165033 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081518754 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065578596 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083139741 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065120721 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066240796 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068828326 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065012402 seconds)
  done (took 2.429011646 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060228101 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061446229 seconds)
  done (took 1.340556322 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064619016 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062188327 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065644519 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064373031 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061654396 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061287973 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061677195 seconds)
  done (took 1.652612289 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410016528 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120003422 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338989576 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068183278 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077301501 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251339651 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062805205 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067346928 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067869099 seconds)
  done (took 2.719242357 seconds)
done (took 13.972127367 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078587719 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083625924 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.089480947 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417226082 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091360871 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065935277 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111835515 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177472701 seconds)
done (took 2.349123057 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216562256 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.313945186 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.788712133 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.180931346 seconds)
  done (took 3.507264407 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33591851 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.078352591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07794248 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066978938 seconds)
  done (took 1.791529179 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063254797 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07001095 seconds)
  done (took 1.360858146 seconds)
done (took 8.109706222 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062182328 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063459568 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06348602 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062276189 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063503209 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063147577 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090249325 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062361062 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062763661 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.062626863 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.062605531 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062982231 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063001135 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0629448 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063310009 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062346234 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062138051 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062781073 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062722038 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063098966 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062667963 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062486913 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062924716 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062873892 seconds)
  done (took 2.79128865 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078126054 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065423576 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066898935 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066581725 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066910637 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066848632 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066904901 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064511198 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066617709 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06446423 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066529344 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06678789 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064228931 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066820687 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064472594 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067047674 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066403781 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065018157 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064882637 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067114208 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066055765 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065015654 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067012159 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066396448 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066909523 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066536222 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064977603 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065009285 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066553293 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067245071 seconds)
  done (took 3.233684112 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063981148 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059578798 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060710932 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068784595 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060217983 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060257354 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060298832 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059199834 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059659745 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061508937 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059861812 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059223922 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060169414 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059517578 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059187129 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060018061 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063658092 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077375699 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059390446 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059352249 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063228525 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059440252 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059619574 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059554815 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059961664 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059391201 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059295399 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059681264 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059172453 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060190704 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059339057 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063351007 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.07359279 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059328665 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06835315 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063525012 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059481462 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062826747 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.06080896 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059050702 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059087149 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058779546 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058971749 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05920114 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068736078 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059599679 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06077493 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060105474 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059734068 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059112433 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059615517 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061285272 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064417803 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060650371 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059033116 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060654474 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058889371 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059651296 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058932948 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058991366 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059293897 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062391846 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061108874 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060249915 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077306356 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061039821 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068243197 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059285487 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060091624 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062649266 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060326611 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075119948 seconds)
  done (took 5.672304975 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085321449 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08808698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065129602 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065376221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060678541 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059902928 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067965961 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059961567 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064274514 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079450295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059861307 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064215486 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064229113 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063487479 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060196705 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064442986 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068471325 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06022505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059867958 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063856286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060528247 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067468253 seconds)
  done (took 2.707591241 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139199752 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066106478 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103733028 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076660992 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068777455 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076062868 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065893908 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066071484 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065771009 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066724136 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066403391 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065646089 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068528106 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066371916 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066209985 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066416476 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066005334 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066279555 seconds)
  done (took 2.571595817 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075658016 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065429804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088219361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06544518 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065286124 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065350186 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069660145 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070339543 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06497523 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065267512 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070367566 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065156188 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064599409 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06516268 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065049174 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065394949 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06486193 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06570859 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070024364 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069440217 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069660938 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070365323 seconds)
  done (took 2.747171145 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073571274 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064623789 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078292828 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066333304 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060611082 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060481339 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065487997 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064550356 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0651892 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063663426 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064339015 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060032442 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066050641 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064246579 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066339168 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064767785 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06422477 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064937551 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063880411 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059940924 seconds)
  done (took 2.546498893 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084653771 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062708817 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063056889 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081964065 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063359728 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062488561 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081131923 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063023357 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062975908 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084110541 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062800204 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062548997 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081619414 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081491537 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06297161 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081495475 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081590212 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081192264 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06251108 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062583701 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084186534 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062607797 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081615951 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062707131 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062902945 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062533975 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063121096 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082216766 seconds)
  done (took 3.238414178 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062233626 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062718146 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063334225 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062719504 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063121695 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063127325 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063303015 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063134603 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062889747 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063527706 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06271771 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062705668 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063334912 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062579102 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062616715 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06311209 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062175628 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063170626 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062761151 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062724872 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062671872 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062647576 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062743866 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063206396 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062776899 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063050764 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062879177 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063761467 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062632601 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062960937 seconds)
  done (took 3.138501961 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07264302 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071700444 seconds)
  done (took 1.396566628 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060642576 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076295295 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059652529 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070262689 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069587325 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063152212 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069591662 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069027213 seconds)
  done (took 1.784638169 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066195314 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.090364967 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.06192141 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062409206 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065861458 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119840881 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.076595319 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072350371 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074288362 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063658831 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062077036 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.074110444 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063975309 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073931875 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063446819 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069270287 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067751651 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072950581 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073354549 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060404033 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07278515 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062395685 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060466983 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062751291 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061238303 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067978696 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076624467 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072289051 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069402684 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05891561 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079553492 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060482744 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061309475 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069485927 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.065594439 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060232086 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095696677 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060529067 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06673051 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060597541 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07234885 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08014008 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074040932 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078604654 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062483431 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06273163 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059978994 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062350491 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063479698 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0697487 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060505385 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067463613 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059588962 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062202117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070911069 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060722979 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066216523 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06954764 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072963015 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070098291 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072714581 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075172892 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068667224 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069517198 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062138702 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079466149 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062798979 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072446788 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074222531 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061753924 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074002906 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059788119 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059167064 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059980181 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09289737 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062225827 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061190011 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060498139 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060192886 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.06186222 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069845554 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066485283 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067217659 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06436506 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076181624 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069585836 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060438448 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068099088 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078212097 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063961384 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060845979 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077030452 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063342226 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060306515 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077246801 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069559 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062422983 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061146248 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063542864 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074039866 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061704932 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058857491 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067801625 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061955877 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062838503 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065128111 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066928842 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060039506 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069244515 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065219726 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061747211 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058647654 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063931082 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060992556 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058411669 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068439964 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059748451 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073559571 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065089619 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072192417 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072898546 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069451226 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07490909 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059058604 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.05790829 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076162761 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200277289 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.06335976 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080055256 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062024993 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07204037 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061474631 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.063158148 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070249696 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06030699 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062456716 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060741575 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067146791 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.06243892 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063286806 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065086913 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068618706 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072764666 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.06180747 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069058125 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060915806 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075605826 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070603997 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064638968 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065067237 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062233106 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072439968 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067140228 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069205038 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061025716 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061545375 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060559972 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070274982 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069967966 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062809451 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068737216 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064892923 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061531109 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060980539 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062301243 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06392056 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065419554 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061640975 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068204313 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06935359 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075122066 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069766189 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069380877 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0593785 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060349993 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.065457622 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060141741 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064389865 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069654794 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075536372 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072042729 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080498519 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060954227 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06941661 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062224115 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077171081 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072580673 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061655891 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066257436 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059242671 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062325789 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069146263 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071859921 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074499242 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075111078 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064737419 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064823527 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060376497 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074934752 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060983054 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068517045 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069369725 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065997023 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060799644 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062778734 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069207247 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064787688 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060674479 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.07531006 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067377999 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059914275 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073880365 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061279656 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071075427 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060055549 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06345776 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065352934 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062688838 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069095289 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074935157 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059235215 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060801035 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075605859 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062526039 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062395695 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067253478 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074350854 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064543771 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067488639 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070194817 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069232611 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064237859 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069128779 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060979054 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068898886 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063688616 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071323994 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059822143 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077734861 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059083207 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074728492 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060590139 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070629426 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061093454 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068776747 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060915706 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076676742 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061870914 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060445868 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070517043 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058756027 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068419607 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058712481 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063979547 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065222573 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067680428 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06135045 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.204237645 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06398693 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070213953 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066546895 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06966125 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.070426969 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065608502 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060751676 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068990609 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072070866 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068228495 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062491201 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062892598 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061430588 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069789927 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062933548 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062394021 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068811479 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065356108 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066379572 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062742408 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063030496 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063190874 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068875227 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069918889 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078812122 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069240521 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067661877 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069698102 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06004747 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07581665 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060581466 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067561961 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059580232 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067720398 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070198942 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061223621 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080133604 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063015009 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068315842 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074075281 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068871746 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064082583 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078762507 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.065025112 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068777499 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068736267 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065507401 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067357032 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06292857 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068278513 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069622374 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070844502 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06193599 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067010929 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068615687 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062246542 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069495722 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06268452 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068073484 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062617474 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05913568 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064515277 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072064549 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065061808 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065451121 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060902131 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059940998 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061036943 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068380547 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064889046 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068944416 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075326934 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059731562 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061515462 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060604176 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064085202 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078020718 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069731289 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067818186 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065118818 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062992059 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062288726 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062884473 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061080795 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064397777 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059773358 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060232819 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070988663 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062466115 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064701322 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061073814 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06160258 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069609463 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066077074 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060925579 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066772602 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060167891 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065171906 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059502477 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062108603 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064492765 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.05961941 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063876053 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070493538 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076280996 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066460706 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068498753 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061536005 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067278062 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075003437 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068370409 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060976764 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06877547 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059225351 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077794338 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068675747 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06747453 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068911268 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060978644 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076401148 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063935986 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069588845 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074812117 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061006765 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066569701 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059019316 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074341616 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063553386 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059160992 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066951192 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066348046 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066023341 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.212738837 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062600934 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069987357 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068644594 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064915303 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063304194 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.063415037 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069391662 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076528589 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062146485 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065869209 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068469465 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068925527 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065258993 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072993354 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068868026 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062070971 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06313614 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063968743 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062044278 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072454231 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060976281 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064980878 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064841593 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060232693 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067368817 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076550061 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069554108 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069745447 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060223935 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059895028 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078798812 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064010339 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.065090787 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068906243 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069568058 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072874842 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069945853 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077500456 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061771917 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066291809 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073387244 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062147453 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060308503 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064237604 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062486608 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069772167 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070411697 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.0671948 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06268137 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066755644 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073020447 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061976559 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064481118 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066282667 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060979818 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070321468 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068317248 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068266449 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062414517 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060353463 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063308725 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068890291 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067755989 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068748631 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061412079 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068138795 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074290888 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067724768 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064423198 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060332099 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064893105 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068853275 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065993717 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060335024 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064937575 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064038238 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068785984 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069720398 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064799557 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060184058 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077493267 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068332553 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.06912888 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062738639 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062790668 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061227027 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060061809 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071848117 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060623069 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062438216 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065274942 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062500363 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077820744 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068201217 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075960796 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061467819 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065058685 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06065103 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069582028 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064835228 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061076159 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070568951 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060308465 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07567968 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072287162 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066763085 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060360735 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06479429 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068173656 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077388861 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070030503 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068585677 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063982735 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069461454 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061945392 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070433656 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059752136 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058571017 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069723866 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067899381 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072002464 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059364623 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069329443 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061130072 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066780995 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066799936 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061026022 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061330918 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060994653 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067878101 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.201882281 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070743786 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066133644 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078410653 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062492397 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072524098 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069600789 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071579549 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074398007 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07312137 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.0689392 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061581276 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067654176 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069087581 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062174475 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064944384 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065331043 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082809591 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062618418 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062393186 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074954307 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068400325 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061411359 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068496348 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065221197 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070362735 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062021066 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070789883 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065027557 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062038235 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064549055 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064967918 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059237857 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060976678 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061237511 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07089489 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065387996 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061283649 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079625835 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062708455 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069503544 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072185782 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067353511 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062656953 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059454192 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061908656 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072990242 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075776898 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063915358 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068113468 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062343846 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069571676 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.05935202 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068834328 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068304276 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086588793 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06027306 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060618969 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074357075 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07547556 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064621995 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070137886 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068928591 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062512767 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082225638 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070613123 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061663367 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070824164 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063218291 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059670734 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059828262 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062289244 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0721639 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060240989 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063401841 seconds)
  done (took 41.587659143 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098160836 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061692142 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060962641 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060484198 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072202896 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061919728 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060069067 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061843062 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061826427 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063466921 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060475236 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060377016 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072415162 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075398324 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0717479 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064805368 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060104583 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062079717 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060562984 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061514951 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071461096 seconds)
  done (took 2.747407856 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067472072 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076462444 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072838712 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07818091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06938543 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065213236 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072760848 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06518582 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073549725 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071139767 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07357216 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065283082 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070549955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070622348 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070787568 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065568208 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073205385 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069244174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065432055 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072912059 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065679817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072551502 seconds)
  done (took 2.888768763 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.060592369 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060971121 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068748828 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060292664 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059675561 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064119315 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059951801 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063749126 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06410558 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064335846 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068815833 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060745509 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059653007 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065150736 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059601995 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060767983 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103759769 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.06125148 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060924209 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059737136 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063052504 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068791279 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059850427 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060278946 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066754529 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064020542 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059756195 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063072666 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.06085737 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064017347 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061051781 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060019335 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068137758 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067895374 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063878798 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063991731 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061730146 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061046568 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060136263 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059694834 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067985402 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061530367 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060154181 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061344031 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06864921 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060052395 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059708539 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068757947 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060038962 seconds)
  done (took 4.45666483 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070908503 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111816515 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066233786 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091514974 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074577703 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067429264 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066302776 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093024345 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061386548 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061797598 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075660919 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075509977 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063737395 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065294596 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067986024 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063351317 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06406578 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062490511 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066844488 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062716182 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06660794 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067554849 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07421486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074603287 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065017774 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06247606 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06303194 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065265386 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074489535 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067475427 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065303738 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065705741 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074843068 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068695265 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062718302 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0634951 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075318609 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064076267 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063195488 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061647056 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062772568 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064978665 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067840378 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.0759048 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064034907 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068444342 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063657572 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061126653 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075345877 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063420675 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068317557 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075973519 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064878841 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064152062 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065250199 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074502728 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063406219 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062076905 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064294471 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074482737 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061856406 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064310326 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076155011 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062998934 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067419959 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075691628 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068685282 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064598583 seconds)
  done (took 6.149743117 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069558524 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093470448 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072355242 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07253013 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071414103 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07192677 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071428159 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071291495 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071641069 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07244886 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071793254 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111565417 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06706409 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076628914 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071205008 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071988211 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071792157 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071326668 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071422683 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071022938 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071119597 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072312272 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071195375 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072204154 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073936555 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067060263 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071007854 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07113942 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072214999 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071344951 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074595368 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071261978 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071540861 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073190385 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074315362 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070968595 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060873849 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071100226 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071681287 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071413119 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067227707 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071785501 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071322322 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067102074 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07169634 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071051934 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072570246 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074670082 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07986141 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072064581 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072278616 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072026987 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072023695 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071608263 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071942142 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.080248763 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072506299 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072208631 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072067643 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072432912 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072518734 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080073011 seconds)
  done (took 5.897645339 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074106274 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068146809 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080771283 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060445716 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060304533 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070823904 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060474138 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060350979 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071154838 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068650176 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070315611 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069974614 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072755285 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070239127 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070117564 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072649368 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070119565 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070192159 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068282776 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070466651 seconds)
  done (took 2.75370559 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071955849 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078088594 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066424057 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070484091 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06642277 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071563582 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065175693 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066766906 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066847356 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066625975 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071869896 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073830995 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066283821 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070561375 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071482123 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069997271 seconds)
  done (took 2.474119652 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066201351 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069275983 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068953419 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06168185 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065150203 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061323886 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061230691 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06036139 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061042527 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074502415 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061178678 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073349159 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061852164 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060430118 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060798915 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068004651 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061492935 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061336515 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061541356 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067024775 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068607837 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062650896 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065090539 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061461568 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066550179 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068894199 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063362385 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064897358 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061532917 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061726882 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066829759 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068311756 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061559787 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062059312 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060323059 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061688026 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061397321 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061921142 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067550723 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061646191 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060084298 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066413747 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061529708 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062566874 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060990951 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062361623 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060622401 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06759852 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061806778 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066666943 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061538497 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063806545 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062379093 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069108665 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063949937 seconds)
  done (took 4.876782565 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074210501 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065968577 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060204385 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060104117 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065981635 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066173917 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065814055 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065820143 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065858046 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060196297 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066084749 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064868176 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0658779 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065544261 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066250921 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065282776 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06037693 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065807725 seconds)
  done (took 2.544898611 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070678954 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065705572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070497359 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065647818 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065266683 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064860715 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060499152 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060733291 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06051116 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065582711 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065190411 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064563495 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060736194 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064508998 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065235 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065713411 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064901486 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060868503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065113712 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060858373 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064892965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060472574 seconds)
  done (took 2.779764201 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.087457803 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084540765 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.125347261 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078904536 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087304534 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071280947 seconds)
  done (took 1.902429171 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090105657 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10355478 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065396156 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065403759 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075857572 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069429619 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068839101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069013609 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075980407 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074283744 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069226783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075562431 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07574929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071329482 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075566703 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078571752 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06906517 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069371805 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065372761 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078559993 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069104756 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075720071 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069623397 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069012216 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068719774 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070912011 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078720213 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073609198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069284322 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075743317 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078786137 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069244392 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075861645 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07692273 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06555636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075933893 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069287114 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078921412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075989356 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071363542 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065697108 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075842414 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076148345 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071251164 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078972341 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069712369 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071808245 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069447912 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069078909 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081784217 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075871977 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071454265 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076101366 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079309456 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079125501 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081319851 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074240255 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071082516 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075567877 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073902165 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071074488 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075685121 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071065886 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073524325 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078571507 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070874113 seconds)
  done (took 6.246210544 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096519043 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065859011 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06959654 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07451346 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071590332 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069074411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069993952 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069221248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069079444 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065992918 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10451945 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069782654 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071438353 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071808557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069745891 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06913403 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069398293 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071445374 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065981635 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08173548 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069191031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071356682 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071430865 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071401902 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073651829 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078755162 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069306215 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06905572 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069295466 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069129632 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071106788 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069136648 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071219511 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065563426 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071034765 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069426188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068924201 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071206595 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069292593 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075868561 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07174612 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078760435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069522365 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068965846 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074126803 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069378547 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069191747 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066301457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069596913 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06596576 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074403937 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074381713 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074238704 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071654415 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069493607 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069721841 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069538104 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069604484 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069502704 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078764688 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071354329 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069511601 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082291358 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069364789 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069196926 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071037699 seconds)
  done (took 6.137110392 seconds)
done (took 126.503776853 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208937869 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183191702 seconds)
  done (took 1.748701754 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072464632 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09763391 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075746343 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133972447 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069186459 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105195805 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103037916 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07363311 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070824066 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070434883 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071171136 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073498803 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136914043 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069157616 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070708571 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073618059 seconds)
  done (took 2.742495698 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104032865 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.18331604 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11204995 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068965048 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106067884 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077004233 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068374597 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079470243 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072181715 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072671576 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076047601 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074951268 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072109744 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074585158 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072738651 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075985124 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071290481 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075976555 seconds)
  done (took 2.920771937 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.093220078 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.086130509 seconds)
  done (took 1.565629087 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155343351 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104336858 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14353226 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.32351839 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.134394696 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127661935 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.134616398 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128752328 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112747603 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122697962 seconds)
  done (took 2.865674356 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100945253 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177833605 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311676261 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121016382 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075776712 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.103212229 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123022891 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081575031 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080518353 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080181698 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079728625 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076517991 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097977278 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076630262 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076070641 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079283937 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101451909 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075272041 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074903386 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07603177 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101095238 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069280135 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076240252 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07521454 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077676337 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078167513 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070786228 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069239894 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075864326 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074033721 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078327979 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.099896487 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077911716 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102952055 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07381359 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10399946 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074473827 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07351544 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074594545 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073582046 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076996463 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077637242 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078403585 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076901082 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070318277 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07457376 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070917855 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069011222 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078494452 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069874287 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078893107 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078032125 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102707394 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069926535 seconds)
  done (took 6.150995915 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106073788 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104316355 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069701473 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114696944 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104724582 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069750012 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105066558 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099538733 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109776842 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069594603 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068844079 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069176073 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077345969 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081219743 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117203407 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107424597 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071039874 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06928272 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108530788 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107607209 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068748648 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100029941 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098968049 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107288181 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067742226 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069598281 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067981219 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068246939 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075234357 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075970121 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068323937 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077469089 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084034776 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074392233 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067458943 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06797839 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068193656 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076972715 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076765288 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077580302 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076193388 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067567838 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068335557 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068985036 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069547617 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067746517 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077400009 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078334592 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076125537 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068144125 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068670742 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068202957 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068496556 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076192636 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075020908 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077512008 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077168086 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068176718 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068004912 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07016554 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077726214 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077698847 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077476321 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06956571 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078349809 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067955162 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079549834 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082686408 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067844305 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068113806 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06783811 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067932739 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068736947 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075025892 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075370095 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068350763 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06793062 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068275976 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077904454 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075536808 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067924536 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075154034 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067316623 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067887075 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068612424 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068920906 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074896076 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076739842 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068889083 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067552617 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067838212 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06814584 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066995296 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074999839 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076190496 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076415651 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075125881 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068160272 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075505519 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075069081 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068121481 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07481928 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06723539 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067520722 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067185747 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074112472 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074130531 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076242836 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067123237 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066697892 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074019182 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210997834 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068313057 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077629986 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079961074 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077497181 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06923713 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079717687 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069240572 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079154286 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068385667 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078594186 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072315145 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076812592 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068666368 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068333991 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068513734 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076152923 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069455029 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068721968 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069427054 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068921705 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077153219 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07972172 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069635846 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076268252 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077067594 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069440043 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076390069 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068982062 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076986112 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069624565 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06929658 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06793889 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079340035 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068844876 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068195534 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068873466 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079031917 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068960658 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078252648 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075633974 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068156775 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082625946 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078827631 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076734176 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078535498 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069184223 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068381122 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068436277 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068140121 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074784204 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076703369 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068819189 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068040261 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075129288 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079125823 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068110665 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075654318 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075755412 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076046919 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068589349 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068045308 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078893407 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078584064 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076353446 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076479823 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076744684 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068292397 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075786214 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076223796 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068066185 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081294554 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068729658 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080324061 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076607503 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075191727 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076817953 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077732203 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07865742 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078328756 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081519162 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067993611 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067944429 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07633939 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068520828 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068195633 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076237484 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069105469 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069266717 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081963064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066965933 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078590953 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067916005 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077063369 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06776392 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069244365 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080330497 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068307827 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068313401 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075859232 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068524233 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075017613 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07877619 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075308121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067394652 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067759797 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074707827 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075518387 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067065163 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066959654 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067544999 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073953401 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073779951 seconds)
  done (took 18.305329466 seconds)
done (took 37.697485867 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20603164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160817603 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197300874 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115251097 seconds)
  done (took 2.16907619 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.095102998 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098430716 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.079115935 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065088945 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.08467434 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064706596 seconds)
  done (took 1.918469159 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273473548 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194338695 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176205911 seconds)
  done (took 2.068518201 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221245103 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.201469069 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.485155229 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299213996 seconds)
  done (took 2.733442168 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.135480046 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081884981 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06398562 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.075331685 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.111937193 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145246789 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.090417751 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.114876138 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075145782 seconds)
  done (took 2.381378759 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133164818 seconds)
done (took 12.860964199 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.104869022 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.205011384 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071755861 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067503072 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.183130543 seconds)
    (6/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.117962609 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.201794334 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079567289 seconds)
    (9/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.207052 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076064393 seconds)
    (11/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.197021442 seconds)
    (12/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071468711 seconds)
    (13/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.077136135 seconds)
    (14/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.181718423 seconds)
    (15/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.11124165 seconds)
    (16/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072821583 seconds)
    (17/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077079587 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072840007 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.168859336 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073771778 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082555811 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.125419517 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073657212 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191871183 seconds)
    (25/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.189055267 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118936729 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064632847 seconds)
    (28/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.47707018 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089396203 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074883469 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076681366 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.076669622 seconds)
    (33/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.170479815 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202478482 seconds)
    (35/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163259947 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086096555 seconds)
    (37/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071409686 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.1539502 seconds)
    (39/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066494632 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076878268 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.199129043 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.077076638 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077104246 seconds)
    (44/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064179691 seconds)
    (45/309) benchmarking ("sort", BigInt, false)...
    done (took 0.25654024 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072835949 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120695755 seconds)
    (48/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.191382317 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064009077 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.187685005 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162835934 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.077389059 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.146603152 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.169026222 seconds)
    (55/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065719359 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136513104 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.066925511 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075611602 seconds)
    (59/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.06468581 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064361362 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073949143 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088827335 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148420555 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087504426 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137101992 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091681088 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063300161 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116626022 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.189400652 seconds)
    (70/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066587409 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.232368465 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.219559987 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.080623054 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066970614 seconds)
    (75/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.082887133 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065086689 seconds)
    (77/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.076289411 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064866426 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063686189 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075845341 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073863933 seconds)
    (82/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.142965418 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063473339 seconds)
    (84/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.147088038 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.17061101 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066822158 seconds)
    (87/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.213153561 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065899164 seconds)
    (89/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.066996163 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075073917 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06925371 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.203807477 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.195223671 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075530811 seconds)
    (95/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.072667544 seconds)
    (96/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.065282922 seconds)
    (97/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144125977 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078237557 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.081699589 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.204998192 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.23956274 seconds)
    (102/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083421273 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.224269484 seconds)
    (104/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.156509951 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075340829 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074150913 seconds)
    (107/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.065574176 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077791408 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.209553034 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.139381459 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07260464 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065262927 seconds)
    (113/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.065060384 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06563683 seconds)
    (115/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.074104497 seconds)
    (116/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.142944136 seconds)
    (117/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.065326032 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.226559668 seconds)
    (119/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.212642442 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088783241 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191625171 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15384258 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065339916 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.08973663 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073654156 seconds)
    (126/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066062999 seconds)
    (127/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.147256312 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074606748 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078157731 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174214226 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073559008 seconds)
    (132/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065577519 seconds)
    (133/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075381677 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065571997 seconds)
    (135/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080519865 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072375871 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067471232 seconds)
    (138/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073023336 seconds)
    (139/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074693311 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064104508 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067001879 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065432625 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.085546555 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064375995 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072903406 seconds)
    (146/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075259359 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065939334 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130816238 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064708448 seconds)
    (150/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.17129927 seconds)
    (151/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078052749 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115888537 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.079825871 seconds)
    (154/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064957446 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064832444 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075280821 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090108492 seconds)
    (158/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06395495 seconds)
    (159/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072039786 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114549042 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066992314 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093005357 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083702399 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071976281 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065700135 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064803284 seconds)
    (167/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065630429 seconds)
    (168/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063394529 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120773792 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078296817 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065985465 seconds)
    (172/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.065867612 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077624874 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095366256 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08742884 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078064972 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149459401 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125407729 seconds)
    (179/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067351894 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065644098 seconds)
    (181/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066842422 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086719126 seconds)
    (183/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068940329 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065007486 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06520203 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.173159648 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072039402 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063380901 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159801528 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16922312 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177411138 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208079055 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065798809 seconds)
    (194/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063381881 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.238643597 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078248132 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.169104746 seconds)
    (198/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06987516 seconds)
    (199/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.097153589 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067106117 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068166119 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090414263 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.205075576 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081149973 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073150229 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073777518 seconds)
    (207/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.065656057 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065416702 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065013631 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065448152 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094313564 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072737458 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065003351 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066076683 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086717352 seconds)
    (216/309) benchmarking ("sort", Float64, false)...
    done (took 0.135070886 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077313094 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077443135 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064711984 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146473321 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09518083 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12844049 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073312726 seconds)
    (224/309) benchmarking ("sort", Float32, false)...
    done (took 0.136497568 seconds)
    (225/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064954207 seconds)
    (226/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.145709171 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066370057 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065300932 seconds)
    (229/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068334115 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066532847 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126939513 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066301569 seconds)
    (233/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066227248 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065295922 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064752819 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072573789 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.144099633 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.159177101 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065702951 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065000017 seconds)
    (241/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066794853 seconds)
    (242/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065332643 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088375449 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064479489 seconds)
    (245/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066403635 seconds)
    (246/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072615061 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064082319 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.176040173 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.064810513 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065541574 seconds)
    (251/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066534668 seconds)
    (252/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126551564 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133769264 seconds)
    (254/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.149681888 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090138799 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156477889 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06650791 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066501874 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068242554 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063804746 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065827643 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066724679 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.144771918 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085813144 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146109785 seconds)
    (266/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066442449 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169116022 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064779193 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072141205 seconds)
    (270/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064508312 seconds)
    (271/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064818761 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064567433 seconds)
    (273/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.07328668 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072307113 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064401723 seconds)
    (276/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065981396 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089986435 seconds)
    (278/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.06624461 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.064302175 seconds)
    (280/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066153371 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067209277 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144846189 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179092858 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064305691 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089620781 seconds)
    (286/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072309007 seconds)
    (287/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065814538 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122765676 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069564817 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.064119354 seconds)
    (291/309) benchmarking ("sort", Int8, false)...
    done (took 0.16918576 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076386822 seconds)
    (293/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069853952 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068360092 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065863717 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072954006 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076523701 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172791425 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081402628 seconds)
    (300/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073339557 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064079293 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122205777 seconds)
    (303/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063647 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065446753 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064415756 seconds)
    (306/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065709037 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06440984 seconds)
    (308/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068907609 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065576117 seconds)
  done (took 33.100472079 seconds)
done (took 34.54429568 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08584353 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092021575 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073568583 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.085891821 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082391994 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097332946 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074464669 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079152482 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080985132 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07988278 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079426484 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072410216 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075571082 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075276014 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072748845 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089473591 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080381904 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073760713 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07393766 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064623084 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073703223 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065494356 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064619572 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071860705 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076789755 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073190151 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074737372 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075339465 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065500069 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065506648 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069722084 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07423728 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065166444 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07813976 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073190981 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073777657 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078127438 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078299637 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064443779 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065786543 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076332128 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065877322 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073572512 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071720679 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070179486 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072472087 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074118074 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07755616 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089321992 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070044867 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075914833 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076382762 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07723735 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070556694 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070408287 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073889114 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071676564 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089429174 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074537846 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069808214 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07568774 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074921727 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072298985 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07349801 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07412366 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076841966 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077366367 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072576166 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075847235 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072715911 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064799281 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073695231 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070013286 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06520298 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076869424 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078815121 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063762152 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069853056 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073091873 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073776882 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064391441 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069306879 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064115735 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070070865 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069553749 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07195716 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070394221 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072482808 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064117372 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074547242 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072683099 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073374269 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06458663 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077829747 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064978154 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071376584 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065326453 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065006537 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063943579 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070723328 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065345657 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070057895 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073448814 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063405887 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07029596 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078898541 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064853538 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072790713 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064560652 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064554801 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07677498 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076143181 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065326576 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069810351 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064509722 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070679114 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064362163 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064763537 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064860388 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065561046 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069728817 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065254134 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069430527 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070428125 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078370949 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064463861 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069666752 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06976671 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064777705 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071119524 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064905598 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065002032 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063616311 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077823809 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069561577 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064486311 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06988122 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068864681 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072501991 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063190636 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073041819 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070289223 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.20964224 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073164805 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065131546 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07810068 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071323929 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070186608 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064744154 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065478953 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064080869 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065128466 seconds)
done (took 12.646727719 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06462629 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.093012182 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.074476898 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.082866533 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.078546497 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06636278 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.070040974 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083934329 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068720714 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.085793425 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088883379 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087339841 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.093633665 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064366657 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065741446 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066671365 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06422058 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072749045 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.080560272 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087828676 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095873871 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065305955 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.074285112 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08195792 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.076572274 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082663947 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066678669 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066490931 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068432185 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.083548151 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090360209 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065570589 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066434497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080065864 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079732801 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072867497 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066390028 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07029325 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06681216 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065670982 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067918071 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080304235 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069973112 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069928426 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066541347 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066512038 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065664321 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072724273 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079163845 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.069698914 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.073674263 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.07865243 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068224651 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065805788 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063965354 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069974567 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065356483 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066238553 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065830828 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065294719 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065991525 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068194658 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067271289 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.066569276 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069899576 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.06905038 seconds)
  done (took 6.322953832 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082997907 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096273476 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082936326 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084002912 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065689211 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066832667 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066503539 seconds)
  done (took 2.090273911 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065569013 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.080498887 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083269153 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083214854 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.075570049 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084743971 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066424582 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097061884 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065312154 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078773711 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.113263969 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083999525 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069365887 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078018255 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066415846 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.073925877 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06660682 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074479804 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074845483 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082690241 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070243947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095230653 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080081094 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066527688 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.087475362 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.071012988 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06537913 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066428405 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067195179 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067322952 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067433921 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106271909 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.070344017 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078517495 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067689416 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.065408553 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072672794 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069719413 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.069256166 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075432749 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.072208655 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067357369 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064484521 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067221871 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069031162 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.070353076 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064740108 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067254922 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067054749 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078975569 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065784514 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.070626438 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069842742 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071800302 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072355161 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070691109 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074901581 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067438082 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07874861 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074899589 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067709974 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075726741 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110268786 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.071941773 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074465626 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070285414 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07111175 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.072325116 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067048195 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068361833 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067595106 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074768928 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065808174 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067897098 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070498143 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06790389 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.070702453 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08393844 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.083713686 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079523949 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068615941 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067501306 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070725861 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08343985 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071367476 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067224394 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070248275 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065413082 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070720272 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067702628 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072468724 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06794791 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.075353858 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068762544 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070580913 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075104239 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066286894 seconds)
  done (took 8.661471516 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067101927 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06838898 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069103689 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068068895 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068185275 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06817766 seconds)
  done (took 1.988095531 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088686577 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065488917 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081053262 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067364364 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103800203 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.074300279 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.07471602 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076221103 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080292316 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080215655 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.07454274 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.077853367 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.073994806 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069314057 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.073871287 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068215529 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.073796734 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070202552 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079364407 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069448044 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080333383 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068648365 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068935536 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079633059 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069761727 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067563351 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067374378 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079157927 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07921872 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075692319 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068616133 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069432096 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074587568 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078030631 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.07425489 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074939319 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066569191 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072001265 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068847829 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069702972 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.076221 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068596151 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069542067 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07232021 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075520824 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075234575 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072655999 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071120222 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.073737 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072341246 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072314549 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067648795 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069257696 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072322855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075084533 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075562867 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07266228 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073629073 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068826637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07504286 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067012455 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069382017 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075654491 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069557658 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070445973 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072197528 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075253993 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068557653 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06866929 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066564523 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071995234 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066824835 seconds)
  done (took 6.811085017 seconds)
done (took 27.405974687 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.980724366 seconds)
  done (took 2.505134955 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.566522339 seconds)
  done (took 2.129940733 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.677968145 seconds)
  done (took 8.23527094 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.298543971 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.338070532 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.729851343 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131068145 seconds)
  done (took 3.092801758 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.720472016 seconds)
  done (took 2.288887451 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235115032 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229490015 seconds)
  done (took 2.046661005 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348761278 seconds)
  done (took 1.911623258 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.120538901 seconds)
  done (took 2.676065235 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225544329 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162901277 seconds)
  done (took 1.960363148 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.478974018 seconds)
  done (took 2.045517486 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.058616507 seconds)
  done (took 5.628859428 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233923636 seconds)
  done (took 1.837953229 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23609 seconds)
  done (took 1.811520106 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.730418503 seconds)
  done (took 3.297362434 seconds)
done (took 43.038867402 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081229127 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086578667 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086404195 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081663762 seconds)
  done (took 1.879841616 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072177813 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070059185 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.073762471 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074047679 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072130243 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072745188 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072848528 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069409228 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071758782 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.069097156 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068389331 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069629221 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072665324 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069323944 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072455891 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073926767 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.069825026 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069306864 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072918602 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069218692 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072695378 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069311409 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067750253 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069433654 seconds)
  done (took 3.273110514 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07626052 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072604655 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074907513 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070868118 seconds)
  done (took 1.870263462 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072969854 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083889753 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086345033 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.093091343 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075215266 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075957336 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083346346 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.084032556 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06509507 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.087164956 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068210933 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066536749 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06675926 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.087358979 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082847003 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062697268 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064062765 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075728252 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074679557 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076924948 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06778441 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065484247 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074995876 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074884456 seconds)
  done (took 3.391017996 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077533057 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065472369 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079649786 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092718637 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094561554 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065674092 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080216585 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094199585 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128298358 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065210541 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071388064 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065217876 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108278749 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065428156 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081436066 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108686263 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111330763 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069509741 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099125598 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065491197 seconds)
  done (took 3.273744367 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075495565 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069615882 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069771881 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066026113 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077652057 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073447635 seconds)
  done (took 2.016991983 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06684723 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068046426 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06700333 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066553354 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071757633 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066916004 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066128346 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067620427 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067243851 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066625824 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066397726 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065635547 seconds)
  done (took 2.385651309 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.161273862 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070456875 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070625467 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066669702 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071342694 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06587512 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080555847 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071318574 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084676163 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066463977 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066160658 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069070278 seconds)
  done (took 2.52513669 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094535578 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095092566 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13423848 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112986865 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093868967 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.091496689 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.149040639 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.136809733 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112885405 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069467729 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08395762 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105977072 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101510796 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140434031 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111147124 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07244891 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.102501966 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082308707 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106933567 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113360808 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111099445 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113607311 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089999979 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10281352 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105394408 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114212857 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070808897 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070491335 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137981809 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098590339 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.087891094 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093548761 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111371843 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068743333 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085380452 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.100408776 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085819117 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104052907 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.087532751 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097172245 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077773668 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.126684794 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102042919 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107756428 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123141551 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094171082 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107330334 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101057069 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083820447 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.117497084 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097382447 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092738485 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076832225 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.157137778 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09209739 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105818174 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11283216 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081937929 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088797295 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093646605 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.123008615 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.247192114 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11173424 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106711631 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.090272099 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093296251 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.135841707 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086554117 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105292545 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132610717 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090945835 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076400015 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.093492248 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070724358 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.099863734 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103383657 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096153742 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112048992 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078498225 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122754902 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.115166814 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072652317 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.114560631 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093504644 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.158385378 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100610763 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103751963 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09356299 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.14767425 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086792463 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0807873 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096303374 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136868784 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091673942 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097706848 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128614584 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091831726 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084222245 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075278036 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085953647 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096444415 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111572534 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099871646 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090766876 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083910698 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091401664 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076103126 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082390857 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098815237 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089904066 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12095655 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105642614 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116740947 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079167509 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110071604 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.094381696 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136002163 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.120249272 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.086220821 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111931641 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136429466 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.108677498 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085507942 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101419882 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11333683 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104147636 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.239879252 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.140059626 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117696513 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091066088 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093208773 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095242493 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.108637733 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155901827 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092582605 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109748172 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.140407092 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.108895546 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095361453 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084778519 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092667794 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110492147 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142886465 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.093343379 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.070691395 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097227962 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132145489 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07784363 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098027414 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.09044733 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.085411881 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082582493 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068582938 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101444791 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138115074 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.116537857 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105158172 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.098188824 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072243636 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101876171 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100860015 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153533632 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118715225 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100811712 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.094321365 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102949797 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08056245 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.133620147 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.133334716 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09600358 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093827868 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130541129 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.091871957 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.104314012 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113283135 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109540192 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099685621 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.142785739 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122850994 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.118946857 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10658243 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12610859 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079426512 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109188463 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.229972533 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109302041 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079879416 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108426988 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.08014828 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.113369711 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081644059 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103573655 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.070273566 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076448822 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107698529 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090489531 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08753653 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.136642305 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.126837033 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.082592892 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095875946 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103470769 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100389911 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10950429 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088737954 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096118207 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080000805 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08299415 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094441958 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098656398 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106956008 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079245217 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075999456 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144615957 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106589713 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094582512 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094355579 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.117602599 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084901946 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084012897 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108162304 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.140329195 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.120818098 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081485842 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.09259813 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.069753378 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.085247806 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.075919751 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113283828 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075245234 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114940169 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068168453 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.134379479 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090095023 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104085156 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095083334 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127166129 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086932017 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128494879 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090565523 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112221892 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097699274 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092149155 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108251667 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.09294687 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101914992 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106935769 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088185448 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091028323 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123866495 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109101357 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11709934 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110370267 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135172583 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.265797 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07706979 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108770963 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095811646 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.158840343 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104287031 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087274981 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09152454 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109233004 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086159524 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145139001 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087953514 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.08357726 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118793434 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094256719 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091362238 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078182245 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.105467017 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088809072 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113311624 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.097965072 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.094209571 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108715005 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110811623 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087894378 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08809324 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.127908075 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.131527575 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.105198749 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08946893 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090092176 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102450662 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096675044 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.113835536 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082675091 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07678903 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.068028124 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072087368 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.120854657 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107799999 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097176469 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096663832 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105104542 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071808698 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089472028 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094729755 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.084546018 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092422768 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.115446876 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.106082326 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133984948 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.104772814 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095453591 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143938419 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133563709 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093159501 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096454116 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099721338 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074787231 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152449647 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116524537 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078583451 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085144297 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077131877 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086854889 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070816448 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106802248 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104722879 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076236059 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099388441 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094583473 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.11847789 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092275018 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076806093 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080035201 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073328023 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073721977 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.09842096 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076406623 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076794995 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126516592 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103636071 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104848049 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080466171 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075046748 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133762693 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067986535 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132944481 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083122084 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10932738 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079807605 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079349685 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088899678 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101587875 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105887521 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112032407 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070265562 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101697623 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146267872 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075852816 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074352044 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074152484 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108839342 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085825198 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142473494 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089231942 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087967668 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076454128 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121382809 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101569991 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081958302 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120525143 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080037251 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071098383 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08140403 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107184416 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071812472 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074375485 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1104734 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.62174224 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089824367 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076114488 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082958594 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118722125 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080807867 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107140177 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.115878514 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105659098 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.177097993 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073104434 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09081576 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.103408779 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096842481 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090252236 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080154273 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084880524 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083998956 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079887296 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.369998378 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085970655 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094208148 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.085248268 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112733862 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.139663561 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092192015 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.106398881 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093938773 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092175237 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104117054 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113772821 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.109246215 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.090866023 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093200907 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.112384452 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086838684 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083249113 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104598918 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.079007578 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080017804 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117990954 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.089432265 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.095847708 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108962468 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.087177293 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114803309 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122947392 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117612317 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101286218 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080488567 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08851541 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.09055306 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075357998 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081277755 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077245589 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07117453 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112375638 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089687502 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083108328 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.103643803 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.110078517 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103455961 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112051145 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093562511 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099491128 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10492827 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.132810007 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157961698 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103163097 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.123662037 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138768292 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079590231 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078416598 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.081705261 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.138586518 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.081807542 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094388556 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.234290932 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079463186 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.082587605 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095771124 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112204341 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08380535 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082322165 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101754989 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115414547 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08602655 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083501742 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095900851 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.263708974 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.136141851 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091139692 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077690478 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113792126 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105938568 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128183664 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.074495279 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084007561 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.134069007 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089399342 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10519407 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081654703 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122252972 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137478757 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076694082 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09275178 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073947811 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090334431 seconds)
  done (took 51.523817454 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151335838 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.154978658 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079424334 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.098809466 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.192100797 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.208538198 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.118081929 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093356954 seconds)
  done (took 2.834061817 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066525529 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.082706362 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102356491 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084122489 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067675229 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067848075 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.203770973 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083061214 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06661695 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.107558207 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076815446 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068875924 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.372248337 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065697661 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067445162 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075963657 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067260344 seconds)
  done (took 3.441740546 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.358731708 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611653538 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.324799457 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075121896 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.004628952 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08922961 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.288175855 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138702296 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082149384 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560610829 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367687364 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13316039 seconds)
  done (took 18.761453382 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073642081 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075049259 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079080432 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.078631264 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073805723 seconds)
  done (took 2.106278467 seconds)
done (took 100.895662808 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080506173 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.171699269 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068350827 seconds)
  done (took 2.001912315 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080776351 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08222436 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08237806 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.079700524 seconds)
  done (took 2.056128129 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072024453 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076196722 seconds)
  done (took 1.871632805 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.244638291 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165801546 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092390754 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079827927 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079479752 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079974744 seconds)
  done (took 1.974029598 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069886739 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071953448 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072255055 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.072465321 seconds)
  done (took 2.011661163 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065840275 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066244867 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068109742 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071508794 seconds)
  done (took 1.998722942 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081322195 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084004374 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078259906 seconds)
  done (took 1.970287708 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100923284 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095289526 seconds)
  done (took 1.921953198 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077796258 seconds)
  done (took 1.803812329 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086817376 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09521847 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153967813 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112229886 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151156009 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136099663 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.078852031 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.079977999 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07486781 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.076405326 seconds)
  done (took 2.771874644 seconds)
done (took 22.691452644 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076616574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373903235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360267614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087350739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671019354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357093227 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985119205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091556187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.100422587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06847294 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086047908 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649782849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974798798 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326369669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963352525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329834442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651451158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068883472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067812671 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068684378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969176456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068270709 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068848594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068707135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650295899 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373335268 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069814625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32401434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06813521 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071480871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356717362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070419047 seconds)
  done (took 16.224291977 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068509521 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122548257 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073479387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085023373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071400022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070531152 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072191569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069418645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110671497 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069294224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086622177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068451794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07291929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071339129 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090488913 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06956426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07146892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070466911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069448952 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070415559 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088353281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068887786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070119519 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073025372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070473586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082791443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071299362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069803265 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069703945 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072042886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072796007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071337189 seconds)
  done (took 4.180544855 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121332507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12889746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074406484 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109625289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122265996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070860852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153564944 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092776354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115922487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069478884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086939912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069268169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105658356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070974371 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091019513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070054814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071181395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07033393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070083668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070639974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08877855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068941587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069990868 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070494289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070510444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084633834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071176148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069504114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069871928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072356586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074085232 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071261506 seconds)
  done (took 4.465851133 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.067787624 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071902113 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08016435 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081603573 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067264614 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069761716 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070494095 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06755925 seconds)
  done (took 2.327006038 seconds)
done (took 28.94161105 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076173189 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068493086 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072434927 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087302911 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073759548 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.070906724 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065189228 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073819913 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071708536 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071574676 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073284029 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066606996 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069678052 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064851595 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072550367 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06698382 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074558511 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071055777 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.071855147 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.073241065 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068972389 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072361842 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075131425 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.071728317 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.071955603 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.072130435 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076039426 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072610396 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067623512 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06944566 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068886689 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07788464 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073968339 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.074683147 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067078646 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066607758 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07141005 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069390458 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.074357523 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075929693 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068855031 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075664074 seconds)
  done (took 4.734215437 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08276067 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090657357 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084028221 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082872404 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102031482 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083234223 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088067283 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079866628 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078098964 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087067609 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074210183 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079588688 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08003178 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072677861 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078293039 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075202795 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081006776 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074367674 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078982628 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078987324 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088601862 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072756581 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079632136 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080569845 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075147548 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080522038 seconds)
  done (took 3.864651494 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070710023 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08751724 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092142443 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149029515 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11174342 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081826044 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082060031 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096949097 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100722729 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068232924 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072171131 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097377233 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095895298 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075620775 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108878577 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086364097 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079238285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07025325 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075275216 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101562095 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090494933 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08657909 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099109446 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087345271 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06718256 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076694485 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074460933 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082395968 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074636882 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07966337 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072609979 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071123667 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06805554 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079849973 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072247189 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065518217 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089079523 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079901905 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081915285 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108029936 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076698669 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068877107 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09766959 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132463081 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067352353 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070379622 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071219653 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079944858 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068573403 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096711956 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085754896 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067318518 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.086018688 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068490792 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069021517 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084193924 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06876384 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069676223 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079857479 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073795809 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087411834 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072189084 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087605248 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067646665 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07890838 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068403769 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069190228 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066976177 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.1018921 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074421783 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.119051612 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068561846 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065313565 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079888452 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078508365 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074447097 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06725972 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085921196 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079230254 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071312031 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079065323 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070262536 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071083998 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102064643 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066356824 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065769192 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065825507 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070467908 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070466189 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068217022 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081169019 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066878566 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070470427 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082585002 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06753551 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067880862 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070243016 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069637192 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066655402 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078854163 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071266717 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06905612 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079589381 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068171858 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070278838 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08184301 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076987269 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066705782 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068948911 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069845095 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069359684 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072171492 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070821653 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069427747 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07371288 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074860154 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073303353 seconds)
  done (took 10.991436425 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160269691 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155065372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069231545 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148358961 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076904943 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.072967255 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149620714 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.088660059 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068611437 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069452404 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068041426 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.096341929 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092035276 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105158129 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.073306253 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06858355 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091335137 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.101409807 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151683359 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146470275 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091363052 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075613042 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070567771 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069835012 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069054658 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076281726 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086498639 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076480531 seconds)
  done (took 4.467239586 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074324492 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.094056254 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07207125 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.080002925 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087408767 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068772727 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070393728 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069339336 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082312903 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07667868 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068615955 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072948508 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071833743 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07122538 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068847478 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074853078 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074927061 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066893378 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071607774 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072788328 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078581677 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093818871 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072592902 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068276236 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070523483 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067904896 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076629743 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079459482 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067955013 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.083318212 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065525877 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072591363 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082006238 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068837582 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067714783 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068833517 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068265039 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068037454 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068168031 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06664394 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065917339 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072708996 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066912395 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076109885 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081902899 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075967711 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069290263 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070558439 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070160179 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065036138 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070823867 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070904033 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070190602 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075966459 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072066929 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070014607 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069074349 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094189169 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074011685 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067273489 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0669583 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069131253 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069673572 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076967227 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084613995 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069107174 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06641524 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068182266 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073346822 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082072691 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067338518 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072843542 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064672901 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068255014 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07006957 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070521459 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069263046 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066822272 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068119918 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068218236 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068045698 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068143639 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067619975 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070668096 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06619334 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066091723 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068177808 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069068797 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076529232 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067126091 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071263184 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069296694 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066982693 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070973413 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073917716 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071166177 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082236118 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078535397 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068536429 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066527011 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082014764 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070544202 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067063979 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074661132 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071787829 seconds)
  done (took 9.37037082 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087988783 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06962384 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086994438 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093152668 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078513422 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073902924 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079371037 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069649189 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084046839 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067667119 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077041522 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066523612 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079330096 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077479329 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070096042 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078327508 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070452635 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087954279 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082837671 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066772853 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07649342 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080836629 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080500795 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084776297 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085029822 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085927929 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080206071 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071172463 seconds)
  done (took 3.996882065 seconds)
done (took 39.168333373 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.832971481 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.060993081 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.828559005 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.049817815 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.887018873 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.001849326 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.862070649 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.814838265 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.923230057 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.864244016 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.142854566 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.209550885 seconds)
done (took 66.295710313 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.859817472 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.992036286 seconds)
    (2/2) benchmarking "String"...
    done (took 2.050079802 seconds)
  done (took 5.797309368 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.971956858 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.458897238 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.095536809 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.81903288 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.830013537 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.287031656 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.597584896 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.264911513 seconds)
  done (took 31.110826022 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.929249846 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.043879912 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.480962519 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.51037505 seconds)
  done (took 15.758143609 seconds)
done (took 64.336887155 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.861164808 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.819889938 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.869069774 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.85357848 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.831012925 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.823126205 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.82722973 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.824590964 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.827974215 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.854163453 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.824360417 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.823570226 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.823330626 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.833925703 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.499865385 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.881552915 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.828049709 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.832026224 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.840891571 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.869551257 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.827594241 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.82081324 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.307705933 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.012151441 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.436849388 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.192433067 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.555188722 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.217584732 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.83492942 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.82183679 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.893797931 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.180121374 seconds)
  done (took 206.306563494 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.821801948 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.898090889 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.937858298 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.871836644 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.354258301 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.997099595 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.916557044 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.498876458 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.823583936 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.825404908 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.140116124 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.822640695 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.164837521 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.769248999 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.859206564 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.827330729 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.0698145 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.148324713 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.863326323 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.970774977 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.844226363 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.086154565 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.039067073 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.090632337 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.825078504 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.922455661 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.825753038 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.831978469 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.012959693 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.036255378 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.836381121 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.842444037 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.985647406 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.694445959 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.842951609 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.845328017 seconds)
  done (took 172.901689268 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.009550615 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.830591139 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.824240212 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.87884278 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.946131304 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.829023713 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.489784485 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.831887968 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.027911047 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.830819672 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.823167281 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.824262358 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.823359501 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.824576167 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.835769039 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.900854442 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.826505337 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.839660012 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.826460057 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.849439587 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.829432147 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.824080153 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.82469257 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.825081771 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.824689106 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825604968 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.824600372 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.948566475 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.069119673 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.826487046 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.825523608 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.49293431 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.843052056 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.345888991 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.8262691 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.915865517 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.884779442 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.944072541 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.829717173 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.824677479 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.041887253 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.897772816 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.827389945 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.824657102 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.889187592 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.838675035 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.824398548 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.826681636 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.831275074 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.890121859 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.068832951 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.825771376 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.946722019 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.312909086 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.827343595 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.826060157 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.825795485 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.826318981 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.415846517 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.830771164 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.826573517 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.832090583 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.832930112 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.82598264 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.827011004 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.213052172 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.896895264 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.3841595 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.003268555 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.836536634 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.111789352 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.903724754 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.827154893 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.829911442 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.827866823 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.828278482 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.82776879 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.829557262 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.950754163 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.833210082 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.832920386 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.95275586 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.912517988 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.949458642 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.833299938 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.837847482 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.650099318 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.90191068 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.863941068 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.649471205 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.833069908 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.201173695 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.606962296 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.833716058 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.827743995 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.842067042 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.829298619 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.828922312 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.829921284 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.911935467 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.830781583 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.950786163 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.546596351 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.157442535 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.005594993 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.829189001 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.836089767 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.921959534 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.000182824 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.828583649 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.894136345 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.835283678 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.832598066 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.976340389 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.829783796 seconds)
  done (took 406.847596576 seconds)
done (took 789.877963756 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.419762482 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.392367275 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.506735336 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.41488897 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.389230351 seconds)
  done (took 13.886900173 seconds)
done (took 15.652783361 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.843498123 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.834643054 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.892619173 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.912495477 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.845394024 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.847087221 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.910535657 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.849520405 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.883423141 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.883478365 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.914821084 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.914680621 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.853202625 seconds)
  done (took 26.151189742 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.838756803 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.979018966 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.058093552 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.870832998 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.839049556 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.057823284 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.895462172 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.976288256 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.978692454 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.061900901 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.068106305 seconds)
  done (took 23.391004185 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.839391589 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.980050583 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.062491949 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.874199126 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.840594776 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.061341351 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.901893946 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.971756629 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.981440171 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.0633311 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.071036661 seconds)
  done (took 23.42211072 seconds)
done (took 74.729183693 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.836659229 seconds)
  done (took 3.603663441 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.852248043 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.001113099 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.833979451 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.831812389 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.834161288 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.833645948 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.832629728 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.8337373 seconds)
  done (took 16.621512853 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.835699019 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.83531906 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.834412373 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.835610655 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.835401559 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.838317197 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.835454668 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.83560296 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.835113417 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.834790974 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.836293124 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.835311232 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.835350718 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.834341542 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.835223283 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.835072855 seconds)
  done (took 31.134888185 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.837758863 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.835617952 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.835814782 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.835126016 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.836523913 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.837020417 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.837560375 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.835133076 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.835816231 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.836272067 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.836326475 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.835946872 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.836767659 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.836581132 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.836488442 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.836709634 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.836889089 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.836848877 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.841382928 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.837441487 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.837432888 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.839254068 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.836879235 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.836327317 seconds)
  done (took 45.852965083 seconds)
done (took 98.990167717 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.567356437 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.556424672 seconds)
  done (took 9.893471755 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.838885721 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.837980611 seconds)
  done (took 5.449787993 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.838572785 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.836913428 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.83823374 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.841119768 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.838136476 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.838281697 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.837815548 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.837574755 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.838156901 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.83820806 seconds)
  done (took 20.153616788 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.838980535 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.837937641 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.837992578 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.838886959 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.838813311 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.838288344 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.837479533 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.838249607 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.840403789 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.839619778 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.838132464 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.838807932 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.839203663 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.838457786 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.839519274 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.838976095 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.839490107 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.839142957 seconds)
  done (took 34.868864563 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.838156326 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.840160246 seconds)
  done (took 5.449444696 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.839059564 seconds)
    (2/7) benchmarking "second"...
    done (took 1.838501747 seconds)
    (3/7) benchmarking "month"...
    done (took 1.840342474 seconds)
    (4/7) benchmarking "year"...
    done (took 1.843260766 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.840099902 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.839804356 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.838902168 seconds)
  done (took 14.65042962 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.840667088 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.992499871 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.039572011 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.651109808 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.841430695 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.842166173 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.10317486 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.842792862 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.844724568 seconds)
  done (took 20.770342861 seconds)
done (took 113.006892062 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.657836409 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.84003315 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.042351659 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.891324713 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.860362091 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.175839324 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.88006292 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.484123254 seconds)
done (took 42.605147017 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.928420142 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.837351934 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.869303775 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.869125099 seconds)
  done (took 22.348056718 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.840808573 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.16968915 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.863180105 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.670671999 seconds)
  done (took 22.344545591 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.21791202 seconds)
    (2/2) benchmarking "read"...
    done (took 2.182102281 seconds)
  done (took 6.177176663 seconds)
done (took 59.572656778 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841883318 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.840494785 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.840897887 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.840496044 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.841805295 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.841259544 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.841591891 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.840768736 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.840160073 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.841499631 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.840999682 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841802144 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.840078335 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841530897 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841164138 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.841099661 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840526589 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.841918955 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.841283681 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840587453 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842008129 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841572602 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.841516338 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.841038265 seconds)
  done (took 45.961395591 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.843275223 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.842674637 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.84191375 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.841679133 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.842133058 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.841639937 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.84245863 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.841083397 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.84215012 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.84265386 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842057898 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.842989019 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.843258896 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.844173802 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842412291 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.843369219 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.843727076 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842699394 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843166055 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.843487149 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.843566589 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842978929 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.8440018 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843481829 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.844679027 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84380161 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.844758296 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.84439013 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843211273 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.844529301 seconds)
  done (took 57.066615934 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.843535425 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.843968756 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.845890054 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.844943389 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.844807563 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.844142617 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.843981794 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.843842606 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.84458579 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.844561032 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.844461851 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.84417572 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.84473707 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.843741895 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.843704577 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.844862809 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.84354707 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.84474154 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.846139254 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.844703973 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.844176113 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.844721595 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.844529224 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.845446136 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.845848241 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.844987769 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.845176295 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.84570156 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.845854562 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.844914613 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.845454705 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.845732162 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.845977187 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.845960226 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.845601484 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.846017463 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.846393848 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.846424304 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.846389008 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.8455242 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.846805314 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.846729481 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.84693492 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.846581184 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.847878902 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.846826549 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.847164355 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.846025779 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.846859642 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.847066865 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.846649764 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.847796368 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.847088168 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.847187873 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.846937584 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.846751565 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.847549464 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.84706583 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.84783583 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.84740103 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.846629376 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.847086858 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.847583223 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.84779525 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.847543058 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.847254909 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.847171519 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.847842249 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.848391655 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.847315302 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.847954295 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.84787274 seconds)
  done (took 134.689821186 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.848913 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847497302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.848220163 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.848177967 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847988853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.847174643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.849073811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848121864 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848200757 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847857734 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849552661 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.849284856 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848209675 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848227674 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848302194 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.84862986 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.848993609 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849500988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.849294567 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849333282 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850469128 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.84885362 seconds)
  done (took 42.453212053 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849769605 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849621941 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.849948717 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849661901 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849762586 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849027132 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.850261852 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.849830978 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850316961 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850778411 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850693721 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850438825 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.850786078 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850368371 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849899844 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850265509 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849811647 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850842634 seconds)
  done (took 35.08456697 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.851162653 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.853516007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.850712199 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.851957418 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.85192005 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.850972409 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851424775 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.850965254 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.850962656 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.850903666 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.850201685 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85087039 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.85006266 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850921119 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850461401 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.851165415 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.850614994 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853236768 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850381707 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851798059 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.851252994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851137934 seconds)
  done (took 42.511602372 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852449546 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.851814194 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.851114873 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852178729 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.851240896 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.852850585 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.85236748 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.852512285 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.851731997 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.852636302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854329448 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.853696881 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.852514421 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853094284 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.853022213 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851972631 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.852196454 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853374887 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852906623 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.854457553 seconds)
  done (took 38.836481109 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.853273204 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853067963 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.853039724 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853483167 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852650048 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.852063772 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85394359 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.852419897 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855103266 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.852675993 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.852275664 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.851942171 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854564419 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.854190848 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.85229033 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853655846 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853306162 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852831071 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.853122822 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852457965 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.853602311 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.853163392 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853848428 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.852771125 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.85321942 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.854879319 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853678486 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853817409 seconds)
  done (took 53.67752277 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853116706 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854322163 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.854124383 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.853807917 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.854505125 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.854918271 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.854568969 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.853854273 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.853867975 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.857711923 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.854531055 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.854738459 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.854650226 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.854355561 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.854241994 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.854386799 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8541983 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.855159811 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854732821 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854002223 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.855965917 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854701974 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.854506732 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.855744744 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854947468 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.85853905 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.857197117 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.855856561 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856203508 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.855404288 seconds)
  done (took 57.435807596 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.876036956 seconds)
    (2/2) benchmarking "in"...
    done (took 1.87641737 seconds)
  done (took 5.542743517 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.855718918 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855901549 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.856731683 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.855823879 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.855854944 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.855749035 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.855811732 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856997908 seconds)
  done (took 16.636217578 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.857738513 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.85985911 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.858345915 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.857771734 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.856872834 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865649779 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.858665552 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.858089187 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.859065938 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.858073047 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.862070053 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.860382016 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.865823553 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.86175877 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.856963221 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.86099842 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.85827458 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.861344285 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.85972107 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.858998768 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.860315853 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.859315111 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.859394222 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.860252442 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.859091473 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.860155544 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.868925351 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.860048306 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86048124 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.859806087 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.86672006 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.862710519 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.859357808 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860554455 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.860117176 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.860401292 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.867258913 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.859992447 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.860127453 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.861024498 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.86239477 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861751195 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.863170405 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.868213379 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.860569917 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.860209384 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.859587577 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.862505398 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.859968265 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.862366014 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.868122539 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.85954268 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.859739535 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.860134098 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.861868694 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.86146693 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.861514577 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.861484035 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.867480083 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.867985008 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.863397107 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.879997962 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.86905434 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.863008105 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.86172165 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.869784336 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.884366852 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.862490251 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.862528814 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.861994264 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869596103 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.862169925 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.861765695 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.86125932 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873178099 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.870909895 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.862278769 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.861443882 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.862306252 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.865911902 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.863869399 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.86254594 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862116435 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.86310982 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.870669947 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.886325115 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.862625125 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.863037645 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.864752499 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.863269046 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.868199009 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.864355799 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.861943461 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.863560675 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.863557298 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.865868897 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.863612612 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.863657892 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.861708013 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.872723823 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.864012468 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.863391906 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.865879735 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.871343376 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.862919083 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.864301722 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863833325 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.863677406 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.871730162 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.865330204 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.864601063 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.864492999 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.865561818 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.868094991 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.864195129 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867078332 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.872651845 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.872418863 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.865540628 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.868419787 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.868417907 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.866455409 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872801334 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.887970811 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.864411334 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.867880211 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.869468784 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.87679284 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.869715729 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.865203282 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.867862818 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.865106166 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.86564938 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.866861684 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.86550632 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.865185047 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.865092643 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.866051083 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.865739535 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.866052869 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.867754261 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.867448706 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.867619576 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.86598466 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.871741639 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.866837474 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.869126355 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.87280213 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.866832546 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.866844965 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.866886644 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.868834113 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.867553404 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.866807303 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.866500544 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.866283893 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.86796538 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.866958214 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.868464192 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.867105998 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.869444192 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.867189552 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.871242666 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.867932631 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.867872208 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.866349615 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.866614736 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.867525364 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.867700944 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.868081285 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.868944117 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.868501851 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.871640698 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.86675698 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.867701736 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.867511162 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.869326489 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.86676845 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.870942888 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.878569047 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.87216156 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.87794555 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.868495257 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.875402544 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.868928305 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.869935991 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.86876675 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.867280317 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.869178823 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.867646762 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.868636854 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.871992337 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.890249314 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.879225306 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.871483655 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.870463061 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.873729186 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.874325919 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.874463666 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.869409478 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.869030457 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.870201785 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.869416356 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.869779215 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.868980903 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.872241671 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.869459734 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.870414428 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.872600355 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.869741144 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.869331467 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.869657651 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.869834815 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.871893425 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.869833707 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.868669212 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.8700566 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.870160528 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.8775543 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.872148053 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.870506514 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.870888659 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872455927 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.870707021 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.872292766 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.871402072 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.873734356 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.870299866 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.871041373 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.878429503 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.872398046 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.870792228 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.87058324 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.870456032 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.87166482 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.872015241 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.87331822 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.879083138 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.874106071 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.871152039 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.877716862 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.872079703 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.873017414 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.871949698 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.8732716 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.872951426 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.873142876 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.872630188 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.873120192 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.879857789 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.873150667 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.872202944 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.871843602 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.873956651 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.873925918 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.874226188 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.873520695 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874279508 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.881130589 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.877773568 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.874006433 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.876071218 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.87414399 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.873707457 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.877134659 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.872433891 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.884541313 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.882553531 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.873300895 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.873847762 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.873112716 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.874649474 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.874758241 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.873611294 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.881231118 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.874265348 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.874564622 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.877376103 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.875053116 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.87396004 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.880249032 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.873916592 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.876512494 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.874178594 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.874520038 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.873946436 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.873667991 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.876279126 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.876536108 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.875537498 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.878930665 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.874681677 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.874665643 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.8755004 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.883960817 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.875706042 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.874824033 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.881887629 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.87578751 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.874507792 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.875169364 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.875635826 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.875241075 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.876106086 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.875533223 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.876530455 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.875533052 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.878282104 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.885417141 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.878877599 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.883785405 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.876308109 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.885686107 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.875017641 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.875414751 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.875061218 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.878931904 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.884200574 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.87546134 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.873649274 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.885625204 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.879683234 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.876110863 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.880240093 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.876521007 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.874657277 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.876608889 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.87626179 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.881203904 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.878895831 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.875397932 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.876600079 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.876237429 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.875278862 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.879970336 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.877450564 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.877724764 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.87702789 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.876515987 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.877075777 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.877736559 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.877330227 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.877358141 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.877416548 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.877852289 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.884711977 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.878063976 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.877991843 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883080262 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.877515273 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.886154803 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.878560377 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.879318542 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.879051735 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.877743883 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.880583684 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.877925815 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.877782954 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.878375558 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.877701302 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.878212804 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.889036428 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.885955814 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.881582025 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.879432389 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.878644374 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.878862271 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887929656 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.901720928 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878686127 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.880032663 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.883032637 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.885763658 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.881474754 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.884376804 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.882157279 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.887361765 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.880227278 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.879129279 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.881970717 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.892089786 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879791924 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.879611866 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.879099739 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.885178003 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.881262583 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.880501163 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.87962243 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.881841206 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.881165226 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.891870782 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.881080126 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.881146458 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.880916139 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.880528857 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.880797512 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.880415876 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.880782333 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.881197493 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.880320117 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.881435546 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.882014058 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.885546331 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.880146584 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884140719 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.889568857 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881479906 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.883455828 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.882048875 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.881323444 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.882891721 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.882779122 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.880630942 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.882867897 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.882343593 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.882106236 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886903234 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.889520854 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.881915515 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.882357772 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.881589388 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.884950024 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.880424485 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.882232679 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.882858997 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.890584275 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.884890954 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.892553166 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.890938578 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.882312004 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.883181366 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.889239134 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.89290211 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.883230356 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.881452038 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.882880256 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.883565348 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.884413124 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.883288764 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.88283137 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.883342711 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.88702622 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.882491217 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.883206595 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.883733077 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.882375758 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.885014327 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.885113318 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.888800537 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.883844325 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.884044209 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.881976265 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.883116942 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.884833828 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.885619563 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.884041487 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.883421386 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.885825207 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.885398506 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.888969606 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.884454297 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.884117215 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.88510801 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.884436182 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.885217255 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.883330081 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.884257754 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.884525059 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.886886943 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.89188857 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.883387316 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.885054874 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.885702076 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.888093921 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.884560316 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.883989359 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.884638752 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.884920893 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.893122738 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.885600766 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.886375883 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.885204748 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.885254531 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.890042847 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.886555149 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.889019319 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.885493974 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.885785241 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.885222296 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888144352 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.893254824 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.889497881 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.886724593 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.892313534 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.889700282 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.886906995 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.885589454 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.885401258 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.885653491 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.88705446 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.889745395 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.886451774 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.889093985 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.887534664 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.887603955 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.88612558 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.888943044 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.887546449 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.886330586 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.890042335 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.894737591 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.896059736 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.891488523 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.888351059 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.887604606 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.890865504 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.898045783 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.888319668 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.888282103 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.888754868 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.888182028 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.889277846 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.894725677 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.895745777 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.890979113 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.888008009 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.891478532 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.905103817 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.89296185 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.896428631 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.919291987 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.889386989 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.889091658 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.887562468 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.88857207 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.888023453 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.890148798 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.889023406 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.895309835 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.889357188 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.888757274 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.896132339 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.888680814 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.888673051 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.891275897 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.887978524 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.892945524 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.889810853 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.895887418 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.889461152 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.889382635 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.888818614 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.890740018 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.889290898 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.889825373 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.889302873 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.890376028 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.888896399 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.889413908 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.900775359 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.890210254 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.890092445 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.902039394 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.901578723 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.891018494 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.889984405 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.890615012 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.894744315 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.893189784 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.889960535 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.891881681 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.898652392 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.893132207 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.897857158 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.890838027 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.893190219 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.890619474 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.889824917 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.890162139 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.901073041 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.901624288 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.890641811 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.89074303 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.896985462 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.89121752 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.897437789 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.896623329 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.892406598 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.891534601 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.891013592 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.891432321 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.893169756 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.890909361 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.896142517 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.898311834 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.891232725 seconds)
  done (took 1120.550295499 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.890952203 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.891186969 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.892464872 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.8903274 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.889189775 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889439362 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.890153901 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.888711425 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.889032268 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.889088084 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.892130041 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.889740057 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.889836788 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.890214627 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.889035717 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.89019678 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890102624 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.889770224 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.890218056 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890135441 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.889033707 seconds)
  done (took 41.514369637 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.891604365 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.88733059 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.886919605 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.887124575 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.88930194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.888701335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.886197918 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886206871 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.886931806 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88717222 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.887451893 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886761841 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.886854816 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.885996727 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886120742 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.885546803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.886712537 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.884792874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.885673256 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.886573474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.888304407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.886763373 seconds)
  done (took 43.337571124 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.885668314 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.884982473 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.885565349 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.885380216 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.885389142 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.885070619 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.884861561 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.886251103 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.883950784 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.88589952 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.890678105 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.893402258 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.885443935 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.889566201 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.88740845 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.885157439 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.033434856 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.883705255 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.883286625 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.884958536 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.883962029 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.890829628 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.885901229 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.884480688 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.88394156 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.884679527 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.88521059 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.884507633 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.885245709 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.889275498 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.89012359 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.884381781 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.885659804 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.887433889 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.884218405 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.887488256 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.888424666 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.884224183 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.885708673 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.885116327 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.893910166 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.90860013 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.883501382 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.882177675 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.890862122 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.887285507 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.883512126 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.884932323 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.890586889 seconds)
  done (took 94.414364905 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.881880432 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.883245096 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.881096883 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.882200926 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.882027608 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.883373472 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.882335107 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.882064082 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.881981916 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.881596216 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.881730531 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.885071335 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8823603 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.881842829 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.885146279 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.882710983 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.882353722 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.883149977 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.883343367 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.882153646 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.883605733 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.883117678 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.882973206 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.883338393 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.882875782 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.88327011 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.883968662 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.884892255 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.884348248 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.883939756 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.884395216 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.882906252 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.883747083 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.883982444 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.883742736 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.883653183 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.883081399 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.88393019 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.883342609 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.883965894 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.882525309 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.883747654 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.884095581 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.885191837 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.88538857 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.883112567 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883636314 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.884248625 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.883855972 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.885118679 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.884579519 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.884143456 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.884125787 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.883659278 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.885340249 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.88395984 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.88452105 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.884717346 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.885023776 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.884899111 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.885133959 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.884436382 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.884201413 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.883839922 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.884324296 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.885449784 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.884112781 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.884807141 seconds)
  done (took 129.90190386 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.883849482 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.885353069 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.883684945 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88361406 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.88313987 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.885257303 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.88588195 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.881004995 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.878196957 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.879189017 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.878364256 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.879476104 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.877614194 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.875061465 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.874666923 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.874870037 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.875571445 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.87473106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.874316003 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874945637 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.873952922 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.875923685 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.875081747 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.875385462 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.873838323 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.873151691 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.87335579 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.873709209 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.874559646 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.873278849 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.872817509 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.872295487 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.872783368 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.872938581 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.872704007 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.871784376 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.872239388 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872904574 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.873565759 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.87253204 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.871130044 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.870667628 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.871663652 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.871868616 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.873535895 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.870565938 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.870552502 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.870259726 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.871768248 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.870696946 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.870612719 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.870621811 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871266817 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.87013731 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.871238523 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.87210345 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870550144 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.870335193 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870721687 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.870488973 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.872562853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.871126238 seconds)
  done (took 118.039191443 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870424125 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.871511199 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.870297872 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.871747795 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.8710059 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.871108185 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.871686439 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.873784886 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.873274401 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.871331599 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870413798 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.871805624 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873349607 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87251367 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.871414279 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872734074 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.870636292 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.871136898 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.872862644 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.871228331 seconds)
  done (took 39.235452824 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.870967376 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.870915037 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.871597735 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.870699668 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.870268708 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.869288806 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.870057271 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.87084205 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872008763 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869462851 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.869685646 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.869316457 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.870399014 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.87010951 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.871401855 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.86891926 seconds)
  done (took 31.726717107 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.868788979 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.870862656 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.868551698 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.868137943 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.86898564 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.86891728 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.86819709 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.869481093 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.868059593 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.868156146 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.868173671 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.868522024 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.868429158 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.869287791 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.86755477 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.868672079 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.86866689 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.870370452 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.868018372 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.867352304 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.869228136 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.867548402 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.867548199 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.869633842 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.867686325 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.86849512 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.868407181 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.868851344 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.867904536 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.869147361 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.86890495 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.869808176 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.868265094 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.869528179 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.869482235 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.868852859 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.868279231 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.868386511 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.86748676 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.868542587 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.868143331 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.869109606 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.868324876 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.867737771 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.868616488 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.870479869 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.867805509 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.86808948 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.867396981 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.868705333 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.869778589 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.867615029 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.867594101 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.868464447 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.868575757 seconds)
  done (took 104.572610682 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867926226 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.868122033 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.868562197 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.867690793 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.868806804 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.868565053 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.867999175 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.867293005 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868234639 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.86864538 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.868351272 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.867544037 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867658695 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.86863458 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.867794493 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.866697128 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.869515371 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.867744696 seconds)
  done (took 35.425261243 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.868329292 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.868731908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.870973449 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.867502948 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.869454241 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.868257306 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.869534212 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.87015674 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867984466 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.869577062 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868595858 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.869297086 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868533689 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.869451965 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.86824843 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868574122 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.867446729 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.868264791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.869068123 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.867559771 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.867599067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.868651259 seconds)
  done (took 42.912160145 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.868191085 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.867578402 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.880534075 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.884904889 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.885526382 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.895317209 seconds)
  done (took 13.081087186 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86764812 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866726591 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867964122 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867834547 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869428724 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867874425 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867166997 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868081712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868429336 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871895819 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867891522 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868051185 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867591045 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867911535 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867131706 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868738862 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866583269 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866692386 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866436393 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867825208 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868885132 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866223505 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86726771 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86691375 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866732336 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869498453 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868777689 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867096887 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86701725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866999542 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867148488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868157798 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866823724 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867453963 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867179866 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867357324 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867899239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867834009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867157668 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867341725 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.867244831 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869210069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868888974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867644111 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868060529 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867899858 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867350001 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869241073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868068185 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86877539 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868596468 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867901159 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869248695 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868975492 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868406174 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868137821 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868733764 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871092529 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869562955 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86883938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868775002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868622317 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868187007 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869170384 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868402675 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869248509 seconds)
  done (took 125.093639299 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869559856 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870372913 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87000627 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86985632 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8707549 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8696366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871819985 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87151762 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87036438 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869568631 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870315009 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870189611 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871013001 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869782262 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870590346 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870213192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870872254 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872213108 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870344561 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870517927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870612589 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870796182 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874001054 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872091626 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870830163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870657634 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871341222 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870159841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870987906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870829528 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87094726 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870783914 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871091332 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.871753481 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871448426 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870424439 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87085501 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870811497 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873415501 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871994618 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870848946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871110066 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870731484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871119597 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872496649 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871708256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87101287 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872060317 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871601766 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87157209 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871992445 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872135218 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873093462 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871498611 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872915561 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873121986 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872147424 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872448958 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872105118 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872057729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873523828 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87435779 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873335319 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872343925 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87261927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873888776 seconds)
  done (took 125.314925434 seconds)
done (took 2596.796897417 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.931952234 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.872159892 seconds)
  done (took 15.606838455 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.038280211 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.988782346 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.873973253 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.897543419 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.875108765 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.896751163 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.894065915 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.874410925 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.876849141 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.874416861 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.874406454 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.063180856 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.934912664 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.875055944 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.874833652 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.970452756 seconds)
  done (took 52.488314187 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.880069813 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.878840328 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.889987898 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.880557677 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.880254769 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.89163979 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.909168151 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.883406915 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.914497218 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.892252515 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.948624682 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.890701205 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.879092122 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.930074061 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.896234862 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.895269434 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.978186974 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.957115817 seconds)
  done (took 36.080824168 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.95876872 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.889909079 seconds)
  done (took 10.660780057 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.891734344 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.873750961 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.885309799 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.874886487 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.895165365 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.879159337 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.901551316 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.90872378 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.879842642 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.893831943 seconds)
  done (took 70.69359118 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.887079136 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.879619753 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.883982561 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.879852933 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.877157154 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.883827759 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.881561708 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.884138222 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.571709312 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.916040018 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.887770628 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.890001981 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.881440404 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.882724361 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.877448795 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.905928173 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.991608591 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.878156929 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.878142418 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.886899727 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.880978924 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.932245486 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.894547245 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.88380449 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.910470769 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.56359688 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.889048932 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.886681904 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.990384152 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.878933296 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.881922294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.092671657 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.88395412 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.345565491 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.213123156 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.883759763 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.893926931 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.88852394 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.878989566 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.997974849 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.883060018 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.888641039 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.826875387 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.190178666 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.97789791 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.926504116 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.225102572 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.884638633 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.88624269 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.914389492 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.884198459 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.883248648 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.896992889 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.402117178 seconds)
  done (took 133.653897936 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.879804892 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.23252397 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.042670893 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.880658978 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.163234627 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084129384 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.879972644 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923095236 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880202377 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.107312077 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.130004589 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.981138472 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881341604 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.877341865 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.877205034 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.878226503 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02161232 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.947167475 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.881458738 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.877708652 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904718312 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115734629 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.997889271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.882046077 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.906523811 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.083162401 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.998200818 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.979672241 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.594070601 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.878960094 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.939066414 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.880660521 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.880099002 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.878083365 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.032092397 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.970954275 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962144799 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.880759394 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.877964903 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.879388466 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.624391608 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078899902 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.973166569 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.004106431 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.13082299 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082650325 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.656385585 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.879663174 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.616399117 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040052274 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.105444633 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.109867524 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.997925796 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.881991639 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.213712616 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.88005745 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880462486 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.123668918 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107604512 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.975593039 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883655755 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.880054414 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.879776636 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.167072017 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.882242262 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.97400913 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88473345 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.880849851 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.976578694 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.978954911 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.115260482 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090964742 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.909533299 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.211687904 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.389999294 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.125105927 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.945740921 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129443929 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.883363891 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.883091596 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959965444 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.719747567 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.132618588 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.159363208 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.124097912 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915166676 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.598992062 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.881411019 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.104697347 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.099764067 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.129609129 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.124972261 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.118916811 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.193400845 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.882525675 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.881360766 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.126424254 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.000120454 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.885244898 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.228577903 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111720832 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.425246743 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908013439 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.185329455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010384392 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.885002981 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.510022401 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.882402471 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.103203557 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.921185653 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.882758772 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.883326923 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.099542155 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.851958009 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883027946 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.788095898 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.942455492 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.886145156 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.112778948 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.889249361 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142844231 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.886066415 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.112587458 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.353799757 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.912831012 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.056595417 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126546421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.886034253 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124776405 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.120171512 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.997970472 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.153838815 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.784085216 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.884471903 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.167837461 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.889226172 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.883612511 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.051003383 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.884526326 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025438104 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.887896039 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.164150403 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904497404 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114267229 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.886446116 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.13885049 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.916312345 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933690398 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.888141975 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.013757692 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.889381994 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.711290478 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040125999 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88785563 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.885465304 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.430554732 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.88803265 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031933926 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.105859835 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904780145 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.954273381 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.548347877 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.885295437 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968784661 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.907370324 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.27551558 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.887726465 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.134803034 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.887909776 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.885208085 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.885818433 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.170644983 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.121392675 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.886328317 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.88625751 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.781283797 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.885640102 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.887388622 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.066123256 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.783645488 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.887010712 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084820976 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.889683916 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015450776 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.892465897 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.95606682 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.217903873 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.886873837 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.886571117 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.887581174 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.887508857 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.888178819 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093455969 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.91093372 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.410031341 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.024126413 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.153385982 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.196888248 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.124838399 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.928968315 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.890523822 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.139917185 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.890504677 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.948405648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.889735596 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908101795 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115822225 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.892329324 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092692891 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.156068581 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.890730043 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934639965 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.890967575 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.890123732 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.887787637 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024359477 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970734977 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.891482075 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.887682569 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.003751908 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009249385 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.095878586 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.891138666 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.98324982 seconds)
  done (took 906.78804436 seconds)
done (took 1227.777474746 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.887774642 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.889881796 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.89478686 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.89412184 seconds)
  done (took 29.384726197 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.889886472 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.893036521 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.895081973 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.893484548 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.889990594 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.896347154 seconds)
  done (took 13.176928069 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.970965576 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.891247537 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.896360144 seconds)
  done (took 21.578847845 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.964771181 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.302364773 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.031958464 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.322888642 seconds)
  done (took 10.442054953 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.891398354 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.891792899 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.891260296 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.893897381 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.892174205 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.891788794 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.892865299 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.894012788 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.893349409 seconds)
  done (took 18.854022318 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.913598045 seconds)
done (took 99.170216295 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.100420638 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.045066626 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.963422106 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.990198571 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.917587181 seconds)
    (6/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.581389788 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.217762079 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.004767126 seconds)
    (9/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.402102878 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.912717957 seconds)
    (11/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.977987484 seconds)
    (12/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.993220367 seconds)
    (13/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.024572094 seconds)
    (14/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.047711911 seconds)
    (15/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.368212932 seconds)
    (16/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.012218163 seconds)
    (17/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.895373282 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.899352258 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.07260608 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.051698188 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.894761647 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.899135402 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.999305748 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.200835919 seconds)
    (25/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.160060146 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.634690381 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.010946776 seconds)
    (28/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.663246286 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.746927252 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.928358606 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.151562798 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.982577432 seconds)
    (33/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.342740269 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.29379097 seconds)
    (35/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.143383936 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.212460493 seconds)
    (37/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.975457594 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.893218489 seconds)
    (39/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.213698891 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.897959055 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.357305487 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.034780748 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.903453686 seconds)
    (44/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.988652476 seconds)
    (45/309) benchmarking ("sort", BigInt, false)...
    done (took 6.901054502 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.062852934 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.048317868 seconds)
    (48/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.731571427 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.991727036 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.189252308 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.154172328 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.333060414 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.114155752 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.380658087 seconds)
    (55/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.973178023 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.899700718 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.546124138 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.151973863 seconds)
    (59/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.336802652 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.052199044 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.916547912 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.027992144 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.93715355 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.896276766 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.235741521 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.911465415 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.987726996 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.019322063 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.856510579 seconds)
    (70/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.713056164 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.895077933 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.802301154 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.234652746 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.96443634 seconds)
    (75/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.76203017 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.07410776 seconds)
    (77/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.448195509 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.689487426 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.277510413 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.918607132 seconds)
    (81/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.906413816 seconds)
    (82/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.074886489 seconds)
    (83/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.90451542 seconds)
    (84/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.995654147 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.388835436 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.961717192 seconds)
    (87/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.646738535 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.212670373 seconds)
    (89/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.059254775 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.974045867 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.95520835 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.182251629 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.901967431 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.479948033 seconds)
    (95/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.385835927 seconds)
    (96/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.028629398 seconds)
    (97/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.896675402 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 10.378619303 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.581801276 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.223589738 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.251712347 seconds)
    (102/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.408615491 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.171397884 seconds)
    (104/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.460736758 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.674534869 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.117897112 seconds)
    (107/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.660516726 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.910626873 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.001832445 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 3.918156909 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.949645209 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.235371335 seconds)
    (113/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.28673148 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.521996057 seconds)
    (115/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.049027228 seconds)
    (116/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.392716974 seconds)
    (117/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.122671378 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.912662081 seconds)
    (119/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.918445259 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.909427291 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.111152537 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.922946306 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.153044082 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.277050708 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.936306228 seconds)
    (126/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.635347958 seconds)
    (127/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.276443802 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.527690086 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.327908215 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.913654958 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.936904964 seconds)
    (132/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.914062966 seconds)
    (133/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.013872958 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.911175458 seconds)
    (135/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.431175375 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.936454981 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.914672791 seconds)
    (138/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.017546058 seconds)
    (139/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.918010594 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.007145643 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.916240416 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.333302314 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.919790812 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.114845396 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.94689461 seconds)
    (146/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.945819671 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.258753679 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.035595683 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.231187502 seconds)
    (150/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.171878204 seconds)
    (151/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.168128729 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.043136049 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.249877547 seconds)
    (154/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.553406144 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.918515371 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.25641315 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.512703509 seconds)
    (158/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.230685978 seconds)
    (159/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.9434325 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.03913635 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.973097528 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.787573442 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.31088868 seconds)
    (164/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.938015239 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.912752351 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 4.091547886 seconds)
    (167/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.248054126 seconds)
    (168/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.938656425 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.624692597 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.850274923 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.31236181 seconds)
    (172/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.025820653 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.598325853 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.921980185 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.919852185 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.926594248 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.918159411 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.026467743 seconds)
    (179/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.812981473 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.36201379 seconds)
    (181/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.021027317 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.788791942 seconds)
    (183/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.271444456 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.983270541 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.211655428 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.130256089 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.94212367 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.307086256 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.185776283 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.918555602 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.918776415 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.244339518 seconds)
    (193/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.160685881 seconds)
    (194/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.005071646 seconds)
    (195/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.942798042 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.164912412 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.115399209 seconds)
    (198/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.208168196 seconds)
    (199/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.065213336 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.915987215 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.763238576 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.077023422 seconds)
    (203/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.347560451 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.47083388 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.948072561 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.983889322 seconds)
    (207/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.315957711 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.105972719 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.030009762 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.240142483 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.951296588 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.150901133 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.095678649 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.265440315 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.088137785 seconds)
    (216/309) benchmarking ("sort", Float64, false)...
    done (took 5.636159146 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.665372259 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.228912843 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.322070835 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.918951141 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.923603611 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.052028365 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.940763246 seconds)
    (224/309) benchmarking ("sort", Float32, false)...
    done (took 5.580989161 seconds)
    (225/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.040845045 seconds)
    (226/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.098935143 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.25686681 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.92175655 seconds)
    (229/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.018173051 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.009405086 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.114770138 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.150300025 seconds)
    (233/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.030792309 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.107842539 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.392867809 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.083458149 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.08667231 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.037149783 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.267178803 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.328378013 seconds)
    (241/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.347537185 seconds)
    (242/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.994632315 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.935627921 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.016697559 seconds)
    (245/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.151150064 seconds)
    (246/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.01523317 seconds)
    (247/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.018596848 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.1238048 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.997296446 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.19177966 seconds)
    (251/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.341493586 seconds)
    (252/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.920108108 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.022747411 seconds)
    (254/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.18082045 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.579600858 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.080661049 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.929644977 seconds)
    (258/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.150030316 seconds)
    (259/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.93136983 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.568098926 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.91801623 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.053002227 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.057009029 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.799929619 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.930940626 seconds)
    (266/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.070649708 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.926754948 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.03134313 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.944041405 seconds)
    (270/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.390671312 seconds)
    (271/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.01675518 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.227996913 seconds)
    (273/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.07725425 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.926596549 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.241227495 seconds)
    (276/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.040985009 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.682654269 seconds)
    (278/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.148650673 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.00243733 seconds)
    (280/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.218902976 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.929946477 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 8.342942559 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.924542616 seconds)
    (284/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.077716204 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.527121667 seconds)
    (286/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.947026257 seconds)
    (287/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.999650338 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.924509166 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.01770011 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.190983803 seconds)
    (291/309) benchmarking ("sort", Int8, false)...
    done (took 4.872426941 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.828083025 seconds)
    (293/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.009158618 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.616750927 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.150393603 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.957263935 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.57733694 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.927093862 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.757925327 seconds)
    (300/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.956519287 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.002776929 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.903748385 seconds)
    (303/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.183695889 seconds)
    (304/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.265974274 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.250811806 seconds)
    (306/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.935681769 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.32023347 seconds)
    (308/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.058314809 seconds)
    (309/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.142982493 seconds)
  done (took 1026.156824499 seconds)
done (took 1028.047337866 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.950512843 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.942664334 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.924608667 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.946650659 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.038424927 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.969920365 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.938408678 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.928916238 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.974730875 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.974976287 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.923998212 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.966358907 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.925764007 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.926156698 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.925263722 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940952222 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.233591868 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.957437762 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.943001935 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.936270035 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.944463948 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.924014751 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.976021155 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.966088291 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.930346427 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.930774273 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.928610842 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.9469783 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.040187151 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.929994599 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.931906833 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.939440075 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.233930533 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.957435457 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.923879353 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.947180736 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.939703695 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.93921224 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.930888777 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.959836043 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.380058352 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.93174327 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.928296235 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.927332533 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.926671053 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.932400003 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.927337837 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.937139831 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.941103005 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.942857575 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.375560057 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.9498396 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.931881385 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.927131121 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.940117597 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.927751532 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.930692149 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.944038642 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.947723379 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.94621098 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.220844398 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.966656985 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.932557184 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.94727631 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.93745254 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.410834347 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.933099784 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.936940509 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.380484341 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.941838209 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.410311064 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.945026259 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.932551529 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.945257975 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.961889143 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.235183265 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.956969874 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.929272926 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.937802488 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.926781648 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.940142632 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.943274387 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.935586074 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.930088793 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.945486911 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.973431154 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.942564857 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.9312274 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.94192891 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.950545225 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.938752311 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.941766258 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.934442918 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.928686117 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.944449628 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.934690431 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.933668464 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.933564234 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.934545555 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.941984925 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.377637376 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.953160151 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.928386092 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.927040454 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.930131079 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.945505194 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.378869501 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.938681348 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.953327898 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.979980967 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.932842283 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.22356872 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.965109342 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.94739705 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.941766949 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.933438544 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.928989021 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.224613859 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.408910866 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.95435587 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.930897061 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.929330418 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947962232 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.93300984 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.928073626 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.238212956 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.964086816 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.947940437 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.054891999 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.945364508 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.965448943 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.930673908 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.936169351 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.978245336 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.950426948 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.964854692 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.935069909 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949544071 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.950779198 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.930926192 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.945512821 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.946422341 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.934758312 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.940882985 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.930336939 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.978923566 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.948126287 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.94670167 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.953202542 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.056508251 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.930087298 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.224904126 seconds)
done (took 303.357739585 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.022345684 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.932541563 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.060985384 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.932440691 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.026271531 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.007033851 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.933193445 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.93262684 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.934034776 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.45248889 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.933279463 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.937931393 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.934542552 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.934750779 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.006712117 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.933640252 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.93338862 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.217479886 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.934510009 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.013699515 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.936158084 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.935105064 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.934165928 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.450623627 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.938380145 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.935296603 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.015718794 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.932891456 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.226731 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.934884338 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.93553404 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.227522789 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.014272489 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.946562843 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.941822355 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.941122142 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.024152839 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.942637179 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.0025272 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.01142718 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.052238555 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.969856779 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.935743701 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.936200834 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.938443128 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.93560394 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.934493777 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.967200654 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.940719319 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.941409943 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.231230934 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.940152505 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.943083836 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.934881965 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.936650636 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.948144917 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.93605266 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.936873044 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.015934334 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.937299577 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.00373553 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.441991774 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.436679735 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.937169541 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.936173553 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.935882132 seconds)
  done (took 189.10575314 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.00159816 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.009317029 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.002824081 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.940809461 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.988872889 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.002573021 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.941823212 seconds)
  done (took 15.750936313 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.942525542 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.936907931 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.984628865 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.984529261 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.937259624 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.120134809 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.948140544 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.943866106 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.964575658 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.936060161 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.59752102 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.985875808 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.941845706 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.938864858 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.94812952 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.992457728 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.937935106 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.937386402 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.044719698 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.085953069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.943451164 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.9458379 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.963107551 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.949288539 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.93920154 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.937728069 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.940226222 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.943922559 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.938976974 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.938621617 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.938966271 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.989016745 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.939100765 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.936949582 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.938839278 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.940410993 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.938705502 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.938624223 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.937743583 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.940628631 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.937908081 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.939084016 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.938480524 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.938932 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.939499505 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.960518629 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.939082303 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.938652287 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.93921286 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.938853959 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.964680183 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.939103015 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.940562916 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.944487414 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.982022493 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.944175819 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.939810427 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.939153138 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.940343257 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.940552986 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.940605294 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.087924019 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.988092449 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.940022023 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.988468425 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.095521034 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.941023898 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.944084474 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.941321737 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.028473936 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.941172546 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.98946052 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.940973304 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.055221529 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.941024794 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.125038262 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.9638029 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.943596792 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.944228293 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.939510616 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.950610543 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.941641536 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.943192967 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.94771414 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.947116903 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.942058171 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.942099696 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.942019302 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.947964422 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.942161191 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.992301266 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.942089193 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.94230825 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.084783528 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.942402441 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.05318334 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.969104502 seconds)
  done (took 212.792901435 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.950793542 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.948194442 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.944641231 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.955663108 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.941666846 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.941909332 seconds)
  done (took 13.552098585 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.944747376 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.951778803 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.942258111 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.943353569 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.94183398 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.944372652 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.945024924 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.946008769 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.947719691 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.94256728 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.94270396 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.942456208 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.943732001 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.943445818 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.943466742 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.943435155 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.943273074 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.943043476 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.94499348 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.943701589 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.079145673 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.945689127 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.944352407 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.947563396 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.948181142 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.942779091 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.955991068 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.943145648 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.943530974 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.950896184 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.947260089 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.943270364 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.946831374 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.95159949 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.947963769 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.945849097 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.951170749 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.943051041 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.945077821 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.944156782 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.943792271 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.944858755 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.944887046 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.944515523 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.94793214 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.950095557 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.94875643 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.956975441 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.94544906 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.944820672 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.944716652 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.948033452 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.945170729 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.94384239 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.948900066 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.952798167 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.948904525 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.945324419 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.944639725 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.94939165 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.950996434 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.945710764 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.950411998 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.949942165 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.953708356 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.945027006 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.947895495 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.952636283 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.945286817 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.946954492 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.945388559 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.945724701 seconds)
  done (took 143.146707147 seconds)
done (took 576.226010456 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.654366545 seconds)
  done (took 9.527164346 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.046938088 seconds)
  done (took 8.922290279 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.730756446 seconds)
  done (took 10.60781821 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.972340762 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.983375506 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.952031687 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.955031891 seconds)
  done (took 29.74590286 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.250928158 seconds)
  done (took 9.122742321 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.957036909 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.961066824 seconds)
  done (took 15.867092066 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.94923619 seconds)
  done (took 8.821000684 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.332904058 seconds)
  done (took 9.227676152 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.967620502 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.956668646 seconds)
  done (took 15.820011482 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.94814725 seconds)
  done (took 8.820946585 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.675634164 seconds)
  done (took 9.646639927 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.955548163 seconds)
  done (took 8.846806126 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.961339469 seconds)
  done (took 8.833635595 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.023216574 seconds)
  done (took 8.896337668 seconds)
done (took 164.579456095 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.954602743 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.951730413 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.945277948 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.944849085 seconds)
  done (took 29.669610227 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.987724822 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.987316007 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.995789104 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.988109452 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.978558987 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.978488975 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.987236285 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.988443445 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.978341864 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.984749809 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.981226678 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.979234296 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.981213806 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.989954285 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.991225816 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.980258355 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.986305808 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.983239172 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.973845521 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.99075149 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.979753659 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.98163615 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.948017272 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.948446099 seconds)
  done (took 49.422734164 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.134751608 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.014363576 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.102116988 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.994424482 seconds)
  done (took 10.119617212 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.94717528 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.013530382 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.000028994 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.995679659 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.998807818 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.051879663 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.001558083 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.084803833 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.075536484 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.075273153 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.956551414 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.970106644 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.973966919 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.003225549 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.05262709 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.94981144 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.951815571 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.064886594 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.01193725 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.132900062 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.949340063 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.003982776 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.000892429 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.002349153 seconds)
  done (took 50.14353409 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.952393913 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.958737014 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.957347828 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.950408339 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.952386187 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.95065102 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.959122994 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.95251139 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.973136113 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.951944704 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.95165812 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.951419634 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.957772033 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.952074747 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.950824323 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.964089135 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.966095014 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.951555513 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.955244873 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.957527038 seconds)
  done (took 40.992832964 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.94849941 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.796932133 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.294518335 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.202143747 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.950141758 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.950010552 seconds)
  done (took 32.018760514 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.966669398 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.957086085 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.951683591 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.008084135 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.093842912 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.959290501 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.952884064 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.961250573 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.000461567 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.021505211 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.973936839 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.981619121 seconds)
  done (took 25.706406386 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.950440887 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.95726302 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.954524759 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.968107232 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.96200803 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.961372425 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.958606382 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.949634705 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.967750217 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.971949632 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.959714728 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.962255444 seconds)
  done (took 45.405890377 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.166513626 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.177441896 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.168763999 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.472997035 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.948159393 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.855752878 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.718980696 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.755617915 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.268749909 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.93990798 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.915170592 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.030351569 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.194360973 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.953982282 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.210991188 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.966344806 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.9540997 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2226653 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955080382 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.953844258 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.255414253 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.013648369 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.168379894 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.001115063 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.166518736 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.334191995 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.201018366 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.210911389 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.305675286 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.091216822 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.056738294 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.002239836 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.963183131 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.964468603 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.960247884 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.969252721 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225740864 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.955029657 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.033002774 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.94230308 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883042592 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.326270884 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.085868876 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.373475688 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.085213627 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.195669522 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.959456429 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.053770804 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.01807201 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.243772133 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.077559367 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.167704935 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.879711639 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.356188898 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.09790562 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.958556098 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.960124818 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.654598346 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.195232996 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.036924414 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.328638155 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.085558588 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.957216154 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.042646755 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.955280576 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.069723459 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.144617668 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963754683 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.953590426 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.963218612 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.052503329 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.169954376 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.957417837 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957529709 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.973097801 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.958256383 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.307612073 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.435323399 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.946586717 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.514810054 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.33993415 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.925424854 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.33473908 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.002579717 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.245287817 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.170776543 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.034796098 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.200990457 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.824385219 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.96202425 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.762560874 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.03854385 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.019305267 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.956295693 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.059334748 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.292357324 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.093174965 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.956680608 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.883094984 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.968539004 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.160640008 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.344717892 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.015790386 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.95807275 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.95747139 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.960586822 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.958311844 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.972747436 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.973442383 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.879890515 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.242699871 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.081789208 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.233271516 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.960711951 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.643352982 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.226718008 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.087871566 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.576844462 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.09284824 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.948160693 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109765091 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.968681607 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.961204219 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.145822582 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.371695239 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.063709673 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.203023242 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.04668358 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.995514572 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.962963796 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.039743305 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.184479704 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.958368963 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.213692876 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.208999824 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.646039145 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.046506764 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.040978755 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.967169917 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.172933721 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.040094714 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.491218419 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.176263916 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.445882867 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.95079971 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.734377424 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.257334 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.360342812 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.975079596 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.067335438 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.992645965 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.663296188 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.885088737 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963695635 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.298372468 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.011133034 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993578987 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.960457834 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.96217509 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.966807553 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.039947211 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.034577714 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.033748214 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.888697855 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.963575864 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964526336 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.964048706 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.498660722 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.674005587 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.252818412 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.961374612 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.034299964 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.961500151 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.559713163 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.969862678 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.9963749 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.070558198 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.739846148 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.993743044 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.274937138 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.393579746 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.09120332 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.960417798 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.960984746 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.664952921 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.971958226 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.662768474 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.246708747 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.975704479 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.44975985 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.028579488 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.041190759 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.97941216 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.96379057 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.964034382 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963354813 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.16467091 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.473097362 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.353346839 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.326533609 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.045028171 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.232642215 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.162956131 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.39240789 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.658591035 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.494646385 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.190554626 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.964119141 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96553479 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.426613669 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.972353944 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.180666897 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.168028591 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.244435916 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.277751264 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.384583024 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.968673305 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.981279316 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.205946592 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.964617072 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.396669558 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.073391538 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.382545513 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.79323572 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.247518998 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.032172969 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.97584756 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.616657918 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112926752 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.937240415 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.093158504 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.890016425 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.682290385 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259946499 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.24357008 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.954576827 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.324776928 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.269067378 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.284155803 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.616099066 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.965470535 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.0288915 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.046017737 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.973357113 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.429553286 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.013380103 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.023781538 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.972248989 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.964845701 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.967334018 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.643376985 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.043420543 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.097423892 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.758390651 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.386053205 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.883497067 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.23397535 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.026875578 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.441298659 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.010929011 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.179889414 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.970604556 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.450582118 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.021083567 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.256552593 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.929327721 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.181770124 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.170550609 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.995515278 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.974886592 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.892641273 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.826866579 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.974852879 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.076791605 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.883984248 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.969421633 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.258776706 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.50931622 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.010783054 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.968534686 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.347413226 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.448545483 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.162068364 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.975495369 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.180873317 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.094534 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.887806847 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.451782056 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.553707076 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.667556908 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.979245737 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.17056012 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.37013912 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.199144363 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.012399197 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.039584883 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.237886674 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.95704144 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.968173605 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.488566263 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.065164674 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.207464377 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.305043827 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.393853221 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.439238144 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.227199238 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.96841898 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.195531251 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.348403423 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.218749188 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.903626772 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.060077399 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.18703085 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.257236098 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.856521662 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.678098368 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.210258434 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.973710737 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.896305486 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.175478416 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.471195517 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.333891083 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.513254753 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.077092925 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.004578717 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.452804236 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.990858181 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.904444206 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.970672339 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.919020977 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.186965855 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.077052148 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.015469887 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.527452924 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.284965719 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.388900181 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.141569888 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.016779583 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.897084204 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.749234671 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.925057807 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.080826169 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.014888323 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.041798804 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.973951354 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.172970329 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.408804899 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.027004869 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.513152911 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.19388883 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279432284 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.240711745 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.292483889 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.935461233 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24434569 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.923360943 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.375276924 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.064992561 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.04806831 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.971560128 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.975982067 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242858423 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.369925206 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.491780015 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.017035099 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.383664293 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.08985565 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.975248425 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.977392955 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.36851276 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.214989095 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.188136114 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.051438218 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.175218693 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.04856828 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.487349955 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.977626837 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.975435408 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.108450617 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.976076995 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.727888642 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.274840991 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.73125712 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.174856777 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.493836655 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.91105259 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.092581339 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.025752787 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.97325724 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.984188657 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.129393553 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.214171709 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.259529065 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.744594337 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.978556026 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.976938265 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.886078407 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.746492732 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.215244944 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.035619401 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.977190504 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.975906617 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.090381302 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.974936527 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.256207293 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.036771798 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.973806747 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.974515324 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.187435643 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.488052042 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.991028621 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.674236182 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.176508469 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.979636881 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.458153804 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.466899025 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.176119325 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.02481522 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.090735569 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.242645477 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.504363486 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.091112992 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.978611057 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.200848342 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.976640651 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246054024 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252517891 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.975525557 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.191074174 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.369680409 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272292686 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.990906349 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.875855352 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.985842254 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.259898193 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.037790208 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.974654771 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.98583628 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.973602281 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.696898709 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.463714818 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.133713919 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.348855314 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.812284749 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.74195092 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.979956545 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.982003638 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.755280124 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.707560766 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.191176991 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.264868698 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.923536119 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.179583222 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.680139846 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.97623717 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.253310337 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.903841683 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.979898018 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.388774577 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.256805921 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.914308459 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.981948476 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.57425432 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.977635601 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.065277104 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.98102624 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.105460017 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.263083415 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.412687183 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.108263301 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.617330528 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.683138971 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.919345191 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.030339708 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.784664586 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.539398758 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.682979269 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005746399 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.994506962 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.90357346 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.980966769 seconds)
  done (took 1686.328573399 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.004107452 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.997268256 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.000318567 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.00950301 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.038159558 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.098948735 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.000470838 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.031264096 seconds)
  done (took 58.084835425 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.978422456 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.995782686 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.982681184 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.979813016 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.990122474 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.978971828 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.139274235 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.99519497 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.011215726 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.984051482 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.986870794 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.98012041 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.249601619 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.000859918 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.978735638 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.987147068 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.98207714 seconds)
  done (took 76.110347896 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.979756008 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.190413964 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.03818951 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.983512569 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.938841998 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.985505457 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.914496306 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.031379462 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.985759916 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.219799381 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.275005603 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.996983863 seconds)
  done (took 91.445983218 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.985429579 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.979104779 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.979616053 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.979640475 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.980272033 seconds)
  done (took 11.814307961 seconds)
done (took 2209.207347168 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.293678828 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.03695041 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.083407669 seconds)
  done (took 6.026030532 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.127910959 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.172586724 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.284470435 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.050113172 seconds)
  done (took 10.547796961 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.239591257 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.349416363 seconds)
  done (took 6.496382507 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.338152247 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.993241456 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.345497714 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.983553764 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.989401367 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.987822313 seconds)
  done (took 22.872803468 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.98181733 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.983425652 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.983294201 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.983636491 seconds)
  done (took 9.840867192 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.984864648 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.731032233 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.989736263 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.00052089 seconds)
  done (took 21.614158258 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.120241267 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.094315332 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.121550904 seconds)
  done (took 8.243822228 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.132105497 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.188808828 seconds)
  done (took 7.229060677 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.12795937 seconds)
  done (took 4.036025675 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.010870678 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.252371845 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.495408248 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.552734315 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.634257341 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.760660371 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.297018902 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.221310398 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.410796171 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.434666846 seconds)
  done (took 25.977873419 seconds)
done (took 138.763111759 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.332596245 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.001147795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.177608913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.348010989 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.205692855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.17998685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.1963497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.33754344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.017894193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.005948529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.343516354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.207767541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.147142947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.99607659 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.152839578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.00253339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.205541608 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.346635657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.029569978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.267348961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.206499525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.995255525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.190209192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.003399328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.205572188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.131514797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.535716063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.000822971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.178500533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.546680807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.1333919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.416498916 seconds)
  done (took 171.956702989 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.984691044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.985820918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.985407348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.984765321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.240012239 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.987049178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.986109475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.984154978 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.182252887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.159704186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.984803344 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.233120679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.986227547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.985525662 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.984689465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.986773887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.316078425 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.985894888 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.985447119 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.985127589 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.986085779 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.078861722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.985255312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.088784063 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.309635149 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.985917084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.986501149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.985467648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.985030729 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.985019271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.985591926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.986227149 seconds)
  done (took 211.175207322 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.985779241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.984962911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.985196514 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.987260379 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.987630202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.993488178 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.988458423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.9889637 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.728377691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.737509888 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.988412479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.991505516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.992706307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.989416628 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.990076133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.990585842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.98990047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.990328561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.993150429 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.990491962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.989307796 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.723575521 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.987806468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.736329705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.989067552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.991174353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.989536635 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.990314918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.989446837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.990855156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.991806864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.993478928 seconds)
  done (took 224.550664264 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.233855074 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.993474592 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.994173346 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.0482592 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.994341619 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.993094883 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.995593764 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.238504712 seconds)
  done (took 20.407712535 seconds)
done (took 630.012798924 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.353353031 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.737545091 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.141448462 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.019096788 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.264094691 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.066072918 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.016549747 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.076535068 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.845163641 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.089427382 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.401164926 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.023488093 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.762620804 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.038854868 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.133748654 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.0718365 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.371270649 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.690379174 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.148794547 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.676142022 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.177497754 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.925157171 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.087718875 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.887974753 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.423007099 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.972169819 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.037094335 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.378992567 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.023322251 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.174181039 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.646120709 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.278415162 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.0275038 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.01241883 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.067989439 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.043933951 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.220279216 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.027278142 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.133706578 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.717606876 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.660696715 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.733888988 seconds)
  done (took 105.501973881 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.004961597 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.001526475 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.002487802 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.001157053 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.011931972 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.001487004 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.002280751 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.004391248 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.00288391 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.0028789 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.003150005 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.011385053 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.002886553 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.012686648 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.002975358 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.003543385 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.003313733 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.013066458 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.003792189 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.003060995 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.003941258 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.003384562 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.996709639 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.00449155 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.003390799 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.004316917 seconds)
  done (took 54.043446167 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.995714019 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.158868186 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.23970967 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015234998 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.997452905 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.998710248 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.024314986 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.009192669 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.998130911 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.997848672 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.115932448 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.000898806 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.009769653 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.237959403 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.011627652 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.996855218 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.997507642 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.99666649 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.166483322 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.012991058 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.025487729 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.008594822 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.024634716 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.014887988 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.0000043 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.998655939 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.999519033 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.427538037 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.00720023 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.115286407 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.039880064 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.033168597 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.325303897 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.256822645 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.049147421 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.005945776 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.998306499 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.122738447 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.003402664 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.001247443 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.02495687 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.008442677 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.244377996 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.514594317 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.011638955 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.997962737 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.425993681 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.130677767 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.03857717 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.01007056 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.252056878 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.014132087 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.998894151 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.001136498 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.035454323 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.011586995 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.999503667 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.258193147 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.013932902 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.027434873 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.010850894 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.001007656 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.177042542 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.008939697 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.166012412 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.012143909 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.005925673 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.0003974 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.248268686 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014699117 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.525624632 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.012372916 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.000481328 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.117206909 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.171092977 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.453266552 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.015773745 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.179491331 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.341332922 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.035035692 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.010878793 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.413967097 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.039990532 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.015574519 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.000716948 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.000475555 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.000692271 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.047020778 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.025728751 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.441695243 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.522362783 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.273762406 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.037646005 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.018658887 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.001831648 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.258494288 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.018635938 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.001522865 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.237617254 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.535258974 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.014059648 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.008885978 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.507073081 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.015792995 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.029349498 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.01495917 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.25714165 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.016017994 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.046954565 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.001396541 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.009184809 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.004552027 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.029457697 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.011618541 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.002266269 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.497275938 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.139524985 seconds)
  done (took 247.388749038 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.002231008 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.000849421 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.001699682 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.000484908 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.000254569 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.002627859 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.00122519 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.000918256 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.00177713 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.001527607 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.999774142 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.00350663 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.003719593 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.010453169 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.043616457 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.002930674 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.487769475 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.002303904 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.003815432 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.002279783 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.561078241 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.00584115 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.002410731 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.00322879 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.002284656 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.001613713 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.010331311 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.041915037 seconds)
  done (took 171.132238127 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.00452049 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.056970324 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.014540661 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.049511094 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.016415741 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.005087562 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.098688461 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.023218502 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.012678517 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.004270733 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.00425871 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.036799154 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.012487865 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.099854354 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.034066597 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.110696735 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.105689372 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.012151361 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.005657513 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.0050619 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.05096344 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.01859642 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.035268587 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.064438407 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.017268362 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.058654931 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.021561767 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.005903918 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.005415362 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.114441203 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.021963979 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.035991816 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.042279518 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.02713541 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.124001443 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.117841998 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.108946106 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.108675862 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.013478219 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.006204353 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.007937469 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.008690907 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.06035133 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.019174891 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.007742321 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.119357251 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.023872085 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.006653815 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.007742837 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.00679244 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.019251665 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.029451823 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.045961113 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.127000656 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.05133975 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.034748818 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.101160195 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.128985116 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.007992301 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.101436898 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.014641706 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.117440281 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.025448237 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.009323901 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.008850971 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.011711416 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.055165054 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.115507173 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.108214652 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.01570548 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.10316378 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.060363999 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.020209688 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.009407986 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.009541847 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.060163574 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.116655067 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.061193413 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.068026999 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.044513707 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.023865805 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.008095191 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.011994965 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.034418562 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.017044333 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.123019606 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.118689486 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.015341822 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.008403651 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.00856669 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.010464257 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.03312296 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.069834667 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.04952412 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.114899001 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.046751467 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.048096813 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.015822742 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.022996057 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.023348581 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.042558081 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.016866495 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.021901032 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.28286824 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.039074277 seconds)
  done (took 216.80262236 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.388581885 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.053797731 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.085093587 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.281540143 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.385583003 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.919525943 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.049830376 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.065304168 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.080108245 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.188943321 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.123353048 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.098181128 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.049969035 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.033860437 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.053691945 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.084491987 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.088654945 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.358819128 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.262155857 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.518085343 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.046363767 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.313968809 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.398232678 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.429675333 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.107583947 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.441376219 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.642970953 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.151683748 seconds)
  done (took 66.638414039 seconds)
done (took 863.426007491 seconds)
SAVING RESULT...
DONE!
