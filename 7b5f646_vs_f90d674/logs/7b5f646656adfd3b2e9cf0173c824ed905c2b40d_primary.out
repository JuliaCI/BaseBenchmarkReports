cset: moving following pidspec: 20058
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.901172703 seconds)
loading group "string"... done (took 0.59053053 seconds)
loading group "linalg"... done (took 9.189854338 seconds)
loading group "parallel"... done (took 0.178301432 seconds)
loading group "find"... done (took 1.476731592 seconds)
loading group "tuple"... done (took 2.140443088 seconds)
loading group "dates"... done (took 1.451396397 seconds)
loading group "micro"... done (took 0.232427961 seconds)
loading group "io"... done (took 0.614573071 seconds)
loading group "scalar"... done (took 44.765983002 seconds)
loading group "sparse"... done (took 13.729406918 seconds)
loading group "broadcast"... done (took 1.117354189 seconds)
loading group "union"... done (took 12.395921458 seconds)
loading group "simd"... done (took 2.605070749 seconds)
loading group "random"... done (took 10.523644615 seconds)
loading group "problem"... done (took 1833.061035191 seconds)
loading group "array"... done (took 26.485420771 seconds)
loading group "misc"... done (took 1.145905518 seconds)
loading group "sort"... done (took 3.92713916 seconds)
loading group "collection"... done (took 19.456176769 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.67129589 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137198427 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.166909013 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.345221424 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191918424 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158215482 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162332599 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.556480029 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.996076608 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212670589 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143177472 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.557122125 seconds)
done (took 6.000515243 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.288446829 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.43913383 seconds)
    (2/2) benchmarking "String"...
    done (took 0.12917908 seconds)
  done (took 1.229374006 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079209595 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177112038 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09406585 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110565925 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110258926 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109835878 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094475966 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110718209 seconds)
  done (took 1.46004473 seconds)
done (took 3.717695751 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.490067704 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.918814867 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.546819633 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.133174635 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157787483 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.14733933 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.302493299 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.164689961 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.119323145 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084949329 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169345489 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.421036906 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.476079505 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.019023754 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085257707 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128297519 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.084853861 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.777535144 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083453067 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13896668 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.525420406 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.111640409 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120942335 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140547932 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188674218 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13059551 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.166587378 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099855651 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.787958472 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106044991 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.190125243 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.10158707 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167598648 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.245031094 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.095827634 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093452871 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.788699117 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.178732075 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112696336 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103792257 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.750943866 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083353266 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.19660603 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.098521711 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112005191 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192362026 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114938329 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079539304 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.103265267 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.091477189 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.174189061 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.548321498 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107010556 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.148062011 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109957318 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.761036872 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100031542 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159875495 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143067186 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099535789 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095911546 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109179354 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16841965 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113454217 seconds)
  done (took 20.320241754 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118686505 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.14199274 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096753277 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140164049 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140407293 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097141765 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084188223 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094225855 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109573053 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184371305 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137768125 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144774707 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091787552 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081506541 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117712146 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24727969 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105807945 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122257791 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081912153 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106758368 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139530442 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096004674 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108968096 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109547415 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169476945 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205860669 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112119332 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12430918 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097124946 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09948923 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143385849 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.16263457 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075944923 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095053234 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18322503 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120444222 seconds)
  done (took 5.154883794 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198172197 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.1164146 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191734283 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177121464 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147518276 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163780297 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118486056 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269346796 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.196710392 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182645399 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114143621 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113351432 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078872888 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097249648 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07850004 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.682151268 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182261656 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149393907 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127707371 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103894802 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083016763 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.750813338 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10049636 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082263374 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103658549 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075216329 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174656062 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103013395 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.30609037 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121426335 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089429738 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135790581 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213963995 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118568142 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.138085965 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142997752 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102856971 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082538782 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214203233 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111415155 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094824152 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111937226 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134715466 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133912275 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099595792 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093804923 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24505108 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083239348 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120591635 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082111813 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.123675613 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.202589846 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097028392 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098494805 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.356558229 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117644538 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086444597 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101347888 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.316580387 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131582641 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083541308 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077890281 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103706665 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095866459 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.775960334 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093765635 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.426535529 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096502941 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156550105 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100173375 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106736313 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086697337 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103199359 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10116049 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.131701415 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095850378 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080436496 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079419651 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098054247 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083089958 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117157276 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102289303 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079327173 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164597186 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118238219 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099355036 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126239621 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101803283 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080850712 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129463667 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081816883 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.103062925 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147202921 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086544049 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116911045 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101301309 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143480714 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081935053 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.215121162 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083586496 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127522923 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083333824 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101598928 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129685022 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122373591 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07963721 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101943983 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077613899 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09953759 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148399979 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096401911 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080195746 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101762608 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093716278 seconds)
  done (took 25.070418735 seconds)
done (took 51.199233419 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.458757723 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09483681 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113823784 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113631914 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111957416 seconds)
  done (took 1.621855256 seconds)
done (took 2.32584188 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.353717959 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182963937 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102086381 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197866614 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087246443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203697047 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.172007316 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11996523 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.197047788 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101120288 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17699186 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101053905 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088122775 seconds)
  done (took 2.816573921 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095217515 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119247713 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082184112 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110488156 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076623753 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109317961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09264474 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131032713 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092487382 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103292149 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076006454 seconds)
  done (took 1.789504777 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091776994 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113994716 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082366144 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107930789 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076228712 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090129842 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107319384 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116126918 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091222845 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103929092 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076816683 seconds)
  done (took 1.760739577 seconds)
done (took 7.062487303 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.047350544 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.52588758 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.12075519 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167920418 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.340958325 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.210464367 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.531627117 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132984566 seconds)
  done (took 11.965088119 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.13289552 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10082143 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082412233 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099932732 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.079997072 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098688308 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082240889 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101526033 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082179526 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099885472 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083035635 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097271732 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081182762 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096824272 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08081028 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.1000712 seconds)
  done (took 2.260937146 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119164269 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11770203 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104426702 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108565246 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085581604 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102387083 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088453021 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103632489 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084184226 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101867937 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107329878 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089650212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105144285 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.083443961 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103968843 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091259959 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100172325 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103510335 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088692936 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104520576 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090806952 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102421377 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105128958 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090950194 seconds)
  done (took 3.191098313 seconds)
done (took 18.120384222 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169981866 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085516874 seconds)
  done (took 0.959799829 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102664914 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1212661 seconds)
  done (took 0.934833654 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108562915 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098624539 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137255645 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115550791 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083335875 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097740901 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114561574 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099710546 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081899843 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099840029 seconds)
  done (took 1.750681742 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086375027 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102215339 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090596185 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120853913 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109663764 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084804363 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104126893 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085905799 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104841631 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08086629 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107063496 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117543651 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088430508 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120703625 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087575346 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.104673208 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108844333 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085672723 seconds)
  done (took 2.504983267 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082410227 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083358084 seconds)
  done (took 0.880098313 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08443397 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096732496 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085143912 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100774652 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080629833 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096679875 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080750652 seconds)
  done (took 1.338998429 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.515351295 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259286187 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338250673 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101857142 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.15307413 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.371197543 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137023487 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115068682 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.114532718 seconds)
  done (took 2.860841979 seconds)
done (took 11.941026215 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092721121 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.194321688 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.549157634 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120244076 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079947407 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159859688 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.2651638 seconds)
done (took 2.176323945 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355054611 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.126114167 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089425464 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080195972 seconds)
  done (took 1.366656956 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08059203 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104392803 seconds)
  done (took 0.905219492 seconds)
done (took 2.998238664 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080299495 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079668303 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.116621241 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096718233 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07940222 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095626737 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077734279 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079616173 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097695333 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076930187 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096306325 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.07968473 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095798245 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077880702 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076603929 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096372079 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077090095 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096680641 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076913884 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093799848 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077453682 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095886697 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078190805 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077208754 seconds)
  done (took 2.847671818 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.223484418 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09779339 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085957802 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.103285127 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084447643 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103573298 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10252383 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080603985 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102883801 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082000551 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100897117 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083843406 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099921629 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083822549 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0995524 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101283233 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085663904 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09862439 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082946986 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101827151 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086336273 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097131634 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084650855 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102498669 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100548432 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083597946 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.099689967 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081238241 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102585336 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084420022 seconds)
  done (took 3.651237598 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089194482 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077521116 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095474393 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08910918 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09528501 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082409018 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094763116 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078607238 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09673157 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078203523 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096892612 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077687542 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094815402 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078800391 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078662362 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103019886 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.1135552 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078670559 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077322068 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097075378 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083603763 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094669091 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081407272 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.095043274 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078173962 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094900869 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078384857 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077650058 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096073655 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078051762 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100233571 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085181358 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095334866 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091750194 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102935216 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078005524 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.104183091 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07795777 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09584037 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077242712 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094799013 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0784024 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077759836 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107934914 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080723641 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096557474 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078068858 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096564974 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078208379 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098527122 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077274868 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094618168 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080848439 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096711097 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084350926 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0777685 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096472846 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077029827 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097140481 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077494012 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09472608 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077336306 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102017979 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079378232 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119855909 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090058282 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095314878 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080375384 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099268957 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087220354 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097059869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097086839 seconds)
  done (took 7.134053549 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083215517 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105972195 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080599578 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096855613 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077096078 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078690831 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102837898 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095785134 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080456786 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114689021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078933029 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097537381 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080556608 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099486013 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079339655 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097169678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089061151 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093221181 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078783976 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099376834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079049962 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10206853 seconds)
  done (took 2.721953711 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224541887 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104526635 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144759226 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115700044 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09926338 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113334879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103144126 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087512004 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103438948 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088544677 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105968732 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085614849 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11582692 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106351133 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088452236 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107209224 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102748089 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089768694 seconds)
  done (took 2.715596335 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093874778 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099144704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106117326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099748211 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08142407 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101725101 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087933543 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115618125 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.100753346 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082242109 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109043783 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083780848 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100982509 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081767806 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101183679 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081284579 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101861482 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082294726 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108972435 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10525982 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088866345 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109721757 seconds)
  done (took 2.857492293 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097988933 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101136242 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114636977 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102904811 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077735172 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097664017 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088713276 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099918416 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107111137 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084188199 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098369577 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080344229 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105962556 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081539115 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104941815 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082047773 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10046075 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081618323 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100942424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077478203 seconds)
  done (took 2.618406332 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126066334 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115119705 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097997377 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127085166 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116149507 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097919979 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126997183 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115902535 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098740207 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129333965 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098333624 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116348926 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127062844 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105528133 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116235646 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126259218 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109361674 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127947693 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116489315 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098943424 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128813152 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116574597 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109436763 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115911929 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098316628 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116289082 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116480416 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105523086 seconds)
  done (took 3.939135582 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081532744 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080693454 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096882411 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078643078 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096835567 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078624935 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096775658 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.07906495 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081377718 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096819574 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080936897 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099562302 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081620646 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098108398 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081154124 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098871144 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081629842 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078640442 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0969175 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078839544 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099119844 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08172039 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.098304481 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079407669 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078989286 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099452925 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079326558 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096667693 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080825693 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096853264 seconds)
  done (took 3.374253627 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089837587 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105654812 seconds)
  done (took 0.934737104 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079146196 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116006016 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079415916 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103564835 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088108649 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10039218 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091943266 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105868935 seconds)
  done (took 1.503458111 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.106564913 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120840589 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088714071 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112214556 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102571878 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.119346824 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167976524 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087469309 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107738218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082909568 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120042262 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081811621 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111352866 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105220136 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091657383 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115710329 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081106673 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110821379 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090104219 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102165514 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088482193 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1166079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093581959 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108676399 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085044146 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113437736 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113370938 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.094484388 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106467065 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095300815 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107864223 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076593147 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105580422 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088542324 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098058111 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.101017894 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118298781 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088137494 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110342773 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087837607 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111019014 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095933835 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093231408 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106934088 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096644658 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105678038 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088435386 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095513792 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083780453 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10403111 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078293061 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103284697 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077718504 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109913304 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092109316 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119065117 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085602319 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105214988 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087351476 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103503359 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089866169 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105375346 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110606981 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087156276 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110970762 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101654763 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10935901 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07833373 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094279526 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081562327 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11046232 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108356856 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113111751 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088064073 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106918192 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080576945 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106516768 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089808836 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109288946 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111876773 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088041853 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108424759 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094313905 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104253984 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087301177 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107710491 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085623482 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103605012 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083413122 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121858918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086320352 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099036903 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083835212 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111228645 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087796102 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104658217 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088239382 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110335118 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076884762 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106685907 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088528457 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107605977 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095136502 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107654176 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089002232 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110802292 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.113067555 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08854627 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104093589 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07980049 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106435308 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085414121 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109168872 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077597653 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106659055 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087867861 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10610146 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094121074 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102457018 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08795151 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111501397 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094659185 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103505608 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079016049 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105436794 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087774209 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110496177 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094537551 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103338607 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078264509 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097549469 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091415817 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105725109 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089150684 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106984735 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088546004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096746727 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081196154 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106657507 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09405979 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104929775 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10806826 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09321451 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.108613498 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087324221 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111581066 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086390251 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101127437 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09308073 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105652285 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078875788 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110616787 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08713765 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10479108 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088470207 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111253046 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088129014 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107177006 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08576705 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106584844 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088720498 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101568727 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088125126 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104316987 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096279549 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105991531 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078659806 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098627806 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08951021 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102846371 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086586911 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101640791 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088043529 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107244511 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081758241 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.105633556 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086802382 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11894211 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095819403 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107933948 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109009496 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095321032 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10601963 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090966656 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105781432 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089537137 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106367363 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093701402 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109195649 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089736696 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105513901 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083370235 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108183501 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09453509 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101398872 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081668265 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100843907 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088633549 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112631805 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088033605 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107642196 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085620418 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108402401 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093569162 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10612574 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087962565 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102073202 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088589438 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111939018 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090404803 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108972166 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095191237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107741298 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079316264 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111543682 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08530286 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110466163 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078648273 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104094409 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085413092 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108447861 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086782823 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105110561 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077732457 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111992927 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094060614 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107792809 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083450988 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106947305 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097648547 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105915242 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110330265 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089073286 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109804025 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102465207 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102953817 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088771852 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115355155 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087940497 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09707563 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09170714 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105028917 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083345126 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.105282862 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086527353 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108313824 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091219161 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108462377 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077607941 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105937743 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08645911 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103308145 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080144944 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111961744 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089763386 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106775056 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09790167 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109617005 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089676834 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108504434 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087961028 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.109251817 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088959805 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109207305 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10801886 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086744713 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083278488 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108035596 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083618962 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101454099 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087492088 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.108420764 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088840849 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109975295 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086992442 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112837514 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107263919 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090166264 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124803858 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085820877 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103948231 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088955223 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109543771 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106280217 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088325408 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098003518 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094898778 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106531211 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094987856 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105896872 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081166976 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108964268 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08874064 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108466507 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090938986 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108291622 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087696843 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105787699 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088361253 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116418869 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085659374 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114983699 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091001682 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110059402 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088789719 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108538108 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087044714 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10421203 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08859691 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108775783 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089144656 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106182823 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090960204 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108957387 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087442142 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105712879 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089214465 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.108874391 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109671951 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079019859 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084312279 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104182993 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.089312511 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112202205 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107904652 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087513207 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086665168 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110264845 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086591349 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099959514 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093080859 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110988558 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090024456 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11706695 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102792665 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089599374 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118338677 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079115839 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105654339 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082894517 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104005184 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095162887 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108890814 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096158119 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107971609 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085303907 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100451012 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091456782 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105777279 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078857102 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081392195 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11216068 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105245432 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087305664 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089268116 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111180705 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109383702 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093511129 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106080177 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089714011 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107852166 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081799028 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104388804 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085687941 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107391776 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.091586944 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103753214 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082216079 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088511666 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108669107 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08916181 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107977062 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087646397 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114413504 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106931287 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089925106 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112569767 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079549675 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107736155 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089622654 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106701354 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085320644 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108928383 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091681133 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109498651 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094898923 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107308841 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091920462 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107511744 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083688616 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10763621 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089685977 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108556215 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086154782 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109142102 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096853846 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101529622 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090622542 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.1092981 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087419538 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109663438 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091422074 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108955075 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093663963 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108947504 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089351309 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111546993 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08907284 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109509067 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090857125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108237543 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0943466 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104363171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095279175 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.110334779 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109856193 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089118919 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085245208 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108157899 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088356222 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108372822 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113488382 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.090639994 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103340289 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08620343 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083146618 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109287807 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112508302 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096568381 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10864219 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091316796 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09906278 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083940974 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109775401 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08594643 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107754637 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093129308 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113232263 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08985591 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105633022 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088126623 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113706029 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094451805 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110791671 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086222906 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111066898 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.091041362 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109202577 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087484019 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108123564 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090972386 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112002642 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08789516 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104914918 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117111128 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095651068 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110016768 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088995287 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.111032196 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089227793 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100130307 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091484448 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108358255 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092983471 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109566501 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089718667 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119027396 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085169485 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10786121 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096887599 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108507995 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094787042 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.10112513 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09053387 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111509535 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090838679 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10119701 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085238596 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.106113477 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089619523 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105534102 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08055694 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119190505 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113032018 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09088661 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107129485 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088890616 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08086598 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101320494 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085439476 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111249001 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088452057 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117518207 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104064556 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086560559 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080888113 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109421215 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090591028 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111820546 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08137784 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101699707 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086263452 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110361237 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096146765 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107853321 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089219358 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111221342 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089486625 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103775175 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114113503 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082899057 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109860398 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102631243 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109722219 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092672644 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113142906 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096919676 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110854331 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08103546 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.11050982 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090413819 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110387867 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.091051988 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.112505594 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124642055 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09149006 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.1047645 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089356872 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109106953 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087302545 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117280616 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093347706 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110353918 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092364127 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107559213 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092602081 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116465923 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092249165 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110623181 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089922944 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108599809 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089359797 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108189678 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087770331 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.11228909 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091207533 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109504398 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093281926 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106226446 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100613992 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117799335 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111755012 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082587764 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085516519 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106379901 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08048354 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111769124 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084001014 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107872286 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087916235 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108001779 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.092734663 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112170935 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089268792 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.111876949 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08972809 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099685343 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093943303 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111393964 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092364151 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103053191 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090254903 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111904026 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09505575 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115706629 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087112775 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110626295 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108031954 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093832347 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100058814 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094556451 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107813971 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089678442 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085282071 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111177895 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091178774 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111981774 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090685839 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113738332 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109963679 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09608 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112340815 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084369138 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102255025 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093659474 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103311978 seconds)
  done (took 59.715539085 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153377593 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088721556 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100624594 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082341567 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126710536 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082251877 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100474624 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083624133 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10238714 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09545522 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101815696 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080917132 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123530044 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129912029 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125406331 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11559057 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082100124 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102152282 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082332943 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101768098 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103313907 seconds)
  done (took 2.95441245 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107336084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119943511 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117887081 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104046415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112217132 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118818901 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098133552 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120127246 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.12317645 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113451268 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10384493 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119441842 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.113723491 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094933786 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113960724 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116724119 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103966745 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111749685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119777542 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098990463 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117077387 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11794928 seconds)
  done (took 3.259679108 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.095444559 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.089198613 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115140473 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083459105 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109009059 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.08381029 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115187969 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085222822 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.114406401 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.09036999 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107543005 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089818244 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114586135 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083967833 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107803411 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.086439764 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114403374 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089764828 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110822543 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083672481 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129916063 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103402013 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.084952458 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.087737283 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119717736 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.09035469 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.11056233 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08959718 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.107047462 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090461303 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106365774 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091951826 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11301065 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088003451 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107180352 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089993977 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.110148152 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.084420675 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.106136172 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093098422 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104732361 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.091647244 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117210832 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.087476121 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106483298 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09179323 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110161541 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.084637613 seconds)
  done (took 5.561070702 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124710395 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161411774 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09879415 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.159227847 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12606956 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12398827 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092059472 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152507367 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108801819 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.09000588 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128431025 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12533272 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091671043 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.11999096 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096461985 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111939617 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110793243 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09674355 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122036892 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089996049 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.119421757 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113847836 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10511363 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122507817 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114745361 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089885366 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110097885 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.099955121 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125080226 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116276628 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.095833269 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119047455 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132139343 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.097960439 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.113776222 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112748111 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.107074311 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111210393 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11252178 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088634746 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.113387945 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.100281218 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116509828 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127254215 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092015791 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112505791 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.097200466 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.113068743 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126002394 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.094629285 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120351461 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124255214 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096611205 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111953282 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096441871 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130149885 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.113748146 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089578856 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.115241727 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122248838 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09742 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.117848886 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109493007 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116866358 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119494108 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124560071 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093460217 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114813688 seconds)
  done (took 8.589078282 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098284408 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.136236741 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127386039 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107161923 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116192435 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115444539 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096793979 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11629168 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096879503 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124421896 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115442373 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167459666 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090253255 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121702396 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096520644 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117063497 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11573669 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096583972 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116322174 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09629232 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117050728 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127593016 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096151224 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128104884 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129518015 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10891555 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097978054 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116425328 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107460893 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11761855 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129279376 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115425598 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096961756 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127270656 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128619667 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097346756 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106263163 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096683194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116994574 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11596587 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090131525 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127171805 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097465484 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111149426 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116088579 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09696967 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127519968 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128935184 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121609144 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103379757 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116732749 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127753154 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097207818 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117932196 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128291628 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.115731455 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127706499 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127376785 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116015884 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107253024 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128467918 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136195219 seconds)
  done (took 7.916214529 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088557863 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086554918 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106267078 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084471292 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107815955 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085613477 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10758914 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.088805932 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085794622 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108987637 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086472951 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105279995 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085236145 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107325393 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085970176 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104420679 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085563698 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084622995 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10771563 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085076138 seconds)
  done (took 2.691754091 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096832921 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128307309 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088677029 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116171572 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09063862 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115996833 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109151757 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091313506 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108747804 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092051101 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.121442226 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100716575 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109706669 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115400047 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101518083 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11649746 seconds)
  done (took 2.512029371 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.109442387 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122364344 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.134650868 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093371855 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106784663 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.096404357 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108626557 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.083908134 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103936942 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.097896889 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.115129037 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098848055 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109001123 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087251094 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109250659 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094188243 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103987257 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092707993 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108772392 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.113756356 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114409306 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111611208 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09052276 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10994055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.091213842 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114224431 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.09552052 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10582958 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086107034 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108661624 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091028864 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117754478 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084104049 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.114640646 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085936582 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106317522 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087255728 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109421438 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093957349 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110227003 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085510699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111376904 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087383885 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110927313 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083629962 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110815495 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083116989 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116628976 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.088881676 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112700971 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107550975 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.097392985 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115527746 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100470525 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.118992403 seconds)
  done (took 6.458610281 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102923423 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112149504 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093125481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106400295 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09137764 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.1175943 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092385606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11138047 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090923158 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106377093 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090213767 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113436507 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089953706 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112618401 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090053292 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112647536 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083862858 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109983355 seconds)
  done (took 2.638853353 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094160405 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108194851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09688686 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108329764 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088493863 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110119577 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084084828 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085575343 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107455615 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087901451 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1089377 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089822764 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106675905 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090771535 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108929112 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088476057 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111135625 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08687423 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108764374 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084630623 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110525817 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087105845 seconds)
  done (took 2.967526995 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106644254 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.142648243 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.102726918 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.153293184 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.11515626 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092220547 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12410556 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092673742 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13225009 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.111593459 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092869978 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.112592522 seconds)
  done (took 2.196233674 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115789165 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148072984 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085949333 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113635452 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122072979 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094574848 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114284262 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093680968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126840244 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127644229 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09357424 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127223956 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126297326 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125485074 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101244473 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122814299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113750786 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094659156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110242534 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136067259 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093874947 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127754716 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114550733 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094743402 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11432597 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125507047 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107065203 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127889015 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115376185 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105662664 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123197023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114463364 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105818441 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129309562 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112807624 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126540268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094380259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136385134 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122586251 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104989475 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113023348 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122447845 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107373292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122779143 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126883429 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094565056 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122585947 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114454714 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094728341 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14299615 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123086259 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125458061 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101068297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12741059 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127289168 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142938975 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128625698 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12543253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10302954 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128029413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125002132 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123116413 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106013996 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128218303 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122783816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128843563 seconds)
  done (took 8.537268812 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130359882 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109727812 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093754366 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129891242 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127394741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114625492 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094831796 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11480054 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093502574 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111670875 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161626859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114760446 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10581075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126820358 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115373387 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094610036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115160441 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125936633 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090917716 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143278772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114573024 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126703406 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105630257 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126753738 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127766729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12360689 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094747971 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114761831 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094763021 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115790085 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122861717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094824531 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127157405 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10796731 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105536028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115810761 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093528052 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123554469 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114799194 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10176779 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128166326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136378737 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114827831 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094619932 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129145048 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11506479 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094377368 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11143043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093996016 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112753479 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128567252 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128485106 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107408237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12729071 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11505128 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094303705 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115795537 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114995173 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095457896 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122762947 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125834313 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09532164 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142823239 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115194671 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094216442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12702822 seconds)
  done (took 8.372242262 seconds)
done (took 159.386713113 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107365458 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147604453 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103635636 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174092344 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088468201 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.146350581 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122719715 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126781138 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088761209 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110854428 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.08938215 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.113287305 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154608788 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.110260416 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089139411 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113345062 seconds)
  done (took 2.706776694 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1851383 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.29226903 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108611851 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115893626 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095539459 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114494714 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092406575 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118626787 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090267286 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124382102 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111304422 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092814976 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123307483 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092420933 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11164166 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092082668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123972269 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091619167 seconds)
  done (took 3.004903336 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114705052 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164739705 seconds)
  done (took 1.110476851 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126542151 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190764049 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311504482 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166969459 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118976328 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.133752614 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.168272069 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130701439 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199965314 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133168489 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11091974 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118582627 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141567034 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102473999 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121571408 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096412001 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144822171 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120215042 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098962779 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11789358 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117661288 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.119827957 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122743223 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099523837 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188302214 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132450207 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096323063 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.119577477 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11811285 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098538925 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123443575 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131331063 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111138711 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.194612371 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101395774 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.190888469 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103702495 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117364232 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097016021 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.117297447 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120928032 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100327497 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132940454 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095317772 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.119352701 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125437788 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.097838457 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.118988876 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102812265 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127603996 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.124985938 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102187665 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189670858 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.104865149 seconds)
  done (took 7.850720328 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.845441432 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161721695 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117311603 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.958851119 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149884956 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13121479 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.851875112 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117451407 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.269151998 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.112769694 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136281805 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130920287 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.214957399 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28552416 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.160378783 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344780849 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.727088404 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131178867 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12397638 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161280023 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125612992 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146040324 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114674087 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.420806974 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11814971 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094543457 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123143538 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128961278 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169920971 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093487879 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120948433 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189926877 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.297458141 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187780723 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118051565 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093257783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115739349 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177834621 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278151595 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225372293 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180427518 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091481062 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114819618 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107359696 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137061664 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090325239 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.197006411 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181969782 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181449288 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120533741 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130365602 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103616138 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128743872 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169788001 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.114302295 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343890893 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325778194 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117436459 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124190281 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113016439 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276723858 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115612185 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211947203 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144718112 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221116014 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092782029 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830415174 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.176025518 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116236286 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102845327 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12551405 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121860301 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105611795 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175027042 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384248516 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132215312 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119599487 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09384065 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231318205 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094632527 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114600265 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173913955 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09528867 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125578515 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132769293 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107777369 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.203131381 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.259789229 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13047101 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106466111 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121615055 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128515362 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095876153 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.221774859 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225811264 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166630692 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.245623952 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128203712 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17434268 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174728742 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128258053 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179730839 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124135378 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111743778 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129538275 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223615737 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150316752 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.094043866 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121606913 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122450947 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131764814 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121308026 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121604058 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17910304 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.448133705 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.196658761 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095030271 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097446029 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126182308 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171046457 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124528725 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269486645 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103781031 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.199055234 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102370574 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.113646419 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102486261 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.19582162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108327856 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12656412 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129509058 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102097225 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28008766 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206143298 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132419758 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242752226 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184089742 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10458596 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205207973 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10361916 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176705995 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127987229 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128239884 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096178516 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817195726 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129606087 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101429437 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12241307 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19831479 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093136792 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.118896303 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093657308 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11411453 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782536248 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121282475 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.090949164 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.118849461 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103415546 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124813746 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122997947 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099180677 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192851523 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240151797 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108368531 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125086441 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093744055 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.190526697 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096368899 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115519701 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095726875 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093686509 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128162494 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122005494 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096380371 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180927596 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.190077939 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228991992 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.515826406 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.117100778 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095057514 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238767617 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093289064 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.31439519 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124659803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233737468 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177849906 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090633168 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346132284 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.201485568 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197808524 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097860868 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.180574208 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114263085 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.099762716 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.194271717 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093859718 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125252247 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167602766 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134816598 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109022802 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.161938079 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117253162 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236865683 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113434825 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.179075873 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095518819 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129126623 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.31520141 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093716196 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137489322 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.170441155 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122522357 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.094067203 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.617743078 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094251004 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128056535 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126933484 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230756773 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.17520645 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100748134 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126073688 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130046582 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173237312 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.220240865 seconds)
  done (took 45.945213882 seconds)
done (took 61.442062888 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313762776 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277296836 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.318815393 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204491562 seconds)
  done (took 2.045084682 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.188225992 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161770053 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.133060271 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116857971 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.163063367 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092869721 seconds)
  done (took 1.712786745 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.502508616 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.388151428 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.356444563 seconds)
  done (took 2.107940886 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265199038 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.296198555 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.37119309 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.462074127 seconds)
  done (took 2.359611268 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214333416 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132153977 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.106226666 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.147107755 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.180136727 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.183871379 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150839176 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160100392 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136984519 seconds)
  done (took 2.319173016 seconds)
done (took 11.403909574 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.29678155 seconds)
    (2/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.276289245 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.205353474 seconds)
    (4/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.288360497 seconds)
    (5/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.151417385 seconds)
    (6/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.234686524 seconds)
    (7/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.169131506 seconds)
    (8/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.156373384 seconds)
    (9/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.256038139 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.11288431 seconds)
    (11/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.154723633 seconds)
    (12/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.187228258 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09733864 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.151382085 seconds)
    (15/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.254994457 seconds)
    (16/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.224008233 seconds)
    (17/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.243776073 seconds)
    (18/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.079879183 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.151998645 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12205064 seconds)
    (21/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.123343636 seconds)
    (22/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11918697 seconds)
    (23/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.122893708 seconds)
    (24/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122766718 seconds)
    (25/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.235021475 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.098533053 seconds)
    (27/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120677465 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.109335673 seconds)
    (29/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.137414051 seconds)
    (30/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.121598949 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.168074529 seconds)
    (32/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097205669 seconds)
    (33/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.162416131 seconds)
    (34/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111039216 seconds)
    (35/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.142697672 seconds)
    (36/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.206624617 seconds)
    (37/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.105622361 seconds)
    (38/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134224918 seconds)
    (39/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.210887854 seconds)
    (40/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.131849628 seconds)
    (41/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171373739 seconds)
    (42/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.210594178 seconds)
    (43/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.118913702 seconds)
    (44/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096515423 seconds)
    (45/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.11187932 seconds)
    (46/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.214547325 seconds)
    (47/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.226169804 seconds)
    (48/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.108520462 seconds)
    (49/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.201145051 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.151465184 seconds)
    (51/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09849477 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12260949 seconds)
    (53/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10015153 seconds)
    (54/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.259356192 seconds)
    (55/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.120505615 seconds)
    (56/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.144853534 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12411569 seconds)
    (58/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.150941854 seconds)
    (59/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.225048015 seconds)
    (60/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.081026551 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122461948 seconds)
    (62/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.207976995 seconds)
    (63/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107776415 seconds)
    (64/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.123258847 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126155965 seconds)
    (66/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.133908907 seconds)
    (67/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.162770931 seconds)
    (68/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.088964774 seconds)
    (69/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.212306622 seconds)
    (70/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.234791927 seconds)
    (71/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.202034578 seconds)
    (72/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.142811688 seconds)
    (73/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.208487173 seconds)
    (74/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.117243969 seconds)
    (75/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.225043274 seconds)
    (76/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.205775392 seconds)
    (77/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.124765335 seconds)
    (78/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.104390612 seconds)
    (79/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.201107892 seconds)
    (80/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10670205 seconds)
    (81/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123399228 seconds)
    (82/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.156326989 seconds)
    (83/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.224538047 seconds)
    (84/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.214264607 seconds)
    (85/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.081165025 seconds)
    (86/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.177137464 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100568823 seconds)
    (88/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.196388312 seconds)
    (89/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.079932066 seconds)
    (90/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.214337242 seconds)
    (91/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.158938013 seconds)
    (92/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102830816 seconds)
    (93/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081022799 seconds)
    (94/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.147343276 seconds)
    (95/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.10657555 seconds)
    (96/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.160622819 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099121637 seconds)
    (98/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12847416 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.105542756 seconds)
    (100/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.146367496 seconds)
    (101/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.129911565 seconds)
    (102/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175164777 seconds)
    (103/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.104700824 seconds)
    (104/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.271140792 seconds)
    (105/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197589922 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093670837 seconds)
    (107/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120326875 seconds)
    (108/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081536758 seconds)
    (109/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.16786771 seconds)
    (110/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108798365 seconds)
    (111/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.164500867 seconds)
    (112/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.13305294 seconds)
    (113/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09386291 seconds)
    (114/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.078955589 seconds)
    (115/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.124960609 seconds)
    (116/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079104386 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123568806 seconds)
    (118/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.107745685 seconds)
    (119/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.180452687 seconds)
    (120/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.17528362 seconds)
    (121/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129470929 seconds)
    (122/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081481985 seconds)
    (123/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.103198318 seconds)
    (124/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.187082261 seconds)
    (125/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.106088322 seconds)
    (126/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097797167 seconds)
    (127/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.113061407 seconds)
    (128/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096489343 seconds)
    (129/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.10386099 seconds)
    (130/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096911352 seconds)
    (131/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.15514487 seconds)
    (132/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.088843766 seconds)
    (133/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.10696301 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099472224 seconds)
    (135/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.103502566 seconds)
    (136/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081058212 seconds)
    (137/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.119966136 seconds)
    (138/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172364639 seconds)
    (139/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.106098406 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098366628 seconds)
    (141/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.105531081 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096876665 seconds)
    (143/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103177511 seconds)
    (144/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.12884836 seconds)
    (145/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.132335301 seconds)
    (146/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168966385 seconds)
    (147/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081813735 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136937465 seconds)
    (149/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.119812916 seconds)
    (150/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103992008 seconds)
    (151/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099896576 seconds)
    (152/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136807732 seconds)
    (153/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.096249291 seconds)
    (154/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079469329 seconds)
    (155/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121361279 seconds)
    (156/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080772732 seconds)
    (157/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121953616 seconds)
    (158/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133705014 seconds)
    (159/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089734067 seconds)
    (160/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080095995 seconds)
    (161/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104646289 seconds)
    (162/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.120691292 seconds)
    (163/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.133468351 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.130863072 seconds)
    (165/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.08007631 seconds)
    (166/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.133141127 seconds)
    (167/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.101222718 seconds)
    (168/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.1198275 seconds)
    (169/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081122761 seconds)
    (170/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081023541 seconds)
    (171/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120727027 seconds)
    (172/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095660516 seconds)
    (173/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120608432 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09990101 seconds)
    (175/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104058135 seconds)
    (176/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089235943 seconds)
    (177/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.103284471 seconds)
    (178/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.19752374 seconds)
    (179/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08177526 seconds)
    (180/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14293238 seconds)
    (181/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096953943 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.123712668 seconds)
    (183/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101277776 seconds)
    (184/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.104063058 seconds)
    (185/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.122290886 seconds)
    (186/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133262058 seconds)
    (187/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101038529 seconds)
    (188/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128928759 seconds)
    (189/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.081404446 seconds)
    (190/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120787754 seconds)
    (191/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101846565 seconds)
    (192/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.117823996 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093589802 seconds)
    (194/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11703636 seconds)
    (195/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.128125096 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.121237713 seconds)
    (197/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080791315 seconds)
    (198/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.103628954 seconds)
    (199/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.08080348 seconds)
    (200/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.129635973 seconds)
    (201/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082008686 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.131327901 seconds)
    (203/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100148266 seconds)
    (204/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.105180144 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102225483 seconds)
    (206/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.104032414 seconds)
    (207/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.081454643 seconds)
    (208/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079545116 seconds)
    (209/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.122001753 seconds)
    (210/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.080364673 seconds)
    (211/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12798769 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100083512 seconds)
    (213/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.105406857 seconds)
    (214/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080256471 seconds)
    (215/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.104687868 seconds)
    (216/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109133449 seconds)
    (217/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.104867347 seconds)
    (218/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.109159202 seconds)
    (219/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.130493105 seconds)
    (220/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081041637 seconds)
    (221/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.104555906 seconds)
    (222/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09346063 seconds)
    (223/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117501573 seconds)
    (224/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.082133031 seconds)
  done (took 30.957203614 seconds)
done (took 31.82302417 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136855563 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133484196 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103880874 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12911651 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149420312 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.108103829 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.130104377 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.107661805 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127266129 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095065554 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119752505 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.105427577 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.129448983 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.147547074 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.107311396 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12115456 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097158589 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129672793 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105115725 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131007931 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.149756124 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098089736 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.127619577 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097518289 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149469513 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098465404 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128211933 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105436854 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128319407 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096001311 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128196351 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096398198 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129943755 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.131472333 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095673687 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.121597234 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095664962 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086798244 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.120598531 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121978908 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103915825 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119538934 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.107720536 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121655 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099110067 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119754657 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095662597 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131247021 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094762552 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127945816 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098197545 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.133244885 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.095400452 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.119581411 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094638039 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.121906414 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.105312339 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119739326 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105423207 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119583231 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09669484 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121258153 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09917187 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120268536 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096750658 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121299405 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096937135 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.122370011 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118001044 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098911051 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094735452 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.122647436 seconds)
done (took 9.17180607 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10157447 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175856709 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152505321 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.128102592 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.148817173 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135404021 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10902341 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.144321393 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.129335056 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119702355 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148179296 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.142950838 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133664467 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127855305 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.135942409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0999425 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.127318861 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109047756 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.156613312 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143878526 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151742586 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103225349 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150453412 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141760274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103902447 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146917001 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104334903 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.125117216 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.101995453 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.143537019 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.144150684 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103694582 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127371987 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115272148 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.135456937 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125784185 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111804598 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.124836876 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10095059 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.124838163 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136996508 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115731471 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.124672284 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111274306 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.1250367 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.10467823 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128330304 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126007406 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105188332 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122360497 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104906501 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.149344641 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126527406 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103779535 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126428514 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.104672002 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126714773 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104110317 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127828233 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127412608 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101246901 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126888657 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105143914 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145228108 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126538494 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103427749 seconds)
  done (took 9.166651544 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120601494 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159216926 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135667879 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112481353 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131636313 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092801734 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.117696082 seconds)
  done (took 1.783620114 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095202642 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14909313 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129095982 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153194651 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141841003 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131888069 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137026088 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09428904 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.143763729 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.128582897 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123848731 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175914575 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120074587 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.107079065 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.15608297 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118713267 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131222491 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119528427 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102991295 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153936976 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124505492 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.119240504 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.1334966 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095774566 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141992784 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097542542 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189083299 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132379092 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095646806 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126780742 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100787655 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.21515637 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118395933 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130180013 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094157789 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149673964 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116987813 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126250422 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.145242683 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.103000295 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.143029868 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.102860089 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128807868 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.126161599 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103549195 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.135871633 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107586424 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.129031014 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101104219 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149614377 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13127394 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119417906 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.123958705 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.10022821 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129976233 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101413129 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134982796 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.100588338 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149682269 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127412744 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122918113 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147458259 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.143033436 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.123062096 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137547726 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117943317 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.143773978 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125705917 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103828662 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127760624 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.123115632 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.123892187 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.130535466 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.111719537 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12898936 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124172798 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149135732 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099659115 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133628347 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099282432 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.124296748 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095587268 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137545254 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099078573 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124495331 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138720373 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108585529 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.125958993 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098784565 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.143105935 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.126511882 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108967834 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13276915 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.10002384 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136660223 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149344366 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.106538503 seconds)
  done (took 13.107112776 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097775237 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096717097 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12812845 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121779695 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098112371 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097474454 seconds)
  done (took 1.564293171 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128067132 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127614015 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1139146 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.130510805 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.182334149 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.148065064 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12607981 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131832257 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.146317845 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114837751 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.147407952 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.149968411 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.123098163 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.132047364 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.125251953 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.131662634 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.151308009 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100690128 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.138075342 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100880327 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138287859 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.131547883 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102191921 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.146293534 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.106470715 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.131191057 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105416814 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.139758642 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.136720015 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10665532 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.132407049 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.10546275 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129403488 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131014084 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.125351036 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.128299034 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124842893 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.109012465 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129779575 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.106982048 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.149280788 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100877256 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.138164122 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.134119859 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105852585 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129415525 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.13308432 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107214964 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.151008636 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.107502698 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.134664216 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129981338 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.107320767 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.13392306 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103719571 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132158362 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.133220393 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.126447051 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.133629933 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.128551394 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103460611 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131906871 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106401568 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.135067916 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102964933 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.134211772 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.128563712 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106038746 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126470209 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.105591513 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.134585244 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.1270122 seconds)
  done (took 10.008253138 seconds)
done (took 36.536001201 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.093167714 seconds)
  done (took 2.01651539 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.883447062 seconds)
  done (took 1.806588052 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.891440657 seconds)
  done (took 18.848015666 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.539849874 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.627851381 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.984670512 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171181226 seconds)
  done (took 3.245292918 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.005222236 seconds)
  done (took 1.946241566 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.321161806 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.27472413 seconds)
  done (took 1.523443112 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.839736338 seconds)
  done (took 1.773693396 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.377258213 seconds)
  done (took 3.312626593 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363338286 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.2072242 seconds)
  done (took 1.514380707 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.59340488 seconds)
  done (took 1.530312678 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.124590878 seconds)
  done (took 37.065125176 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2374454 seconds)
  done (took 1.187821082 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31403971 seconds)
  done (took 1.254094312 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.730145343 seconds)
  done (took 4.674799549 seconds)
done (took 82.626815549 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10739464 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134628023 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110226955 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131657699 seconds)
  done (took 1.423280619 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111629448 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129672783 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108589631 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129633929 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112703863 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12975521 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103078978 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.136533799 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103583926 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.1328763 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128719108 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.105112719 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130950195 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103811346 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.128516979 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105924738 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133223838 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104602146 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130330236 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105262449 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129894345 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130111497 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.108340694 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129711884 seconds)
  done (took 3.817348248 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107627707 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.100541367 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.12903524 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.099408052 seconds)
  done (took 1.384146639 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112644315 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145156404 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118930994 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.137826974 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14441866 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118843734 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126802899 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101392055 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.128912304 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111874956 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127971019 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120403702 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145885103 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12150453 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113690263 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119816199 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.098008294 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144665248 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.112207484 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.139195385 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10054882 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.137148025 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108187227 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141673854 seconds)
  done (took 3.92905212 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177036643 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.141409923 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.150732535 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.174953696 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.127124672 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.12490707 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.126715279 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134612312 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.130410517 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.100445599 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.126083714 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157338145 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131571049 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.130456789 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.10111354 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.131964112 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108046387 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131324467 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.102243413 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140865291 seconds)
  done (took 3.603036932 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107654183 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126494579 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096464066 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125412485 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.1076998 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128177875 seconds)
  done (took 1.646500881 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097476953 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09519876 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.122354364 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095504115 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.126498716 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095881919 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.119864653 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.096274902 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095097807 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122831991 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094798422 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.120388938 seconds)
  done (took 2.233205789 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505168969 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.125924311 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126556097 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101387122 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.131042551 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.099221724 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141001844 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09918662 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.181987768 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127566262 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116240143 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.18034624 seconds)
  done (took 2.889550614 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218955612 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105572494 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276006481 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382683707 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14155367 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17672026 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.311396019 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176509435 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197057939 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119799961 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231944991 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139772315 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164495769 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188964598 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14993226 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193891705 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18468893 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21005888 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1585585 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21544293 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174274029 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176679692 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191769922 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162229067 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147019526 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167365406 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101312073 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137975973 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183195333 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17966108 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182309128 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157629108 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147063019 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212705874 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22274484 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21281685 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314505882 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143021976 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.19705138 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19410792 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252269916 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151119072 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20281713 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164126425 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141602173 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192458604 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16592443 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189206976 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140349588 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123979098 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219521346 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184853743 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191639182 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119535529 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338480719 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154912524 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.128164621 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18943831 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225984832 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201425072 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176202157 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105574001 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221848885 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192617826 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189916058 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.127571095 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.176104194 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134064979 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185864207 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205981148 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186577549 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1760788 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.220582792 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141829283 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145724045 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179395917 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163432411 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189295597 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169869689 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129428053 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131750561 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144521304 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13568972 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167260414 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132104227 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215141538 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144533272 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.194264291 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215393815 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168736622 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170585161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173432132 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17703907 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157220742 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100800882 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155644444 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.172562873 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166635766 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139189399 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139046601 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154805029 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135927203 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161072106 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.105745489 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168943317 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.14290368 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177244526 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173121255 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.110914276 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174659176 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160161617 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.170109142 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179997349 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196523471 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113580478 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142903159 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20483924 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167591873 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146379365 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186137515 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19667099 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172966296 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145286298 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177468892 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20550782 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123294735 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22658363 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124143296 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143030802 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.160388922 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168415755 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167670455 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.136287676 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139571991 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161988329 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20275797 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.137069396 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119135568 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18255619 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135560335 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136814884 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125487867 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145871356 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.152327609 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.13168231 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149680795 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16467297 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16904225 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163864171 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167522299 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123569127 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231274024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113458321 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171815076 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158123869 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.126994653 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190231602 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195095766 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110382419 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194002513 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177695779 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234386936 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173277192 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110688496 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191056165 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140099436 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128447195 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174767426 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142130546 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172391324 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.190854542 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230353337 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17611111 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.16279312 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157178181 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177354196 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184249845 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163755929 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.126649871 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172734297 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175584008 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.133105725 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.104516216 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137243584 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14857205 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112540144 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141804007 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190098436 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172963673 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197957868 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169283277 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149326974 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19332083 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.134179962 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174060701 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181879923 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119292034 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.193574186 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218657288 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147985001 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153191685 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178473527 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.129383153 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105844187 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142760224 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176114652 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113138448 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144416604 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153286176 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193888757 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183757215 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159435873 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213289027 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175824487 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233131169 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102397729 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173607866 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18093612 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167553709 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171627371 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141044217 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.170555615 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189330508 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152857411 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20427674 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173624474 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178842981 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208450707 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166667091 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140555001 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13111916 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177268626 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149678668 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173514665 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155638474 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114921953 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163400796 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145632637 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134348805 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189734975 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151698519 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190010258 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.167250441 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1837004 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107157159 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152267156 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170416432 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155406502 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.098714338 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179313373 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226206242 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12386241 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167583704 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184525435 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140285975 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.323965406 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197505154 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221472951 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119076503 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152049255 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171661811 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169770899 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17304744 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193002974 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123314378 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190464894 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169590615 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153536057 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143603988 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128947667 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160818964 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16152245 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142370352 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163527202 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123596431 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220276322 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12500506 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169782214 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174326228 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.157864344 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.136095356 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149535294 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211004275 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169003709 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18705837 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167010605 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176954951 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196243914 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134926365 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109286588 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137090761 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193915881 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112945987 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168455006 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.220746097 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207566484 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170436689 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178436819 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118932513 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134739867 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170359783 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157368265 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20802599 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150579056 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144939622 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201876731 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131272864 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141854396 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174913017 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296168269 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154195176 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183732096 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.099735591 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313209272 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109726972 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140988394 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142246676 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208787849 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11404757 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.19480986 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174957437 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153716042 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144502071 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147259344 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200768532 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246340531 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181165477 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185686141 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.152534625 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140989689 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173591158 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215833466 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124212804 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156187531 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172104635 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193001567 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196721107 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14243503 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142452613 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171928801 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169945865 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211408831 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115462839 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19695827 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14049145 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177335257 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148226168 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105174489 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168322999 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19385759 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142326798 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185004815 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167849699 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111789273 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136834682 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161336864 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168751868 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12502184 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139776917 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187595397 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138407301 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172652531 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162634595 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141136805 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167324637 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156107968 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112738183 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15255802 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154186221 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115719601 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.183167627 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192533162 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140130512 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187186118 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182996063 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175068856 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17010115 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124731924 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673007262 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.137614905 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192964709 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127617724 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22847521 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12969849 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17563836 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172111779 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159845703 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177583807 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159289347 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229462717 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176928768 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167548281 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113302477 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15490834 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155710432 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.111584963 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162521257 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172146476 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150015227 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.11738661 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166891818 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156655088 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154351713 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1198486 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194926182 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158194738 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192055215 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195450009 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150901196 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177559548 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18454672 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139549018 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.171927663 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182844496 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123904396 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160373335 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.140915219 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.115833369 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191118898 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.135808542 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171089287 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169445727 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171137856 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143705028 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145045099 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17088305 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152960294 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170734978 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106987633 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165399923 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16936877 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139688861 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109657691 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167521748 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168637904 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.168752256 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107035314 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.183727449 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1932905 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.104381319 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1453409 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295415862 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168152615 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204264543 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162844834 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144937179 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125225789 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164877672 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164111617 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170084358 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10954847 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141932392 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140812753 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.190442362 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137479758 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16907563 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194156431 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171212586 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197879603 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.156372929 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274718975 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120234884 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165632906 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.140577236 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10990794 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150762431 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144837653 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154922754 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200713497 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191480394 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162022214 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125438285 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138516951 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104765054 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142938103 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172565589 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164855362 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167573579 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123559994 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.128034618 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153299077 seconds)
  done (took 81.145779262 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16775096 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.171330978 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.175543749 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222792835 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194493719 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281658175 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234423928 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253287159 seconds)
  done (took 2.737001274 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11023527 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.145551634 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.151876912 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133348309 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.133543339 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.362826005 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146511625 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.105950688 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193766334 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.146311349 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132482252 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.634735483 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.102551867 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.136341493 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122897105 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133256304 seconds)
  done (took 3.928803823 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.41939642 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.563741214 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.181189767 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.260803821 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23959132 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.164190249 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.78117874 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196822405 seconds)
  done (took 12.847505842 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138680197 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.153545063 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.270404401 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.185785363 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.17116596 seconds)
  done (took 1.968993652 seconds)
done (took 124.495335981 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104597645 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.135147637 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105501938 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.136873879 seconds)
  done (took 1.517774672 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.11837304 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089593316 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.122246461 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08889842 seconds)
  done (took 1.462763066 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.445884991 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.120723216 seconds)
  done (took 1.650097324 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130589815 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147107825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.128811096 seconds)
  done (took 1.457479467 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112903944 seconds)
  done (took 1.164640669 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117548717 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112676727 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.152874586 seconds)
  done (took 1.435852219 seconds)
done (took 9.735319164 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133100807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.532787519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.395238063 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149421181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732170983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388275099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.055746035 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165355577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175074444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10091254 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148151988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681047686 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04063459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.44905663 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.026114773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.354075443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713399682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101705985 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136198417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101900687 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.032611596 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098926389 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13069889 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102123685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710682206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404524566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131324463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.395540159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10044274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132989918 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.39046564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128572473 seconds)
  done (took 17.379257517 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144785519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190494526 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137360521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103531942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133574763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102134151 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138548552 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113066584 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189502847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129581826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121807398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128718944 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10519927 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.130009033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.123343151 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.129202565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102944501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.131970974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107355432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131892034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120364332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12843714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102031664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.132195994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100275961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14326277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100529311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141138164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099975048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136130093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133794309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10166076 seconds)
  done (took 5.085285059 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150608167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200390375 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138429087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136722474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.180212023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131227039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217805913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137484019 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193962625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130363673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120076147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130064197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16676241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102336875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152683165 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101112657 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133159659 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102812912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137176972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102749329 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100549142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131883331 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103111033 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130125879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115002767 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130661923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140472712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101688445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13362872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107858865 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12924203 seconds)
  done (took 5.398893624 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108848964 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137257951 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11915966 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147082461 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.107194749 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135969363 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109998164 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.1324915 seconds)
  done (took 2.05090105 seconds)
done (took 30.965847984 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123331083 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143348512 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116787489 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.139270589 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137511557 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.128059938 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.113562249 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099234084 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.140929228 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117487943 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.130549926 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101914511 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.14477911 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105857765 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.146831424 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.110345208 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.151711258 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116464059 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.131305295 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111076136 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.131866898 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.121709926 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.135964343 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102027149 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.148845581 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.103510493 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.149974218 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.106489109 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.136961415 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102796964 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.147043789 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107096618 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.132427388 seconds)
  done (took 5.185427174 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.13246268 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.177075863 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099154598 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129551008 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.17125095 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.099806494 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.158497921 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.09949892 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127847151 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100322918 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098059455 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.157383797 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.162960151 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.132145615 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.177602153 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.166350124 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.126556927 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.169090818 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.15262493 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.138894932 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.159459867 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.097858636 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.165205972 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.164478718 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.098620851 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128362732 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.143429944 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.160984306 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.173152073 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.134402072 seconds)
  done (took 5.267125294 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110631751 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147937052 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128370951 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204682032 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173150367 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.117871448 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.145075409 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120280052 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.160316956 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.10215773 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.143536146 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.164829434 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119451244 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.142579738 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107677427 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.146001896 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.122537735 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.133519264 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109422043 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151568369 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.120629079 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.14541651 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116241685 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.142363345 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101576469 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140750273 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.107654456 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.146588925 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138797177 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112114245 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134452196 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106754482 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134061997 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.112830732 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135103806 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.110751376 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154493211 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112410063 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.146199629 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.167190157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112313148 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136279791 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1248123 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17999832 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.104248026 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.139984352 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112922562 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.143182145 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101386956 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152607501 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116830075 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.133226017 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.146456113 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102402849 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130545082 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110234767 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132727996 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.105708269 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.14080497 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106856727 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152654575 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.112039076 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140120592 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104560119 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.139385504 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102942533 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.131316919 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.107895199 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.156873442 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107497442 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165207601 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102335092 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.138554382 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111494235 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1384615 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111712644 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.132610971 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109793916 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140862289 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10880044 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.142053211 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10561536 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.137754853 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.121209137 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.14841325 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.140033059 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107653642 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.138866442 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105604807 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.134702814 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117084351 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.134967772 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106680675 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143198629 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103823125 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135859157 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108730283 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.137864356 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101936325 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153325755 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107410528 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.132065205 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120722609 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.133589075 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106628817 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.141484241 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114952127 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.13255983 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107701991 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.13957599 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.10197651 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138669612 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106498531 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.133199322 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115276396 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.144937277 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.107944085 seconds)
  done (took 16.074825724 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.255137234 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.236003553 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205924747 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.319989643 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157046754 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.129689192 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.232012824 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.186148515 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.133891964 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.173170783 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190001844 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.195824291 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.102640616 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.167503341 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.23610296 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.32747617 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.167394134 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.144497299 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.173958244 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.156725511 seconds)
  done (took 4.970292486 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118908343 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.17353885 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162682711 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.129740468 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.136078765 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11664057 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.135941104 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.149387201 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104386202 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.140894014 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102732683 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.14262666 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10576217 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.137641371 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121111526 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151352095 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107088805 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.141078237 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.15075322 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108490529 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134140734 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.154711542 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.11286238 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163532808 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111489655 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.150327095 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.10183223 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.141292469 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099905887 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.134405834 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.109368286 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149780052 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140654464 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104155105 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.139780272 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103813169 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.129677148 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105238078 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.135957877 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107510128 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.15028673 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106333913 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133287489 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103815204 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.142249662 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100021132 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.107232908 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.14155208 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138721807 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112587184 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140412809 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107830229 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.141574519 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.116077721 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.130802286 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113563165 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.1461929 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138276839 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.110565035 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.131920015 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102466339 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.10733426 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132299811 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107891142 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.14025982 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149895788 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112289959 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.136289542 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.109121952 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.138515829 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107019803 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151123494 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1545279 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101480272 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.130014303 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12542753 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100267038 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121753813 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.113482547 seconds)
  done (took 11.109917506 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131707689 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133967833 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122638055 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.169898249 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.118561563 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.143534235 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103594855 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.155233278 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109691353 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.143961688 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110542634 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14936378 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161701745 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.117678562 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134647689 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.11920422 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.139029233 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.144276692 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.155019543 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165961575 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.114865856 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.139838455 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.117800616 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.146674468 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.135832907 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.147735462 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16772547 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109796341 seconds)
  done (took 4.903560827 seconds)
done (took 48.564368018 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.18175186 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.375634467 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.149626685 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.150253176 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.161913014 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.171461024 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.152358999 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.344619666 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.951574939 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.143520051 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.151305823 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.149580078 seconds)
done (took 27.161708843 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.2763867 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.76381483 seconds)
    (2/2) benchmarking "String"...
    done (took 1.49697534 seconds)
  done (took 4.351101849 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.150002304 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.151635678 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.39600438 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.153128699 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.168567379 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.152494332 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.161225668 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.157451408 seconds)
  done (took 15.416129218 seconds)
done (took 25.268545424 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.201192201 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.479707048 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.431103194 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.170292278 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.15253811 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.152703818 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.145105404 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.227742958 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.156202152 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.168483467 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.169789735 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.44607409 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.148688821 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.570457188 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.140605523 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.190167848 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.180508931 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.509190898 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.1563567 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.218764314 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.138152574 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.160818857 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.161728447 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.18316134 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.173983724 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.160280194 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.161864968 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.142479067 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.439688061 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.176088426 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.2028988 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.154382028 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.177892572 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.160664692 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.288682811 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.188755553 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.487677575 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.155021219 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.149979521 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.155714628 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.501030882 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.573771645 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.155085045 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.171876678 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.155629777 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.256693593 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.145986227 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.902238993 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.159288458 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.141946736 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.211993423 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.589070287 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.167329585 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.158376837 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.157694833 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.546867497 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.167068996 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.251416023 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.194662432 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.16735481 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.157218082 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.170624239 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.218108865 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.168862807 seconds)
  done (took 141.605834103 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.156728421 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.159680185 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.157822219 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.221422853 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.160367092 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.15894215 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.157194531 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.157198762 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.161232934 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.160858707 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.161562425 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.160775965 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.159669238 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.138861404 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.158696697 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.17530255 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.16227798 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.176731396 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.180779813 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.158272224 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.163823046 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.162325943 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.177001587 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.158036132 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.168856709 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.244060378 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.184861614 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.186446426 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.157831861 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.159334436 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.169068137 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.163792521 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.820673834 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.01204491 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.169860873 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.194323492 seconds)
  done (took 78.657462086 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.159164139 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.15815344 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.159193418 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.193348533 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.159561446 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.776268456 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78876953 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.955142124 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.326170145 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.693533099 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461909898 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.160128266 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256583051 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.174968554 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.161183139 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.175196694 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.185852005 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.16078107 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.16016701 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.77887269 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.175485785 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.160612415 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.343016335 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.180576765 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.195661053 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.559612007 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.160134375 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.196204967 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.501212946 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.214982073 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.160639297 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.615767555 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.616175348 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277195962 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.16218314 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.162777174 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.195258763 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.1623193 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.447988779 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.162665228 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.164505679 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.165074363 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.858247999 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.163048177 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.776967936 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.165225554 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.155513907 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.16298683 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.162780916 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.16209853 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.489132077 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.875915256 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.179115724 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.160404132 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.165118643 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.161179245 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.161848167 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.19684742 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.539580198 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.285100346 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.162543157 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.165497015 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.198105624 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.165015862 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.173602764 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.166539374 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.499187432 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.226958836 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.276204116 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759155934 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.164424934 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26268938 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287151924 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.163107537 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.162413242 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.163466286 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.164663271 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.164760321 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.27693449 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.164785502 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.610942529 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.347080193 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.183192667 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.711827086 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.266381875 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.164577482 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.602066021 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.168502824 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.163605984 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945459683 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263816619 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.163948399 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.165798603 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.164731635 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.614191569 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795919258 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485179473 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.168786474 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.956785816 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.170631598 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.628422135 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.165976257 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758916647 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.850343462 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.167912819 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280378327 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.347519991 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.184992666 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.164469029 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.714508072 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.169249589 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.223163368 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.169874564 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.567139208 seconds)
  done (took 363.211581956 seconds)
done (took 584.551185163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.872494037 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.825256249 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.960582496 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.853008738 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.821218133 seconds)
  done (took 10.421645569 seconds)
done (took 11.507112717 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.366215096 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.367546405 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.232878784 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.367956177 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.202526678 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.385791677 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.349811031 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.189223206 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.275847076 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.255441456 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.276655328 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224627597 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205040833 seconds)
  done (took 17.788923187 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.437989957 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.169098191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249907203 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414721614 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207659153 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.441249175 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.471837599 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.169130247 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.317771023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.183371337 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.182004727 seconds)
  done (took 17.336770454 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.44358749 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.169066293 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.235338223 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.429302148 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.209900341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.442411965 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.496655883 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.169556016 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341246205 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.183111415 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.182569968 seconds)
  done (took 17.393858755 seconds)
done (took 53.605864833 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.21224131 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.345429511 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.200610501 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.183598017 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.17899802 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.181649533 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.18443849 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.179515297 seconds)
  done (took 10.759392799 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.178710759 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.178368577 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.178251014 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.175163687 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.175464734 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.174820536 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.174654803 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.177459684 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.177544158 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.178310764 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.178062595 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.174761137 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.175157699 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.174612663 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.174753544 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.179197582 seconds)
  done (took 19.91929144 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.177818211 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.176051206 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.175927639 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.176560647 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.175907441 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.175378798 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.178272588 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.175156497 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.176251619 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.177001534 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.177007722 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.17718239 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.176513905 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.176430155 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.177349211 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.17822951 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.177115943 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.177488788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.182547107 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.177861285 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.178959696 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.175088718 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.178563055 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.177550457 seconds)
  done (took 29.347322935 seconds)
done (took 61.115209323 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.188216694 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.175013952 seconds)
  done (took 5.458231766 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.240050262 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.242351404 seconds)
  done (took 3.578353725 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.181157918 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.180506069 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.181662352 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.180318229 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.181353219 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.180729054 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.182119067 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.180545973 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.181891262 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.180997822 seconds)
  done (took 12.906271942 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.180593517 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.181541092 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.17689394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.181792805 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.180632093 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.178659411 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.180270885 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.18065463 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.181845617 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.178362352 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.18153523 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.178981157 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.181708941 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.178991423 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.18128086 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.178373242 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.179435232 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.178964287 seconds)
  done (took 22.337029148 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.194270832 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.201850414 seconds)
  done (took 3.49109512 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.319335331 seconds)
    (2/7) benchmarking "second"...
    done (took 1.219912949 seconds)
    (3/7) benchmarking "month"...
    done (took 1.295712568 seconds)
    (4/7) benchmarking "year"...
    done (took 1.287266717 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221980082 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.201395875 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.222375601 seconds)
  done (took 9.864336814 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.184545919 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.380896096 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.490517749 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.763982654 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.184274493 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22826064 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.057053586 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.23163628 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217471585 seconds)
  done (took 13.83590825 seconds)
done (took 72.563436936 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.174435295 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.194652172 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.181261344 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.20876642 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.518786872 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.223681817 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.178720378 seconds)
done (took 15.775127602 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.168567082 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.165914968 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.182398725 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.191117644 seconds)
  done (took 9.806538167 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.177398297 seconds)
    (2/2) benchmarking "read"...
    done (took 1.526634057 seconds)
  done (took 4.802141263 seconds)
done (took 15.704098423 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185193375 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.185235453 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.186061083 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.181732253 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.184888316 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.181590488 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.182174916 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.185443323 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.185358167 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.18063632 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.184841581 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.185961459 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184779929 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182180062 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181914736 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184888175 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.183051681 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.186268968 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.183675564 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184865843 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186090905 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185529888 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.182842879 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.183532572 seconds)
  done (took 29.518567608 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.186645083 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.184081253 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.185428651 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.187435301 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.182941706 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.187372983 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.187182113 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.183767579 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.187075262 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.187381406 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182942175 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.185078475 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.186769217 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.18428474 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187612466 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.184017039 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.18790264 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183870101 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187031396 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.183731796 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.187878821 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184859226 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.185883611 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.186815492 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.185262628 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.184559904 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.187762396 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.185779941 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.187024849 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.184291631 seconds)
  done (took 36.673777732 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.191900077 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.196526419 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.187333212 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.187389263 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.188073535 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.189140406 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.187602456 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.187635194 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.188771768 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.18830792 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.187560432 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.188443175 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.188320983 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.188029186 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.18956195 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.189600308 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.188622056 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.188051175 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.190600825 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.188626718 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.188102741 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.187912281 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.188287439 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.188190464 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.1887516 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.189100479 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.189640746 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.19014866 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.189617623 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.188707306 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.188952462 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.189074855 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.19018078 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.189840948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.189089884 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.190431538 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.194486184 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.197431132 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.189950556 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.189491325 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.188565491 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.190561915 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.190692532 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.189735995 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.189804603 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.191342586 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.190912583 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.191557211 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.191467994 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.191532048 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.191049593 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.191033556 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.192655465 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.189746141 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.19159067 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.189835583 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.191721719 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.192293175 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.192048291 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.192268785 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.191711413 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.192030085 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.191286356 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.192383151 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.191978365 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.190861356 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.192582462 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.191450249 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.192088564 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.191867177 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.19239034 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.193798017 seconds)
  done (took 86.807420683 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.194602394 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.190437804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.190973749 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.189325772 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190172989 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.192541566 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.190199494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192437028 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190219124 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.192278288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193090747 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.191264328 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191788644 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.193183531 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192788527 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.190318252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.194888829 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190424426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.192409519 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.193729054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194112597 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.190033935 seconds)
  done (took 27.32747223 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195015164 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.19561614 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.19049887 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.195840267 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.195631494 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.195884262 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.194031355 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.194710176 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194285449 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192120833 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190634857 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194707843 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.194373717 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189771405 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.192270108 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19481658 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195062914 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.194098009 seconds)
  done (took 22.597502559 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.192978718 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.191933575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.196663396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.192566182 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.193622911 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.196183757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194082882 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.195360751 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.196137683 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.192873956 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.195477649 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196260169 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.195734687 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191876795 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195620038 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.194577574 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.195595904 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192640196 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195662468 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194045011 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.19428028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19510135 seconds)
  done (took 27.388287819 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196808307 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.195874 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.194156851 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.193540934 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.194432796 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.198187039 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.195783551 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.193722881 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.198358293 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.197171322 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195195645 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.196675644 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.196043639 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.194062225 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.193964546 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1945535 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.197291776 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195173371 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196673237 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.19405977 seconds)
  done (took 25.021207287 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.198349141 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198873988 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19836268 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199226282 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.197906287 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.198910462 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199149049 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.199283502 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.19862176 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.200367984 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.19940147 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2002519 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200199748 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.19927552 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.199821746 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201206401 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.199064517 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202040684 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.199671182 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.199942711 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.200805844 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199607318 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201057294 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.20107449 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.200005008 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.200627961 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199066633 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.201140258 seconds)
  done (took 34.704637481 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201662007 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.199574259 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.198251588 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.197204393 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.197868877 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.197034144 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.197930057 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.197637451 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.200787078 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198684763 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.202219607 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.199576481 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.202520293 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.199977349 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201131372 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.202388477 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19989416 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.199623686 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197953925 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200407717 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.202090422 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200992641 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.202829819 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200006445 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200135248 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.200277566 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199815667 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200714539 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201641706 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199456177 seconds)
  done (took 37.114752927 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.241316668 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24179004 seconds)
  done (took 3.597114635 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.200142099 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20369063 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.201232944 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.200475339 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.199267068 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.202669278 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.202855521 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200033313 seconds)
  done (took 10.725624374 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.20269301 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.203411839 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.203163229 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.203851412 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.203892819 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.204011436 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210488643 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.224193336 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.202547441 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.204812254 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.211098012 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.21198355 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.206212754 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206203638 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.203688587 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206617647 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.20404342 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.20437126 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.204767937 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.205295581 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.204523025 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.20608415 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.207558759 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.203546456 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.206046329 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.215394736 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.208679898 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.206430125 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205697601 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.208662311 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.204815785 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.204081078 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.204189043 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.206318244 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.205624756 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.205668798 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.215413489 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229340646 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.210385393 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.206696442 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.206775755 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.202858182 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.206909485 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.206536198 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.207580628 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.206923119 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.208599086 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.204055315 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.205164585 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.210966747 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.211622449 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207704019 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.203674068 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.209205324 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.209569428 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214458673 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.227559419 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.212129624 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.217731635 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.217668611 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.221156433 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.233604985 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21035154 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.207473943 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.219036485 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.233790497 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214865391 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.226207334 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.204916845 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.208301686 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.214925858 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221199087 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.236902305 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.20866811 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209671869 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.208987061 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.209523656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208509464 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2149606 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.231958705 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.209412787 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209966085 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.220699344 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234717031 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.209600159 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.208685511 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.209903921 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.208484174 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.216411349 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219787174 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.231563485 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.208766838 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.209204148 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.208874163 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.209676671 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.21043542 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.208884582 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210622219 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.208761481 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.211308407 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209689515 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214800053 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.220013875 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209939463 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.21135561 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.217509163 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.211634927 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211608053 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.217927158 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.211112915 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210320437 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.21410628 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.218849616 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.207568394 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215528127 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.221452964 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.211462513 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.213967543 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.212213197 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.212654233 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223661471 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.240644222 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.211652062 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.212730139 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.217686117 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.225096951 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212225752 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.214938315 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.213549301 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.210419813 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.211379571 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2126336 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.213176235 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.213591253 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213026148 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214198758 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.211331768 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.213341492 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.211607903 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.214003753 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.21352007 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.212854052 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.21515351 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.216030514 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.213704605 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.215178127 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.219001663 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.214506898 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.214991453 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.213664408 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.210075879 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.212742746 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.2146756 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.213195696 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.21443114 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214565738 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.214378612 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.214698175 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.215140524 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.215430766 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.215558953 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.215333475 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220515884 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.215343025 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.217501556 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.214077087 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.212813652 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.216105836 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.220825907 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.216730835 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.215458559 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.213555608 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.218811637 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.223858415 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.214388252 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.214831417 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.218558285 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215553521 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214899056 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215963343 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.220606556 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.224055934 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.214578982 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.223086194 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.217027559 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21650019 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.216329674 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.218767702 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.216162878 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216305446 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.221678362 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.225213458 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229622812 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243535721 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.218154354 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.22238225 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.218051254 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.220718327 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.22182707 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.217457086 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.218145641 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.216720417 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.217452473 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.217416491 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.220447086 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.218077476 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.217235725 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.21812006 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.219379848 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.217223866 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.218156807 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.219934554 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.219319481 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.217677398 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.218037161 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217577172 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.218056325 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.215825186 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.218320315 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.218315533 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.220434848 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.21888346 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.22582131 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.217538424 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.218979827 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219699816 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.219298587 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.218161967 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.220631878 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220843029 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.220247755 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227302726 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.240495308 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.21983486 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226642266 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.240715855 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.221558704 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.221270934 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.220905073 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.21662782 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.224685457 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.229133349 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.221748626 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.219975868 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.221312691 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.221376971 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220938779 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.227355699 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.218706365 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.221467072 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.221687638 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.22235814 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.21854238 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.22176841 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.221310254 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.222254468 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224034955 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222196344 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.221490429 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.222460147 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.220574561 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.223732262 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.222286212 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227054836 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.232756755 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.229011233 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.22129927 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.223013961 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.223063479 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.228270902 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.221280191 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.229410247 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.221740338 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235673959 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.248739221 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22806082 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.243512223 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.222767215 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229878555 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.245030359 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.229461983 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224106111 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223172531 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.223565456 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.223175543 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.221125274 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.222507628 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.223130891 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225215488 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.226615413 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.22947393 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.224772776 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.223744836 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.223805881 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.223850075 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225213655 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.223343648 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.226525408 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.226344208 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.22556777 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.22481213 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.225443672 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231461508 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246131239 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.226327159 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.22620969 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.225815493 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.222055544 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.225141814 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.22357346 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.228403381 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.234683751 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.230448643 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.23606203 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.226690223 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234995321 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.22580837 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.229725803 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.233842927 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.223258165 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.225148252 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.226497977 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.223891841 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234347859 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.247484484 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.228853813 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.229378165 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225588084 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.225879027 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.225209937 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.225376913 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226865972 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.226925435 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234304197 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.250674862 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.229914533 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227698645 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.22503264 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.225692236 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.226714125 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.226582915 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228805687 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.225618562 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.228072446 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.226751165 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.22810789 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.227129834 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.227141207 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.228132122 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.225184646 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.226817957 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234072297 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.252070763 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231667302 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.229579582 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.235401054 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227007903 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234747794 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.249090511 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.228194876 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.228375395 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.231292586 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.228926636 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.227698942 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.229482891 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.228738922 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.229990705 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232782814 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.229780001 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2308345 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.229247014 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.228806339 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.229446129 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239497687 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256490968 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.231404316 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23530921 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.22551251 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.233163205 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.234530868 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.229877134 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.229057901 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.233994766 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241866776 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241047581 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.230306592 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.229814823 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231170945 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230427575 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.229962836 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.231131833 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.230015543 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231088322 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.231046846 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.230757295 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233451229 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.2316463 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.231119762 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232286682 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.232569256 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.242905584 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.232015965 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.231741043 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231915077 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.232675161 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.231484649 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.231416591 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.231035602 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232972169 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232989427 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.234440285 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238905011 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.240052708 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.234610434 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.23226589 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.231400234 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.232789034 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.233028658 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232604897 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.233887446 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2326042 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.233618782 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.229994906 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.768469438 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.233620016 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.232777529 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.233373379 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234462077 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237039383 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.241411797 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232799373 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.23043426 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232698271 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233794561 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.233992129 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.234010478 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.239129938 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238262235 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.245984293 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.24351293 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.238036647 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.233995377 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237222837 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.242151682 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.232365182 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.23536783 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.232222492 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.237668562 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.236681735 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.238339044 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234110845 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.238852448 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.234803129 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.234042128 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243146525 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.259320839 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235235273 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.236682383 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.240947489 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.235959731 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.232306815 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.237458157 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.238411724 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241870534 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.257016363 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234710421 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.23699474 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.236349267 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.238581194 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239333919 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235673378 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.237295003 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.233585561 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.235232862 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236074858 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237231199 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.233738344 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.237098731 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23704186 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.240594929 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.245697477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.236296852 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.23783353 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.237952125 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.237274612 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237285148 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236845893 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.234368996 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.234041807 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.2377296 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235733555 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.237858422 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.240043913 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.237338493 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.239747071 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.241371487 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237244586 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241870756 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.250098319 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.246125412 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.234468576 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.236574971 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.239320381 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239355287 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237652846 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.238717233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239616151 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.238177028 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.238620616 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238170019 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.239690407 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.242481893 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257180644 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.262760621 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238250805 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.23968931 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241690164 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.238329071 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.235973619 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.239430847 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.241637459 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.244184732 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.247301752 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.240712675 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245036314 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261793823 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.241005611 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.243993467 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.243718226 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.250037109 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.243818159 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238831061 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.240132083 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.246768738 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.258457531 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239250939 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251545108 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273075056 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.261848303 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.240472488 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.240083401 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240691929 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.242519055 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.241872586 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.242218855 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.240997275 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242589697 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.242019601 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.241859978 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248500216 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.242416593 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.2432751 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.242081499 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.241925643 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.242288435 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.239883546 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.240120998 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.242091403 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.242032506 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.240838279 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.242323896 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.241613618 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255037671 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.271809842 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.242512889 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.241376105 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.241976438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.246026058 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.246834851 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255671612 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.251435765 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.241907536 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.24336449 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.244230601 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242121689 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.24417492 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.242376747 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.242988064 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244524044 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.241028672 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.255682394 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270974929 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.24805862 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.244278445 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244257211 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.245403181 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244468216 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24358761 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243737822 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.244889422 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.248092713 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24910326 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.244088281 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.243768985 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.248203841 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.252640515 seconds)
  done (took 733.00348734 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240662536 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241622977 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.241669155 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242200847 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242854428 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242588204 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243605509 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243027948 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.243243789 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242029399 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.242660271 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24212668 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242113314 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245172204 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243031564 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243413861 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.243264564 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24153109 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242980859 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24388562 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243391013 seconds)
  done (took 27.24988698 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.246179196 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.244758731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245610216 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245799245 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243743483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247048392 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.244177415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24687129 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246775362 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246637151 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247116117 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246156628 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.244467394 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.24548987 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244664592 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247430502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248289216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244634589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.248174898 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245181092 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24819272 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.247131425 seconds)
  done (took 28.568107462 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.248049149 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.248469957 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.248337878 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.246204907 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.248501058 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.244259413 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.248059634 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.247673578 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.249340578 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.250208817 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.249969713 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.250755831 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.256033511 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.255341975 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.249268004 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.248193488 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.249107531 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.249450186 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248543678 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.245758033 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.255145424 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.26836062 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.24764439 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.248632865 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.248400558 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.248825709 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.24882297 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.248610968 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.249835681 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.25664183 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.250675231 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.249897626 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250616188 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.249147831 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.252190101 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.254069651 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.248619156 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.247205163 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.250327103 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.261405649 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.273118578 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.249145672 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.255787756 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.273137866 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.249944732 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.254813892 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.25860376 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.249191043 seconds)
  done (took 61.238501112 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.881553255 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.897037929 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.883716247 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.899267907 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.894547358 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.901408759 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.905182039 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.905339454 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.886359722 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.882433741 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.897729373 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.88740291 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.889462728 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.897345999 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.899199211 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.891817187 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.886734556 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.89119724 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.90307811 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.901338743 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.892436056 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.900247267 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.900342742 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.889450724 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.902129554 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.895366521 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.897037474 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.901969228 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.892950645 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.89265553 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.904616137 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.913002153 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.913408858 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.893765039 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.893997024 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.905612112 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.908579023 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.895377972 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.91326824 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.90057311 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.905708211 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.908632968 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.904239755 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.90872864 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.911171706 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.899243101 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.900499589 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.898290872 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.891102882 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.902692521 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.904806368 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.901946858 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.903343919 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.894205779 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.902600228 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.9122743 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.908697839 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.906646263 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.904432564 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.896854441 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.899100742 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.910897807 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.899992598 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.909197932 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.908447639 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.897337435 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.897744795 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.904984782 seconds)
  done (took 130.344172342 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256127094 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.256164232 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255209713 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255339725 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255654305 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.256349847 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256910238 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.255827751 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.256163056 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255738139 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255818327 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.257440851 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.256830008 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256765349 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.25749636 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255367849 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.25519358 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255982222 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257348189 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256452136 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.258360817 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.257725928 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.256673653 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258110307 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2590794 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256727377 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257462175 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255866431 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258612432 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.257326888 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256571277 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.258023984 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258813141 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256869641 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.2584233 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.25873048 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.25543148 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258773064 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.258503187 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257467857 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256490192 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257824056 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257674811 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.256985224 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26022943 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258185646 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259114958 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.259000389 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259169751 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260512585 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.258709658 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259224735 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259352139 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258564809 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26016318 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.260396675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259389996 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260099926 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258671262 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260905044 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260530678 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.260470193 seconds)
  done (took 79.150143625 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261033757 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26139013 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.258207792 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.258994712 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260682165 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257823453 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.260722172 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.260772028 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26121925 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.262483269 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261388672 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25807759 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261127756 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262306763 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260376485 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261879102 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259664079 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258844265 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262891424 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260429924 seconds)
  done (took 26.374698754 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.259192588 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262086022 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.259242637 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259634952 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.262366839 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260401821 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.263403516 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263226319 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258726659 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262747614 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263024191 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.261619602 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259047259 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26002793 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.261206747 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.260397943 seconds)
  done (took 21.345943285 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.261195844 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.264534109 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.26257949 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.262679138 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.259545704 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.260436297 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.263217328 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.26067161 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.260966396 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.26366218 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.263415722 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.26381418 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.263226187 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.26203791 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.26178229 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.264040531 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.262091302 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.260857039 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.264452115 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.26404931 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.263293172 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.262152255 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.263755182 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.264767434 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.260150504 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.262605887 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.262374916 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.262099072 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.262349917 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.265155307 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.263626517 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.262967932 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.263052448 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.264061338 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.263788545 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.263487594 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.265648827 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.264596527 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.264779901 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.26493497 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.266380867 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.263673977 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.266126393 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.266598258 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.263543424 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.26553774 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.262005673 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.264113204 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.26296619 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.264004429 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.266394575 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.265348286 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.266421004 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.266295937 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.266808388 seconds)
  done (took 70.666431965 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266882609 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268325624 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.264747318 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.266834642 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267378477 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.265806041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.266574188 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266733321 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263922662 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267510949 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265504983 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268327735 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266548366 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268420874 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.263835521 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267520999 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.264256248 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267003682 seconds)
  done (took 23.968618552 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.266681384 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265082564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.268235433 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.265242933 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.266004972 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268821967 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264167251 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.267945862 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268303663 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267490085 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266227265 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.26839565 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268266679 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.269931996 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26595304 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265748135 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.268710701 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266892772 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.267646366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266440526 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268912845 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269933243 seconds)
  done (took 29.055766904 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.268282959 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.266835976 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.269105293 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.285957167 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.292154613 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.267742076 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.26788324 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.268797714 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.294617504 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.329448046 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.322411106 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.294164355 seconds)
  done (took 16.601813439 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268444181 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270538521 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26818983 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269895671 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270126301 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26816925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266276424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267722179 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271055145 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26829654 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267990268 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272722745 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270948314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268812565 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270770713 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270831832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267277628 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268876363 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26921489 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270821076 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268982785 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271438822 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267913606 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268279784 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26975665 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269039178 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270642048 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268633771 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268691934 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272881938 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273082244 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271664086 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27411314 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269364378 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273422648 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272595076 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270827662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273158672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273946014 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269894114 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274298515 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27236446 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274083169 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27032898 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27309304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269951162 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271949949 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269134385 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272352214 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274749571 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273006097 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271010278 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273921715 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27354927 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273235514 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275655577 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271228696 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272157281 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273986716 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271318784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272452553 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275190526 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272315113 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271885274 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276745616 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272479624 seconds)
  done (took 85.07686238 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274043101 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271892689 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271706916 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271846353 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274228875 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273572542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272198221 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272138997 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272435721 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272499044 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274193186 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273594975 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272176361 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272965826 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273087281 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274350704 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272652631 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273068946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274764677 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276321186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274126966 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273694909 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273322055 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274340631 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274053206 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27749198 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272447293 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27339844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272843389 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27378026 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274427456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275462896 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276019345 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275008 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273005533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274664212 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274398591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274142082 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275149285 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278772027 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27597079 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27895756 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275161064 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273570019 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275357442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276338899 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27463055 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275039317 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275499269 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274873436 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274591607 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277186539 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275771826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27487376 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275591336 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276542052 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275597082 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275262582 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276857637 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278293057 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277492529 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275929984 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278819838 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277249539 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276001867 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277064353 seconds)
  done (took 85.31743923 seconds)
done (took 1760.534179516 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.441632373 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.397287293 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.277803879 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.290831467 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.277582421 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.30142261 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.289601756 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.27902316 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.278036014 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.277603954 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.279779713 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.464631257 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.273174691 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.279296298 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.278937917 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373934835 seconds)
  done (took 26.244063437 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.311584776 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.286450263 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.417003789 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.305281984 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.310925746 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.495173096 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.344489776 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.286790571 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485817033 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.308539079 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.280050208 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.31018389 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.28624154 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.278446941 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.305348485 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.497180441 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.564131681 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.284193351 seconds)
  done (took 28.541906633 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.811532499 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.288152925 seconds)
  done (took 5.287179052 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.308884685 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.284026571 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.289163321 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.285662214 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.275939493 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.276567677 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.283941289 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.27889385 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.291163012 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.433025218 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.289466936 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.295738908 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.308865984 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.285976655 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.283398327 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.328274347 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.440535359 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.281962215 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.283192974 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.290668274 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.286117535 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.396729865 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.334044013 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.286091753 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.431616068 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.29512209 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.29016662 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294872696 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.429154988 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285563882 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.285126249 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.285181115 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.288586672 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.210403648 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.783078308 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.301260187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.314735795 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29500277 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.284397743 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.463967682 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.290240508 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.294243443 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.279831778 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.771522677 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.439180372 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.425714309 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.306819997 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29018317 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.28950907 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.361938579 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.291247119 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.292656533 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.334489292 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.149183203 seconds)
  done (took 82.950484232 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.325529564 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.27982909 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464972207 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.301854265 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.280607059 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28159554 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.281331966 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.615726858 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.306532763 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.282626036 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.594833173 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904510331 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.305752615 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.329356591 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.143752423 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.347692922 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283214936 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.302281116 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.283538338 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.285573637 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869300394 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28312812 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.302483203 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.353531714 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.323359956 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845080559 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.289830062 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.282639208 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.304049913 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.282523075 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862372815 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.314726522 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.335980846 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.282486788 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.577354103 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712874916 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670715435 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.283756189 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325336026 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.286547203 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.308872537 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.829455446 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689593279 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.284774262 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.284021757 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842630765 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.283959 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.292900623 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.292763428 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541518773 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28269182 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.286156573 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.31951602 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.283804395 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.285030394 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.377357827 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.364839242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.850820829 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285162721 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.284230435 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.322775961 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.285551062 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.291160328 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.290031531 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.287787931 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.694404074 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.499007189 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.293265586 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692061135 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.849207346 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.303476339 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929417712 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.3059548 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.306088972 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.4705171 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.285653628 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.286795244 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865904618 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300450802 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.285655822 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.67403895 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.286472149 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.601554296 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.325128759 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288757431 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897171583 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.29107652 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.291302137 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.285421853 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.291048732 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.287455075 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.290056659 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.608610257 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.319009756 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.287124597 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.286810164 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.28786275 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.295791596 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.287886128 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.291743383 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927864959 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.313261039 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285421268 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291552833 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287665959 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.290837661 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.287959972 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.287843136 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.564575166 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.289000498 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.31310136 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.288572851 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.287718126 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.297061463 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.360975429 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.28931645 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.661094335 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.291140166 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286839828 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.31453503 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288869524 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.342136055 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28870492 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.295855452 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.228003813 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.55598622 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.311363244 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.2884433 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29051096 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289132282 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289227548 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289962465 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.324374161 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.291573846 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141614846 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315685479 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.294857893 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.290070227 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303240131 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290345425 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.317246887 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291804169 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599179635 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591083173 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.50042557 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295627528 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.289952093 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.140324143 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.336739362 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473835882 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.310625387 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.291711209 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545789571 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.499943958 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.292260738 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.291782553 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.294296535 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558153398 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.292521692 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614353845 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910481791 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.31317352 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.291519351 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.160521672 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048821163 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.296856842 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.29674687 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.600057497 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.312628475 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.291137723 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.291608705 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.291990366 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.291054887 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.292379381 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.301834639 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.291173707 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.292172182 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.614708461 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488964934 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.312943955 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.298018746 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865863256 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.310877204 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292153006 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.297930468 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.295571207 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.292799504 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.360598637 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.296359104 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.319359301 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.291272567 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.294987931 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866230503 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.293854884 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.294445804 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48958469 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061577902 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.317054768 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.29397248 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.312686811 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.182356291 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878633635 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.31637375 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.653661011 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.29266309 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.336641849 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294076816 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.296939866 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877174749 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.297792972 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.317066519 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.019089503 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.317351712 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.704396186 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.293833137 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295302874 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969463923 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.319301459 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.296809057 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.295419707 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307005925 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602307554 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.295051503 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.316400215 seconds)
  done (took 490.750723735 seconds)
done (took 634.954232112 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.295511377 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.29601568 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.28400377 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.299518285 seconds)
  done (took 10.379269161 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304813066 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.30427243 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.304812269 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.304140441 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.305245018 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.304886268 seconds)
  done (took 9.03966392 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.29700887 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.297184709 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.301232579 seconds)
  done (took 8.103270937 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.542209564 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.337064614 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.690666896 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.324221123 seconds)
  done (took 9.10503538 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303162897 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.305295712 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.30599977 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.306970537 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.307167171 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309764873 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.307826552 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.306450666 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.309776032 seconds)
  done (took 12.969492928 seconds)
done (took 50.799685652 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.385847341 seconds)
    (2/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.466191499 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.396969373 seconds)
    (4/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.137625959 seconds)
    (5/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.387365334 seconds)
    (6/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.28585981 seconds)
    (7/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.513935241 seconds)
    (8/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.324866256 seconds)
    (9/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.108537103 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.365078055 seconds)
    (11/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.521989284 seconds)
    (12/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.322757355 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.312981145 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.411736365 seconds)
    (15/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.283263807 seconds)
    (16/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.012425065 seconds)
    (17/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.353415531 seconds)
    (18/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.077956628 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.379069373 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.381759136 seconds)
    (21/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.447197701 seconds)
    (22/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.336888007 seconds)
    (23/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.324490767 seconds)
    (24/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.300731784 seconds)
    (25/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.40378715 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.434197255 seconds)
    (27/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.318614645 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.308578568 seconds)
    (29/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.316270105 seconds)
    (30/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.345957481 seconds)
    (31/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.482396101 seconds)
    (32/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.315191351 seconds)
    (33/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.360325156 seconds)
    (34/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.311412622 seconds)
    (35/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.529681768 seconds)
    (36/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.440961011 seconds)
    (37/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.333958924 seconds)
    (38/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.311048147 seconds)
    (39/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.286988004 seconds)
    (40/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.42984285 seconds)
    (41/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.405593773 seconds)
    (42/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.40925972 seconds)
    (43/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.333931188 seconds)
    (44/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.311297397 seconds)
    (45/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.416882347 seconds)
    (46/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.37802069 seconds)
    (47/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.289419935 seconds)
    (48/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.299777604 seconds)
    (49/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.292499704 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.416960158 seconds)
    (51/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.448095458 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.357654942 seconds)
    (53/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.367008433 seconds)
    (54/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.391300083 seconds)
    (55/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.509287719 seconds)
    (56/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.494686593 seconds)
    (57/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.43969058 seconds)
    (58/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.305174047 seconds)
    (59/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.359232098 seconds)
    (60/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.32907892 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.49168123 seconds)
    (62/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.08927443 seconds)
    (63/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.554312786 seconds)
    (64/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.390671979 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.375345497 seconds)
    (66/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.314880265 seconds)
    (67/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.378436626 seconds)
    (68/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.474099259 seconds)
    (69/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.392280365 seconds)
    (70/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.209315823 seconds)
    (71/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.483582452 seconds)
    (72/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.374851892 seconds)
    (73/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.958580787 seconds)
    (74/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.347707497 seconds)
    (75/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.355878837 seconds)
    (76/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.073987118 seconds)
    (77/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.329203082 seconds)
    (78/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.057685858 seconds)
    (79/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.443437506 seconds)
    (80/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.348944059 seconds)
    (81/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.305548237 seconds)
    (82/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.348751044 seconds)
    (83/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.973030163 seconds)
    (84/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.50562441 seconds)
    (85/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.480237347 seconds)
    (86/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.311640419 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.491435853 seconds)
    (88/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.088892024 seconds)
    (89/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.471601305 seconds)
    (90/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.233401908 seconds)
    (91/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.420336912 seconds)
    (92/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.423479036 seconds)
    (93/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.07869365 seconds)
    (94/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.437128017 seconds)
    (95/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.333622198 seconds)
    (96/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.362519501 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.408249597 seconds)
    (98/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.532794813 seconds)
    (99/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.339172598 seconds)
    (100/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.305412088 seconds)
    (101/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.603836747 seconds)
    (102/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.292954605 seconds)
    (103/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.378225245 seconds)
    (104/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.693504861 seconds)
    (105/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.4451619 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.429001118 seconds)
    (107/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.320169468 seconds)
    (108/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.960858654 seconds)
    (109/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.358222888 seconds)
    (110/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.318366642 seconds)
    (111/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.455588071 seconds)
    (112/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.396916605 seconds)
    (113/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.402138878 seconds)
    (114/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.329255791 seconds)
    (115/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.293591676 seconds)
    (116/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.311256855 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.423419138 seconds)
    (118/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.314931201 seconds)
    (119/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.205999433 seconds)
    (120/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.457205672 seconds)
    (121/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.413656413 seconds)
    (122/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.025067988 seconds)
    (123/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.392519637 seconds)
    (124/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.397798252 seconds)
    (125/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.394034418 seconds)
    (126/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.322429703 seconds)
    (127/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.481695056 seconds)
    (128/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.315577172 seconds)
    (129/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.410624783 seconds)
    (130/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.344338726 seconds)
    (131/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.316946958 seconds)
    (132/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.418737002 seconds)
    (133/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.307261435 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.373668709 seconds)
    (135/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.447073328 seconds)
    (136/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.48397569 seconds)
    (137/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.336872889 seconds)
    (138/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.296768141 seconds)
    (139/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.438924068 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.366649983 seconds)
    (141/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.414036586 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.343827291 seconds)
    (143/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.357726945 seconds)
    (144/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.353189189 seconds)
    (145/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.349975207 seconds)
    (146/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.482489766 seconds)
    (147/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.692940153 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.440424358 seconds)
    (149/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.717120251 seconds)
    (150/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.239118295 seconds)
    (151/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.34366575 seconds)
    (152/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.533629891 seconds)
    (153/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.395139803 seconds)
    (154/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.160943519 seconds)
    (155/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.322183962 seconds)
    (156/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.296035702 seconds)
    (157/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.342032521 seconds)
    (158/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.328997647 seconds)
    (159/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.517296752 seconds)
    (160/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.965500275 seconds)
    (161/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.53449391 seconds)
    (162/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.333300227 seconds)
    (163/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.407860692 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.335686948 seconds)
    (165/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.389020251 seconds)
    (166/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.537544107 seconds)
    (167/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.331117511 seconds)
    (168/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.320619475 seconds)
    (169/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.296107388 seconds)
    (170/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.581022782 seconds)
    (171/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347326752 seconds)
    (172/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.318486919 seconds)
    (173/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.324110844 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.386903333 seconds)
    (175/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.398540825 seconds)
    (176/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.609907144 seconds)
    (177/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.394479163 seconds)
    (178/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.43079785 seconds)
    (179/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.511280333 seconds)
    (180/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.346727527 seconds)
    (181/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.322194846 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.368772748 seconds)
    (183/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.417252507 seconds)
    (184/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.304997909 seconds)
    (185/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.337871047 seconds)
    (186/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.541443787 seconds)
    (187/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.481200221 seconds)
    (188/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.673158959 seconds)
    (189/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.466708206 seconds)
    (190/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.39196866 seconds)
    (191/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.318290251 seconds)
    (192/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.415927097 seconds)
    (193/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.354763564 seconds)
    (194/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.374239085 seconds)
    (195/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.322352427 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.326404613 seconds)
    (197/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.0304658 seconds)
    (198/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.088132344 seconds)
    (199/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.352281567 seconds)
    (200/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.328141936 seconds)
    (201/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.969182867 seconds)
    (202/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.353404806 seconds)
    (203/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.322813534 seconds)
    (204/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.424279572 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.329466111 seconds)
    (206/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.973112862 seconds)
    (207/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.337404298 seconds)
    (208/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.514086734 seconds)
    (209/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348793359 seconds)
    (210/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.33459426 seconds)
    (211/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.521983902 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.430260907 seconds)
    (213/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.961001052 seconds)
    (214/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.450789417 seconds)
    (215/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.420868743 seconds)
    (216/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.332453315 seconds)
    (217/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.084734462 seconds)
    (218/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.517756838 seconds)
    (219/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.327350001 seconds)
    (220/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.300492205 seconds)
    (221/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.528592855 seconds)
    (222/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.481477695 seconds)
    (223/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.409535652 seconds)
    (224/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.97077956 seconds)
  done (took 365.121799708 seconds)
done (took 366.328152543 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371069809 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.499532317 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.324590155 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.324012269 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368069483 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.325121297 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.358877403 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.330918347 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.326932927 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.328105657 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.322764672 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.328458867 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.33739346 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.359423621 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.438189134 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.347446147 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.322706435 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.325481498 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.367262347 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.383889953 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367620106 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369514092 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.335695589 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.324674501 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372678386 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371653036 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.331047407 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313614378 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.323094666 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36424148 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.321624888 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.331632152 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375276075 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.376814611 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368968257 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.326240637 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368094698 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.502457777 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360780423 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.359812293 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.32836521 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.373145705 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.336031141 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.335541827 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.376119678 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.335834243 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372888247 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.448285801 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.325313188 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.316574614 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372892199 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.388343802 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329065661 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.314344376 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.317848127 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.448050866 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.327172577 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373602823 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330378616 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370578788 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.440390444 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376119135 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.389700471 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374748043 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.330526411 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.340227086 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.327321067 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.386019298 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.325463674 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371834266 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372970226 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.335346708 seconds)
done (took 106.971782232 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.459157077 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.324560288 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.490886234 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.329663911 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.497464205 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.48034915 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.32618286 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.326775521 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.325384946 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.157466445 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.325753055 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.325619723 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.323940972 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.326678179 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.458888048 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.329308048 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.326616463 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.045566447 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.330843519 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.475708512 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.32649514 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.327021369 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.327596181 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.150333313 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.327308221 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.321842621 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.476520528 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.329446521 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.046542003 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.323832745 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.324048582 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.046379883 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.479139758 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.346654918 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.337820436 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.336255102 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.499035706 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.350922361 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.459510178 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.462919251 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.488154279 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.369356955 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.322841459 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.325771411 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.331302068 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.331016862 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.329449555 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.355792057 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.329343631 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.330357556 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.048720571 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.340950338 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.330264597 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.328645712 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.329065844 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.358960291 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.329782585 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.331754183 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.480564755 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.332087474 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.461148166 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.155572959 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.161336642 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.331673303 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.328606698 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.331240502 seconds)
  done (took 108.310467876 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.397567643 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.406962376 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.454012244 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.350864588 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.383127649 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.458841228 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.352362476 seconds)
  done (took 11.035731221 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.338683072 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336281371 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383487067 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.383473307 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.332305619 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.553279935 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334007383 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.344629377 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.33001569 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.410198322 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.334298704 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335256324 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.340564594 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.329383463 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.381181147 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.345421901 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451458498 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.335375885 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.334595173 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.488586741 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.333380108 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.341304311 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.410467973 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.346244377 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.337590318 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.341508308 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.285711296 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332743743 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332625489 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.334892963 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333539356 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.442796462 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.336692077 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.333723796 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333414422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.493383962 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.333869169 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331200749 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.335871791 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.334307129 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.335232664 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.337253119 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.337463181 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.332971724 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.335430363 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.360891485 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.338384766 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.336110208 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.337974201 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33649545 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.412540311 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336145142 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.332862393 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.334199313 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.415488708 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344367087 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.336464275 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.334146352 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337093253 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337924204 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.490767163 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.385669497 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.338797723 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386320423 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339487359 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.336383948 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.337384894 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.337828964 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429782497 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.33936372 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.387126267 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.336569528 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.559350317 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.36336903 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339861623 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.34157659 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.342035796 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339341398 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.336218869 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.345267464 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.335985657 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.338585704 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.345732823 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335915645 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335317879 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.523236849 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.495949176 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.336542643 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.353885688 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.350396704 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.336865818 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.417420205 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.338696565 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.336560464 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390695124 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.453661983 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416037059 seconds)
  done (took 138.429512817 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.352736765 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.352953731 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.342334364 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.36782322 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.341555938 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.340476635 seconds)
  done (took 9.335532695 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.344015445 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.343382677 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34018813 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.338697042 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.3400623 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.341115081 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.339678192 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343824213 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.344475393 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.341066372 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.343003666 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.342192881 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.343021519 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.341564408 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.341396244 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.341600849 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.342112284 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337844047 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.342483282 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339243889 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.340891555 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.341784813 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341261476 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.34422089 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.34821322 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.341658628 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362790471 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.341781826 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.341567604 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.349875854 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.365441484 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.341992137 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.344332285 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.351276132 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.347942163 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.346052959 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348409427 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.344017483 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.340215109 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.343911415 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.343389716 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34243225 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.343394434 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.343205263 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.346880276 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.351172303 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.349669871 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365539444 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.343743253 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.34640055 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.344972715 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.344824196 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.344144827 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.344982782 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.347102147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368988208 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.349374276 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.345562358 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.343953384 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.347084521 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.345335946 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.343096341 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.347793211 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.350096804 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.343202395 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.345445633 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.346792493 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34774144 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343645671 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.344464417 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.346178809 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.343065544 seconds)
  done (took 99.104334308 seconds)
done (took 367.440247181 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.177867116 seconds)
  done (took 4.420375001 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.469532007 seconds)
  done (took 3.71440537 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.273900378 seconds)
  done (took 25.523267282 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.37216958 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.407920704 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.342691449 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.347051452 seconds)
  done (took 10.713622406 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.73777093 seconds)
  done (took 3.9820008 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.339257621 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.358860765 seconds)
  done (took 5.943776048 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.715822552 seconds)
  done (took 3.959623149 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.885113292 seconds)
  done (took 4.134261406 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.365757673 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.353257626 seconds)
  done (took 5.969975063 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.325313139 seconds)
  done (took 3.568411358 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.69205331 seconds)
  done (took 39.936373561 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.345108605 seconds)
  done (took 3.591526155 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.366691524 seconds)
  done (took 3.610504257 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.468725684 seconds)
  done (took 6.714070613 seconds)
done (took 127.02307537 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.338657635 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.343310857 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.340034178 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.339789505 seconds)
  done (took 10.606490259 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.399446692 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400679124 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.401271875 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.40046003 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.397987595 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399983977 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.372160237 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.371850811 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.398900615 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.397394019 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401535077 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398691503 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.400469382 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374014401 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.398851598 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.400097501 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39837786 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.400758041 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374206351 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.398361638 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.349715773 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.397369563 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.400563184 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.348414048 seconds)
  done (took 34.626691902 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.866475803 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.421254411 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.503650513 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.402661327 seconds)
  done (took 7.437779875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.424966653 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.429162244 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.443426386 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.484372294 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491208562 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440605125 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.376014462 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.370827581 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.357355675 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.428509558 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.477108153 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.417899824 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.511021392 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.350771655 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.554328 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.349496045 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.349380652 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.42750311 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.480409246 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.494064013 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.349824522 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.427605179 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.435539503 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.419838904 seconds)
  done (took 35.539862249 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.357847698 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.363212062 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.350661299 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.365322271 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.349428638 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.350528812 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.351569469 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.356283335 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.348265733 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.349831148 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.349879922 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.363978005 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.352825785 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.350478672 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.357527409 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.352563349 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.357879431 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.354731063 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.352007477 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.357846213 seconds)
  done (took 28.341392062 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.345089914 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.343614071 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.697389785 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.603500242 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.346488503 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.346504114 seconds)
  done (took 13.931780398 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.437354264 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.612262868 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.352442196 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.77735131 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.857569615 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.353754612 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.353225867 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.637619344 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.020829728 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.019183329 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.421985912 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.434531331 seconds)
  done (took 20.537063191 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.360361038 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.348855364 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.358489189 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.365563599 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.418870518 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.375886573 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.359360655 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.34609003 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421972506 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.44073097 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.377625223 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.420189159 seconds)
  done (took 21.845262246 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446708996 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346178707 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357606058 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426624895 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347565971 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19435126 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427713039 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113014192 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.375681756 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621121349 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367228459 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45028296 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606238937 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357170152 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352679762 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.344850743 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579335385 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911373387 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34990919 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346822154 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4033017 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366579497 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367863576 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598681056 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350954208 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348427779 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.61072979 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349031354 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689035371 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365181817 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360861156 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349364744 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622121142 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068192475 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470745287 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593218478 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353278233 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352701972 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.349852334 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.349486995 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382079143 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351669799 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360660082 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349681649 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350081204 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3557727 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125470584 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.377615847 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.347772812 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352384189 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661704069 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449567999 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.355194563 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350699507 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365654396 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349696353 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.356415153 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451021707 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944117165 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351330855 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360355911 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.351347782 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352582019 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372730126 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067896415 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.360648536 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.354936793 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357376639 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352389653 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352095223 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389772168 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353024774 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.376015128 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354255663 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222046269 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355772997 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355466752 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978419163 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361207032 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.355077119 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586453903 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352947012 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352324793 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.352224444 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352054813 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162558722 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363824708 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.336329101 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376203959 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123395572 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625306854 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375484076 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386165619 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577990799 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.33918312 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353071821 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.352785949 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376553905 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376343072 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126079852 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37928238 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.359248628 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617660105 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.568601189 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359629533 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.340734926 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91619277 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391062143 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.371246955 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362107691 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604602479 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.035710847 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371314705 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374237735 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375480365 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356550131 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20122202 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365157033 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.458894138 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354861797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664726566 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.259930655 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357841066 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425697663 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359023359 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356958835 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357845122 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359437847 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358593647 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.595233549 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386871822 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.367345449 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.356944123 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356414911 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.354929394 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361777075 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.357770065 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582232045 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370242809 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632396215 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356756636 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356106208 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358742692 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582395805 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.358498018 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.693483873 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62293942 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36334046 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366093171 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37049668 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377864747 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460894668 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379425303 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.377909449 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619952172 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365016193 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.361990809 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358642858 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361748345 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364121393 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.366426321 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360665063 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04179246 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345853052 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366877438 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254867339 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.373299322 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427857357 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365748575 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609661758 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.359058519 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371984955 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.368014779 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.360004568 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587809056 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372800834 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.360954287 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43730289 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.896542325 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065641177 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375678389 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.358592301 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.358284815 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.359518126 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360048716 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360786622 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360102661 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61035569 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375973974 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363842475 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04702386 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364813224 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360533458 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.367361766 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374579068 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.368273501 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362646056 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37600682 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362276195 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365774208 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.398202372 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50783221 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.376138964 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360634369 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.880236427 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368020223 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362753113 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362085693 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39886329 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362171199 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248095416 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627826908 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378946096 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678284021 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363575958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.377928632 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.361459127 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361698655 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405260224 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.376636457 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37612921 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.374104648 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363076165 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36721641 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939941237 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211397696 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990719674 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367317449 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.404426737 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367902517 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143591172 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387519243 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364599204 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635110926 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140876402 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387310164 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904399297 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.403118003 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258614757 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679322168 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599612845 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366112265 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.388958164 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680452087 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580768512 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400589888 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380188709 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369812004 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.353473796 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000245785 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411366209 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447220618 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144440343 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39307524 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367646771 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.436442056 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.383709059 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832931671 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396923735 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369543437 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368134048 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393804363 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268868653 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3740836 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369226726 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070668141 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386205354 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.908452894 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393798771 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620872738 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.379737615 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.371771108 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.381299896 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.376855714 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.62817983 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683825275 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370998513 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380828033 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000784454 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.24274446 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.376196862 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370917276 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222767008 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388318267 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710385884 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.373361263 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.374209669 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370616013 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37157114 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373266547 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.370516518 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378055091 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354008583 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947369284 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.38135958 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380649075 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380917344 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398072396 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629372492 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.38406111 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056840728 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607961182 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370966445 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397350988 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.378580357 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378232348 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.359951147 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372731424 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370879988 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38067681 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598642267 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374986179 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.359821339 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373966591 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591973743 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374481702 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380205224 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657528257 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.372366592 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.396298876 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235718695 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405914137 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375002918 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375791191 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389993236 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394642607 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446754526 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630931772 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.388575791 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.38580935 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840942602 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396491851 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373691902 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.387824523 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471766317 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383102989 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.37621892 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.148661499 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06999912 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260187403 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.06622841 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693917841 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380315954 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387730214 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376932372 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539962966 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379684105 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650191043 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37843468 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.377273393 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402409423 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388107664 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394098977 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631378878 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650711164 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376167809 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392829619 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379610911 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.379285164 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390498186 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.589420886 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95349124 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013609228 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381407426 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393338904 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160964794 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677355968 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378470589 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379480865 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377795851 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.387642282 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41506512 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.384321156 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388987507 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522798366 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693510803 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105161435 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.415206678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.408110449 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.898427189 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383175542 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636904893 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378396852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.632017569 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071768448 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196948033 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645892002 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448995107 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62943481 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.379180386 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542827398 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.375358761 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401549351 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381468578 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380882107 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.37572693 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.389763437 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070033293 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647931857 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.385360339 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.393596309 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411695948 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.387457835 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607462463 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215693245 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606974519 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393700435 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387378722 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378884847 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079092556 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.713718961 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384274431 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.386566986 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658356089 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383005793 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404659934 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.899609813 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.37802445 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025854429 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.362494489 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407619795 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384734045 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.254586952 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081971119 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.388108335 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994135055 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389444183 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397202142 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66238455 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.390382024 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38420811 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663314884 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.388093139 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390338437 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653079656 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.076779711 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.28918012 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.398002483 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395656339 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.385408083 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387193476 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41044149 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383612768 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385413669 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.871592807 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409639497 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388604403 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397776226 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.384541576 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38920688 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.38830224 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387591497 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.391668082 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.399999758 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.376852994 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387442798 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492422031 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01413875 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41129933 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.058137104 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.716028041 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646080338 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396563231 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.37614763 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.391397115 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385418642 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386699565 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383872887 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404785779 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022208119 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.404490474 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.401217359 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389111276 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.386538481 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597609591 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390935682 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658412969 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397652211 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403190397 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.371139468 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386795907 seconds)
  done (took 979.991786946 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447545335 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.423841297 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.3995388 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.402141981 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402989592 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.507439055 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.459556227 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41218655 seconds)
  done (took 20.744083389 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.392621969 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.396230196 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.390497258 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.399850358 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.388724263 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.91985953 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.425965064 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.395750434 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.403633781 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.405181706 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.388505561 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.375439953 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.418296959 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.402937749 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.376058221 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.396015524 seconds)
  done (took 33.175005182 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.766294777 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.70340946 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.074529931 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.414920081 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.443490603 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.388816912 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.851950804 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.409649597 seconds)
  done (took 28.343813808 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.403528521 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40263105 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.40013048 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.40012991 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.39927194 seconds)
  done (took 8.297668517 seconds)
done (took 1244.662090252 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.396230908 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.398276043 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.395324609 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396022215 seconds)
  done (took 6.879399768 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.377283131 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.37865752 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.380671666 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.394412728 seconds)
  done (took 9.822266264 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.2348392 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.121824619 seconds)
  done (took 5.650403013 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.918578741 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.909076819 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.911923235 seconds)
  done (took 7.028574001 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.710711211 seconds)
  done (took 3.003399253 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.335107787 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.392699913 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.105436162 seconds)
  done (took 8.123998436 seconds)
done (took 41.800406711 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.388801229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.73714942 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.545492706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392778321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.554091005 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.547207549 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.164598731 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.403240968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.392292855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.406302439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39998549 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.553741878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.146179203 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.738846731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.144031285 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.644013977 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.550130999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.396292254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.404070597 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.389969383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.164567163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400976214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.388773118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.404504906 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.551803617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.537728746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.408538252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.645406206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409367888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39090241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.535757143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.386456694 seconds)
  done (took 83.411687751 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.40481846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.406704078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.389646473 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415448904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413998201 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.410610639 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.419846283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.388070956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.39176901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.38975408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413577095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413465923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.43176969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.394552251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.396489779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413307238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.403882905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.406534255 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.391343212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391895423 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.406594052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398886214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.402230416 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.398501637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.399837445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394482891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.412471764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.401855527 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.392067288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39330068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.392228774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415977041 seconds)
  done (took 78.189546805 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.406344131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.40031123 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.399511455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392164916 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.391293617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.392548845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.393514917 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400676408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408454267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.411430559 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.390959658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.392599696 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.395194583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.390456674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.396963965 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.403405228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.393131214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432044843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.397174807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413709438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.401003556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403100448 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.409718162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.405842542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.394835417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.414268577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415656437 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.393656514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.418593359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396585318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.395606683 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416942814 seconds)
  done (took 78.160503154 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.675104634 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.40105763 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.401279508 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.392023092 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.405407075 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.401506487 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.399485629 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.67855201 seconds)
  done (took 15.045919376 seconds)
done (took 256.098148072 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.40675384 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.977905817 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.445987659 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.395498427 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.423643845 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.422344911 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.646990595 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.443359952 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.646177586 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.415896524 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.421700513 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.395904653 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.340381671 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.560562164 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.341792288 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.396239747 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.408933942 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.395076714 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.084896543 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.703193749 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.422393209 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.401753337 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.319003343 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.417944611 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.402496199 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495118344 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.515289523 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.631806878 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570399253 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.491262806 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.004200471 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.394963067 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.424334097 seconds)
  done (took 66.064246655 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.402401114 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.520632647 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.406148848 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.403034309 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.522666349 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.403365311 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.404178453 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.406594964 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.406826874 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.403858308 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.404502806 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.406068945 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.408036231 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.450293937 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.528813407 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.424055666 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.407615141 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.519433371 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.40573348 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.399207001 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.451199446 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.40335132 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.408956225 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.451612948 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.406834419 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.405936812 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.523743466 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.405761103 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.404677725 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.522328671 seconds)
  done (took 44.313841781 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.410477917 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.081319335 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.244044152 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41507036 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.40566134 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.4144006 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.753495455 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.40886597 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.409843557 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.408418241 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.966960978 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411595682 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445591667 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.279116162 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.409920221 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.409293447 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.409717896 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.40793391 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.094283829 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419838872 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.795890362 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.410226163 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.776548154 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.424397841 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.437182992 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409546143 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415960329 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.339368991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.410393667 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.006554925 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.387331112 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.757531828 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.262707029 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.270433955 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.373778879 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.415528539 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.408610041 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.974244101 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.415512537 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.408810424 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.757469487 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411541149 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.264809164 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.13572523 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.43111506 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.408392031 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.344922793 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.971833982 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.70713156 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417754076 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.291665936 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.41307648 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414722781 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.41083844 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.704636579 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.411782747 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.412557177 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.400337376 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.415372293 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.757422419 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.412336604 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.411598427 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.088763291 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.411300202 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.084270138 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.412213793 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.418748517 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.438149263 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.270507516 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416965216 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.14966163 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.431786482 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.410588703 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.979532789 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.085744929 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.404065754 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.41307549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.100196595 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.297470742 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.773231835 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.422409518 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.317407967 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.774748162 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.416886357 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.418054972 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.414796742 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.414692064 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.488958869 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.765156593 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.086606724 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.148407782 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.420697867 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.771932273 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426608457 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.414390348 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.403061662 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.415406491 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.414070598 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.261828012 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.154185069 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.439057335 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.420565776 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.163918517 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.436691041 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.771793904 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.419329075 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.270859006 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.415567762 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.490227022 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.414917018 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.418868 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.44489071 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.766306405 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.418590011 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.414477112 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.136348044 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.011599426 seconds)
  done (took 201.713731958 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.412979779 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.408609754 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.408463211 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.406888372 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.407540312 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417797731 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.405523361 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.410394113 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415625946 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.407366002 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.407706242 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.417934969 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.415868454 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.408481463 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.409150306 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.407254168 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.408735335 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.434340882 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.40954937 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.407514627 seconds)
  done (took 45.533535155 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417080494 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.087057298 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.0927796 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.420362235 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.414531684 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.416514922 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.4825973 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.417279709 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.413829757 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.775389439 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.628591742 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.442610173 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.413189802 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.413245851 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.096375601 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.40778774 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.78035489 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.091511611 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.421691041 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.091354945 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.407091009 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.417300196 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418243476 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.092276426 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.780477098 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.768696792 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487533355 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.093704851 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.417898429 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.417770023 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.091245599 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.425168219 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.418706912 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.082691034 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.442776414 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435671625 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.416217288 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.489132111 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.49605122 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.782722565 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.165168443 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.770213352 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.431834931 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.598575126 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.420010278 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.407918853 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.092210628 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.442883885 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.411108758 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.421565072 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.426459444 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.07527838 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.444472598 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.068045438 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.441994629 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.421750122 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.098484637 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.070660646 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.091751461 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.630206186 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.440018632 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.768461462 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.418995835 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.096966178 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.447278698 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.424074853 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.420026206 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.63539484 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.118501169 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.773513761 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.78195776 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.785143395 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.421814532 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.492364593 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.44792779 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.847610525 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.491719382 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.863221846 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.787719297 seconds)
  done (took 131.817788902 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.726042174 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543637172 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.889433825 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.08651275 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.419153413 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.555836481 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.551846592 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.713176903 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.424716485 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.493925831 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.173101424 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.535788057 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.228535692 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.508207245 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.53903776 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.591157565 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.885468884 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.416594686 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.105962199 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.164004886 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.418686432 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.537142413 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.020719937 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.673545225 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.418655737 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.022837061 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.450548765 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.18937481 seconds)
  done (took 55.602977645 seconds)
done (took 546.34304399 seconds)
SAVING RESULT...
DONE!
